Bridge.assembly("Kusto.Language.Bridge",function(){"use strict";Bridge.define("Kusto.Language.Aggregates",{statics:{fields:{Sum:null,SumIf:null,Cnt:null,Count:null,CountIf:null,DCount:null,DCountIf:null,TDigest:null,TDigestMerge:null,MergeTDigests:null,Hll:null,HllMerge:null,Min:null,MinIf:null,Max:null,MaxIf:null,Avg:null,AvgIf:null,MakeList_Depricated:null,MakeList:null,MakeSet_Depricated:null,MakeSet:null,MakeDictionary:null,MakeBag:null,BuildSchema:null,PercentileReturn:null,PercentileArrayReturn:null,Percentile:null,Percentiles:null,PercentilesArray:null,PercentileW:null,PercentilesW:null,PercentilesWArray:null,Stdev:null,StdevIf:null,Stdevp:null,Variance:null,VarianceIf:null,Variancep:null,Any:null,AnyIf:null,ArgMin:null,ArgMax:null,ArgMin_Depricated:null,ArgMax_Depricated:null},props:{All:null},ctors:{init:function(){this.Sum=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("sum",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("sum");this.SumIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("sumif",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("sumif");this.Cnt=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("cnt",Kusto.Language.Symbols.ScalarTypes.Long).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("cnt").Hide();this.Count=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("count",Kusto.Language.Symbols.ScalarTypes.Long).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("count");this.CountIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("countif",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("countif");this.DCount=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("dcount",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("accuracy",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("dcount");this.DCountIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("dcountif",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("accuracy",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("dcountif");this.TDigest=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("tdigest",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("weight",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("tdigest");this.TDigestMerge=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("tdigest_merge",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("tdigest",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("tdigest_merge");this.MergeTDigests=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("merge_tdigests",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("tdigest",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("merge_tdigests");this.Hll=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("hll",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.NotRealOrBool),new Kusto.Language.Symbols.Parameter.ctor("accuracy",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("hll");this.HllMerge=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("hll_merge",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("hll",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("hll_merge");this.Min=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("min",[new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.String)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("min");this.MinIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("minif",[new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("minif");this.Max=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("max",[new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.String)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("max");this.MaxIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("maxif",[new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("maxif");this.Avg=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("avg",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Integer)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Real)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Decimal,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Decimal)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("avg");this.AvgIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("avgif",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Decimal,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Decimal),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("avgif");this.MakeList_Depricated=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("makelist",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("list").Hide();this.MakeList=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("make_list",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("list");this.MakeSet_Depricated=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("makeset",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("set").Hide();this.MakeSet=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("make_set",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("set");this.MakeDictionary=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("make_dictionary",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("dictionary").Hide();this.MakeBag=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("make_bag",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("maxSize",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("bag");this.BuildSchema=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("buildschema",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("expr",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("schema");this.PercentileReturn=function(table,args,signature){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.Aggregates.AddPercentileColumns(cols,signature,"value","percentile",args),new Kusto.Language.Symbols.TupleSymbol.$ctor1(cols)};this.PercentileArrayReturn=function(table,args,signature){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),valueArg=Kusto.Language.FunctionHelpers.GetArgument(args,signature,"value"),valueArgName=Kusto.Language.FunctionHelpers.GetExpressionResultName(valueArg);return cols.add(new Kusto.Language.Symbols.ColumnSymbol("percentiles_"+(valueArgName||""),Kusto.Language.Symbols.ScalarTypes.Dynamic)),new Kusto.Language.Symbols.TupleSymbol.$ctor1(cols)};this.Percentile=new Kusto.Language.Symbols.FunctionSymbol.ctor("percentile",Kusto.Language.Aggregates.PercentileReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("percentile",Kusto.Language.Symbols.ParameterTypeKind.Number)]);this.Percentiles=new Kusto.Language.Symbols.FunctionSymbol.ctor("percentiles",Kusto.Language.Aggregates.PercentileReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("percentile",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]);this.PercentilesArray=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("percentiles_array",[new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Aggregates.PercentileArrayReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("percentile",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]),new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Aggregates.PercentileArrayReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("percentiles",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.PercentileW=new Kusto.Language.Symbols.FunctionSymbol.ctor("percentilew",Kusto.Language.Aggregates.PercentileReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("weight",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("percentile",Kusto.Language.Symbols.ParameterTypeKind.Number)]);this.PercentilesW=new Kusto.Language.Symbols.FunctionSymbol.ctor("percentilesw",Kusto.Language.Aggregates.PercentileReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("weight",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("percentile",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]);this.PercentilesWArray=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("percentilesw_array",[new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Aggregates.PercentileArrayReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("weight",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("percentile",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]),new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Aggregates.PercentileArrayReturn,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("weight",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.$ctor2("percentiles",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.Stdev=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("stdev",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("stdev");this.StdevIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("stdevif",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("stdevif");this.Stdevp=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("stdevp",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("stdevp");this.Variance=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("variance",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("variance");this.VarianceIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("varianceif",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("varianceif");this.Variancep=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("variancep",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("variancep");this.Any=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("any",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Aggregates.GetAnyResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("expression",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Aggregates.GetAnyResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("expression",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Star)])]);this.AnyIf=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("anyif",[new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("expression",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("anyif");this.ArgMin=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("arg_min",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Aggregates.GetArgMinMaxResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("minimized",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("returned",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Aggregates.GetArgMinMaxResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("minimized",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("returned",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Star)])]);this.ArgMax=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("arg_max",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Aggregates.GetArgMinMaxResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("maximized",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("returned",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Aggregates.GetArgMinMaxResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("maximized",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("returned",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Star)])]);this.ArgMin_Depricated=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("argmin",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Aggregates.GetArgMinMaxDepResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("minimized",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("returned",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Aggregates.GetArgMinMaxDepResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("minimized",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("returned",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Star)])]).WithResultNamePrefix("min").Hide();this.ArgMax_Depricated=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("argmax",[new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Aggregates.GetArgMinMaxDepResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("maximized",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("returned",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]),new Kusto.Language.Symbols.Signature.$ctor2(Kusto.Language.Aggregates.GetArgMinMaxDepResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("maximized",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("returned",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Star)])]).WithResultNamePrefix("max").Hide();this.All=System.Array.init([Kusto.Language.Aggregates.Sum,Kusto.Language.Aggregates.SumIf,Kusto.Language.Aggregates.Cnt,Kusto.Language.Aggregates.Count,Kusto.Language.Aggregates.CountIf,Kusto.Language.Aggregates.DCount,Kusto.Language.Aggregates.DCountIf,Kusto.Language.Aggregates.TDigest,Kusto.Language.Aggregates.TDigestMerge,Kusto.Language.Aggregates.MergeTDigests,Kusto.Language.Aggregates.Hll,Kusto.Language.Aggregates.HllMerge,Kusto.Language.Aggregates.Min,Kusto.Language.Aggregates.MinIf,Kusto.Language.Aggregates.Max,Kusto.Language.Aggregates.MaxIf,Kusto.Language.Aggregates.Avg,Kusto.Language.Aggregates.AvgIf,Kusto.Language.Aggregates.MakeList_Depricated,Kusto.Language.Aggregates.MakeList,Kusto.Language.Aggregates.MakeSet_Depricated,Kusto.Language.Aggregates.MakeSet,Kusto.Language.Aggregates.MakeDictionary,Kusto.Language.Aggregates.MakeBag,Kusto.Language.Aggregates.BuildSchema,Kusto.Language.Aggregates.Percentile,Kusto.Language.Aggregates.Percentiles,Kusto.Language.Aggregates.PercentilesArray,Kusto.Language.Aggregates.PercentileW,Kusto.Language.Aggregates.PercentilesW,Kusto.Language.Aggregates.PercentilesWArray,Kusto.Language.Aggregates.Stdev,Kusto.Language.Aggregates.StdevIf,Kusto.Language.Aggregates.Stdevp,Kusto.Language.Aggregates.Variance,Kusto.Language.Aggregates.VarianceIf,Kusto.Language.Aggregates.Variancep,Kusto.Language.Aggregates.Any,Kusto.Language.Aggregates.AnyIf,Kusto.Language.Aggregates.ArgMin,Kusto.Language.Aggregates.ArgMax,Kusto.Language.Aggregates.ArgMin_Depricated,Kusto.Language.Aggregates.ArgMax_Depricated],Kusto.Language.Symbols.FunctionSymbol)}},methods:{AddPercentileColumns:function(columns,signature,valueParameterName,percentileParameterName,args){var valueArg=Kusto.Language.FunctionHelpers.GetArgument(args,signature,valueParameterName),valueArgName=Kusto.Language.FunctionHelpers.GetExpressionResultName(valueArg),percentileParameter=signature.GetParameter$2(percentileParameterName),start={},length={},p;for(signature.GetArgumentRange(percentileParameter,args,start,length),p=start.v;p<(start.v+length.v|0);p=p+1|0){var percentileArg=System.Array.getItem(args,p,Kusto.Language.Syntax.Expression),percentileFragment=Kusto.Language.FunctionHelpers.MakeValidNameFragment(Kusto.Language.FunctionHelpers.GetLiteralValue(percentileArg)),name=(percentileParameterName||"")+"_"+(valueArgName||"")+"_"+(percentileFragment||"");columns.add(new Kusto.Language.Symbols.ColumnSymbol(name,Kusto.Language.Symbols.ScalarTypes.Real))}},GetAnyResult:function(table,args){for(var arg,c,c1,col,$t,columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),doNotRepeat=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.ColumnSymbol).$ctor1)(Kusto.Language.FunctionHelpers.GetSummarizeByColumns(args)),i=0;i<System.Array.getCount(args,Kusto.Language.Syntax.Expression);i=i+1|0)if(arg=System.Array.getItem(args,i,Kusto.Language.Syntax.Expression),Bridge.is(arg,Kusto.Language.Syntax.StarExpression)){$t=Bridge.getEnumerator(table.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())c=$t.Current,doNotRepeat.contains(c)||columns.add(c.WithName("any_"+(c.Name||"")))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}else(c1=Bridge.as(arg.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null?columns.add(c1.WithName("any_"+(c1.Name||""))):(col=new Kusto.Language.Symbols.ColumnSymbol(Kusto.Language.Binding.Binder.GetExpressionResultName(arg,"column"),arg.ResultType),columns.add(col));return new Kusto.Language.Symbols.TupleSymbol.$ctor1(columns)},GetArgMinMaxResult:function(table,args){for(var arg,c,c1,col,$t,columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),doNotRepeat=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.ColumnSymbol).$ctor1)(Kusto.Language.FunctionHelpers.GetSummarizeByColumns(args)),i=0;i<System.Array.getCount(args,Kusto.Language.Syntax.Expression);i=i+1|0)if(arg=System.Array.getItem(args,i,Kusto.Language.Syntax.Expression),Bridge.is(arg,Kusto.Language.Syntax.StarExpression)){$t=Bridge.getEnumerator(table.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())c=$t.Current,doNotRepeat.contains(c)||columns.add(c)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}else(c1=Bridge.as(arg.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null?(doNotRepeat.add(c1),columns.add(new Kusto.Language.Symbols.ColumnSymbol(c1.Name,c1.Type))):(col=new Kusto.Language.Symbols.ColumnSymbol(Kusto.Language.Binding.Binder.GetExpressionResultName(arg,"column"),arg.ResultType),columns.add(col));return new Kusto.Language.Symbols.TupleSymbol.$ctor1(columns)},GetArgMinMaxDepResult:function(table,args){var $t,columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),doNotRepeat,i,arg,c,c1,col;if(System.Array.getCount(args,Kusto.Language.Syntax.Expression)>0){var primaryArg=System.Array.getItem(args,0,Kusto.Language.Syntax.Expression),primaryColName=Kusto.Language.Binding.Binder.GetExpressionResultName(primaryArg,"column"),primaryCol=new Kusto.Language.Symbols.ColumnSymbol(primaryColName,primaryArg.ResultType);for(columns.add(primaryCol),doNotRepeat=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.ColumnSymbol).$ctor1)(Kusto.Language.FunctionHelpers.GetSummarizeByColumns(args)),i=1;i<System.Array.getCount(args,Kusto.Language.Syntax.Expression);i=i+1|0)if(arg=System.Array.getItem(args,i,Kusto.Language.Syntax.Expression),Bridge.is(arg,Kusto.Language.Syntax.StarExpression)){$t=Bridge.getEnumerator(table.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())c=$t.Current,Bridge.referenceEquals(c,primaryArg.ReferencedSymbol)||doNotRepeat.contains(c)||columns.add(c.WithName((primaryColName||"")+"_"+(c.Name||"")))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}else(c1=Bridge.as(arg.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null?columns.add(c1.WithName((primaryColName||"")+"_"+(c1.Name||""))):(col=new Kusto.Language.Symbols.ColumnSymbol((primaryColName||"")+"_"+(Kusto.Language.Binding.Binder.GetExpressionResultName(arg,"column")||""),arg.ResultType),columns.add(col))}return new Kusto.Language.Symbols.TupleSymbol.$ctor1(columns)}}}});Bridge.define("Kusto.Language.Analyzer.Category",{$kind:"enum",statics:{fields:{Correctness:0,Performance:1}}});Bridge.define("Kusto.Language.Analyzer.IRule",{$kind:"interface"});Bridge.define("Kusto.Language.Analyzer.IRuleEngine",{$kind:"interface"});Bridge.define("Kusto.Language.Analyzer.RuleOutcome",{props:{RuleName:null,Score:0,ReferenceText:null,Message:null,Severity:0,Category:0,TextStart:0},ctors:{ctor:function(ruleName,score,message,referenceText,severity,category,textStart){this.$initialize();this.RuleName=ruleName;this.Score=score;this.Message=message;this.Severity=severity;this.Category=category;this.TextStart=textStart;this.ReferenceText=referenceText}}});Bridge.define("Kusto.Language.Analyzer.Rules.KustoRulesCollection",{statics:{fields:{Rules:null},ctors:{init:function(){this.Rules=function(_o1){return _o1.add(new Kusto.Language.Analyzer.Rules.NullAggregationDetector),_o1.add(new Kusto.Language.Analyzer.Rules.AvoidUsingContainsRule),_o1.add(new Kusto.Language.Analyzer.Rules.AvoidUsingShortStringComparisonRule),_o1}(new(System.Collections.Generic.List$1(Kusto.Language.Analyzer.IRule).ctor))}}}});Bridge.define("Kusto.Language.Analyzer.Severity",{$kind:"enum",statics:{fields:{Suggestion:0,Warning:1,Error:2}}});Bridge.define("Kusto.Language.Binding.Binder",{statics:{fields:{s_symbolListPool:null,s_diagnosticListPool:null,s_columnListPool:null,s_tableListPool:null,s_functionListPool:null,s_signatureListPool:null,s_patternListPool:null,s_expressionListPool:null,s_typeListPool:null,s_stringSetPool:null,s_uniqueNameTablePool:null,s_projectionBuilderPool:null,LiteralBoolInfo:null,LiteralIntInfo:null,LiteralLongInfo:null,LiteralRealInfo:null,LiteralDecimalInfo:null,LiteralStringInfo:null,LiteralDateTimeInfo:null,LiteralTimeSpanInfo:null,LiteralGuidInfo:null,LiteralTypeInfo:null,LiteralDynamicInfo:null,ErrorInfo:null,VoidInfo:null},ctors:{init:function(){this.s_symbolListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Symbol)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Symbol).ctor)},function(list){list.clear()});this.s_diagnosticListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Diagnostic)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Diagnostic).ctor)},function(list){list.clear()});this.s_columnListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor)},function(list){list.clear()});this.s_tableListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.TableSymbol)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.TableSymbol).ctor)},function(list){list.clear()});this.s_functionListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.FunctionSymbol)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.FunctionSymbol).ctor)},function(list){list.clear()});this.s_signatureListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Signature)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Signature).ctor)},function(list){list.clear()});this.s_patternListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.PatternSignature)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.PatternSignature).ctor)},function(list){list.clear()});this.s_expressionListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression).ctor)},function(list){list.clear()});this.s_typeListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.TypeSymbol)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.TypeSymbol).ctor)},function(list){list.clear()});this.s_stringSetPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.HashSet$1(System.String)))(function(){return new(System.Collections.Generic.HashSet$1(System.String).ctor)},function(s){s.clear()});this.s_uniqueNameTablePool=new(Kusto.Language.Utils.ObjectPool$1(Kusto.Language.Utils.UniqueNameTable))(function(){return new Kusto.Language.Utils.UniqueNameTable},function(t){t.Clear()});this.s_projectionBuilderPool=new(Kusto.Language.Utils.ObjectPool$1(Kusto.Language.Binding.ProjectionBuilder))(function(){return new Kusto.Language.Binding.ProjectionBuilder},function(b){b.Clear()});this.LiteralBoolInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.Bool,void 0,!0,void 0);this.LiteralIntInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.Int,void 0,!0,void 0);this.LiteralLongInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.Long,void 0,!0,void 0);this.LiteralRealInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.Real,void 0,!0,void 0);this.LiteralDecimalInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.Decimal,void 0,!0,void 0);this.LiteralStringInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.String,void 0,!0,void 0);this.LiteralDateTimeInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.DateTime,void 0,!0,void 0);this.LiteralTimeSpanInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.TimeSpan,void 0,!0,void 0);this.LiteralGuidInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.Guid,void 0,!0,void 0);this.LiteralTypeInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.Type,void 0,!0,void 0);this.LiteralDynamicInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.Dynamic,void 0,!0,void 0);this.ErrorInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ErrorSymbol.Instance);this.VoidInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.VoidSymbol.Instance)}},methods:{Bind:function(root,globals,localBindingCache,semanticInfoSetter,cancellationToken){var bindingCache,binder,treeBinder;localBindingCache===void 0&&(localBindingCache=null);semanticInfoSetter===void 0&&(semanticInfoSetter=null);cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);semanticInfoSetter=semanticInfoSetter||Kusto.Language.Binding.Binder.DefaultSetSemanticInfo;bindingCache=globals.Cache.GetOrCreate(Kusto.Language.Binding.GlobalBindingCache);bindingCache;binder=new Kusto.Language.Binding.Binder(globals,globals.Cluster,globals.Database,bindingCache,localBindingCache,semanticInfoSetter,cancellationToken);treeBinder=new Kusto.Language.Binding.Binder.TreeBinder(binder);root.Accept$1(treeBinder)},DefaultSetSemanticInfo:function(node,info){if(info!=null){var data=node.GetExtendedData(!0);data.SemanticInfo=info}},BindExpansion:function(expansionRoot,outer,currentCluster,currentDatabase,contextNode,locals){var binder=new Kusto.Language.Binding.Binder(outer._globals,currentCluster||outer._currentCluster,currentDatabase||outer._currentDatabase,outer._globalBindingCache,outer._localBindingCache,outer._semanticInfoSetter,outer._cancellationToken),treeBinder;binder.SetContext(contextNode,-1,locals);treeBinder=new Kusto.Language.Binding.Binder.TreeBinder(binder);expansionRoot.Accept$1(treeBinder)},GetComputedReturnType:function(signature,globals){var currentDatabase=globals.GetDatabase(Bridge.cast(signature.Symbol,Kusto.Language.Symbols.FunctionSymbol)),currentCluster=globals.GetCluster(currentDatabase),bindingCache=globals.Cache.GetOrCreate(Kusto.Language.Binding.GlobalBindingCache),binder;return bindingCache,binder=new Kusto.Language.Binding.Binder(globals,currentCluster,currentDatabase,bindingCache,null,null,Bridge.getDefaultValue(Kusto.Language.Utils.CancellationToken)),binder.GetComputedSignatureResult(signature).Type},GetSymbolsInScope:function(root,position,globals,match,include,list,cancellationToken){var bindingCache=globals.Cache.GetOrCreate(Kusto.Language.Binding.GlobalBindingCache),binder,startNode;bindingCache;binder=new Kusto.Language.Binding.Binder(globals,globals.Cluster,globals.Database,bindingCache,null,null,cancellationToken);startNode=Kusto.Language.Binding.Binder.GetStartNode(root,position);binder.SetContext(startNode,position);binder.GetSymbolsInContext(startNode,match,include,list)},GetRowScope:function(root,position,globals,cancellationToken){var bindingCache,binder,startNode;return cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),bindingCache=globals.Cache.GetOrCreate(Kusto.Language.Binding.GlobalBindingCache),bindingCache,binder=new Kusto.Language.Binding.Binder(globals,globals.Cluster,globals.Database,bindingCache,null,null,cancellationToken),startNode=Kusto.Language.Binding.Binder.GetStartNode(root,position),binder.SetContext(startNode,position),binder._rowScope},GetStartNode:function(root,position){var token=root.GetTokenAt(position),prev;return token!=null&&position<=token.TextStart?(prev=token.GetPreviousToken(),prev!=null&&prev.Depth>=token.Depth)?prev.Parent:token.Parent:null},IsFunctionCallName:function(name){var fn;return(fn=Bridge.as(name.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Bridge.referenceEquals(fn.Name,name)},IsInvocableFunctionName:function(name){return name.GetFirstAncestor(Kusto.Language.Syntax.CustomCommand)==null},IsPossibleInvocableFunctionWithoutArgumentList:function(name){return!Kusto.Language.Binding.Binder.IsFunctionCallName(name)&&Kusto.Language.Binding.Binder.IsInvocableFunctionName(name)},IsInCommand:function(location){var command=location.GetFirstAncestor(Kusto.Language.Syntax.Command),functionBody=location.GetFirstAncestor(Kusto.Language.Syntax.FunctionBody);return command!=null&&functionBody==null},GetWildcardSymbols:function(pattern,symbols,matchingSymbols){var $t,symbol;$t=Bridge.getEnumerator(symbols,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())symbol=$t.Current,Kusto.Language.KustoFacts.Matches(pattern,symbol.Name)&&matchingSymbols.add(symbol)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetOperatorKind:function(kind){switch(kind){case Kusto.Language.Syntax.SyntaxKind.AddExpression:return Kusto.Language.Symbols.OperatorKind.Add;case Kusto.Language.Syntax.SyntaxKind.SubtractExpression:return Kusto.Language.Symbols.OperatorKind.Subtract;case Kusto.Language.Syntax.SyntaxKind.MultiplyExpression:return Kusto.Language.Symbols.OperatorKind.Multiply;case Kusto.Language.Syntax.SyntaxKind.DivideExpression:return Kusto.Language.Symbols.OperatorKind.Divide;case Kusto.Language.Syntax.SyntaxKind.ModuloExpression:return Kusto.Language.Symbols.OperatorKind.Modulo;case Kusto.Language.Syntax.SyntaxKind.UnaryMinusExpression:return Kusto.Language.Symbols.OperatorKind.UnaryMinus;case Kusto.Language.Syntax.SyntaxKind.UnaryPlusExpression:return Kusto.Language.Symbols.OperatorKind.UnaryPlus;case Kusto.Language.Syntax.SyntaxKind.EqualExpression:return Kusto.Language.Symbols.OperatorKind.Equal;case Kusto.Language.Syntax.SyntaxKind.NotEqualExpression:return Kusto.Language.Symbols.OperatorKind.NotEqual;case Kusto.Language.Syntax.SyntaxKind.LessThanExpression:return Kusto.Language.Symbols.OperatorKind.LessThan;case Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualExpression:return Kusto.Language.Symbols.OperatorKind.LessThanOrEqual;case Kusto.Language.Syntax.SyntaxKind.GreaterThanExpression:return Kusto.Language.Symbols.OperatorKind.GreaterThan;case Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualExpression:return Kusto.Language.Symbols.OperatorKind.GreaterThanOrEqual;case Kusto.Language.Syntax.SyntaxKind.EqualTildeExpression:return Kusto.Language.Symbols.OperatorKind.EqualTilde;case Kusto.Language.Syntax.SyntaxKind.BangTildeExpression:return Kusto.Language.Symbols.OperatorKind.BangTilde;case Kusto.Language.Syntax.SyntaxKind.HasExpression:return Kusto.Language.Symbols.OperatorKind.Has;case Kusto.Language.Syntax.SyntaxKind.HasCsExpression:return Kusto.Language.Symbols.OperatorKind.HasCs;case Kusto.Language.Syntax.SyntaxKind.NotHasExpression:return Kusto.Language.Symbols.OperatorKind.NotHas;case Kusto.Language.Syntax.SyntaxKind.NotHasCsExpression:return Kusto.Language.Symbols.OperatorKind.NotHasCs;case Kusto.Language.Syntax.SyntaxKind.HasPrefixExpression:return Kusto.Language.Symbols.OperatorKind.HasPrefix;case Kusto.Language.Syntax.SyntaxKind.HasPrefixCsExpression:return Kusto.Language.Symbols.OperatorKind.HasPrefixCs;case Kusto.Language.Syntax.SyntaxKind.NotHasPrefixExpression:return Kusto.Language.Symbols.OperatorKind.NotHasPrefix;case Kusto.Language.Syntax.SyntaxKind.NotHasPrefixCsExpression:return Kusto.Language.Symbols.OperatorKind.NotHasPrefixCs;case Kusto.Language.Syntax.SyntaxKind.HasSuffixExpression:return Kusto.Language.Symbols.OperatorKind.HasSuffix;case Kusto.Language.Syntax.SyntaxKind.HasSuffixCsExpression:return Kusto.Language.Symbols.OperatorKind.HasSuffixCs;case Kusto.Language.Syntax.SyntaxKind.NotHasSuffixExpression:return Kusto.Language.Symbols.OperatorKind.NotHasSuffix;case Kusto.Language.Syntax.SyntaxKind.NotHasSuffixCsExpression:return Kusto.Language.Symbols.OperatorKind.NotHasSuffixCs;case Kusto.Language.Syntax.SyntaxKind.LikeExpression:return Kusto.Language.Symbols.OperatorKind.Like;case Kusto.Language.Syntax.SyntaxKind.LikeCsExpression:return Kusto.Language.Symbols.OperatorKind.LikeCs;case Kusto.Language.Syntax.SyntaxKind.NotLikeExpression:return Kusto.Language.Symbols.OperatorKind.NotLike;case Kusto.Language.Syntax.SyntaxKind.NotLikeCsExpression:return Kusto.Language.Symbols.OperatorKind.NotLikeCs;case Kusto.Language.Syntax.SyntaxKind.ContainsExpression:return Kusto.Language.Symbols.OperatorKind.Contains;case Kusto.Language.Syntax.SyntaxKind.ContainsCsExpression:return Kusto.Language.Symbols.OperatorKind.ContainsCs;case Kusto.Language.Syntax.SyntaxKind.NotContainsExpression:return Kusto.Language.Symbols.OperatorKind.NotContains;case Kusto.Language.Syntax.SyntaxKind.NotContainsCsExpression:return Kusto.Language.Symbols.OperatorKind.NotContainsCs;case Kusto.Language.Syntax.SyntaxKind.StartsWithExpression:return Kusto.Language.Symbols.OperatorKind.StartsWith;case Kusto.Language.Syntax.SyntaxKind.StartsWithCsExpression:return Kusto.Language.Symbols.OperatorKind.StartsWithCs;case Kusto.Language.Syntax.SyntaxKind.NotStartsWithExpression:return Kusto.Language.Symbols.OperatorKind.NotStartsWith;case Kusto.Language.Syntax.SyntaxKind.NotStartsWithCsExpression:return Kusto.Language.Symbols.OperatorKind.NotStartsWithCs;case Kusto.Language.Syntax.SyntaxKind.EndsWithExpression:return Kusto.Language.Symbols.OperatorKind.EndsWith;case Kusto.Language.Syntax.SyntaxKind.EndsWithCsExpression:return Kusto.Language.Symbols.OperatorKind.EndsWithCs;case Kusto.Language.Syntax.SyntaxKind.NotEndsWithExpression:return Kusto.Language.Symbols.OperatorKind.NotEndsWith;case Kusto.Language.Syntax.SyntaxKind.NotEndsWithCsExpression:return Kusto.Language.Symbols.OperatorKind.NotEndsWith;case Kusto.Language.Syntax.SyntaxKind.MatchesRegexExpression:return Kusto.Language.Symbols.OperatorKind.MatchRegex;case Kusto.Language.Syntax.SyntaxKind.InExpression:return Kusto.Language.Symbols.OperatorKind.In;case Kusto.Language.Syntax.SyntaxKind.InCsExpression:return Kusto.Language.Symbols.OperatorKind.InCs;case Kusto.Language.Syntax.SyntaxKind.NotInExpression:return Kusto.Language.Symbols.OperatorKind.NotIn;case Kusto.Language.Syntax.SyntaxKind.NotInCsExpression:return Kusto.Language.Symbols.OperatorKind.NotInCs;case Kusto.Language.Syntax.SyntaxKind.BetweenExpression:return Kusto.Language.Symbols.OperatorKind.Between;case Kusto.Language.Syntax.SyntaxKind.NotBetweenExpression:return Kusto.Language.Symbols.OperatorKind.NotBetween;case Kusto.Language.Syntax.SyntaxKind.AndExpression:return Kusto.Language.Symbols.OperatorKind.And;case Kusto.Language.Syntax.SyntaxKind.OrExpression:return Kusto.Language.Symbols.OperatorKind.Or;case Kusto.Language.Syntax.SyntaxKind.SearchExpression:return Kusto.Language.Symbols.OperatorKind.Search;case Kusto.Language.Syntax.SyntaxKind.HasAnyExpression:return Kusto.Language.Symbols.OperatorKind.HasAny;default:return Kusto.Language.Symbols.OperatorKind.None}},TryGetLiteralStringValue:function(expression,value){var objValue={};return Kusto.Language.Binding.Binder.TryGetLiteralValue(expression,objValue)?(value.v=Bridge.as(objValue.v,System.String),value.v!=null):(value.v=null,!1)},TryGetLiteralValue:function(expression,value){var sn,nr,vs;return(sn=Bridge.as(expression,Kusto.Language.Syntax.SimpleNamedExpression))!=null&&(expression=sn.Expression),expression.IsLiteral?(value.v=expression.LiteralValue,value.v!=null):(nr=Bridge.as(expression,Kusto.Language.Syntax.NameReference))!=null&&(vs=Bridge.as(nr.ReferencedSymbol,Kusto.Language.Symbols.VariableSymbol))!=null&&vs.IsConstant?(value.v=vs.ConstantValue,!0):(value.v=null,!1)},IsPromotable:function(type1,type2){var type1Scalar,type2Scalar;return(type1Scalar=Bridge.as(type1,Kusto.Language.Symbols.ScalarSymbol))!=null&&(type2Scalar=Bridge.as(type2,Kusto.Language.Symbols.ScalarSymbol))!=null&&type2Scalar.IsWiderThan(type1Scalar)},Promote:function(symbol){return Bridge.referenceEquals(symbol,Kusto.Language.Symbols.ScalarTypes.Int)?Kusto.Language.Symbols.ScalarTypes.Long:Bridge.referenceEquals(symbol,Kusto.Language.Symbols.ScalarTypes.Decimal)?Kusto.Language.Symbols.ScalarTypes.Real:symbol},GetWidestArgumentType:function(signature,argumentTypes){for(var argType,s,widestType=null,i=0;i<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol);i=i+1|0)argType=System.Array.getItem(argumentTypes,i,Kusto.Language.Symbols.TypeSymbol),(s=Bridge.as(argType,Kusto.Language.Symbols.ScalarSymbol))!=null&&s.IsNumeric&&!Bridge.referenceEquals(s,widestType)&&(widestType==null||s.IsWiderThan(widestType))&&(widestType=s);return widestType},GetCommonArgumentType:function(signature,$arguments,argumentTypes){for(var parameter,argType,commonType=null,i=0;i<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol);i=i+1|0)parameter=signature.GetParameter(System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression),i,System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)),parameter!=null&&(argType=System.Array.getItem(argumentTypes,i,Kusto.Language.Symbols.TypeSymbol),(parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.CommonScalar&&argType.IsScalar||parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic&&argType.IsScalar||parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.CommonNumber&&Kusto.Language.Binding.Binder.IsNumber(argType)||parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.CommonSummable&&Kusto.Language.Binding.Binder.IsSummable(argType))&&(commonType==null?commonType=argType:Kusto.Language.Binding.Binder.IsPromotable(commonType,argType)?commonType=argType:Kusto.Language.Binding.Binder.SymbolsAssignable(commonType,Kusto.Language.Symbols.ScalarTypes.Dynamic)&&(commonType=argType)));return commonType},GetCommonScalarType:function(types){var commonType,i,type;for(types===void 0&&(types=[]),commonType=null,i=0;i<types.length;i=i+1|0)type=types[System.Array.index(i,types)],type.IsScalar&&(commonType==null?commonType=type:Kusto.Language.Binding.Binder.IsPromotable(commonType,type)?commonType=type:Kusto.Language.Binding.Binder.SymbolsAssignable(commonType,Kusto.Language.Symbols.ScalarTypes.Dynamic)&&(commonType=type));return commonType},IsInvokeOperatorFunctionCall:function(functionCall){var p;return Bridge.is(functionCall.Parent,Kusto.Language.Syntax.InvokeOperator)||(p=Bridge.as(functionCall.Parent,Kusto.Language.Syntax.PathExpression))!=null&&Bridge.referenceEquals(p.Selector,functionCall)&&Bridge.is(p.Parent,Kusto.Language.Syntax.InvokeOperator)},GetRepresentativeType:function(parameter){switch(parameter.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Declared:return System.Array.getItem(parameter.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol);case Kusto.Language.Symbols.ParameterTypeKind.Tabular:case Kusto.Language.Symbols.ParameterTypeKind.SingleColumnTable:return Kusto.Language.Symbols.TableSymbol.Empty;default:return Kusto.Language.Symbols.ScalarTypes.Dynamic}},UnifyColumnsWithSameNameAndType:function(columns){var $t,uniqueNames=Kusto.Language.Binding.Binder.s_uniqueNameTablePool.AllocateFromPool(),newColumns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),map,i,col,sameNamedColumns,colType,name;try{for(map=Kusto.Language.Binding.Binder.BuildColumnNameMap(columns),i=0;i<columns.Count;i=i+1|0)if(col=columns.getItem(i),sameNamedColumns={},map.tryGetValue(col.Name,sameNamedColumns)){if(sameNamedColumns.v.Count===1)newColumns.add(Kusto.Language.Binding.Binder.GetUniqueColumn(col,uniqueNames));else if(sameNamedColumns.v.Count>1){$t=Bridge.getEnumerator(sameNamedColumns.v);try{while($t.moveNext())colType=$t.Current,name=uniqueNames.GetOrAddName((col.Name||"")+"_"+(colType.Name||"")),newColumns.add(new Kusto.Language.Symbols.ColumnSymbol(name,colType))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}map.remove(col.Name)}columns.clear();columns.AddRange(newColumns)}finally{Kusto.Language.Binding.Binder.s_uniqueNameTablePool.ReturnToPool(uniqueNames);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(newColumns)}},UnifyColumnsWithSameName:function(columns){var newColumns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),map,i,col,sameNamedColumns,types,commonType;try{for(map=Kusto.Language.Binding.Binder.BuildColumnNameMap(columns),i=0;i<columns.Count;i=i+1|0)col=columns.getItem(i),sameNamedColumns={},map.tryGetValue(col.Name,sameNamedColumns)&&(sameNamedColumns.v.Count===1?newColumns.add(col):sameNamedColumns.v.Count>1&&(types=sameNamedColumns.v.ToArray(),commonType=Kusto.Language.Binding.Binder.GetCommonScalarType(types),commonType==null&&(commonType=Kusto.Language.Symbols.ScalarTypes.Dynamic),Bridge.referenceEquals(col.Type,commonType)?newColumns.add(col):newColumns.add(new Kusto.Language.Symbols.ColumnSymbol(col.Name,commonType))),map.remove(col.Name));columns.clear();columns.AddRange(newColumns)}finally{Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(newColumns)}},MakeColumnNamesUnique:function(columns){var names=Kusto.Language.Binding.Binder.s_uniqueNameTablePool.AllocateFromPool(),newColumns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),i,col;try{for(i=0;i<columns.Count;i=i+1|0)col=columns.getItem(i),newColumns.add(Kusto.Language.Binding.Binder.GetUniqueColumn(col,names));columns.clear();columns.AddRange(newColumns)}finally{Kusto.Language.Binding.Binder.s_uniqueNameTablePool.ReturnToPool(names);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(newColumns)}},BuildColumnNameMap:function(columns){for(var col,sameNameColumns,map=new(System.Collections.Generic.Dictionary$2(System.String,System.Collections.Generic.List$1(Kusto.Language.Symbols.TypeSymbol))),i=0;i<columns.Count;i=i+1|0)col=columns.getItem(i),sameNameColumns={},map.tryGetValue(col.Name,sameNameColumns)||(sameNameColumns.v=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.TypeSymbol).ctor),map.add(col.Name,sameNameColumns.v)),sameNameColumns.v.contains(col.Type)||sameNameColumns.v.add(col.Type);return map},GetCommonColumns$2:function(columnsA,columnsB,result){var $t,columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),c;try{Kusto.Language.Binding.Binder.GetCommonColumns$1(columnsA,columnsB,columns);$t=Bridge.getEnumerator(columns);try{while($t.moveNext())c=$t.Current,result.add(c)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}finally{Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},GetCommonColumns$1:function(columnsA,columnsB,result){var $t,$t1,names=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool(),c,c1;try{$t=Bridge.getEnumerator(columnsB,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())c=$t.Current,names.add(c.Name)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}$t1=Bridge.getEnumerator(columnsA,Kusto.Language.Symbols.ColumnSymbol);try{while($t1.moveNext())c1=$t1.Current,names.contains(c1.Name)&&result.add(c1)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}finally{Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(names)}},GetCommonColumns:function(tables,common){var columnsA,columnsC,i;if(common.clear(),System.Array.getCount(tables,Kusto.Language.Symbols.TableSymbol)===1)common.AddRange(System.Array.getItem(tables,0,Kusto.Language.Symbols.TableSymbol).Columns);else if(System.Array.getCount(tables,Kusto.Language.Symbols.TableSymbol)===2)Kusto.Language.Binding.Binder.GetCommonColumns$1(System.Array.getItem(tables,0,Kusto.Language.Symbols.TableSymbol).Columns,System.Array.getItem(tables,1,Kusto.Language.Symbols.TableSymbol).Columns,common);else if(System.Array.getCount(tables,Kusto.Language.Symbols.TableSymbol)>2){columnsA=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool();columnsC=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool();try{for(Kusto.Language.Binding.Binder.GetCommonColumns$1(System.Array.getItem(tables,0,Kusto.Language.Symbols.TableSymbol).Columns,System.Array.getItem(tables,1,Kusto.Language.Symbols.TableSymbol).Columns,columnsA),i=2;i<System.Array.getCount(tables,Kusto.Language.Symbols.TableSymbol);i=i+1|0)Kusto.Language.Binding.Binder.GetCommonColumns$1(columnsA,System.Array.getItem(tables,i,Kusto.Language.Symbols.TableSymbol).Columns,columnsC),i<(System.Array.getCount(tables,Kusto.Language.Symbols.TableSymbol)-1|0)&&(columnsA.clear(),columnsA.AddRange(columnsC),columnsC.clear());common.AddRange(columnsC)}finally{Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columnsA);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columnsC)}}},GetUniqueColumn:function(column,uniqueNames){var uniqueName=uniqueNames.GetOrAddName(column.Name);return Bridge.referenceEquals(uniqueName,column.Name)?column:new Kusto.Language.Symbols.ColumnSymbol(uniqueName,column.Type)},CreateColumnsFromSchema$1:function(schema,columns,declaredNames,diagnostics){for(var expr,nat,s,i=0,n=schema.Columns.Count;i<n;i=i+1|0){expr=schema.Columns.getItem$1(i).Element$1;do{if(Bridge.is(expr,Kusto.Language.Syntax.NameAndTypeDeclaration)){nat=Bridge.cast(expr,Kusto.Language.Syntax.NameAndTypeDeclaration);Kusto.Language.Binding.Binder.CreateColumnsFromSchema(nat,columns,declaredNames,diagnostics);break}if(Bridge.is(expr,Kusto.Language.Syntax.StarExpression)){s=Bridge.cast(expr,Kusto.Language.Syntax.StarExpression);break}}while(0)}},CreateColumnsFromSchema:function(declaration,columns,declaredNames,diagnostics){var $t,name=declaration.Name.SimpleName,p,type;do{if($t=declaration.Type,Bridge.is($t,Kusto.Language.Syntax.PrimitiveTypeExpression)){p=Bridge.cast($t,Kusto.Language.Syntax.PrimitiveTypeExpression);type=Kusto.Language.Binding.Binder.GetType(p);Kusto.Language.Binding.Binder.DeclareColumnName(declaredNames,name,diagnostics,declaration.Name)&&columns.add(new Kusto.Language.Symbols.ColumnSymbol(name,type));break}if(Bridge.is($t,Kusto.Language.Syntax.SchemaTypeExpression)){var s=Bridge.cast($t,Kusto.Language.Syntax.SchemaTypeExpression),subSchemaColumns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),subSchemaNames=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool();try{Kusto.Language.Binding.Binder.CreateColumnsFromSchema$1(s,subSchemaColumns,subSchemaNames,diagnostics);Kusto.Language.Binding.Binder.DeclareColumnName(declaredNames,name,diagnostics,declaration.Name)&&columns.add(new Kusto.Language.Symbols.ColumnSymbol(name,new Kusto.Language.Symbols.TableSymbol.$ctor2(subSchemaColumns)))}finally{Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(subSchemaColumns);Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(subSchemaNames)}break}diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidColumnDeclaration().WithLocation(declaration));break}while(0)},DeclareColumnName:function(declaredNames,newName,diagnostics,location){return declaredNames.contains(newName)?(diagnostics.add(Kusto.Language.DiagnosticFacts.GetDuplicateColumnDeclaration(newName).WithLocation(location)),!1):(declaredNames.add(newName),!0)},GetFunctionResultName:function(fc,defaultName,row){var $t,name,name1,name2,_discard1;defaultName===void 0&&(defaultName="");row===void 0&&(row=null);var fs=Bridge.as(fc.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol),kind=($t=fs!=null?fs.ResultNameKind:null,$t!=null?$t:Kusto.Language.Symbols.ResultNameKind.None),prefix=fs!=null?fs.ResultNamePrefix:null;return kind===Kusto.Language.Symbols.ResultNameKind.NameAndFirstArgument?(prefix=fs.Name,kind=Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument):kind===Kusto.Language.Symbols.ResultNameKind.NameAndOnlyArgument&&(prefix=fs.Name,kind=Kusto.Language.Symbols.ResultNameKind.PrefixAndOnlyArgument),kind===Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument?fc.ArgumentList.Expressions.Count>0?(name=Kusto.Language.Binding.Binder.GetExpressionResultName(fc.ArgumentList.Expressions.getItem$1(0).Element$1,defaultName),prefix!=null?(prefix||"")+"_"+(name||""):name):prefix!=null?(prefix||"")+"_":null:kind===Kusto.Language.Symbols.ResultNameKind.PrefixAndOnlyArgument&&fc.ArgumentList.Expressions.Count===1?(name1=Kusto.Language.Binding.Binder.GetExpressionResultName(fc.ArgumentList.Expressions.getItem$1(0).Element$1,defaultName),prefix!=null?(prefix||"")+"_"+(name1||""):name1):kind===Kusto.Language.Symbols.ResultNameKind.FirstArgumentValueIfColumn&&fc.ArgumentList.Expressions.Count>0&&(name2=Bridge.as(fc.ArgumentList.Expressions.getItem$1(0).Element$1.ConstantValue,System.String))!=null?(_discard1={},row!=null&&row.TryGetColumn(name2,_discard1)?name2:defaultName):kind===Kusto.Language.Symbols.ResultNameKind.FirstArgument?fc.ArgumentList.Expressions.Count>0?Kusto.Language.Binding.Binder.GetExpressionResultName(fc.ArgumentList.Expressions.getItem$1(0).Element$1,defaultName):null:kind===Kusto.Language.Symbols.ResultNameKind.PrefixOnly&&prefix!=null?prefix:kind===Kusto.Language.Symbols.ResultNameKind.OnlyArgument&&fc.ArgumentList.Expressions.Count===1?Kusto.Language.Binding.Binder.GetExpressionResultName(fc.ArgumentList.Expressions.getItem$1(0).Element$1,defaultName):defaultName},GetExpressionResultName:function(expr,defaultName,row){var n,be,p,left,right,e,left1,right1,o,s,f;defaultName===void 0&&(defaultName="");row===void 0&&(row=null);do return Bridge.is(expr,Kusto.Language.Syntax.NameReference)?(n=Bridge.cast(expr,Kusto.Language.Syntax.NameReference),n.SimpleName):Bridge.is(expr,Kusto.Language.Syntax.BrackettedExpression)&&(be=Bridge.cast(expr,Kusto.Language.Syntax.BrackettedExpression),be.Expression.Kind===Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression||be.Expression.Kind===Kusto.Language.Syntax.SyntaxKind.CompoundStringLiteralExpression)?Bridge.cast(be.Expression.LiteralValue,System.String):Bridge.is(expr,Kusto.Language.Syntax.PathExpression)?(p=Bridge.cast(expr,Kusto.Language.Syntax.PathExpression),Bridge.referenceEquals(p.Expression.ResultType,Kusto.Language.Symbols.ScalarTypes.Dynamic)?(left=Kusto.Language.Binding.Binder.GetExpressionResultName(p.Expression,null),right=Kusto.Language.Binding.Binder.GetExpressionResultName(p.Selector,null),System.String.format("{0}_{1}",left,right)):Kusto.Language.Binding.Binder.GetExpressionResultName(p.Selector,defaultName)):Bridge.is(expr,Kusto.Language.Syntax.ElementExpression)?(e=Bridge.cast(expr,Kusto.Language.Syntax.ElementExpression),Bridge.referenceEquals(e.Expression.ResultType,Kusto.Language.Symbols.ScalarTypes.Dynamic)?(left1=Kusto.Language.Binding.Binder.GetExpressionResultName(e.Expression,null),right1=Kusto.Language.Binding.Binder.GetExpressionResultName(e.Selector,null),System.String.format("{0}_{1}",left1,right1)):Kusto.Language.Binding.Binder.GetExpressionResultName(e.Selector,defaultName)):Bridge.is(expr,Kusto.Language.Syntax.OrderedExpression)?(o=Bridge.cast(expr,Kusto.Language.Syntax.OrderedExpression),Kusto.Language.Binding.Binder.GetExpressionResultName(o.Expression,defaultName)):Bridge.is(expr,Kusto.Language.Syntax.SimpleNamedExpression)?(s=Bridge.cast(expr,Kusto.Language.Syntax.SimpleNamedExpression),s.Name.SimpleName):Bridge.is(expr,Kusto.Language.Syntax.FunctionCallExpression)?(f=Bridge.cast(expr,Kusto.Language.Syntax.FunctionCallExpression),Kusto.Language.Binding.Binder.GetFunctionResultName(f,defaultName,row)):defaultName;while(0)},GetType:function(primitiveType,diagnostics){diagnostics===void 0&&(diagnostics=null);var typeName=primitiveType.Type.Text,type=Kusto.Language.Symbols.ScalarTypes.GetSymbol(typeName);return type!=null?type:(diagnostics!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidTypeName(typeName).WithLocation(primitiveType.Type)),Kusto.Language.Symbols.ErrorSymbol.Instance)},IsInteger:function(type){var s;return(s=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&s.IsInteger},IsRealOrDecimal:function(type){return Kusto.Language.Binding.Binder.SymbolsAssignable(type,Kusto.Language.Symbols.ScalarTypes.Real)||Kusto.Language.Binding.Binder.SymbolsAssignable(type,Kusto.Language.Symbols.ScalarTypes.Decimal)},IsStringOrDynamic:function(type){return Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.String)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Dynamic)},IsNumber:function(type){var s;return(s=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&s.IsNumeric},IsIntegerOrDynamic:function(type){return Kusto.Language.Binding.Binder.IsInteger(type)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Dynamic)},IsSummable:function(type){var s;return(s=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&s.IsSummable},IsTabular:function(type){return type!=null&&type.IsTabular},IsDatabase:function(symbol){return Bridge.is(symbol,Kusto.Language.Symbols.DatabaseSymbol)},IsCluster:function(symbol){return Bridge.is(symbol,Kusto.Language.Symbols.ClusterSymbol)},GetSemanticInfo:function(referencedSymbol,diagnostics){return diagnostics===void 0&&(diagnostics=[]),Kusto.Language.Binding.Binder.CreateSemanticInfo(referencedSymbol,Bridge.cast(diagnostics,System.Collections.Generic.IEnumerable$1(Kusto.Language.Diagnostic)))},CreateSemanticInfo:function(referencedSymbol,diagnostics){diagnostics===void 0&&(diagnostics=null);switch(referencedSymbol.Kind){case Kusto.Language.Symbols.SymbolKind.Operator:case Kusto.Language.Symbols.SymbolKind.Column:case Kusto.Language.Symbols.SymbolKind.Table:case Kusto.Language.Symbols.SymbolKind.Database:case Kusto.Language.Symbols.SymbolKind.Cluster:case Kusto.Language.Symbols.SymbolKind.Parameter:case Kusto.Language.Symbols.SymbolKind.Function:case Kusto.Language.Symbols.SymbolKind.Pattern:case Kusto.Language.Symbols.SymbolKind.Group:return new Kusto.Language.Syntax.SemanticInfo.$ctor1(referencedSymbol,Kusto.Language.Binding.Binder.GetResultType(referencedSymbol),diagnostics);case Kusto.Language.Symbols.SymbolKind.Variable:var v=Bridge.cast(referencedSymbol,Kusto.Language.Symbols.VariableSymbol);return new Kusto.Language.Syntax.SemanticInfo.$ctor1(referencedSymbol,Kusto.Language.Binding.Binder.GetResultType(referencedSymbol),diagnostics,v.IsConstant,void 0);case Kusto.Language.Symbols.SymbolKind.Scalar:case Kusto.Language.Symbols.SymbolKind.Tuple:return new Kusto.Language.Syntax.SemanticInfo.$ctor3(Bridge.cast(referencedSymbol,Kusto.Language.Symbols.TypeSymbol),diagnostics);default:return new Kusto.Language.Syntax.SemanticInfo.$ctor1(null,Kusto.Language.Symbols.ErrorSymbol.Instance,diagnostics)}},GetResultType:function(symbol){return Kusto.Language.Symbols.Symbol.GetExpressionResultType(symbol)},SymbolsAssignable$1:function(parameterTypes,valueType,conversion){conversion===void 0&&(conversion=0);for(var i=0;i<System.Array.getCount(parameterTypes,Kusto.Language.Symbols.TypeSymbol);i=i+1|0)if(Kusto.Language.Binding.Binder.SymbolsAssignable(System.Array.getItem(parameterTypes,i,Kusto.Language.Symbols.TypeSymbol),valueType,conversion))return!0;return!1},SymbolsAssignable:function(parameterType,valueType,conversion){if(conversion===void 0&&(conversion=0),Bridge.referenceEquals(parameterType,valueType))return!0;if(parameterType==null||valueType==null||parameterType.Kind!==valueType.Kind)return!1;switch(parameterType.Kind){case Kusto.Language.Symbols.SymbolKind.Column:var c1=Bridge.cast(parameterType,Kusto.Language.Symbols.ColumnSymbol),c2=Bridge.cast(valueType,Kusto.Language.Symbols.ColumnSymbol);return Bridge.referenceEquals(c1.Name,c2.Name)&&Kusto.Language.Binding.Binder.SymbolsAssignable(c1.Type,c2.Type,conversion);case Kusto.Language.Symbols.SymbolKind.Tuple:case Kusto.Language.Symbols.SymbolKind.Group:return Kusto.Language.Binding.Binder.MembersEqual(parameterType,valueType);case Kusto.Language.Symbols.SymbolKind.Table:return Kusto.Language.Binding.Binder.TablesAssignable(Bridge.cast(parameterType,Kusto.Language.Symbols.TableSymbol),Bridge.cast(valueType,Kusto.Language.Symbols.TableSymbol));case Kusto.Language.Symbols.SymbolKind.Scalar:switch(conversion){case Kusto.Language.Binding.Conversion.Promotable:return Kusto.Language.Binding.Binder.IsPromotable(Bridge.cast(valueType,Kusto.Language.Symbols.TypeSymbol),Bridge.cast(parameterType,Kusto.Language.Symbols.TypeSymbol));case Kusto.Language.Binding.Conversion.Compatible:return Kusto.Language.Binding.Binder.IsPromotable(Bridge.cast(valueType,Kusto.Language.Symbols.TypeSymbol),Bridge.cast(parameterType,Kusto.Language.Symbols.TypeSymbol))||Kusto.Language.Binding.Binder.IsPromotable(Bridge.cast(parameterType,Kusto.Language.Symbols.TypeSymbol),Bridge.cast(valueType,Kusto.Language.Symbols.TypeSymbol));case Kusto.Language.Binding.Conversion.Any:return!0;default:return!1}}return!1},MembersEqual:function(symbol1,symbol2){if(System.Array.getCount(symbol1.Members,Kusto.Language.Symbols.Symbol)!==System.Array.getCount(symbol2.Members,Kusto.Language.Symbols.Symbol))return!1;for(var i=0,n=System.Array.getCount(symbol1.Members,Kusto.Language.Symbols.Symbol);i<n;i=i+1|0)if(!Kusto.Language.Binding.Binder.SymbolsAssignable(System.Array.getItem(symbol1.Members,i,Kusto.Language.Symbols.Symbol),System.Array.getItem(symbol2.Members,i,Kusto.Language.Symbols.Symbol)))return!1;return!0},TablesAssignable:function(parameterType,valueType){var $t,parameterColumn,valueColumn;$t=Bridge.getEnumerator(parameterType.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())if(parameterColumn=$t.Current,valueColumn={},!valueType.TryGetColumn(parameterColumn.Name,valueColumn)||!Kusto.Language.Binding.Binder.SymbolsAssignable(parameterColumn.Type,valueColumn.v.Type))return!1}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!0},GetQueryParameterInfo:function(name,parameters){for(var i=0,n=System.Array.getCount(parameters,Kusto.Language.Binding.Binder.QueryParameterInfo);i<n;i=i+1|0)if(System.Linq.Enumerable.from(System.Array.getItem(parameters,i,Kusto.Language.Binding.Binder.QueryParameterInfo).Names).contains(name))return System.Array.getItem(parameters,i,Kusto.Language.Binding.Binder.QueryParameterInfo);return null},Contains:function(values,value,caseSensitive){var stringValue=Bridge.as(value,System.String),i,n,v,i1,n1;if(stringValue!=null){for(i=0,n=System.Array.getCount(values,System.Object);i<n;i=i+1|0)if(v=Bridge.as(System.Array.getItem(values,i,System.Object),System.String),System.String.compare(stringValue,v,!caseSensitive)===0)return!0}else for(i1=0,n1=System.Array.getCount(values,System.Object);i1<n1;i1=i1+1|0)if(Bridge.referenceEquals(System.Array.getItem(values,i1,System.Object),value))return!0;return!1},ArgumentsHaveErrors:function(argumentTypes){for(var i=0;i<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol);i=i+1|0)if(System.Array.getItem(argumentTypes,i,Kusto.Language.Symbols.TypeSymbol).IsError)return!0;return!1},IsNamedArgument:function(argument){return Bridge.is(argument,Kusto.Language.Syntax.NamedExpression)},GetNamedArgumentName:function(argument){var sn,cn;do return Bridge.is(argument,Kusto.Language.Syntax.SimpleNamedExpression)?(sn=Bridge.cast(argument,Kusto.Language.Syntax.SimpleNamedExpression),sn.Name):Bridge.is(argument,Kusto.Language.Syntax.CompoundNamedExpression)?(cn=Bridge.cast(argument,Kusto.Language.Syntax.CompoundNamedExpression),cn.Names):null;while(0)},CheckArgumentCount:function(expressions,expectedCount,diagnostics){return expressions.Count===expectedCount?!0:(diagnostics.add(Kusto.Language.DiagnosticFacts.GetArgumentCountExpected(expectedCount).WithLocation(expressions)),!1)}}},fields:{_globals:null,_currentCluster:null,_currentDatabase:null,_localScope:null,_rowScope:null,_rightRowScope:null,_pathScope:null,_implicitArgumentType:null,_scopeKind:0,_aliasedDatabases:null,_globalBindingCache:null,_localBindingCache:null,_semanticInfoSetter:null,_cancellationToken:null,_openClusters:null,_openDatabases:null,_openTables:null,openColumns:null,tupleMap:null},ctors:{init:function(){this._cancellationToken=new Kusto.Language.Utils.CancellationToken;this._aliasedDatabases=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.DatabaseSymbol))},ctor:function(globals,currentCluster,currentDatabase,globalBindingCache,localBindingCache,semanticInfoSetter,cancellationToken){this.$initialize();this._globals=globals;this._currentCluster=currentCluster||globals.Cluster;this._currentDatabase=currentDatabase||globals.Database;this._globalBindingCache=globalBindingCache||new Kusto.Language.Binding.GlobalBindingCache;this._localBindingCache=localBindingCache||new Kusto.Language.Binding.LocalBindingCache;this._localScope=new Kusto.Language.Binding.LocalScope;this._semanticInfoSetter=semanticInfoSetter;this._cancellationToken=cancellationToken}},methods:{SetContext:function(contextNode,position,locals){var $t,builder,local;if(position===void 0&&(position=-1),locals===void 0&&(locals=null),contextNode!=null&&(builder=new Kusto.Language.Binding.Binder.ContextBuilder(this,position>=0?position:contextNode.TextStart),contextNode.Accept$1(builder)),locals!=null){this._localScope=new Kusto.Language.Binding.LocalScope(this._localScope);$t=Bridge.getEnumerator(locals,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())local=$t.Current,this._localScope.AddDeclaration(local)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}},GetSemanticInfo:function(node){return node!=null?node.GetSemanticInfo():null},SetSemanticInfo:function(node,info){node!=null&&(Bridge.staticEquals(this._semanticInfoSetter,null)?null:this._semanticInfoSetter(node,info))},GetResultTypeOrError:function(expression){var $t;return(($t=this.GetSemanticInfo(expression))!=null?$t.ResultType:null)||Kusto.Language.Symbols.ErrorSymbol.Instance},GetResultType:function(expression){var $t;return($t=this.GetSemanticInfo(expression))!=null?$t.ResultType:null},GetReferencedSymbol:function(expression){var $t;return($t=this.GetSemanticInfo(expression))!=null?$t.ReferencedSymbol:null},GetIsConstant:function(expression){var $t,$t1;return $t=($t1=this.GetSemanticInfo(expression))!=null?$t1.IsConstant:null,$t!=null?$t:!1},GetCluster:function(name){var cluster=this._globals.GetCluster$1(name);return cluster||this.GetOpenCluster(name)},GetOpenCluster:function(name){this._openClusters==null&&(this._openClusters=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ClusterSymbol)));var cluster={};return this._openClusters.tryGetValue(name,cluster)||(cluster.v=new Kusto.Language.Symbols.ClusterSymbol.$ctor1(name,null,!0),this._openClusters.add(name,cluster.v)),cluster.v},GetDatabase:function(name,cluster){var db,list;if(cluster===void 0&&(cluster=null),cluster=cluster||this._currentCluster,Bridge.referenceEquals(cluster,this._currentCluster)&&System.String.compare(this._currentDatabase.Name,name,!0)===0)return this._currentDatabase;if(db={},this._aliasedDatabases.tryGetValue(name,db))return db.v;list=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool();try{return cluster.GetMembers$1(name,Kusto.Language.Symbols.SymbolMatch.Database,list,!0),list.Count>=1?Bridge.cast(list.getItem(0),Kusto.Language.Symbols.DatabaseSymbol):cluster.IsOpen?this.GetOpenDatabase(name,cluster):null}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(list)}},GetDatabase$1:function(name){var cluster=Bridge.as(this._pathScope,Kusto.Language.Symbols.ClusterSymbol)||this._currentCluster;return this.GetDatabase(name,cluster)||Bridge.cast(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.Symbols.TypeSymbol)},GetOpenDatabase:function(name,cluster){var map,database;return cluster=cluster||this._currentCluster,this._openDatabases==null&&(this._openDatabases=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.ClusterSymbol,System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.DatabaseSymbol)))),map={},this._openDatabases.tryGetValue(cluster,map)||(map.v=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.DatabaseSymbol)),this._openDatabases.add(cluster,map.v)),database={},map.v.tryGetValue(name,database)||(database.v=new Kusto.Language.Symbols.DatabaseSymbol.$ctor1(name,null,!0),map.v.add(name,database.v)),database.v},GetTable:function(name,database){database===void 0&&(database=null);database=database||this._currentDatabase;var list=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool();try{return database.GetMembers$1(name,Kusto.Language.Symbols.SymbolMatch.Table,list),list.Count>=1?Bridge.cast(list.getItem(0),Kusto.Language.Symbols.TableSymbol):database.IsOpen?this.GetOpenTable(name,database):null}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(list)}},GetTable$1:function(name){var database=Bridge.as(this._pathScope,Kusto.Language.Symbols.DatabaseSymbol)||this._currentDatabase;return this.GetTable(name,database)||Bridge.cast(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.Symbols.TypeSymbol)},GetOpenTable:function(name,database){var map,table;return this._openTables==null&&(this._openTables=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.DatabaseSymbol,System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.TableSymbol)))),map={},this._openTables.tryGetValue(database,map)||(map.v=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.TableSymbol)),this._openTables.add(database,map.v)),table={},map.v.tryGetValue(name,table)||(table.v=new Kusto.Language.Symbols.TableSymbol.$ctor3(name).Open(),map.v.add(name,table.v)),table.v},GetOpenColumn:function(name,type,table){var columnMap,column;return this.openColumns==null&&(this.openColumns=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.TableSymbol,System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ColumnSymbol)))),columnMap={},this.openColumns.tryGetValue(table,columnMap)||(columnMap.v=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ColumnSymbol)),this.openColumns.add(table,columnMap.v)),column={},columnMap.v.tryGetValue(name,column)||(column.v=new Kusto.Language.Symbols.ColumnSymbol(name,type),columnMap.v.add(name,column.v)),column.v},GetDeclaredAndInferredColumns$1:function(table,columns){columns.AddRange(table.Columns);var columnMap={};table.IsOpen&&this.openColumns!=null&&this.openColumns.tryGetValue(table,columnMap)&&columns.AddRange(columnMap.v.getValues())},GetDeclaredAndInferredColumns:function(table){if(table.IsOpen&&this.openColumns!=null&&this.openColumns.containsKey(table)){var list=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return this.GetDeclaredAndInferredColumns$1(table,list),list}return table.Columns},GetTuple:function(table){this.tupleMap==null&&(this.tupleMap=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.TableSymbol,Kusto.Language.Symbols.TupleSymbol)));var tuple={};return this.tupleMap.tryGetValue(table,tuple)||(tuple.v=new Kusto.Language.Symbols.TupleSymbol.$ctor1(this.GetDeclaredAndInferredColumns(table)),this.tupleMap.add(table,tuple.v)),tuple.v},CanCache:function(tables){return Bridge.referenceEquals(tables,this._currentDatabase.Tables)||System.Linq.Enumerable.from(tables).all(Bridge.fn.bind(this,function(t){return this._globals.IsDatabaseTable(t)}))},GetTableOfColumnsUnifiedByName:function(tables){var $t,unifiedColumnsTable={},cache,columns,table;if(!this._globalBindingCache.UnifiedNameColumnsMap.tryGetValue(tables,unifiedColumnsTable)){cache=this.CanCache(tables);tables=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.TableSymbol,tables);columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);$t=Bridge.getEnumerator(tables,Kusto.Language.Symbols.TableSymbol);try{while($t.moveNext())table=$t.Current,columns.AddRange(table.Columns)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Binding.Binder.UnifyColumnsWithSameName(columns);unifiedColumnsTable.v=new Kusto.Language.Symbols.TableSymbol.$ctor2(columns);cache&&this._globalBindingCache.UnifiedNameColumnsMap.set(tables,unifiedColumnsTable.v)}return unifiedColumnsTable.v},GetTableOfColumnsUnifiedByNameAndType:function(tables){var $t,unifiedColumnsTable={},cache,columns,table;if(!this._globalBindingCache.UnifiedNameAndTypeColumnsMap.tryGetValue(tables,unifiedColumnsTable)){cache=this.CanCache(tables);tables=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.TableSymbol,tables);columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);$t=Bridge.getEnumerator(tables,Kusto.Language.Symbols.TableSymbol);try{while($t.moveNext())table=$t.Current,columns.AddRange(table.Columns)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Binding.Binder.UnifyColumnsWithSameNameAndType(columns);unifiedColumnsTable.v=new Kusto.Language.Symbols.TableSymbol.$ctor2(columns);cache&&this._globalBindingCache.UnifiedNameAndTypeColumnsMap.set(tables,unifiedColumnsTable.v)}return unifiedColumnsTable.v},GetTableOfCommonColumns:function(tables){var commonColumnsTable={},cache,columns;return this._globalBindingCache.CommonColumnsMap.tryGetValue(tables,commonColumnsTable)||(cache=this.CanCache(tables),tables=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.TableSymbol,tables),columns=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),Kusto.Language.Binding.Binder.GetCommonColumns(tables,columns),commonColumnsTable.v=new Kusto.Language.Symbols.TableSymbol.$ctor2(columns),cache&&this._globalBindingCache.CommonColumnsMap.set(tables,commonColumnsTable.v)),commonColumnsTable.v},GetSymbolsInContext:function(contextNode,match,include,list){var memberMatch,dbMatch;if(this._pathScope!=null)memberMatch=match&7,Bridge.is(this._pathScope,Kusto.Language.Symbols.TableSymbol)&&!Kusto.Language.Binding.Binder.IsInCommand(contextNode)&&(memberMatch&=-2),memberMatch!==0&&this._pathScope.GetMembers(memberMatch,list),(match&Kusto.Language.Symbols.SymbolMatch.Function)!=0&&this.GetSpecialFunctions(null,list);else switch(this._scopeKind){case Kusto.Language.Binding.Binder.ScopeKind.Normal:this._rowScope!=null&&(match&Kusto.Language.Symbols.SymbolMatch.Column)!=0&&(this._rightRowScope!=null?(list.add(new Kusto.Language.Symbols.VariableSymbol("$left",this.GetTuple(this._rowScope))),list.add(new Kusto.Language.Symbols.VariableSymbol("$right",this.GetTuple(this._rightRowScope))),Kusto.Language.Binding.Binder.GetCommonColumns$2(this.GetDeclaredAndInferredColumns(this._rowScope),this.GetDeclaredAndInferredColumns(this._rightRowScope),list)):this._rowScope.GetMembers(match,list));this._localScope.GetSymbols(match,list);(match&Kusto.Language.Symbols.SymbolMatch.Function)!=0&&(include&Kusto.Language.IncludeFunctionKind.BuiltInFunctions)!=0&&this.GetFunctionsInScope$1(match,null,Kusto.Language.IncludeFunctionKind.BuiltInFunctions,list);this._currentDatabase!=null&&(dbMatch=match,(include&Kusto.Language.IncludeFunctionKind.DatabaseFunctions)==0&&(dbMatch&=-5),this._currentDatabase.GetMembers(dbMatch,list));(match&Kusto.Language.Symbols.SymbolMatch.Database)!=0&&this._currentCluster.GetMembers(match,list);(match&Kusto.Language.Symbols.SymbolMatch.Cluster)!=0&&list.AddRange(this._globals.Clusters);break;case Kusto.Language.Binding.Binder.ScopeKind.Aggregate:(match&Kusto.Language.Symbols.SymbolMatch.Function)!=0&&this.GetFunctionsInScope$1(match,null,include,list);break;case Kusto.Language.Binding.Binder.ScopeKind.PlugIn:(match&Kusto.Language.Symbols.SymbolMatch.Function)!=0&&this.GetFunctionsInScope$1(match,null,include,list)}},GetSpecialFunctions:function(name,functions){if(this._pathScope!=null)switch(this._pathScope.Kind){case Kusto.Language.Symbols.SymbolKind.Cluster:(name==null||Bridge.referenceEquals(Kusto.Language.Functions.Database.Name,name))&&functions.add(Kusto.Language.Functions.Database);break;case Kusto.Language.Symbols.SymbolKind.Database:(name==null||Bridge.referenceEquals(Kusto.Language.Functions.Database.Name,name))&&functions.add(Kusto.Language.Functions.Table)}},GetFunctionsInScope$1:function(match,name,include,functions,diagnostics,location){var $t,allFunctions,fn;diagnostics===void 0&&(diagnostics=null);location===void 0&&(location=null);allFunctions=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool();try{this.GetFunctionsInScope(this._scopeKind,name,include,allFunctions,diagnostics,location);$t=Bridge.getEnumerator(allFunctions);try{while($t.moveNext())fn=$t.Current,Kusto.Language.Symbols.SymbolMatchExtensions.Matches(fn,match)&&functions.add(fn)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(allFunctions)}},GetFunctionsInScope:function(kind,name,include,functions,diagnostics,location){var fn,fn1,fn2,oldCount;if(diagnostics===void 0&&(diagnostics=null),location===void 0&&(location=null),this._pathScope!=null)this.GetSpecialFunctions(name,functions);else switch(kind){case Kusto.Language.Binding.Binder.ScopeKind.Aggregate:name==null?(functions.AddRange(this._globals.Aggregates),this.GetFunctionsInScope(Kusto.Language.Binding.Binder.ScopeKind.Normal,name,include,functions)):(fn=this._globals.GetAggregate(name),fn!=null?functions.add(fn):this.GetFunctionsInScope(Kusto.Language.Binding.Binder.ScopeKind.Normal,name,include,functions),functions.Count===0&&diagnostics!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetAggregateFunctionNotDefined(name).WithLocation(location)));break;case Kusto.Language.Binding.Binder.ScopeKind.PlugIn:name==null?functions.AddRange(this._globals.PlugIns):(fn1=this._globals.GetPlugIn(name),fn1!=null?functions.add(fn1):diagnostics!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetPlugInFunctionNotDefined(name).WithLocation(location)));break;default:(include&Kusto.Language.IncludeFunctionKind.BuiltInFunctions)!=0&&(name==null?functions.AddRange(this._globals.Functions):functions.Count===0&&(fn2=this._globals.GetFunction(name),fn2!=null&&functions.add(fn2)));(name==null||functions.Count===0)&&(include&Kusto.Language.IncludeFunctionKind.LocalFunctions)!=0&&this.GetDeclaredFunctionsInScope(name,functions);(name==null||functions.Count===0)&&(include&Kusto.Language.IncludeFunctionKind.DatabaseFunctions)!=0&&this._currentDatabase!=null&&(oldCount=functions.Count,this._currentDatabase.GetMembers$1(name,Kusto.Language.Symbols.SymbolMatch.Function,functions),functions.Count===oldCount&&diagnostics!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetScalarFunctionNotDefined(name).WithLocation(location)))}},GetDeclaredFunctionsInScope:function(name,functions){var $t,locals=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool(),local,fn;try{this._localScope.GetSymbols$1(name,Kusto.Language.Symbols.SymbolMatch.Local,locals);$t=Bridge.getEnumerator(locals);try{while($t.moveNext())local=$t.Current,(fn=Bridge.as(Kusto.Language.Binding.Binder.GetResultType(local),Kusto.Language.Symbols.FunctionSymbol))!=null&&functions.add(fn)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(locals)}},BindName:function(name,match,location){var tuple,tuple1,list,allowZeroArgumentInvocation,ds,table,cs,i,fn,item,resultType,fn1,sig,sigResult,returnType;if(Bridge.referenceEquals(name,""))return Kusto.Language.Binding.Binder.ErrorInfo;if(this._pathScope!=null){if(Bridge.referenceEquals(this._pathScope,Kusto.Language.Symbols.ScalarTypes.Dynamic))return Kusto.Language.Binding.Binder.LiteralDynamicInfo;if(Bridge.referenceEquals(this._pathScope,Kusto.Language.Symbols.ErrorSymbol.Instance))return Kusto.Language.Binding.Binder.ErrorInfo}else{if(Bridge.referenceEquals(name,"$left")&&this._rowScope!=null&&this._rightRowScope!=null)return tuple=this.GetTuple(this._rowScope),new Kusto.Language.Syntax.SemanticInfo.$ctor1(tuple,tuple);if(Bridge.referenceEquals(name,"$right")&&this._rightRowScope!=null)return tuple1=this.GetTuple(this._rightRowScope),new Kusto.Language.Syntax.SemanticInfo.$ctor1(tuple1,tuple1)}list=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool();try{if(allowZeroArgumentInvocation=!1,this._pathScope!=null){if(!Bridge.is(this._pathScope,Kusto.Language.Symbols.TableSymbol)||Kusto.Language.Binding.Binder.IsInCommand(location))if(this._pathScope.GetMembers$1(name,match,list),list.Count===0)if((ds=Bridge.as(this._pathScope,Kusto.Language.Symbols.DatabaseSymbol))!=null){if(Bridge.referenceEquals(name,Kusto.Language.Functions.Table.Name))list.add(Kusto.Language.Functions.Table);else if(ds.IsOpen)return table=this.GetOpenTable(name,ds),new Kusto.Language.Syntax.SemanticInfo.$ctor1(table,table)}else(cs=Bridge.as(this._pathScope,Kusto.Language.Symbols.ClusterSymbol))!=null&&Bridge.referenceEquals(name,Kusto.Language.Functions.Database.Name)&&list.add(Kusto.Language.Functions.Database);else allowZeroArgumentInvocation=!0}else{if(this._rowScope!=null&&this._rowScope.GetMembers$1(name,match,list),list.Count===0&&this._rightRowScope!=null&&this._rightRowScope.GetMembers$1(name,match,list),list.Count===0&&(this._localScope.GetSymbols$1(name,match,list),allowZeroArgumentInvocation=list.Count>0),list.Count===0&&Kusto.Language.Binding.Binder.IsPossibleInvocableFunctionWithoutArgumentList(location)&&(match&Kusto.Language.Symbols.SymbolMatch.Function)!=0){for(this.GetFunctionsInScope(this._scopeKind,name,Kusto.Language.IncludeFunctionKind.DatabaseFunctions,list),i=list.Count-1|0;i>=0;i=i-1|0)fn=Bridge.as(list.getItem(i),Kusto.Language.Symbols.FunctionSymbol),(fn==null||fn.MinArgumentCount>0)&&list.removeAt(i);allowZeroArgumentInvocation=list.Count>0}list.Count===0&&this._currentDatabase!=null&&this._currentDatabase.GetMembers$1(name,match,list);list.Count===0&&this._currentCluster!=null&&(match&Kusto.Language.Symbols.SymbolMatch.Database)!=0&&this._currentCluster.GetMembers$1(name,match,list);list.Count===0&&(match&Kusto.Language.Symbols.SymbolMatch.Function)!=0&&this.GetFunctionsInScope(this._scopeKind,name,Kusto.Language.IncludeFunctionKind.BuiltInFunctions,list);list.Count===0&&this._rowScope!=null&&this._rowScope.IsOpen&&(match&Kusto.Language.Symbols.SymbolMatch.Column)!=0&&list.add(this.GetOpenColumn(name,Kusto.Language.Symbols.ScalarTypes.Dynamic,this._rowScope))}return list.Count===1?(item=list.getItem(0),resultType=Kusto.Language.Binding.Binder.GetResultType(item),(fn1=Bridge.as(resultType,Kusto.Language.Symbols.FunctionSymbol))!=null&&Kusto.Language.Binding.Binder.IsPossibleInvocableFunctionWithoutArgumentList(location)?(sig=System.Linq.Enumerable.from(fn1.Signatures).firstOrDefault(function(s){return s.MinArgumentCount===0},null),sig!=null&&allowZeroArgumentInvocation?(sigResult=this.GetSignatureResult(sig,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Syntax.Expression).Instance,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol).Instance),new Kusto.Language.Syntax.SemanticInfo.$ctor1(item,sigResult.Type,void 0,!1,sigResult.Expander)):(returnType=this.GetCommonReturnType(fn1.Signatures,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Syntax.Expression).Instance,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol).Instance),new Kusto.Language.Syntax.SemanticInfo.ctor(item,returnType,Kusto.Language.DiagnosticFacts.GetFunctionRequiresArgumentList(name).WithLocation(location)))):Kusto.Language.Binding.Binder.CreateSemanticInfo(item)):list.Count===0?Kusto.Language.Binding.Binder.IsFunctionCallName(location)?this._globals.GetAggregate(name)!=null&&this._scopeKind!==Kusto.Language.Binding.Binder.ScopeKind.Aggregate?new Kusto.Language.Syntax.SemanticInfo.$ctor2(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetAggregateNotAllowedInThisContext(name).WithLocation(location)):new Kusto.Language.Syntax.SemanticInfo.$ctor2(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetNameDoesNotReferToAnyKnownFunction(name).WithLocation(location)):new Kusto.Language.Syntax.SemanticInfo.$ctor2(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetNameDoesNotReferToAnyKnownItem(name).WithLocation(location)):new Kusto.Language.Syntax.SemanticInfo.ctor(new Kusto.Language.Symbols.GroupSymbol.$ctor1(System.Linq.Enumerable.from(list).toList(Bridge.global.Kusto.Language.Symbols.Symbol)),Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetNameRefersToMoreThanOneItem(name).WithLocation(location))}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(list)}},GetBinaryOperatorInfo$1:function(kind,left,right,location){return this.GetBinaryOperatorInfo(kind,left,this.GetResultTypeOrError(left),right,this.GetResultTypeOrError(right),location)},GetBinaryOperatorInfo:function(kind,left,leftType,right,rightType,location){var $arguments=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool(),argumentTypes=Kusto.Language.Binding.Binder.s_typeListPool.AllocateFromPool();try{return $arguments.add(left),$arguments.add(right),argumentTypes.add(leftType),argumentTypes.add(rightType),this.GetOperatorInfo$1(kind,$arguments,argumentTypes,location)}finally{Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool($arguments);Kusto.Language.Binding.Binder.s_typeListPool.ReturnToPool(argumentTypes)}},GetUnaryOperatorInfo:function(kind,operand,location){var $arguments=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool();try{return $arguments.add(operand),this.GetOperatorInfo(kind,$arguments,location)}finally{Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool($arguments)}},GetOperatorInfo:function(kind,$arguments,location){var argumentTypes=Kusto.Language.Binding.Binder.s_typeListPool.AllocateFromPool(),i;try{for(i=0;i<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression);i=i+1|0)argumentTypes.add(this.GetResultTypeOrError(System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression)));return this.GetOperatorInfo$1(kind,$arguments,argumentTypes,location)}finally{Kusto.Language.Binding.Binder.s_typeListPool.ReturnToPool(argumentTypes)}},GetOperatorInfo$1:function(kind,$arguments,argumentTypes,location){var matchingSignatures=Kusto.Language.Binding.Binder.s_signatureListPool.AllocateFromPool(),diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),op,sigResult,returnType;try{return op=this._globals.GetOperator(kind),this.GetBestMatchingSignatures(op.Signatures,$arguments,argumentTypes,matchingSignatures),matchingSignatures.Count===1?(this.CheckSignature(matchingSignatures.getItem(0),$arguments,argumentTypes,location,diagnostics),sigResult=this.GetSignatureResult(matchingSignatures.getItem(0),$arguments,argumentTypes),new Kusto.Language.Syntax.SemanticInfo.$ctor1(matchingSignatures.getItem(0).Symbol,sigResult.Type,diagnostics,this.AllAreConstant($arguments),void 0)):(Kusto.Language.Binding.Binder.ArgumentsHaveErrors(argumentTypes)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetOperatorNotDefined$1(location.ToString(Kusto.Language.Syntax.IncludeTrivia.Interior),argumentTypes).WithLocation(location)),returnType=this.GetCommonReturnType(matchingSignatures,$arguments,argumentTypes),new Kusto.Language.Syntax.SemanticInfo.$ctor1(matchingSignatures.getItem(0).Symbol,returnType,diagnostics))}finally{Kusto.Language.Binding.Binder.s_signatureListPool.ReturnToPool(matchingSignatures);Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},AllAreConstant:function(expressions){for(var i=0;i<System.Array.getCount(expressions,Kusto.Language.Syntax.Expression);i=i+1|0)if(!this.GetIsConstant(System.Array.getItem(expressions,i,Kusto.Language.Syntax.Expression)))return!1;return!0},GetArgumentsAndTypes:function(functionCall,$arguments,argumentTypes){for(var arg,expressions=functionCall.ArgumentList.Expressions,i=0,n=expressions.Count;i<n;i=i+1|0)arg=expressions.getItem$1(i).Element$1,$arguments.add(arg),argumentTypes.add(this.GetResultTypeOrError(arg));Kusto.Language.Binding.Binder.IsInvokeOperatorFunctionCall(functionCall)&&($arguments.insert(0,functionCall.Name),argumentTypes.insert(0,this._implicitArgumentType))},GetSignatureResult:function(signature,$arguments,argumentTypes){var iArg,clusterName,databaseName,tableName;switch(signature.ReturnKind){case Kusto.Language.Symbols.ReturnTypeKind.Declared:return Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(signature.DeclaredReturnType);case Kusto.Language.Symbols.ReturnTypeKind.Computed:return this.GetComputedSignatureResult(signature,$arguments,argumentTypes);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0:return iArg=signature.GetArgumentIndex(System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter),$arguments),Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(iArg>=0?System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Parameter1:return iArg=signature.GetArgumentIndex(System.Array.getItem(signature.Parameters,1,Kusto.Language.Symbols.Parameter),$arguments),Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(iArg>=0?System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Parameter2:return iArg=signature.GetArgumentIndex(System.Array.getItem(signature.Parameters,2,Kusto.Language.Symbols.Parameter),$arguments),Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(iArg>=0?System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.ParameterN:return iArg=signature.GetArgumentIndex(System.Array.getItem(signature.Parameters,System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)-1|0,Kusto.Language.Symbols.Parameter),$arguments),Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(iArg>=0?System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.ParameterNLiteral:return iArg=signature.GetArgumentIndex(System.Array.getItem(signature.Parameters,System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)-1|0,Kusto.Language.Symbols.Parameter),$arguments),Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(iArg>=0?this.GetTypeOfType(System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression)):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Promoted:return iArg=signature.GetArgumentIndex(System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter),$arguments),Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(iArg>=0?Kusto.Language.Binding.Binder.Promote(System.Array.getItem(argumentTypes,iArg,Kusto.Language.Symbols.TypeSymbol)):Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Common:return Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(Kusto.Language.Binding.Binder.GetCommonArgumentType(signature,$arguments,argumentTypes)||Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Widest:return Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(Kusto.Language.Binding.Binder.GetWidestArgumentType(signature,argumentTypes)||Kusto.Language.Symbols.ErrorSymbol.Instance);case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Cluster:return iArg=signature.GetArgumentIndex(System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter),$arguments),clusterName={},iArg>=0&&Kusto.Language.Binding.Binder.TryGetLiteralStringValue(System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression),clusterName)?Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(this.GetCluster(clusterName.v)):Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(new Kusto.Language.Symbols.ClusterSymbol.$ctor1("",null,!0));case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Database:return iArg=signature.GetArgumentIndex(System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter),$arguments),databaseName={},iArg>=0&&Kusto.Language.Binding.Binder.TryGetLiteralStringValue(System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression),databaseName)?Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(this.GetDatabase$1(databaseName.v)):Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(new Kusto.Language.Symbols.DatabaseSymbol.$ctor1("",null,!0));case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Table:return iArg=signature.GetArgumentIndex(System.Array.getItem(signature.Parameters,0,Kusto.Language.Symbols.Parameter),$arguments),tableName={},iArg>=0&&Kusto.Language.Binding.Binder.TryGetLiteralStringValue(System.Array.getItem($arguments,iArg,Kusto.Language.Syntax.Expression),tableName)?Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(this.GetTable$1(tableName.v)):Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(Kusto.Language.Symbols.TableSymbol.Empty.Open());case Kusto.Language.Symbols.ReturnTypeKind.Custom:return Kusto.Language.Binding.Binder.SignatureResult.op_Implicit(signature.CustomReturnType(this._rowScope||Kusto.Language.Symbols.TableSymbol.Empty,$arguments,signature)||Kusto.Language.Symbols.ErrorSymbol.Instance);default:throw new System.NotImplementedException.ctor;}},GetComputedSignatureResult:function(signature,$arguments,argumentTypes){var $t,expansion,returnType;return $arguments===void 0&&($arguments=null),argumentTypes===void 0&&(argumentTypes=null),System.Nullable.eq(signature.FunctionBodyFacts,Kusto.Language.Symbols.FunctionBodyFacts.None)?new Kusto.Language.Binding.Binder.SignatureResult.$ctor1(signature.NonVariableComputedReturnType,this.GetDeferredCallSiteExpansion(signature,$arguments,argumentTypes)):(expansion=this.GetCallSiteExpansion(signature,$arguments,argumentTypes),returnType=(expansion!=null&&($t=expansion.Expression)!=null?$t.ResultType:null)||Kusto.Language.Symbols.ErrorSymbol.Instance,new Kusto.Language.Binding.Binder.SignatureResult.$ctor1(returnType,function(){return expansion}))},GetDeferredCallSiteExpansion:function(signature,$arguments,argumentTypes){$arguments===void 0&&($arguments=null);argumentTypes===void 0&&(argumentTypes=null);var expansion=null,args=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Syntax.Expression,$arguments),types=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.TypeSymbol,argumentTypes);return Bridge.fn.bind(this,function(){return expansion==null&&(this._globalBindingCache,expansion=this.GetCallSiteExpansion(signature,args,types)),expansion})},GetCommonReturnType:function(signatures,$arguments,argumentTypes){var firstType,i,type;if(System.Array.getCount(signatures,Kusto.Language.Symbols.Signature)===0)return Kusto.Language.Symbols.ErrorSymbol.Instance;if(System.Array.getCount(signatures,Kusto.Language.Symbols.Signature)===1)return this.GetSignatureResult(System.Array.getItem(signatures,0,Kusto.Language.Symbols.Signature),$arguments,argumentTypes).Type;for(firstType=this.GetSignatureResult(System.Array.getItem(signatures,0,Kusto.Language.Symbols.Signature),$arguments,argumentTypes).Type,i=1;i<System.Array.getCount(signatures,Kusto.Language.Symbols.Signature);i=i+1|0)if(type=this.GetSignatureResult(System.Array.getItem(signatures,i,Kusto.Language.Symbols.Signature),$arguments,argumentTypes).Type,!Kusto.Language.Binding.Binder.SymbolsAssignable(type,firstType))return Kusto.Language.Symbols.ErrorSymbol.Instance;return firstType},GetBestMatchingSignatures:function(signatures,$arguments,argumentTypes,result){var $t,$t1,$t2,argCount=System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol),closestCount,maxCount,s,s1,mostMatchingParameterCount,s2,count,i,f,best,i1,i2;if(System.Array.getCount(signatures,Kusto.Language.Symbols.Signature)!==0){if(System.Array.getCount(signatures,Kusto.Language.Symbols.Signature)===1){result.add(System.Array.getItem(signatures,0,Kusto.Language.Symbols.Signature));return}if(System.Array.getCount(signatures,Kusto.Language.Symbols.Signature)>1){closestCount=0;maxCount=0;$t=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())s=$t.Current,argCount>=s.MinArgumentCount&&argCount<=s.MaxArgumentCount?result.add(s):argCount<s.MinArgumentCount&&closestCount>s.MinArgumentCount&&(closestCount=s.MinArgumentCount),s.MaxArgumentCount>maxCount&&(maxCount=s.MaxArgumentCount)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}if(result.Count===0){closestCount===0&&(closestCount=maxCount);$t1=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.Signature);try{while($t1.moveNext())s1=$t1.Current,closestCount>=s1.MinArgumentCount&&closestCount<=s1.MaxArgumentCount&&result.add(s1)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}if(result.Count>1){mostMatchingParameterCount=0;$t2=Bridge.getEnumerator(result);try{while($t2.moveNext())s2=$t2.Current,count=this.GetParameterMatchCount(s2,$arguments,argumentTypes),count>mostMatchingParameterCount&&(mostMatchingParameterCount=count)}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$Dispose()}for(i=result.Count-1|0;i>=0;i=i-1|0)f=result.getItem(i),this.GetParameterMatchCount(f,$arguments,argumentTypes)!==mostMatchingParameterCount&&result.removeAt(i);if(result.Count>1){for(best=result.getItem(0),i1=1;i1<result.Count;i1=i1+1|0)this.IsBetterSignatureMatch(result.getItem(i1),best,$arguments,argumentTypes)&&(best=result.getItem(i1));for(i2=0;i2<result.Count;i2=i2+1|0)if(!Bridge.referenceEquals(result.getItem(i2),best)&&!this.IsBetterSignatureMatch(best,result.getItem(i2),$arguments,argumentTypes))return;result.clear();result.add(best)}}}},IsBetterSignatureMatch:function(signature1,signature2,$arguments,argumentTypes){var argCount=System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol),matchCount1=this.GetParameterMatchCount(signature1,$arguments,argumentTypes),matchCount2=this.GetParameterMatchCount(signature2,$arguments,argumentTypes),better,i;if(matchCount1===argCount&&matchCount2<argCount)return!0;for(better=null,i=0;i<System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol);i=i+1|0)if(this.IsBetterParameterMatch(signature1,signature2,$arguments,argumentTypes,i)){if(Bridge.referenceEquals(better,signature2))break;better=signature1}else if(this.IsBetterParameterMatch(signature2,signature1,$arguments,argumentTypes,i)){if(Bridge.referenceEquals(better,signature1)){better=null;break}better=signature2}return Bridge.referenceEquals(better,signature1)?!0:matchCount1>matchCount2},IsBetterParameterMatch:function(signature1,signature2,$arguments,argumentTypes,argumentIndex){var matches1=this.GetParameterMatchKind$1(signature1,$arguments,argumentTypes,argumentIndex),matches2=this.GetParameterMatchKind$1(signature2,$arguments,argumentTypes,argumentIndex);return matches1>matches2},GetParameterMatchCount:function(signature,$arguments,argumentTypes){for(var argCount=System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol),matches=0,i=0;i<argCount;i=i+1|0)this.GetParameterMatchKind$1(signature,$arguments,argumentTypes,i)!==Kusto.Language.Binding.Binder.MatchKind.None&&(matches=matches+1|0);return matches},GetParameterMatchKind$1:function(signature,$arguments,argumentTypes,argumentIndex){var parameter=this.GetParameter(signature,$arguments,argumentIndex);return this.GetParameterMatchKind(signature,$arguments,argumentTypes,parameter,System.Array.getItem($arguments,argumentIndex,Kusto.Language.Syntax.Expression),System.Array.getItem(argumentTypes,argumentIndex,Kusto.Language.Symbols.TypeSymbol))},GetParameterMatchKind:function(signature,$arguments,argumentTypes,parameter,argument,resultType){var lit,value,p0,p1,p2,commonType;if(parameter==null)return Kusto.Language.Binding.Binder.MatchKind.None;if(parameter.DefaultValueIndicator!=null&&Bridge.referenceEquals(resultType,Kusto.Language.Symbols.ScalarTypes.String)&&(lit=Bridge.as(argument,Kusto.Language.Syntax.LiteralExpression))!=null&&(value=Bridge.as(lit.LiteralValue,System.String))!=null&&Bridge.referenceEquals(value,parameter.DefaultValueIndicator))return Kusto.Language.Binding.Binder.MatchKind.Exact;if(Bridge.is(argument,Kusto.Language.Syntax.StarExpression))return parameter.ArgumentKind===Kusto.Language.Symbols.ArgumentKind.Star?Kusto.Language.Binding.Binder.MatchKind.Exact:Kusto.Language.Binding.Binder.MatchKind.None;if(parameter.ArgumentKind===Kusto.Language.Symbols.ArgumentKind.Star)return Kusto.Language.Binding.Binder.MatchKind.None;switch(parameter.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Declared:if(Kusto.Language.Binding.Binder.SymbolsAssignable$1(parameter.DeclaredTypes,resultType,Kusto.Language.Binding.Conversion.None))return System.Array.getCount(parameter.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol)===1?Kusto.Language.Binding.Binder.MatchKind.Exact:Kusto.Language.Binding.Binder.MatchKind.OneOfTwo;if(Kusto.Language.Binding.Binder.SymbolsAssignable$1(parameter.DeclaredTypes,resultType,Kusto.Language.Binding.Conversion.Promotable))return Kusto.Language.Binding.Binder.MatchKind.Promoted;if(this.AllowLooseParameterMatching(signature)&&Kusto.Language.Binding.Binder.SymbolsAssignable$1(parameter.DeclaredTypes,resultType,Kusto.Language.Binding.Conversion.Compatible))return Kusto.Language.Binding.Binder.MatchKind.Compatible;break;case Kusto.Language.Symbols.ParameterTypeKind.Scalar:if(resultType.IsScalar)return Kusto.Language.Binding.Binder.MatchKind.Scalar;break;case Kusto.Language.Symbols.ParameterTypeKind.Integer:if(Kusto.Language.Binding.Binder.IsInteger(resultType))return Kusto.Language.Binding.Binder.MatchKind.OneOfTwo;break;case Kusto.Language.Symbols.ParameterTypeKind.RealOrDecimal:if(Kusto.Language.Binding.Binder.IsRealOrDecimal(resultType))return Kusto.Language.Binding.Binder.MatchKind.OneOfTwo;break;case Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic:if(Kusto.Language.Binding.Binder.IsStringOrDynamic(resultType))return Kusto.Language.Binding.Binder.MatchKind.OneOfTwo;break;case Kusto.Language.Symbols.ParameterTypeKind.IntegerOrDynamic:if(Kusto.Language.Binding.Binder.IsIntegerOrDynamic(resultType))return Kusto.Language.Binding.Binder.MatchKind.OneOfTwo;break;case Kusto.Language.Symbols.ParameterTypeKind.Number:if(Kusto.Language.Binding.Binder.IsNumber(resultType))return Kusto.Language.Binding.Binder.MatchKind.Number;break;case Kusto.Language.Symbols.ParameterTypeKind.Summable:if(Kusto.Language.Binding.Binder.IsSummable(resultType))return Kusto.Language.Binding.Binder.MatchKind.Summable;break;case Kusto.Language.Symbols.ParameterTypeKind.Tabular:case Kusto.Language.Symbols.ParameterTypeKind.SingleColumnTable:if(Kusto.Language.Binding.Binder.IsTabular(resultType))return Kusto.Language.Binding.Binder.MatchKind.Tabular;break;case Kusto.Language.Symbols.ParameterTypeKind.Database:if(Kusto.Language.Binding.Binder.IsDatabase(resultType))return Kusto.Language.Binding.Binder.MatchKind.Database;break;case Kusto.Language.Symbols.ParameterTypeKind.Cluster:if(Kusto.Language.Binding.Binder.IsCluster(resultType))return Kusto.Language.Binding.Binder.MatchKind.Cluster;break;case Kusto.Language.Symbols.ParameterTypeKind.NotBool:if(!Kusto.Language.Binding.Binder.SymbolsAssignable(resultType,Kusto.Language.Symbols.ScalarTypes.Bool))return Kusto.Language.Binding.Binder.MatchKind.NotType;break;case Kusto.Language.Symbols.ParameterTypeKind.NotRealOrBool:if(!Kusto.Language.Binding.Binder.SymbolsAssignable(resultType,Kusto.Language.Symbols.ScalarTypes.Real)&&!Kusto.Language.Binding.Binder.SymbolsAssignable(resultType,Kusto.Language.Symbols.ScalarTypes.Bool))return Kusto.Language.Binding.Binder.MatchKind.NotType;break;case Kusto.Language.Symbols.ParameterTypeKind.NotDynamic:if(!Kusto.Language.Binding.Binder.SymbolsAssignable(resultType,Kusto.Language.Symbols.ScalarTypes.Dynamic))return Kusto.Language.Binding.Binder.MatchKind.NotType;break;case Kusto.Language.Symbols.ParameterTypeKind.Parameter0:return p0=signature.GetParameter$1(0,System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)),this.GetParameterMatchKind(signature,$arguments,argumentTypes,p0,argument,resultType);case Kusto.Language.Symbols.ParameterTypeKind.Parameter1:return p1=signature.GetParameter$1(1,System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)),this.GetParameterMatchKind(signature,$arguments,argumentTypes,p1,argument,resultType);case Kusto.Language.Symbols.ParameterTypeKind.Parameter2:return p2=signature.GetParameter$1(2,System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)),this.GetParameterMatchKind(signature,$arguments,argumentTypes,p2,argument,resultType);case Kusto.Language.Symbols.ParameterTypeKind.CommonScalar:case Kusto.Language.Symbols.ParameterTypeKind.CommonNumber:case Kusto.Language.Symbols.ParameterTypeKind.CommonSummable:case Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic:if(commonType=Kusto.Language.Binding.Binder.GetCommonArgumentType(signature,$arguments,argumentTypes),commonType!=null){if(Kusto.Language.Binding.Binder.SymbolsAssignable(resultType,commonType,Kusto.Language.Binding.Conversion.None))return Kusto.Language.Binding.Binder.MatchKind.Exact;if(Kusto.Language.Binding.Binder.SymbolsAssignable(resultType,commonType,Kusto.Language.Binding.Conversion.Promotable))return Kusto.Language.Binding.Binder.MatchKind.Promoted;if(this.AllowLooseParameterMatching(signature)&&Kusto.Language.Binding.Binder.SymbolsAssignable(resultType,commonType,Kusto.Language.Binding.Conversion.Compatible))return Kusto.Language.Binding.Binder.MatchKind.Compatible;if(parameter.TypeKind===Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic&&Kusto.Language.Binding.Binder.SymbolsAssignable(resultType,Kusto.Language.Symbols.ScalarTypes.Dynamic))return Kusto.Language.Binding.Binder.MatchKind.Exact}}return Kusto.Language.Binding.Binder.MatchKind.None},GetParameter:function(signature,$arguments,argumentIndex){return this.NamedArgumentsAllowed(signature)?signature.GetParameter(System.Array.getItem($arguments,argumentIndex,Kusto.Language.Syntax.Expression),argumentIndex,System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)):signature.GetParameter$1(argumentIndex,System.Array.getCount($arguments,Kusto.Language.Syntax.Expression))},BindFunctionCallOrPattern:function(functionCall){var symbol=this.GetResultTypeOrError(functionCall.Name),fn,ps;return(fn=Bridge.as(symbol,Kusto.Language.Symbols.FunctionSymbol))!=null?this.BindFunctionCall(functionCall,fn):(ps=Bridge.as(symbol,Kusto.Language.Symbols.PatternSymbol))!=null?this.BindPattern(functionCall,ps):symbol.IsError?null:new Kusto.Language.Syntax.SemanticInfo.$ctor2(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetNameIsNotAFunction(functionCall.Name.SimpleName).WithLocation(functionCall.Name))},BindFunctionCall:function(functionCall,fn){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),$arguments=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool(),argumentTypes=Kusto.Language.Binding.Binder.s_typeListPool.AllocateFromPool(),matchingSignatures=Kusto.Language.Binding.Binder.s_signatureListPool.AllocateFromPool(),sigResult,types,returnType;try{return this.GetArgumentsAndTypes(functionCall,$arguments,argumentTypes),this.GetBestMatchingSignatures(fn.Signatures,$arguments,argumentTypes,matchingSignatures),matchingSignatures.Count===1?(this.CheckSignature(matchingSignatures.getItem(0),$arguments,argumentTypes,functionCall.Name,diagnostics),sigResult=this.GetSignatureResult(matchingSignatures.getItem(0),$arguments,argumentTypes),new Kusto.Language.Syntax.SemanticInfo.$ctor1(fn,sigResult.Type,diagnostics,fn.IsConstantFoldable&&this.AllAreConstant($arguments),sigResult.Expander)):(types=System.Linq.Enumerable.from($arguments).select(Bridge.fn.bind(this,function(e){return this.GetResultTypeOrError(e)})).toList(Kusto.Language.Symbols.TypeSymbol),$arguments.Count===0?diagnostics.add(Kusto.Language.DiagnosticFacts.GetFunctionExpectsArgumentCountRange(fn.Name,fn.MinArgumentCount,fn.MaxArgumentCount).WithLocation(functionCall.Name)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetFunctionNotDefinedWithMatchingParameters(functionCall.Name.SimpleName,types).WithLocation(functionCall.Name)),returnType=this.GetCommonReturnType(matchingSignatures,$arguments,argumentTypes),new Kusto.Language.Syntax.SemanticInfo.$ctor1(fn,returnType,diagnostics,fn.IsConstantFoldable&&this.AllAreConstant($arguments),void 0))}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool($arguments);Kusto.Language.Binding.Binder.s_typeListPool.ReturnToPool(argumentTypes);Kusto.Language.Binding.Binder.s_signatureListPool.ReturnToPool(matchingSignatures)}},BindPattern:function(functionCall,pattern){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),matchingPatterns=Kusto.Language.Binding.Binder.s_patternListPool.AllocateFromPool(),$arguments=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool(),i,n,argument,type,result;try{for(System.Array.getCount(pattern.Parameters,Kusto.Language.Symbols.Parameter)!==functionCall.ArgumentList.Expressions.Count&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetArgumentCountExpected(System.Array.getCount(pattern.Parameters,Kusto.Language.Symbols.Parameter))),i=0,n=System.Array.getCount(pattern.Parameters,Kusto.Language.Symbols.Parameter);i<n;i=i+1|0)argument=functionCall.ArgumentList.Expressions.getItem$1(i).Element$1,$arguments.add(argument),type=System.Array.getItem(System.Array.getItem(pattern.Parameters,i,Kusto.Language.Symbols.Parameter).DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol),this.CheckIsExactType(argument,type,diagnostics)&&this.CheckIsLiteral(argument,diagnostics);return diagnostics.Count>0?new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ErrorSymbol.Instance,diagnostics):(this.GetMatchingPatterns(pattern.Signatures,$arguments,matchingPatterns),matchingPatterns.Count===0)?(diagnostics.add(Kusto.Language.DiagnosticFacts.GetNoPatternMatchesArguments().WithLocation(functionCall.Name)),new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ErrorSymbol.Instance,diagnostics)):(result=this.GetReturnType$1(matchingPatterns),new Kusto.Language.Syntax.SemanticInfo.$ctor1(pattern,result,diagnostics))}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_patternListPool.ReturnToPool(matchingPatterns);Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool($arguments)}},GetMatchingPatterns:function(signatures,$arguments,matchingSignatures){var $t,sig;$t=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.PatternSignature);try{while($t.moveNext())sig=$t.Current,this.PatternMatches(sig,$arguments)&&matchingSignatures.add(sig)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},PatternMatches:function(signature,$arguments){var $t,$t1,i,matchValue,argValue;if(System.Array.getCount(signature.ArgumentValues,System.String)!==System.Array.getCount($arguments,Kusto.Language.Syntax.Expression))return!1;for(i=0;i<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression);i=i+1|0)if(matchValue=System.Array.getItem(signature.ArgumentValues,i,System.String),argValue=($t=($t1=System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression).LiteralValue)!=null?Bridge.toString($t1):null,$t!=null?$t:""),!Bridge.referenceEquals(matchValue,argValue))return!1;return!0},GetReturnType$1:function(signatures){var $t,paths=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool(),signature,type;try{$t=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.PatternSignature);try{while($t.moveNext()){if(signature=$t.Current,type=this.GetReturnType(signature),signature.PathValue==null)return type;paths.add(new Kusto.Language.Symbols.VariableSymbol(Bridge.toString(signature.PathValue),type))}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return new Kusto.Language.Symbols.DatabaseSymbol.$ctor1("",paths)}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(paths)}},GetReturnType:function(signature){if(signature.Declaration!=null){var expr=signature.Declaration.Body.Expression;return expr!=null?this.GetResultTypeOrError(expr):Kusto.Language.Symbols.VoidSymbol.Instance}return Kusto.Language.Symbols.ErrorSymbol.Instance},GetCallSiteExpansion:function(signature,$arguments,argumentTypes){var callSiteInfo,expansion,functionBodyGrammar,body;$arguments===void 0&&($arguments=null);argumentTypes===void 0&&(argumentTypes=null);var AddExpansionToCache=null,TryGetExpansionFromCache=null,IsDatabaseFunction=null;if(signature.ReturnKind!==Kusto.Language.Symbols.ReturnTypeKind.Computed||this._localBindingCache.SignaturesComputingExpansion.contains(signature))return null;this._localBindingCache.SignaturesComputingExpansion.add(signature);IsDatabaseFunction=function(sig){return sig.Declaration==null};TryGetExpansionFromCache=Bridge.fn.bind(this,function(callsite,expansion){return this._localBindingCache.CallSiteToExpansionMap.tryGetValue(callsite,expansion)||this._globalBindingCache.CallSiteToExpansionMap.tryGetValue(callsite,expansion)});AddExpansionToCache=Bridge.fn.bind(this,function(callsite,expansion){var shouldCacheGlobally=IsDatabaseFunction(callsite.Signature)&&System.Nullable.neq(callsite.Signature.FunctionBodyFacts,Kusto.Language.Symbols.FunctionBodyFacts.None);shouldCacheGlobally?this._globalBindingCache.CallSiteToExpansionMap.add(callsite,expansion):this._localBindingCache.CallSiteToExpansionMap.add(callsite,expansion)});try{if(callSiteInfo=this.GetCallSiteInfo(signature,$arguments,argumentTypes),expansion={},!TryGetExpansionFromCache(callSiteInfo,expansion)){try{if(functionBodyGrammar=Kusto.Language.Parsing.QueryGrammar.From(this._globals).FunctionBody,body=this.GetFunctionBody(signature),expansion.v=Kusto.Language.Parsing.SyntaxParsers.ParseFirst(Bridge.global.Kusto.Language.Syntax.FunctionBody,functionBodyGrammar,body,!1),expansion.v!=null){var isDatabaseFunction=IsDatabaseFunction(signature),currentDatabase=isDatabaseFunction?this._globals.GetDatabase(Bridge.cast(signature.Symbol,Kusto.Language.Symbols.FunctionSymbol)):null,currentCluster=isDatabaseFunction?this._globals.GetCluster(currentDatabase):null;Kusto.Language.Binding.Binder.BindExpansion(expansion.v,this,currentCluster,currentDatabase,signature.Declaration,callSiteInfo.Locals);this.SetSignatureBindingInfo(signature,expansion.v)}}catch($e1){$e1=System.Exception.create($e1)}AddExpansionToCache(callSiteInfo,expansion.v)}return expansion.v}finally{this._localBindingCache.SignaturesComputingExpansion.remove(signature)}},SetSignatureBindingInfo:function(signature,body){var $t,returnType;signature.FunctionBodyFacts==null&&(signature.FunctionBodyFacts=this.ComputeFunctionBodyFacts(signature,body));signature.HasVariableReturnType||(returnType=(($t=body.Expression)!=null?$t.ResultType:null)||Kusto.Language.Symbols.ErrorSymbol.Instance,signature.NonVariableComputedReturnType=returnType)},GetCallSiteInfo:function(signature,$arguments,argumentTypes){var locals=this.GetArgumentsAsLocals(signature,$arguments,argumentTypes);return new Kusto.Language.Binding.CallSiteInfo(signature,locals)},GetArgumentsAsLocals:function(signature,$arguments,argumentTypes){var $t,locals=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.VariableSymbol).ctor),p,argIndex;$t=Bridge.getEnumerator(signature.Parameters,Kusto.Language.Symbols.Parameter);try{while($t.moveNext())if(p=$t.Current,argIndex=$arguments!=null?signature.GetArgumentIndex(p,$arguments):-1,argIndex>=0){var arg=System.Array.getItem($arguments,argIndex,Kusto.Language.Syntax.Expression),argType=argumentTypes!=null?System.Array.getItem(argumentTypes,argIndex,Kusto.Language.Symbols.TypeSymbol):arg.ResultType,literalValue={},isLiteral=Kusto.Language.Binding.Binder.TryGetLiteralValue(arg,literalValue);locals.add(new Kusto.Language.Symbols.VariableSymbol(p.Name,argType,isLiteral,literalValue.v))}else{var type=Kusto.Language.Binding.Binder.GetRepresentativeType(p),isConstant=p.IsOptional&&p.DefaultValue!=null,constantValue={v:null};isConstant&&Kusto.Language.Binding.Binder.TryGetLiteralValue(p.DefaultValue,constantValue);locals.add(new Kusto.Language.Symbols.VariableSymbol(p.Name,type,isConstant,constantValue.v))}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.VariableSymbol,locals)},GetFunctionBody:function(signature){var body=signature.Body.trim();return System.String.startsWith(body,"{")||(body="{"+(body||"")),System.String.endsWith(body,"}")||(body=(body||"")+"\n}"),body},ComputeFunctionBodyFacts:function(signature,body){var $t,$t1,$t2,result=Kusto.Language.Symbols.FunctionBodyFacts.None,isTabular=Bridge.is(($t=body.Expression)!=null?$t.ResultType:null,Kusto.Language.Symbols.TableSymbol),fc,isLiteral,fce,facts;$t1=Bridge.getEnumerator(body.GetDescendants(Kusto.Language.Syntax.FunctionCallExpression,function(_fc){return Bridge.referenceEquals(_fc.ReferencedSymbol,Kusto.Language.Functions.Table)||Bridge.referenceEquals(_fc.ReferencedSymbol,Kusto.Language.Functions.Database)||Bridge.referenceEquals(_fc.ReferencedSymbol,Kusto.Language.Functions.Cluster)}),Kusto.Language.Syntax.FunctionCallExpression);try{while($t1.moveNext())fc=$t1.Current,Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Table)?result|=Kusto.Language.Symbols.FunctionBodyFacts.Table:Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Database)?result|=Kusto.Language.Symbols.FunctionBodyFacts.Database:Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Cluster)&&(result|=Kusto.Language.Symbols.FunctionBodyFacts.Cluster),isLiteral=fc.ArgumentList.Expressions.Count>0&&fc.ArgumentList.Expressions.getItem$1(0).Element$1.IsLiteral,!isLiteral&&isTabular&&(result|=Kusto.Language.Symbols.FunctionBodyFacts.VariableReturn)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}isTabular&&System.Linq.Enumerable.from(signature.Parameters).any(function(p){return p.IsTabular})&&(result|=Kusto.Language.Symbols.FunctionBodyFacts.VariableReturn);$t2=Bridge.getEnumerator(body.GetDescendants(Kusto.Language.Syntax.Expression,function(fc1){return Bridge.is(fc1.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol)}),Kusto.Language.Syntax.Expression);try{while($t2.moveNext())fce=$t2.Current,facts=this.GetFunctionBodyFacts(fce),result|=facts}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$Dispose()}return result},GetFunctionBodyFacts:function(expr){var $t,fs,signature,functionCall,$arguments,argumentTypes;if((fs=Bridge.as(expr.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null){if(signature=System.Array.getItem(fs.Signatures,0,Kusto.Language.Symbols.Signature),signature.FunctionBodyFacts==null)if(signature.ReturnKind===Kusto.Language.Symbols.ReturnTypeKind.Computed)if((functionCall=Bridge.as(expr,Kusto.Language.Syntax.FunctionCallExpression))!=null){$arguments=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool();argumentTypes=Kusto.Language.Binding.Binder.s_typeListPool.AllocateFromPool();try{this.GetArgumentsAndTypes(functionCall,$arguments,argumentTypes);this.GetComputedSignatureResult(signature,$arguments,argumentTypes)}finally{Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool($arguments);Kusto.Language.Binding.Binder.s_typeListPool.ReturnToPool(argumentTypes)}}else this.GetComputedSignatureResult(signature,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Syntax.Expression).Instance,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol).Instance);else signature.FunctionBodyFacts=Kusto.Language.Symbols.FunctionBodyFacts.None;return $t=signature.FunctionBodyFacts,$t!=null?$t:Kusto.Language.Symbols.FunctionBodyFacts.None}return Kusto.Language.Symbols.FunctionBodyFacts.None},AddLetDeclarationToScope:function(scope,statement,diagnostics){diagnostics===void 0&&(diagnostics=null);scope.AddDeclaration(this.GetReferencedSymbol(statement.Name))},AddDeclarationsToLocalScope:function(scope,declarations){for(var d,i=0,n=declarations.Count;i<n;i=i+1|0)d=declarations.getItem$1(i).Element$1,this.AddDeclarationToLocalScope(scope,d.NameAndType)},AddDeclarationsToLocalScope$1:function(scope,declarations){for(var d,i=0,n=declarations.Count;i<n;i=i+1|0)d=declarations.getItem$1(i).Element$1,this.AddDeclarationToLocalScope(scope,d)},AddDeclarationToLocalScope:function(scope,declaration,diagnostics){diagnostics===void 0&&(diagnostics=null);var symbol=this.GetReferencedSymbol(declaration.Name);symbol!=null&&scope.AddDeclaration(symbol)},BindParameterDeclarations:function(parameters){for(var p,i=0;i<parameters.Count;i=i+1|0)p=parameters.getItem$1(i).Element$1,this.BindParameterDeclaration(p)},BindParameterDeclarations$1:function(parameters){for(var p,i=0;i<parameters.Count;i=i+1|0)p=parameters.getItem$1(i).Element$1,this.BindParameterDeclaration$1(p)},BindParameterDeclaration:function(node){this.BindParameterDeclaration$1(node.NameAndType)},BindParameterDeclaration$1:function(node){var name=node.Name.SimpleName,type=this.GetTypeFromTypeExpression(node.Type),symbol;System.String.isNullOrEmpty(name)||(symbol=new Kusto.Language.Symbols.ParameterSymbol(name,type),this.SetSemanticInfo(node.Name,new Kusto.Language.Syntax.SemanticInfo.$ctor1(symbol,type)))},AddTableColumns:function(symbol,columns){var $t,t,g,s;do{if(Bridge.is(symbol,Kusto.Language.Symbols.TableSymbol)){t=Bridge.cast(symbol,Kusto.Language.Symbols.TableSymbol);this.GetDeclaredAndInferredColumns$1(t,columns);break}if(Bridge.is(symbol,Kusto.Language.Symbols.GroupSymbol)){g=Bridge.cast(symbol,Kusto.Language.Symbols.GroupSymbol);$t=Bridge.getEnumerator(g.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())s=$t.Current,this.AddTableColumns(s,columns)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}break}}while(0)},AddTables:function(symbol,tables){var $t,t,g,m;do{if(Bridge.is(symbol,Kusto.Language.Symbols.TableSymbol)){t=Bridge.cast(symbol,Kusto.Language.Symbols.TableSymbol);tables.add(t);break}if(Bridge.is(symbol,Kusto.Language.Symbols.GroupSymbol)){g=Bridge.cast(symbol,Kusto.Language.Symbols.GroupSymbol);$t=Bridge.getEnumerator(g.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())m=$t.Current,this.AddTables(m,tables)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}break}}while(0)},GetFindColumnsTable:function(node){var tables=this.GetFindTables(node);return this.GetTableOfColumnsUnifiedByName(tables)},GetFindColumns:function(node,columns){var tables=this.GetFindTables(node),unifiedColumnsTable=this.GetTableOfColumnsUnifiedByName(tables);columns.AddRange(unifiedColumnsTable.Columns)},GetFindTables:function(node){return node.InClause!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.TableSymbol,System.Linq.Enumerable.from(node.InClause.Expressions).select(Bridge.fn.bind(this,function(e){return this.GetResultTypeOrError(e.Element$1)})).ofType(Kusto.Language.Symbols.TableSymbol)):this._currentDatabase.Tables},GetSearchColumnsTable:function(node){if(this._rowScope!=null&&node.InClause==null)return this._rowScope;var tables=Kusto.Language.Binding.Binder.s_tableListPool.AllocateFromPool();try{return this._rowScope!=null&&tables.add(this._rowScope),node.InClause!=null&&tables.AddRange(System.Linq.Enumerable.from(node.InClause.Expressions).select(Bridge.fn.bind(this,function(e){return this.GetResultTypeOrError(e.Element$1)})).ofType(Kusto.Language.Symbols.TableSymbol)),this._rowScope==null&&node.InClause==null&&tables.AddRange(this._currentDatabase.Tables),this.GetTableOfColumnsUnifiedByNameAndType(tables)}finally{Kusto.Language.Binding.Binder.s_tableListPool.ReturnToPool(tables)}},GetColumnsInColumnList:function(expressions,columns,diagnostics){var $t,elem;$t=Bridge.getEnumerator(expressions,"GetEnumerator$1");try{while($t.moveNext())elem=$t.Current,this.GetReferencedColumn(elem.Element$1,columns,diagnostics)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetReferencedColumn:function(expression,columns,diagnostics){var c;(c=Bridge.as(this.GetReferencedSymbol(expression),Kusto.Language.Symbols.ColumnSymbol))!=null?columns.add(c):diagnostics.add(Kusto.Language.DiagnosticFacts.GetColumnExpected().WithLocation(expression))},GetReferencedColumnsInTree:function(node,columns){var nr,c,i,child,sn;for((nr=Bridge.as(node,Kusto.Language.Syntax.NameReference))!=null&&(c=Bridge.as(this.GetReferencedSymbol(nr),Kusto.Language.Symbols.ColumnSymbol))!=null&&(columns.contains(c)||columns.add(c)),i=0;i<node.ChildCount;i=i+1|0)child=node.GetChild(i),(sn=Bridge.as(child,Kusto.Language.Syntax.SyntaxNode))!=null&&this.GetReferencedColumnsInTree(sn,columns)},CreateProjectionColumns$1:function(expressions,builder,diagnostics,isRename,isReplace,isReorder,isExtend,aggregates,doNotRepeat){var $t,elem;isRename===void 0&&(isRename=!1);isReplace===void 0&&(isReplace=!1);isReorder===void 0&&(isReorder=!1);isExtend===void 0&&(isExtend=!1);aggregates===void 0&&(aggregates=!1);doNotRepeat===void 0&&(doNotRepeat=!1);$t=Bridge.getEnumerator(expressions,"GetEnumerator$1");try{while($t.moveNext())elem=$t.Current,this.CreateProjectionColumns(elem.Element$1,builder,diagnostics,isRename,isReplace,isReorder,isExtend,aggregates,doNotRepeat,void 0)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},CreateProjectionColumns:function(expression,builder,diagnostics,isRename,isReplace,isReorder,isExtend,aggregates,doNotRepeat,columnType){var $t,$t1,$t2,$t3,$t4,$t5,$t6,col,type,oe,n,cs,n1,tu,i,fs1,c,c1,tupleType,i1,nameDecl,name,fs11,i2,nameDecl1,f,ts,fs,c2,name1,s,c3,rs,column,group,m,c4,g,name2;if(isRename===void 0&&(isRename=!1),isReplace===void 0&&(isReplace=!1),isReorder===void 0&&(isReorder=!1),isExtend===void 0&&(isExtend=!1),aggregates===void 0&&(aggregates=!1),doNotRepeat===void 0&&(doNotRepeat=!1),columnType===void 0&&(columnType=null),(oe=Bridge.as(expression,Kusto.Language.Syntax.OrderedExpression))!=null&&(expression=oe.Expression),isRename){do{if(Bridge.is(expression,Kusto.Language.Syntax.SimpleNamedExpression)){n=Bridge.cast(expression,Kusto.Language.Syntax.SimpleNamedExpression);(cs=Bridge.as(this.GetReferencedSymbol(n.Expression),Kusto.Language.Symbols.ColumnSymbol))!=null?(col=builder.Rename(cs.Name,n.Name.SimpleName,diagnostics,n.Name),col!=null&&this.SetSemanticInfo(n.Name,Kusto.Language.Binding.Binder.CreateSemanticInfo(col))):diagnostics.add(Kusto.Language.DiagnosticFacts.GetColumnExpected().WithLocation(n.Expression));break}diagnostics.add(Kusto.Language.DiagnosticFacts.GetRenameAssignmentExpected().WithLocation(expression));break}while(0)}else do{if(Bridge.is(expression,Kusto.Language.Syntax.SimpleNamedExpression)){if(n1=Bridge.cast(expression,Kusto.Language.Syntax.SimpleNamedExpression),(tu=Bridge.as(this.GetResultType(n1.Expression),Kusto.Language.Symbols.TupleSymbol))!=null)for(col=new Kusto.Language.Symbols.ColumnSymbol(n1.Name.SimpleName,columnType||System.Array.getItem(tu.Columns,0,Kusto.Language.Symbols.ColumnSymbol).Type),builder.Declare(col,diagnostics,n1.Name,!0),this.SetSemanticInfo(n1.Name,Kusto.Language.Binding.Binder.CreateSemanticInfo(col)),doNotRepeat&&builder.DoNotAdd(System.Array.getItem(tu.Columns,0,Kusto.Language.Symbols.ColumnSymbol)),i=1;i<System.Array.getCount(tu.Members,Kusto.Language.Symbols.Symbol);i=i+1|0)(fs1=Bridge.as(this.GetReferencedSymbol(n1.Expression),Kusto.Language.Symbols.FunctionSymbol))!=null?this.AddFunctionTupleResultColumn(fs1,System.Array.getItem(tu.Columns,i,Kusto.Language.Symbols.ColumnSymbol),builder,doNotRepeat,aggregates):builder.Add(System.Array.getItem(tu.Columns,i,Kusto.Language.Symbols.ColumnSymbol),void 0,!1,doNotRepeat);else(c=Bridge.as(n1.Expression.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null?(col=new Kusto.Language.Symbols.ColumnSymbol(n1.Name.SimpleName,columnType||c.Type),builder.Declare(col,diagnostics,n1.Name,!0),this.SetSemanticInfo(n1.Name,Kusto.Language.Binding.Binder.CreateSemanticInfo(col)),doNotRepeat&&builder.DoNotAdd(c)):(col=new Kusto.Language.Symbols.ColumnSymbol(n1.Name.SimpleName,columnType||this.GetResultTypeOrError(n1.Expression)),builder.Declare(col,diagnostics,n1.Name,isExtend),this.SetSemanticInfo(n1.Name,Kusto.Language.Binding.Binder.CreateSemanticInfo(col)));break}if(Bridge.is(expression,Kusto.Language.Syntax.CompoundNamedExpression)){if(c1=Bridge.cast(expression,Kusto.Language.Syntax.CompoundNamedExpression),(tupleType=Bridge.as(this.GetResultTypeOrError(c1.Expression),Kusto.Language.Symbols.TupleSymbol))!=null){for(i1=0;i1<System.Array.getCount(tupleType.Columns,Kusto.Language.Symbols.ColumnSymbol);i1=i1+1|0)col=System.Array.getItem(tupleType.Columns,i1,Kusto.Language.Symbols.ColumnSymbol),type=columnType||col.Type,i1<c1.Names.Names.Count?(nameDecl=c1.Names.Names.getItem$1(i1).Element$1,name=nameDecl.SimpleName,col=new Kusto.Language.Symbols.ColumnSymbol(name,type),builder.Declare(col,diagnostics,nameDecl,isExtend),this.SetSemanticInfo(nameDecl,Kusto.Language.Binding.Binder.CreateSemanticInfo(col)),doNotRepeat&&builder.DoNotAdd(System.Array.getItem(tupleType.Columns,i1,Kusto.Language.Symbols.ColumnSymbol))):(fs11=Bridge.as(this.GetReferencedSymbol(c1.Expression),Kusto.Language.Symbols.FunctionSymbol))!=null?this.AddFunctionTupleResultColumn(fs11,col,builder,doNotRepeat,aggregates):builder.Add(col,void 0,!1,doNotRepeat);for(i2=System.Array.getCount(tupleType.Members,Kusto.Language.Symbols.Symbol);i2<c1.Names.Names.Count;i2=i2+1|0)nameDecl1=c1.Names.Names.getItem$1(i2),diagnostics.add(Kusto.Language.DiagnosticFacts.GetTheNameDoesNotHaveCorrespondingExpression().WithLocation(nameDecl1))}else diagnostics.add(Kusto.Language.DiagnosticFacts.GetTheExpressionDoesNotHaveMultipleValues().WithLocation(c1.Names));break}if(Bridge.is(expression,Kusto.Language.Syntax.FunctionCallExpression)){if(f=Bridge.cast(expression,Kusto.Language.Syntax.FunctionCallExpression),(ts=Bridge.as(this.GetResultType(f),Kusto.Language.Symbols.TupleSymbol))!=null&&(fs=Bridge.as(this.GetReferencedSymbol(f),Kusto.Language.Symbols.FunctionSymbol))!=null){$t=Bridge.getEnumerator(ts.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())c2=Bridge.cast($t.Current,Kusto.Language.Symbols.ColumnSymbol),this.AddFunctionTupleResultColumn(fs,c2,builder,doNotRepeat,aggregates)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}else name1=Kusto.Language.Binding.Binder.GetFunctionResultName(f,null,this._rowScope),col=new Kusto.Language.Symbols.ColumnSymbol(($t1=name1,$t1!=null?$t1:"Column1"),columnType||this.GetResultTypeOrError(f)),builder.Add(col,($t2=name1,$t2!=null?$t2:"Column"));break}if(Bridge.is(expression,Kusto.Language.Syntax.StarExpression)){s=Bridge.cast(expression,Kusto.Language.Syntax.StarExpression);$t3=Bridge.getEnumerator(this.GetDeclaredAndInferredColumns(this._rowScope),Kusto.Language.Symbols.ColumnSymbol);try{while($t3.moveNext())c3=$t3.Current,builder.Add(c3,void 0,!0,doNotRepeat)}finally{Bridge.is($t3,System.IDisposable)&&$t3.System$IDisposable$Dispose()}break}if(rs=this.GetReferencedSymbol(expression),(column=Bridge.as(rs,Kusto.Language.Symbols.ColumnSymbol))!=null)builder.Declare(column.WithType(columnType||column.Type),diagnostics,expression,isReplace),doNotRepeat&&builder.DoNotAdd(column);else if((group=Bridge.as(rs,Kusto.Language.Symbols.GroupSymbol))!=null&&isReorder){$t4=Bridge.getEnumerator(group.Members,Kusto.Language.Symbols.Symbol);try{while($t4.moveNext())m=$t4.Current,(c4=Bridge.as(m,Kusto.Language.Symbols.ColumnSymbol))!=null&&builder.Add(c4,void 0,!1,!0)}finally{Bridge.is($t4,System.IDisposable)&&$t4.System$IDisposable$Dispose()}}else(g=Bridge.as(this.GetResultType(expression),Kusto.Language.Symbols.GroupSymbol))!=null?diagnostics.add(Kusto.Language.DiagnosticFacts.GetTheExpressionRefersToMoreThanOneColumn().WithLocation(expression)):(type=this.GetResultTypeOrError(expression),type.IsError||type.IsScalar?(name2=Kusto.Language.Binding.Binder.GetExpressionResultName(expression,null),col=new Kusto.Language.Symbols.ColumnSymbol(($t5=name2,$t5!=null?$t5:"Column1"),columnType||this.GetResultTypeOrError(expression)),builder.Add(col,($t6=name2,$t6!=null?$t6:"Column"))):diagnostics.add(Kusto.Language.DiagnosticFacts.GetScalarTypeExpected().WithLocation(expression)));break}while(0)},AddFunctionTupleResultColumn:function($function,column,builder,doNotRepeat){if(builder.CanAdd(column)){var prefix=$function.ResultNamePrefix;prefix!=null?builder.Add(column.WithName(($function.ResultNamePrefix||"")+"_"+(column.Name||"")),void 0,!1,doNotRepeat):builder.Add(column,void 0,!1,doNotRepeat)}},GetTypeFromTypeExpression:function(typeExpression,diagnostics){var p,s,columns,i,n,expr;diagnostics===void 0&&(diagnostics=null);do{if(Bridge.is(typeExpression,Kusto.Language.Syntax.PrimitiveTypeExpression))return p=Bridge.cast(typeExpression,Kusto.Language.Syntax.PrimitiveTypeExpression),Kusto.Language.Binding.Binder.GetType(p,diagnostics);if(Bridge.is(typeExpression,Kusto.Language.Syntax.SchemaTypeExpression)){if(s=Bridge.cast(typeExpression,Kusto.Language.Syntax.SchemaTypeExpression),s.Columns.Count===1&&Bridge.is(s.Columns.getItem$1(0).Element$1,Kusto.Language.Syntax.StarExpression))return Kusto.Language.Symbols.TableSymbol.Empty;columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool();try{for(i=0,n=s.Columns.Count;i<n;i=i+1|0)if(expr=s.Columns.getItem$1(i).Element$1,!expr.IsMissing)do{if(Bridge.is(expr,Kusto.Language.Syntax.NameAndTypeDeclaration)){var nat=Bridge.cast(expr,Kusto.Language.Syntax.NameAndTypeDeclaration),declaredType=this.GetTypeFromTypeExpression(nat.Type,diagnostics),newColumn=new Kusto.Language.Symbols.ColumnSymbol(nat.Name.SimpleName,declaredType);columns.add(newColumn);this.SetSemanticInfo(nat.Name,Kusto.Language.Binding.Binder.GetSemanticInfo(newColumn));break}diagnostics!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidColumnDeclaration().WithLocation(expr));break}while(0);return new Kusto.Language.Symbols.TableSymbol.$ctor2(columns)}finally{Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}}return diagnostics!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidTypeExpression().WithLocation(typeExpression)),Kusto.Language.Symbols.ErrorSymbol.Instance}while(0)},GetTypeOfType:function(typeofLiteral){return Bridge.as(this.GetReferencedSymbol(typeofLiteral),Kusto.Language.Symbols.TypeSymbol)||Kusto.Language.Symbols.ErrorSymbol.Instance},IsTabular:function(expr){return Kusto.Language.Binding.Binder.IsTabular(this.GetResultTypeOrError(expr))},IsColumn:function(expr){return Bridge.is(this.GetReferencedSymbol(expr),Kusto.Language.Symbols.ColumnSymbol)},CheckQueryParameters:function(parameters,queryParameters,diagnostics){var names=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool(),i,n;try{for(i=0,n=parameters.Count;i<n;i=i+1|0)this.CheckQueryParameter$1(parameters.getItem$1(i),queryParameters,names,diagnostics)}finally{Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(names)}},CheckQueryParameters$1:function(parameters,queryParameters,diagnostics){var names=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool(),i,n;try{for(i=0,n=parameters.Count;i<n;i=i+1|0)this.CheckQueryParameter$1(parameters.getItem$1(i).Element$1,queryParameters,names,diagnostics)}finally{Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(names)}},CheckQueryParameter$1:function(parameter,queryParameters,namesAlreadySpecified,diagnostics){var $t,name=parameter.Name.SimpleName,info,n;if(!System.String.isNullOrEmpty(name))if(info=Kusto.Language.Binding.Binder.GetQueryParameterInfo(name,queryParameters),info!=null){$t=Bridge.getEnumerator(info.Names,System.String);try{while($t.moveNext())if(n=$t.Current,!info.IsRepeatable)if(namesAlreadySpecified.contains(n)){diagnostics.add(Kusto.Language.DiagnosticFacts.GetParameterAlreadySpecified(name).WithLocation(parameter.Name));break}else namesAlreadySpecified.add(n)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}this.CheckQueryParameter(parameter,info,diagnostics)}else diagnostics.add(Kusto.Language.DiagnosticFacts.GetUnknownParameterName(name).WithLocation(parameter.Name))},CheckQueryParameter:function(parameter,info,diagnostics){if(!this.IsAnyQueryParameterKind(parameter,info)){var valueInfo=System.Array.getItem(info.ValueInfos,0,Kusto.Language.Binding.Binder.QueryParameterValueInfo);switch(valueInfo.Kind){case Kusto.Language.Binding.Binder.QueryParameterKind.Fixed:this.CheckIsType(parameter.Expression,valueInfo.FixedType,Kusto.Language.Binding.Conversion.Compatible,diagnostics);break;case Kusto.Language.Binding.Binder.QueryParameterKind.Integer:this.CheckIsInteger(parameter.Expression,diagnostics);break;case Kusto.Language.Binding.Binder.QueryParameterKind.Number:this.CheckIsNumber(parameter.Expression,diagnostics);break;case Kusto.Language.Binding.Binder.QueryParameterKind.RealOrDecimal:this.CheckIsRealOrDecimal(parameter.Expression,diagnostics);break;case Kusto.Language.Binding.Binder.QueryParameterKind.Scalar:this.CheckIsScalar(parameter.Expression,diagnostics);break;case Kusto.Language.Binding.Binder.QueryParameterKind.StringOrDynamic:this.CheckIsStringOrDynamic(parameter.Expression,diagnostics);break;case Kusto.Language.Binding.Binder.QueryParameterKind.Summable:this.CheckIsSummable(parameter.Expression,diagnostics);break;case Kusto.Language.Binding.Binder.QueryParameterKind.StringLiteral:this.CheckIsLiteral(parameter.Expression,diagnostics);this.CheckIsExactType(parameter.Expression,Kusto.Language.Symbols.ScalarTypes.String,diagnostics);break;case Kusto.Language.Binding.Binder.QueryParameterKind.BoolLiteral:this.CheckIsLiteral(parameter.Expression,diagnostics);this.CheckIsExactType(parameter.Expression,Kusto.Language.Symbols.ScalarTypes.Bool,diagnostics);break;case Kusto.Language.Binding.Binder.QueryParameterKind.Column:this.CheckIsColumn(parameter.Expression,diagnostics);break;case Kusto.Language.Binding.Binder.QueryParameterKind.Identifier:this.CheckIsTokenLiteral(parameter.Expression,valueInfo.Values,valueInfo.CaseSensitive,diagnostics)}valueInfo.Kind!==Kusto.Language.Binding.Binder.QueryParameterKind.Identifier&&valueInfo.Values!=null&&System.Array.getCount(valueInfo.Values,System.Object)>0&&(this.CheckIsLiteral(parameter.Expression,diagnostics),this.CheckLiteralValue(parameter.Expression,valueInfo.Values,valueInfo.CaseSensitive,diagnostics))}},IsAnyQueryParameterKind:function(parameter,info){var $t,type=this.GetResultTypeOrError(parameter.Expression),valueInfo;$t=Bridge.getEnumerator(info.ValueInfos,Kusto.Language.Binding.Binder.QueryParameterValueInfo);try{while($t.moveNext())if(valueInfo=$t.Current,this.IsQueryParameterKind(parameter,valueInfo))return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!1},IsQueryParameterKind:function(parameter,valueInfo){var type=this.GetResultTypeOrError(parameter.Expression);switch(valueInfo.Kind){case Kusto.Language.Binding.Binder.QueryParameterKind.Fixed:if(!this.IsType(parameter.Expression,valueInfo.FixedType,Kusto.Language.Binding.Conversion.Compatible))return!1;break;case Kusto.Language.Binding.Binder.QueryParameterKind.Integer:if(!Kusto.Language.Binding.Binder.IsInteger(type))return!1;break;case Kusto.Language.Binding.Binder.QueryParameterKind.Number:if(!Kusto.Language.Binding.Binder.IsNumber(type))return!1;break;case Kusto.Language.Binding.Binder.QueryParameterKind.RealOrDecimal:if(!Kusto.Language.Binding.Binder.IsRealOrDecimal(type))return!1;break;case Kusto.Language.Binding.Binder.QueryParameterKind.Scalar:if(!type.IsScalar)return!1;break;case Kusto.Language.Binding.Binder.QueryParameterKind.StringOrDynamic:if(!Kusto.Language.Binding.Binder.IsStringOrDynamic(type))return!1;break;case Kusto.Language.Binding.Binder.QueryParameterKind.Summable:if(!Kusto.Language.Binding.Binder.IsSummable(type))return!1;break;case Kusto.Language.Binding.Binder.QueryParameterKind.StringLiteral:if(!(parameter.Expression.IsLiteral&&this.IsType(parameter.Expression,Kusto.Language.Symbols.ScalarTypes.String)))return!1;break;case Kusto.Language.Binding.Binder.QueryParameterKind.BoolLiteral:if(!(parameter.Expression.IsLiteral&&this.IsType(parameter.Expression,Kusto.Language.Symbols.ScalarTypes.Bool)))return!1;break;case Kusto.Language.Binding.Binder.QueryParameterKind.Column:if(!Bridge.is(this.GetReferencedSymbol(parameter.Expression),Kusto.Language.Symbols.ColumnSymbol))return!1;break;case Kusto.Language.Binding.Binder.QueryParameterKind.Identifier:if(!this.IsTokenLiteral(parameter.Expression,valueInfo.Values,valueInfo.CaseSensitive))return!1}return valueInfo.Kind!==Kusto.Language.Binding.Binder.QueryParameterKind.Identifier&&valueInfo.Values!=null&&System.Array.getCount(valueInfo.Values,System.Object)>0&&(!parameter.Expression.IsLiteral||!this.IsLiteralValue(parameter.Expression,valueInfo.Values,valueInfo.CaseSensitive))?!1:!0},CheckDataValueTypes:function(expressions,columns,diagnostics){var i,n,expr;for(expressions.Count%columns.Count!=0&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetIncorrectNumberOfDataValues(columns.Count).WithLocation(expressions)),i=0,n=expressions.Count;i<n;i=i+1|0)expr=expressions.getItem$1(i).Element$1,this.CheckIsScalar(expr,diagnostics)},CheckIsScalar:function(expression,diagnostics,resultType){if(resultType===void 0&&(resultType=null),resultType==null&&(resultType=this.GetResultType(expression)),resultType!=null){if(resultType.IsScalar)return!0;resultType.IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetScalarTypeExpected().WithLocation(expression))}return!1},CheckIsInteger:function(expression,diagnostics){return Kusto.Language.Binding.Binder.IsInteger(this.GetResultTypeOrError(expression))?!0:(this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeInteger().WithLocation(expression)),!1)},CheckIsRealOrDecimal:function(expression,diagnostics){return Kusto.Language.Binding.Binder.IsRealOrDecimal(this.GetResultTypeOrError(expression))?!0:(this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeRealOrDecimal().WithLocation(expression)),!1)},CheckIsIntegerOrDynamic:function(expression,diagnostics){return Kusto.Language.Binding.Binder.IsIntegerOrDynamic(this.GetResultTypeOrError(expression))?!0:(this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeIntegerOrDynamic().WithLocation(expression)),!1)},CheckIsStringOrDynamic:function(expression,diagnostics){return Kusto.Language.Binding.Binder.IsStringOrDynamic(this.GetResultTypeOrError(expression))?!0:(this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType([Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ScalarTypes.Dynamic]).WithLocation(expression)),!1)},CheckIsNumber:function(expression,diagnostics){return Kusto.Language.Binding.Binder.IsNumber(this.GetResultTypeOrError(expression))?!0:(this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeNumeric().WithLocation(expression)),!1)},CheckIsSummable:function(expression,diagnostics){return Kusto.Language.Binding.Binder.IsSummable(this.GetResultTypeOrError(expression))?!0:(this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeSummable().WithLocation(expression)),!1)},CheckIsExactType:function(expression,type,diagnostics){return this.CheckIsType(expression,type,Kusto.Language.Binding.Conversion.None,diagnostics)},CheckIsTypeOrDynamic:function(expression,type,canPromote,diagnostics){var resultType=this.GetResultTypeOrError(expression);return Kusto.Language.Binding.Binder.SymbolsAssignable(resultType,type)||canPromote&&Kusto.Language.Binding.Binder.IsPromotable(resultType,type)||Kusto.Language.Binding.Binder.SymbolsAssignable(resultType,Kusto.Language.Symbols.ScalarTypes.Dynamic)?!0:(resultType.IsError||(Kusto.Language.Binding.Binder.SymbolsAssignable(type,Kusto.Language.Symbols.ScalarTypes.Dynamic)?diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType([type]).WithLocation(expression)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType([type,Kusto.Language.Symbols.ScalarTypes.Dynamic]).WithLocation(expression))),!1)},IsType:function(expression,type,conversionKind){conversionKind===void 0&&(conversionKind=0);var resultType=this.GetResultTypeOrError(expression);return Kusto.Language.Binding.Binder.SymbolsAssignable(resultType,type,conversionKind)},CheckIsType:function(expression,type,conversionKind,diagnostics){return this.IsType(expression,type,conversionKind)?!0:(this.GetResultTypeOrError(expression).IsError||type.IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType([type]).WithLocation(expression)),!1)},CheckIsNotType:function(expression,type,diagnostics){return Kusto.Language.Binding.Binder.SymbolsAssignable(this.GetResultTypeOrError(expression),type)?(this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetTypeNotAllowed(type).WithLocation(expression)),!1):!0},CheckIsIntervalType:function(expression,rangeType,diagnostics){var info=this.GetBinaryOperatorInfo(Kusto.Language.Symbols.OperatorKind.Add,expression,rangeType,expression,this.GetResultTypeOrError(expression),expression);return info.ReferencedSymbol!=null&&Kusto.Language.Binding.Binder.SymbolsAssignable(rangeType,info.ResultType)?!0:(rangeType.IsError||this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetTypeIsNotIntervalType(this.GetResultTypeOrError(expression),rangeType).WithLocation(expression)),!1)},IsLiteralOrName:function(expression){return Bridge.is(expression,Kusto.Language.Syntax.LiteralExpression)||Bridge.is(expression,Kusto.Language.Syntax.CompoundStringLiteralExpression)||expression.Kind===Kusto.Language.Syntax.SyntaxKind.DynamicExpression||expression.Kind===Kusto.Language.Syntax.SyntaxKind.NameReference},CheckIsIdentifierNameDeclaration:function(name,diagnostics){return Bridge.is(name.Name,Kusto.Language.Syntax.TokenName)?!0:(diagnostics.add(Kusto.Language.DiagnosticFacts.GetIdentifierNameOnly().WithLocation(name)),!1)},CheckIsLiteralOrName:function(expression,diagnostics){return this.IsLiteralOrName(expression)?!0:(this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeConstantOrIdentifier().WithLocation(expression)),!1)},CheckIsTabular:function(expression,diagnostics,resultType){if(resultType===void 0&&(resultType=null),resultType=resultType||this.GetResultType(expression),resultType!=null){if(resultType.IsTabular)return!0;resultType.IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetTableExpected().WithLocation(expression))}return!1},CheckIsSingleColumnTable:function(expression,diagnostics,resultType){if(resultType===void 0&&(resultType=null),resultType=resultType||this.GetResultType(expression),resultType!=null){var table=Bridge.as(resultType,Kusto.Language.Symbols.TableSymbol);if(table!=null&&System.Array.getCount(table.Columns,Kusto.Language.Symbols.ColumnSymbol)===1)return!0;resultType.IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetSingleColumnTableExpected().WithLocation(expression))}return!1},CheckIsDatabase:function(expression,diagnostics){return Kusto.Language.Binding.Binder.IsDatabase(this.GetResultTypeOrError(expression))?!0:(this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetDatabaseExpected().WithLocation(expression)),!1)},CheckIsCluster:function(expression,diagnostics){return Kusto.Language.Binding.Binder.IsCluster(this.GetResultTypeOrError(expression))?!0:(this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetClusterExpected().WithLocation(expression)),!1)},CheckIsColumn:function(expression,diagnostics){return Bridge.is(this.GetReferencedSymbol(expression),Kusto.Language.Symbols.ColumnSymbol)?!0:(this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetColumnExpected().WithLocation(expression)),!1)},CheckIsLiteral:function(expression,diagnostics){return expression.IsLiteral?!0:(this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeLiteral().WithLocation(expression)),!1)},CheckIsLiteralValue:function(expression,diagnostics){return expression.IsLiteral&&expression.Kind!==Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression?!0:(this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeLiteralScalarValue().WithLocation(expression)),!1)},CheckLiteralStringNotEmpty:function(expression,diagnostics){var $t,result=this.GetResultTypeOrError(expression),value;if(!result.IsError&&expression.IsLiteral){if(value=($t=expression.LiteralValue)!=null?Bridge.toString($t):null,!System.String.isNullOrEmpty(value))return!0;diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustNotBeEmpty().WithLocation(expression))}return!1},IsTokenLiteral:function(expression,values,caseSensitive){if(expression.Kind===Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression){if(values!=null&&System.Array.getCount(values,System.Object)>0){var value=Kusto.Language.Utils.ConvertHelper.ChangeType(expression.LiteralValue,System.Array.getItem(values,0,System.Object));return Kusto.Language.Binding.Binder.Contains(values,value,caseSensitive)}return!0}return!1},CheckIsTokenLiteral:function(expression,values,caseSensitive,diagnostics){var result=this.GetResultTypeOrError(expression);if(!result.IsError){if(this.IsTokenLiteral(expression,values,caseSensitive))return!0;diagnostics.add(Kusto.Language.DiagnosticFacts.GetTokenExpected$2(System.Linq.Enumerable.from(values).select(function(v){return Bridge.toString(v)}).toList(System.String)).WithLocation(expression))}return!1},CheckIsToken:function(token,values,caseSensitive,diagnostics){var value=Kusto.Language.Utils.ConvertHelper.ChangeType(token.Text,System.Array.getItem(values,0,System.Object));return Kusto.Language.Binding.Binder.Contains(values,value,caseSensitive)?!0:(token.HasSyntaxDiagnostics||diagnostics.add(Kusto.Language.DiagnosticFacts.GetTokenExpected$2(System.Linq.Enumerable.from(values).select(function(v){return Bridge.toString(v)}).toList(System.String)).WithLocation(token)),!1)},IsLiteralValue:function(expression,values,caseSensitive){if(!expression.IsLiteral)return!1;var value=Kusto.Language.Utils.ConvertHelper.ChangeType(expression.LiteralValue,System.Array.getItem(values,0,System.Object));return Kusto.Language.Binding.Binder.Contains(values,value,caseSensitive)},CheckLiteralValue:function(expression,values,caseSensitive,diagnostics){var result=this.GetResultTypeOrError(expression);if(!result.IsError){if(this.IsLiteralValue(expression,values,caseSensitive))return!0;diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustHaveValue$1(System.Object,values).WithLocation(expression))}return!1},CheckIsConstant:function(expression,diagnostics){return this.GetIsConstant(expression)||Bridge.is(expression.ReferencedSymbol,Kusto.Language.Symbols.ParameterSymbol)?!0:(this.GetResultTypeOrError(expression).IsError||diagnostics.add(Kusto.Language.DiagnosticFacts.GetExpressionMustBeConstant().WithLocation(expression)),!1)},CheckSignature:function(signature,$arguments,argumentTypes,location,dx){var $t,argCount=System.Array.getCount($arguments,Kusto.Language.Syntax.Expression),initialDxCount=dx.Count,namedArgumentsAllowed,hadOutOfOrderNamedArgument,reportedUnnamedArgument,i,orderedParameter,i1,parameter1,iArg;if(signature.IsValidArgumentCount(argCount)||(signature.HasRepeatableParameters?argCount<signature.MinArgumentCount||argCount>signature.MaxArgumentCount?dx.add(Kusto.Language.DiagnosticFacts.GetFunctionExpectsArgumentCountRange(signature.Symbol.Name,signature.MinArgumentCount,signature.MaxArgumentCount).WithLocation(location)):dx.add(Kusto.Language.DiagnosticFacts.GetFunctionHasIncorrectNumberOfArguments().WithLocation(location)):argCount!==System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)&&dx.add(Kusto.Language.DiagnosticFacts.GetFunctionExpectsArgumentCountExact(signature.Symbol.Name,System.Array.getCount(signature.Parameters,Kusto.Language.Symbols.Parameter)).WithLocation(location))),namedArgumentsAllowed=this.NamedArgumentsAllowed(signature),namedArgumentsAllowed&&dx.Count===initialDxCount)for(hadOutOfOrderNamedArgument=!1,reportedUnnamedArgument=!1,i=0;i<argCount;i=i+1|0){var argument=System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression),parameter=signature.GetParameter(argument,i,argCount),isNamed=Kusto.Language.Binding.Binder.IsNamedArgument(argument),argumentName=Kusto.Language.Binding.Binder.GetNamedArgumentName(argument);isNamed&&parameter==null&&dx.add(Kusto.Language.DiagnosticFacts.GetUnknownArgumentName().WithLocation(argumentName));isNamed&&!hadOutOfOrderNamedArgument?(orderedParameter=signature.GetParameter$1(i,argCount),hadOutOfOrderNamedArgument=!Bridge.referenceEquals(orderedParameter,parameter)):isNamed||!hadOutOfOrderNamedArgument||reportedUnnamedArgument||(dx.add(Kusto.Language.DiagnosticFacts.GetUnnamedArgumentAfterOutofOrderNamedArgument().WithLocation(argument)),reportedUnnamedArgument=!0)}if(dx.Count===initialDxCount)for(i1=0;i1<argCount;i1=i1+1|0)this.CheckArgument(signature,$arguments,argumentTypes,i1,dx);if(namedArgumentsAllowed&&dx.Count===initialDxCount){$t=Bridge.getEnumerator(signature.Parameters,Kusto.Language.Symbols.Parameter);try{while($t.moveNext())parameter1=$t.Current,parameter1.IsOptional||(iArg=signature.GetArgumentIndex(parameter1,$arguments),iArg<0&&dx.add(Kusto.Language.DiagnosticFacts.GetMissingArgumentForParameter(parameter1.Name).WithLocation(location)))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}},NamedArgumentsAllowed:function(signature){var fn=Bridge.as(signature.Symbol,Kusto.Language.Symbols.FunctionSymbol);return fn!=null&&!this._globals.IsBuiltInFunction(fn)},AllowLooseParameterMatching:function(signature){var fs;return(fs=Bridge.as(signature.Symbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&(this._globals.IsDatabaseFunction(fs)||System.Array.getItem(fs.Signatures,0,Kusto.Language.Symbols.Signature).Declaration!=null)},CheckArgument:function(signature,$arguments,argumentTypes,argumentIndex,diagnostics){var argument=System.Array.getItem($arguments,argumentIndex,Kusto.Language.Syntax.Expression),argumentType=System.Array.getItem(argumentTypes,argumentIndex,Kusto.Language.Symbols.TypeSymbol),parameter=this.GetParameter(signature,$arguments,argumentIndex),cn,sn,commonType,commonType1,commonType2,commonType3;if(parameter!=null)if(Bridge.is(argument,Kusto.Language.Syntax.StarExpression)&&signature.Symbol.Kind!==Kusto.Language.Symbols.SymbolKind.Operator)parameter.ArgumentKind!==Kusto.Language.Symbols.ArgumentKind.Star?diagnostics.add(Kusto.Language.DiagnosticFacts.GetStarExpressionNotAllowed().WithLocation(argument)):argumentIndex<(System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)-1|0)&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetStarExpressionMustBeLastArgument().WithLocation(argument));else{(cn=Bridge.as(argument,Kusto.Language.Syntax.CompoundNamedExpression))!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetCompoundNamedArgumentsNotSupported().WithLocation(cn.Names));(sn=Bridge.as(argument,Kusto.Language.Syntax.SimpleNamedExpression))!=null&&(argument=sn.Expression);switch(parameter.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Declared:switch(this.GetParameterMatchKind$1(signature,$arguments,argumentTypes,argumentIndex)){case Kusto.Language.Binding.Binder.MatchKind.Compatible:case Kusto.Language.Binding.Binder.MatchKind.None:this.AllowLooseParameterMatching(signature)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetTypeExpected$1(parameter.DeclaredTypes).WithLocation(argument))}break;case Kusto.Language.Symbols.ParameterTypeKind.Scalar:this.CheckIsScalar(argument,diagnostics,argumentType);break;case Kusto.Language.Symbols.ParameterTypeKind.Integer:this.CheckIsInteger(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.RealOrDecimal:this.CheckIsRealOrDecimal(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.IntegerOrDynamic:this.CheckIsIntegerOrDynamic(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic:this.CheckIsStringOrDynamic(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Number:this.CheckIsNumber(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Summable:this.CheckIsSummable(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.NotBool:this.CheckIsScalar(argument,diagnostics)&&this.CheckIsNotType(argument,Kusto.Language.Symbols.ScalarTypes.Bool,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.NotRealOrBool:this.CheckIsScalar(argument,diagnostics)&&(this.CheckIsNotType(argument,Kusto.Language.Symbols.ScalarTypes.Real,diagnostics),this.CheckIsNotType(argument,Kusto.Language.Symbols.ScalarTypes.Bool,diagnostics));break;case Kusto.Language.Symbols.ParameterTypeKind.NotDynamic:this.CheckIsScalar(argument,diagnostics)&&this.CheckIsNotType(argument,Kusto.Language.Symbols.ScalarTypes.Dynamic,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Tabular:this.CheckIsTabular(argument,diagnostics,argumentType);break;case Kusto.Language.Symbols.ParameterTypeKind.SingleColumnTable:this.CheckIsSingleColumnTable(argument,diagnostics,argumentType);break;case Kusto.Language.Symbols.ParameterTypeKind.Database:this.CheckIsDatabase(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Cluster:this.CheckIsCluster(argument,diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Parameter0:this.CheckIsExactType(argument,System.Array.getItem(argumentTypes,0,Kusto.Language.Symbols.TypeSymbol),diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Parameter1:this.CheckIsExactType(argument,System.Array.getItem(argumentTypes,1,Kusto.Language.Symbols.TypeSymbol),diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.Parameter2:this.CheckIsExactType(argument,System.Array.getItem(argumentTypes,2,Kusto.Language.Symbols.TypeSymbol),diagnostics);break;case Kusto.Language.Symbols.ParameterTypeKind.CommonScalar:this.CheckIsScalar(argument,diagnostics)&&(commonType=Kusto.Language.Binding.Binder.GetCommonArgumentType(signature,$arguments,argumentTypes),commonType!=null&&this.CheckIsType(argument,commonType,Kusto.Language.Binding.Conversion.Promotable,diagnostics));break;case Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic:this.CheckIsScalar(argument,diagnostics)&&(commonType1=Kusto.Language.Binding.Binder.GetCommonArgumentType(signature,$arguments,argumentTypes),commonType1!=null&&this.CheckIsTypeOrDynamic(argument,commonType1,!0,diagnostics));break;case Kusto.Language.Symbols.ParameterTypeKind.CommonNumber:this.CheckIsNumber(argument,diagnostics)&&(commonType2=Kusto.Language.Binding.Binder.GetCommonArgumentType(signature,$arguments,argumentTypes),commonType2!=null&&this.CheckIsType(argument,commonType2,Kusto.Language.Binding.Conversion.Promotable,diagnostics));break;case Kusto.Language.Symbols.ParameterTypeKind.CommonSummable:this.CheckIsSummable(argument,diagnostics)&&(commonType3=Kusto.Language.Binding.Binder.GetCommonArgumentType(signature,$arguments,argumentTypes),commonType3!=null&&this.CheckIsType(argument,commonType3,Kusto.Language.Binding.Conversion.Promotable,diagnostics))}switch(parameter.ArgumentKind){case Kusto.Language.Symbols.ArgumentKind.Column:this.CheckIsColumn(argument,diagnostics);break;case Kusto.Language.Symbols.ArgumentKind.Constant:this.CheckIsConstant(argument,diagnostics);break;case Kusto.Language.Symbols.ArgumentKind.Literal:this.CheckIsLiteral(argument,diagnostics)&&System.Array.getCount(parameter.Values,System.Object)>0&&this.CheckLiteralValue(argument,parameter.Values,parameter.IsCaseSensitive,diagnostics);break;case Kusto.Language.Symbols.ArgumentKind.LiteralNotEmpty:this.CheckIsLiteral(argument,diagnostics)&&this.CheckLiteralStringNotEmpty(argument,diagnostics)}}}}});Bridge.define("Kusto.Language.Syntax.SyntaxVisitor");Bridge.define("Kusto.Language.Binding.Binder.MatchKind",{$kind:"nested enum",statics:{fields:{None:0,NotType:1,Scalar:2,Summable:3,Number:4,Compatible:5,Promoted:6,Tabular:7,Table:8,Database:9,Cluster:10,OneOfTwo:11,Exact:12}}});Bridge.define("Kusto.Language.Syntax.SyntaxVisitor$1",function(){return{}});Bridge.define("Kusto.Language.Binding.Binder.QueryParameterInfo",{$kind:"nested class",props:{Names:null,ValueInfos:null,IsRepeatable:!1},ctors:{$ctor2:function(names,valueInfos,isRepeatable){isRepeatable===void 0&&(isRepeatable=!1);this.$initialize();this.Names=names;this.ValueInfos=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Binding.Binder.QueryParameterValueInfo,valueInfos);this.IsRepeatable=isRepeatable},$ctor5:function(name,valueInfos,isRepeatable){isRepeatable===void 0&&(isRepeatable=!1);Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor2.call(this,System.Array.init([name],System.String),valueInfos,isRepeatable)},ctor:function(names,kind,caseSensitive,values,isRepeatable){caseSensitive===void 0&&(caseSensitive=!0);values===void 0&&(values=null);isRepeatable===void 0&&(isRepeatable=!1);Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor2.call(this,names,System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterValueInfo.$ctor1(kind,caseSensitive,values)],Kusto.Language.Binding.Binder.QueryParameterValueInfo),isRepeatable)},$ctor1:function(names,fixedType,caseSensitive,values,isRepeatable){caseSensitive===void 0&&(caseSensitive=!0);values===void 0&&(values=null);isRepeatable===void 0&&(isRepeatable=!1);Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor2.call(this,names,System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterValueInfo.$ctor2(fixedType,caseSensitive,values)],Kusto.Language.Binding.Binder.QueryParameterValueInfo),isRepeatable)},$ctor3:function(name,kind,caseSensitive,values,isRepeatable){caseSensitive===void 0&&(caseSensitive=!0);values===void 0&&(values=null);isRepeatable===void 0&&(isRepeatable=!1);Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor2.call(this,System.Array.init([name],System.String),System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterValueInfo.ctor(kind,null,caseSensitive,values)],Kusto.Language.Binding.Binder.QueryParameterValueInfo),isRepeatable)},$ctor4:function(name,fixedType,caseSensitive,values,isRepeatable){caseSensitive===void 0&&(caseSensitive=!0);values===void 0&&(values=null);isRepeatable===void 0&&(isRepeatable=!1);Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor2.call(this,System.Array.init([name],System.String),System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterValueInfo.$ctor2(fixedType,caseSensitive,values)],Kusto.Language.Binding.Binder.QueryParameterValueInfo),isRepeatable)}}});Bridge.define("Kusto.Language.Binding.Binder.QueryParameterKind",{$kind:"nested enum",statics:{fields:{Fixed:0,Scalar:1,Integer:2,RealOrDecimal:3,StringOrDynamic:4,Number:5,StringLiteral:6,BoolLiteral:7,Summable:8,Identifier:9,NameDeclaration:10,NameDeclarationList:11,Column:12}}});Bridge.define("Kusto.Language.Binding.Binder.QueryParameterValueInfo",{$kind:"nested class",props:{Kind:0,FixedType:null,CaseSensitive:!1,Values:null},ctors:{ctor:function(kind,fixedType,caseSensitive,values){this.$initialize();this.Kind=kind;this.FixedType=fixedType;this.CaseSensitive=caseSensitive;this.Values=Kusto.Language.Utils.ListExtensions.ToReadOnly(System.Object,values)},$ctor1:function(kind,caseSensitive,values){caseSensitive===void 0&&(caseSensitive=!0);values===void 0&&(values=null);Kusto.Language.Binding.Binder.QueryParameterValueInfo.ctor.call(this,kind,null,caseSensitive,values)},$ctor2:function(fixedType,caseSensitive,values){caseSensitive===void 0&&(caseSensitive=!0);values===void 0&&(values=null);Kusto.Language.Binding.Binder.QueryParameterValueInfo.ctor.call(this,Kusto.Language.Binding.Binder.QueryParameterKind.Fixed,fixedType,caseSensitive,values)}}});Bridge.define("Kusto.Language.Binding.Binder.ScopeKind",{$kind:"nested enum",statics:{fields:{Normal:0,Aggregate:1,PlugIn:2}}});Bridge.define("Kusto.Language.Binding.Binder.SignatureResult",{$kind:"nested struct",statics:{methods:{op_Implicit:function(type){return new Kusto.Language.Binding.Binder.SignatureResult.$ctor1(type,null)},getDefaultValue:function(){return new Kusto.Language.Binding.Binder.SignatureResult}}},props:{Type:null,Expander:null},ctors:{$ctor1:function(type,expander){this.$initialize();this.Type=type;this.Expander=expander},ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([5716221070,this.Type,this.Expander])},equals:function(o){return Bridge.is(o,Kusto.Language.Binding.Binder.SignatureResult)?Bridge.equals(this.Type,o.Type)&&Bridge.equals(this.Expander,o.Expander):!1},$clone:function(){return this}}});Bridge.define("Kusto.Language.Binding.CallSiteInfo",{props:{Signature:null,Locals:null},ctors:{ctor:function(signature,locals){this.$initialize();this.Signature=signature;this.Locals=locals}},methods:{toString:function(){return(this.Signature.Symbol.Name||"")+"("+(Bridge.toArray(System.Linq.Enumerable.from(this.Locals).select(function(v){return v.IsConstant&&v.ConstantValue!=null?System.String.format("{0}={1}",v.Name,v.ConstantValue):v.Name})).join(",")||"")+")"}}});Bridge.define("Kusto.Language.Binding.Conversion",{$kind:"enum",statics:{fields:{None:0,Promotable:1,Compatible:2,Any:3}}});Bridge.define("Kusto.Language.Binding.GlobalBindingCache",{fields:{UnifiedNameColumnsMap:null,UnifiedNameAndTypeColumnsMap:null,CommonColumnsMap:null,CallSiteToExpansionMap:null},ctors:{init:function(){this.UnifiedNameColumnsMap=new(System.Collections.Generic.Dictionary$2(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),Kusto.Language.Symbols.TableSymbol))(null,Kusto.Language.Utils.ReadOnlyListComparer$1(Kusto.Language.Symbols.TableSymbol).Default);this.UnifiedNameAndTypeColumnsMap=new(System.Collections.Generic.Dictionary$2(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),Kusto.Language.Symbols.TableSymbol))(null,Kusto.Language.Utils.ReadOnlyListComparer$1(Kusto.Language.Symbols.TableSymbol).Default);this.CommonColumnsMap=new(System.Collections.Generic.Dictionary$2(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.TableSymbol),Kusto.Language.Symbols.TableSymbol))(null,Kusto.Language.Utils.ReadOnlyListComparer$1(Kusto.Language.Symbols.TableSymbol).Default);this.CallSiteToExpansionMap=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Binding.CallSiteInfo,Kusto.Language.Syntax.FunctionBody))(null,Kusto.Language.Binding.CallSiteInfo.Comparer.Instance)}}});Bridge.define("Kusto.Language.Binding.LocalBindingCache",{fields:{SignaturesComputingExpansion:null,CallSiteToExpansionMap:null},ctors:{init:function(){this.SignaturesComputingExpansion=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.Signature).ctor);this.CallSiteToExpansionMap=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Binding.CallSiteInfo,Kusto.Language.Syntax.FunctionBody))(null,Kusto.Language.Binding.CallSiteInfo.Comparer.Instance)}}});Bridge.define("Kusto.Language.Binding.LocalScope",{fields:{_outerScope:null,_declaredSymbols:null},ctors:{ctor:function(outerScope){outerScope===void 0&&(outerScope=null);this.$initialize();this._outerScope=outerScope;this._declaredSymbols=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.Symbol))}},methods:{AddDeclaration:function(symbol){return symbol!=null&&!this._declaredSymbols.containsKey(symbol.Name)?(this._declaredSymbols.add(symbol.Name,symbol),!0):!1},GetSymbols$1:function(name,match,symbols){var $t,decl={},symbol;if(name!=null){if(this._declaredSymbols.tryGetValue(name,decl)&&Kusto.Language.Symbols.SymbolMatchExtensions.Matches$1(decl.v,name,match)){symbols.add(decl.v);return}}else{$t=Bridge.getEnumerator(this._declaredSymbols.getValues(),Kusto.Language.Symbols.Symbol);try{while($t.moveNext())symbol=$t.Current,Kusto.Language.Symbols.SymbolMatchExtensions.Matches$1(symbol,name,match)&&symbols.add(symbol)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}this._outerScope!=null&&this._outerScope.GetSymbols$1(name,match,symbols)},GetSymbols:function(match,symbols){this.GetSymbols$1(null,match,symbols)}}});Bridge.define("Kusto.Language.Binding.ProjectionBuilder",{fields:{_projection:null,_doNotAdd:null,_columnIndexMap:null,_declaredNames:null,_uniqueNames:null},ctors:{init:function(){this._projection=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);this._doNotAdd=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.ColumnSymbol).ctor);this._columnIndexMap=new(System.Collections.Generic.Dictionary$2(System.String,System.Int32));this._declaredNames=new(System.Collections.Generic.HashSet$1(System.String).ctor);this._uniqueNames=new Kusto.Language.Utils.UniqueNameTable},ctor:function(){this.$initialize()}},methods:{Clear:function(){this._projection.clear();this._doNotAdd.clear();this._columnIndexMap.clear();this._uniqueNames.Clear();this._declaredNames.clear()},GetProjection:function(){return this._projection},AddRange:function(columns,declare,doNotRepeat){var $t,column,c;declare===void 0&&(declare=!1);doNotRepeat===void 0&&(doNotRepeat=!1);$t=Bridge.getEnumerator(columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())column=$t.Current,c=this.Add(column,void 0,!1,doNotRepeat),declare&&c!=null&&this._declaredNames.add(c.Name)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},DoNotAdd:function(column){this._doNotAdd.add(column)},CanAdd:function(column){return!this._doNotAdd.contains(column)},Add:function(column,baseName,replace,doNotRepeat){var index,uniqueName;return(baseName===void 0&&(baseName=null),replace===void 0&&(replace=!1),doNotRepeat===void 0&&(doNotRepeat=!1),this._doNotAdd.contains(column))?column:(index={},replace&&this._columnIndexMap.tryGetValue(column.Name,index)?this._projection.setItem(index.v,column):(uniqueName=this._uniqueNames.GetOrAddName(column.Name,baseName),Bridge.referenceEquals(uniqueName,column.Name)||(column=column.WithName(uniqueName)),this._projection.add(column),this._columnIndexMap.add(column.Name,this._projection.Count-1|0)),doNotRepeat&&this._doNotAdd.add(column),column)},Declare:function(column,diagnostics,location,replace){var index,added;if(replace===void 0&&(replace=!1),this._declaredNames.contains(column.Name)){diagnostics.add(Kusto.Language.DiagnosticFacts.GetDuplicateColumnDeclaration(column.Name).WithLocation(location));return}index={};replace&&this._columnIndexMap.tryGetValue(column.Name,index)?(this._projection.setItem(index.v,column),this._declaredNames.add(column.Name)):(added=this.Add(column),added!=null&&this._declaredNames.add(added.Name))},Rename:function(oldName,newName,diagnostics,location){var index={},oldColumn,newColumn;return this._columnIndexMap.tryGetValue(oldName,index)?this._declaredNames.contains(newName)?(diagnostics.add(Kusto.Language.DiagnosticFacts.GetDuplicateColumnDeclaration(newName).WithLocation(location)),null):(oldColumn=this._projection.getItem(index.v),newColumn=oldColumn.WithName(newName),this._projection.setItem(index.v,newColumn),this._columnIndexMap.remove(oldName),this._columnIndexMap.add(newName,index.v),this._declaredNames.add(newName),this._uniqueNames.AddName(newName),newColumn):null}}});Bridge.define("Kusto.Language.Commands",{statics:{fields:{ShowDatabaseResults:null,ShowDatabaseDetailsResults:null,ShowDatabase:null,ShowDatabaseDetails:null,ShowDatabaseIdentity:null,ShowDatabasePolicies:null,ShowDatabaseDataStats:null,ShowClusterDatabases:null,ShowClusterDatabasesDetails:null,ShowClusterDatabasesIdentity:null,ShowClusterDatabasesPolicies:null,ShowClusterDatabasesDataStats:null,CreateDatabasePersist:null,CreateDatabaseVolatile:null,AttachDatabase:null,DetachDatabase:null,AlterDatabasePrettyName:null,DropDatabasePrettyName:null,AlterDatabasePersistMetadata:null,SetAccess:null,ShowDatabaseSchema:null,ShowDatabaseSchemaAsJson:null,ShowDatabasesSchema:null,ShowDatabasesSchemaAsJson:null,ShowTablesResult:null,ShowTablesDetailsResult:null,ShowTableSchemaResult:null,ShowTables:null,ShowTablesDetails:null,ShowTableDetails:null,ShowTableCslSchema:null,ShowTableSchemaAsJson:null,CreateTable:null,CreateMergeTable:null,CreateTables:null,AlterTable:null,AlterMergeTable:null,AlterTableDocString:null,AlterTableFolder:null,RenameTable:null,RenameTables:null,DropTable:null,UndoDropTable:null,DropTables:null,TableIngestionMappingResult:null,CreateTableIngestionMapping:null,AlterTableIngestionMapping:null,ShowTableIngestionMappings:null,ShowTableIngestionMapping:null,DropTableIngestionMapping:null,RenameColumn:null,RenameColumns:null,AlterColumnType:null,DropColumn:null,DropTableColumns:null,AlterTableColumnDocStrings:null,AlterMergeTableColumnDocStrings:null,FunctionResult:null,ShowFunctions:null,ShowFunction:null,CreateFunction:null,AlterFunction:null,CreateOrAlterFunction:null,DropFunction:null,AlterFunctionDocString:null,AlterFunctionFolder:null,ExternalTableResult:null,ExternalTableSchemaResult:null,ExternalTableFullResult:null,ShowExternalTables:null,ShowExternalTable:null,ShowExternalTableCslSchema:null,ShowExternalTableSchema:null,DropExternalTable:null,CreateExternalTable:null,AlterExternalTable:null,PolicyResult:null,ShowDatabasePolicyCaching:null,ShowTablePolicyCaching:null,AlterDatabasePolicyCaching:null,AlterTablePolicyCaching:null,AlterClusterPolicyCaching:null,DeleteTablePolicyCaching:null,ShowTablePolicyIngestionTime:null,AlterTablePolicyIngestionTime:null,AlterTablesPolicyIngestionTime:null,DeleteTablePolicyIngestionTime:null,ShowTablePolicyRetention:null,ShowDatabasePolicyRetention:null,AlterTablePolicyRetention:null,AlterDatabasePolicyRetention:null,AlterTablesPolicyRetention:null,AlterMergeTablePolicyRetention:null,AlterMergeDatabasePolicyRetention:null,DeleteTablePolicyRetention:null,DeleteDatabasePolicyRetention:null,ShowTablePolicyRowOrder:null,AlterTablePolicyRowOrder:null,AlterTablesPolicyRowOrder:null,AlterMergeTablePolicyRowOrder:null,DeleteTablePolicyRowOrder:null,ShowTablePolicyUpdate:null,AlterTablePolicyUpdate:null,AlterMergeTablePolicyUpdate:null,DeleteTablePolicyUpdate:null,ShowDatabasePolicyIngestionBatching:null,ShowTablePolicyIngestionBatching:null,AlterDatabasePolicyIngestionBatching:null,AlterTablePolicyIngestionBatching:null,AlterTablesPolicyIngestionBatching:null,DeleteDatabasePolicyIngestionBatching:null,DeleteTablePolicyIngestionBatching:null,ShowDatabasePolicyEncoding:null,ShowTablePolicyEncoding:null,ShowColumnPolicyEncoding:null,AlterDatabasePolicyEncoding:null,AlterTablePolicyEncoding:null,AlterColumnPolicyEncoding:null,AlterMergeDatabasePolicyEncoding:null,AlterMergeTablePolicyEncoding:null,AlterMergeColumnPolicyEncoding:null,DeleteDatabasePolicyEncoding:null,DeleteTablePolicyEncoding:null,DeleteColumnPolicyEncoding:null,ShowDatabasePolicyMerge:null,ShowTablePolicyMerge:null,AlterDatabasePolicyMerge:null,AlterTablePolicyMerge:null,AlterMergeDatabasePolicyMerge:null,AlterMergeTablePolicyMerge:null,DeleteDatabasePolicyMerge:null,DeleteTablePolicyMerge:null,ShowTablePolicyRestrictedViewAccess:null,AlterTablePolicyRestrictedViewAccess:null,AlterTablesPolicyRestrictedViewAccess:null,DeleteTablePolicyRestrictedViewAccess:null,ShowClusterPolicyRowStore:null,AlterClusterPolicyRowStore:null,AlterMergeClusterPolicyRowStore:null,ShowClusterPolicySandbox:null,AlterClusterPolicySandbox:null,ShowDatabasePolicySharding:null,ShowTablePolicySharding:null,AlterDatabasePolicySharding:null,AlterTablePolicySharding:null,AlterMergeDatabasePolicySharding:null,AlterMergeTablePolicySharding:null,DeleteDatabasePolicySharding:null,DeleteTablePolicySharding:null,ShowDatabasePolicyStreamingIngestion:null,ShowTablePolicyStreamingIngestion:null,AlterDatabasePolicyStreamingIngestion:null,AlterTablePolicyStreamingIngestion:null,DeleteDatabasePolicyStreamingIngestion:null,DeleteTablePolicyStreamingIngestion:null,ShowPrincipalRoles:null,ShowPrincipalsResult:null,ShowClusterPrincipals:null,ShowDatabasePrincipals:null,ShowTablePrincipals:null,ShowFunctionPrincipals:null,ClusterRole:null,DatabaseRole:null,TableRole:null,FunctionRole:null,PrincipalsClause:null,PrincipalsOrNoneClause:null,AddClusterRole:null,DropClusterRole:null,SetClusterRole:null,AddDatabaseRole:null,DropDatabaseRole:null,SetDatabaseRole:null,AddTableRole:null,DropTableRole:null,SetTableRole:null,AddFunctionRole:null,DropFunctionRole:null,SetFunctionRole:null,BlockedPrincipalsResult:null,ShowClusterBlockedPrincipals:null,AddClusterBlockedPrincipals:null,DropClusterBlockedPrincipals:null,SourceDataLocatorList:null,PropertyList:null,IngestIntoTable:null,IngestInlineIntoTable:null,DataIngestionSetAppendResult:null,SetTable:null,AppendTable:null,SetOrAppendTable:null,SetOrReplaceTable:null,DataConnectionStringList:null,ExportToStorage:null,ExportToSqlTable:null,ExportToExternalTable:null,OverClause:null,CreateOrAlterContinuousExport:null,ShowContinuousExportResult:null,ShowContinuousExport:null,ShowContinuousExports:null,ShowContinuousExportExportedArtifacts:null,ShowContinuousExportFailures:null,DropContinuousExport:null,EnableContinuousExport:null,DisableContinuousExport:null,ShowCluster:null,ShowDiagnostics:null,ShowCapacity:null,ShowOperations:null,ShowOperationDetails:null,JournalResult:null,ShowJournal:null,ShowDatabaseJournal:null,ShowClusterJournal:null,QueryResults:null,ShowQueries:null,ShowRunningQueries:null,CancelQuery:null,ShowQueryPlan:null,ShowBasicAuthUsers:null,ShowCache:null,ShowCommands:null,ShowCommandsAndQueries:null,ShowIngestionFailures:null,ShowExtentsResults:null,ShowClusterExtents:null,ExtentIdList:null,TagWhereClause:null,ShowDatabaseExtents:null,ShowTableExtents:null,TableNameList:null,ShowTablesExtents:null,MergeExtentsResult:null,GuidList:null,MergeExtents:null,MergeExtentsDryrun:null,MoveExtentsResult:null,MoveExtentsFrom:null,MoveExtentsQuery:null,DropExtentResult:null,DropExtent:null,DropProperties:null,DropExtents:null,DropPretendExtentsByProperties:null},props:{All:null},ctors:{init:function(){this.ShowDatabaseResults=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PersistentStorage",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Version",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IsCurrent",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseAccessMode",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrettyName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CurrentUseIsUnrestrictedViewer",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseId",Kusto.Language.Symbols.ScalarTypes.Guid)]);this.ShowDatabaseDetailsResults=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PersistentStorage",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Version",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IsCurrent",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseAccessMode",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrettyName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("AuthorizedPrincipals",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("RetentionPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("MergePolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CachingPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ShardingPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("StreamingIngestionPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IngestionBatchingPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("TotalSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("DatabaseId",Kusto.Language.Symbols.ScalarTypes.Guid)]);this.ShowDatabase=new Kusto.Language.Symbols.CommandSymbol.ctor("show database",Kusto.Language.Commands.ShowDatabaseResults);this.ShowDatabaseDetails=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database details","show database details",Kusto.Language.Commands.ShowDatabaseDetailsResults);this.ShowDatabaseIdentity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database identity","show database identity",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PersistentStorage",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Version",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IsCurrent",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseAccessMode",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrettyName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CurrentUseIsUnrestrictedViewer",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseId",Kusto.Language.Symbols.ScalarTypes.Guid)]));this.ShowDatabasePolicies=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database policies","show database policies",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PersistentStorage",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Version",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IsCurrent",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseAccessMode",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrettyName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CurrentUseIsUnrestrictedViewer",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseId",Kusto.Language.Symbols.ScalarTypes.Guid),new Kusto.Language.Symbols.ColumnSymbol("AuthorizedPrincipals",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("RetentionPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("MergePolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CachingPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ShardingPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("StreamingIngestionPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IngestionBatchingPolicy",Kusto.Language.Symbols.ScalarTypes.String)]));this.ShowDatabaseDataStats=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database datastats","show database datastats",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PersistentStorage",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Version",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IsCurrent",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseAccessMode",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrettyName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CurrentUseIsUnrestrictedViewer",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseId",Kusto.Language.Symbols.ScalarTypes.Guid),new Kusto.Language.Symbols.ColumnSymbol("OriginalSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("ExtentSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("CompressedSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("IndexSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("RowCount",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("HotOriginalSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("HotExtentSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("HotCompressedSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("HotIndexSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("HotRowCount",Kusto.Language.Symbols.ScalarTypes.Long)]));this.ShowClusterDatabases=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show cluster databases","show cluster databases ['(' { <database>:DatabaseName, ',' }+ ')']",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PersistentStorage",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Version",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IsCurrent",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseAccessMode",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrettyName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CurrentUseIsUnrestrictedViewer",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseId",Kusto.Language.Symbols.ScalarTypes.Guid)]));this.ShowClusterDatabasesDetails=new Kusto.Language.Symbols.CommandSymbol.ctor("show cluster databases details",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PersistentStorage",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Version",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IsCurrent",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseAccessMode",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrettyName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("AuthorizedPrincipals",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("RetentionPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("MergePolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CachingPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ShardingPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("StreamingIngestionPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IngestionBatchingPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("TotalSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("DatabaseId",Kusto.Language.Symbols.ScalarTypes.Guid)]));this.ShowClusterDatabasesIdentity=new Kusto.Language.Symbols.CommandSymbol.ctor("show cluster databases identity",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PersistentStorage",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Version",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IsCurrent",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseAccessMode",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrettyName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CurrentUseIsUnrestrictedViewer",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseId",Kusto.Language.Symbols.ScalarTypes.Guid)]));this.ShowClusterDatabasesPolicies=new Kusto.Language.Symbols.CommandSymbol.ctor("show cluster databases policies",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PersistentStorage",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Version",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IsCurrent",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseAccessMode",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrettyName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CurrentUseIsUnrestrictedViewer",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseId",Kusto.Language.Symbols.ScalarTypes.Guid),new Kusto.Language.Symbols.ColumnSymbol("AuthorizedPrincipals",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("RetentionPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("MergePolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CachingPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ShardingPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("StreamingIngestionPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IngestionBatchingPolicy",Kusto.Language.Symbols.ScalarTypes.String)]));this.ShowClusterDatabasesDataStats=new Kusto.Language.Symbols.CommandSymbol.ctor("show cluster databases datastats",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PersistentStorage",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Version",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IsCurrent",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseAccessMode",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrettyName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CurrentUseIsUnrestrictedViewer",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DatabaseId",Kusto.Language.Symbols.ScalarTypes.Guid),new Kusto.Language.Symbols.ColumnSymbol("OriginalSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("ExtentSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("CompressedSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("IndexSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("RowCount",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("HotOriginalSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("HotExtentSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("HotCompressedSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("HotIndexSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("HotRowCount",Kusto.Language.Symbols.ScalarTypes.Long)]));this.CreateDatabasePersist=new Kusto.Language.Symbols.CommandSymbol.$ctor1("create database persist","create database <name>:DatabaseName persist '(' { <string>:Container, ',' }+ ')' [ifnotexists]",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PersistentPath",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Created",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("StoresMetadata",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("StoresData",Kusto.Language.Symbols.ScalarTypes.Bool)]));this.CreateDatabaseVolatile=new Kusto.Language.Symbols.CommandSymbol.$ctor1("create database volatile","create database <name>:DatabaseName volatile [ifnotexists]",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PersistentPath",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Created",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("StoresMetadata",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("StoresData",Kusto.Language.Symbols.ScalarTypes.Bool)]));this.AttachDatabase=new Kusto.Language.Symbols.CommandSymbol.$ctor1("attach database","attach database [metadata] <database>:DatabaseName from (<string>:BlobContainerUrl ';' <string>:StorageAccountKey | <string>:Path)",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Step",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Duration",Kusto.Language.Symbols.ScalarTypes.String)]));this.DetachDatabase=new Kusto.Language.Symbols.CommandSymbol.$ctor1("detach database","detach database <database>:DatabaseName",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Table",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("NumberOfRemovedExtents",Kusto.Language.Symbols.ScalarTypes.String)]));this.AlterDatabasePrettyName=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter database prettyname","alter database <database>:DatabaseName prettyname <string>:DatabasePrettyName",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrettyName",Kusto.Language.Symbols.ScalarTypes.String)]));this.DropDatabasePrettyName=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop database prettyname","drop database <database>:DatabaseName prettyname",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrettyName",Kusto.Language.Symbols.ScalarTypes.String)]));this.AlterDatabasePersistMetadata=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter database persist metadata","alter database <database>:DatabaseName persist metadata (<string>:BlobContainerUrl ';' <string>:StorageAccountKey | <string>:Path)",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Moniker",Kusto.Language.Symbols.ScalarTypes.Guid),new Kusto.Language.Symbols.ColumnSymbol("Url",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("State",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CreatedOn",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("MaxDateTime",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("IsRecyclable",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("StoresDatabaseMetadata",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("HardDeletePeriod",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]));this.SetAccess=new Kusto.Language.Symbols.CommandSymbol.$ctor1("set access","set access <database>:DatabaseName to (readonly | readwrite):AccessMode",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("AccessMode",Kusto.Language.Symbols.ScalarTypes.String)]));this.ShowDatabaseSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database schema","show database <database>:DatabaseName schema [details] [if_later_than <string>:Version]",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("TableName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ColumnName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ColumnType",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IsDefaultTable",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("IsDefaultColumn",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("PrettyName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Version",Kusto.Language.Symbols.ScalarTypes.String)]));this.ShowDatabaseSchemaAsJson=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database schema as json","show database <database>:DatabaseName schema [if_later_than <string>:Version] as json",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseSchema",Kusto.Language.Symbols.ScalarTypes.String)]));this.ShowDatabasesSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show databases schema","show databases '(' { <database>:DatabaseName [if_later_than <string>:Version], ',' }+ ')' schema [details]",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("TableName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ColumnName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ColumnType",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IsDefaultTable",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("IsDefaultColumn",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("PrettyName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Version",Kusto.Language.Symbols.ScalarTypes.String)]));this.ShowDatabasesSchemaAsJson=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show databases schema as json","show databases '(' { <database>:DatabaseName [if_later_than <string>:Version], ',' }+ ')' schema as json",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("DatabaseSchema",Kusto.Language.Symbols.ScalarTypes.String)]));this.ShowTablesResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("TableName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Folder",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DocString",Kusto.Language.Symbols.ScalarTypes.String)]);this.ShowTablesDetailsResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("TableName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Folder",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DocString",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("TotalExtents",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("TotalExtentSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("TotalRowCount",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("HotExtents",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("HotExtentSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("HotOriginalSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("HotRowCount",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("AuthorizedPrincipals",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("RetentionPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CachingPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ShardingPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("MergePolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("StreamIngestionPolicy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("MinExtentsCreationTime",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("MaxExtentsCreationTime",Kusto.Language.Symbols.ScalarTypes.DateTime)]);this.ShowTableSchemaResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("TableName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Schema",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Folder",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DocString",Kusto.Language.Symbols.ScalarTypes.String)]);this.ShowTables=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show tables","show tables ['(' { <table>:TableName, ',' }+ ')']",Kusto.Language.Commands.ShowTablesResult);this.ShowTablesDetails=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show tables details","show tables ['(' { <table>:TableName, ',' }+ ')'] details",Kusto.Language.Commands.ShowTablesDetailsResult);this.ShowTableDetails=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table details","show table <table>:TableName details",Kusto.Language.Commands.ShowTablesDetailsResult);this.ShowTableCslSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table cslschema","show table <table>:TableName cslschema",Kusto.Language.Commands.ShowTableSchemaResult);this.ShowTableSchemaAsJson=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table schema as json","show table <table>:TableName schema as json",Kusto.Language.Commands.ShowTableSchemaResult);this.CreateTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("create table","create table <name>:TableName '(' { <name>:ColumnName ':' <type>:ColumnType, ',' }+ ')' [with '(' docstring '=' <string>:Documentation [',' folder '=' <string>:FolderName] ')']",Kusto.Language.Commands.ShowTableSchemaResult);this.CreateMergeTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("create-merge table","create-merge table <name>:TableName '(' { <name>:ColumnName ':' <type>:ColumnType, ',' }+ ')'",Kusto.Language.Commands.ShowTableSchemaResult);this.CreateTables=new Kusto.Language.Symbols.CommandSymbol.$ctor1("create tables","create tables { <name>:TableName '(' { <name>:ColumnName ':' <type>:ColumnType, ',' }+ ')', ',' }+",Kusto.Language.Commands.ShowTableSchemaResult);this.AlterTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table","alter table <table> '(' { <name>:ColumnName ':' <type>:ColumnType, ',' }+ ')' [with '(' docstring '=' <string>:Documentation [',' folder '=' <string>:FolderName] ')']",Kusto.Language.Commands.ShowTableSchemaResult);this.AlterMergeTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter-merge table","alter-merge table <table> '(' { <name>:ColumnName ':' <type>:ColumnType , ',' }+ ')' [with '(' docstring '=' <string>:Documentation [',' folder '=' <string>:FolderName] ')']",Kusto.Language.Commands.ShowTableSchemaResult);this.AlterTableDocString=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table docstring","alter table <table>:TableName docstring <string>:Documentation",Kusto.Language.Commands.ShowTablesResult);this.AlterTableFolder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table folder","alter table <table>:TableName folder <string>:Folder",Kusto.Language.Commands.ShowTablesResult);this.RenameTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("rename table","rename table <table>:TableName to <name>:NewTableName");this.RenameTables=new Kusto.Language.Symbols.CommandSymbol.$ctor1("rename tables","rename tables { <name>:NewTableName '=' <table>:TableName, ',' }+");this.DropTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop table","drop table <table>:TableName [ifexists]",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("TableName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String)]));this.UndoDropTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("undo drop table","undo drop table <name> [as <name>:TableName] version '=' <string>:Version",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("ExtentId",Kusto.Language.Symbols.ScalarTypes.Guid),new Kusto.Language.Symbols.ColumnSymbol("NumberOfRecords",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Status",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("FailureReason",Kusto.Language.Symbols.ScalarTypes.String)]));this.DropTables=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop tables","drop tables '(' { <table>:TableName, ',' }+ ')' [ifexists]",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("TableName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String)]));this.TableIngestionMappingResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Name",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Kind",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Mapping",Kusto.Language.Symbols.ScalarTypes.String)]);this.CreateTableIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("create table ingestion mapping","create table <name>:TableName ingestion (csv | json):MappingKind mapping <string>:MappingName <string>:MappingFormat",Kusto.Language.Commands.TableIngestionMappingResult);this.AlterTableIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table ingestion mapping","alter table <table> ingestion (csv | json):MappingKind mapping <string>:MappingName <string>:MappingFormat",Kusto.Language.Commands.TableIngestionMappingResult);this.ShowTableIngestionMappings=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table ingestion mappings","show table <table>:TableName ingestion (csv | json):MappingKind mappings",Kusto.Language.Commands.TableIngestionMappingResult);this.ShowTableIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table ingestion mapping","show table <table>:TableName ingestion (csv | json):MappingKind mapping <string>:MappingName",Kusto.Language.Commands.TableIngestionMappingResult);this.DropTableIngestionMapping=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop table ingestion mapping","drop table <table>:TableName ingestion (csv | json):MappingKind mapping <string>:MappingName");this.RenameColumn=new Kusto.Language.Symbols.CommandSymbol.$ctor1("rename column","rename column <database_table_column>:ColumnName to <name>:NewColumnName");this.RenameColumns=new Kusto.Language.Symbols.CommandSymbol.$ctor1("rename columns","rename columns { <name>:NewColumnName '=' <database_table_column>:ColumnName, ',' }+");this.AlterColumnType=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter column type","alter column <database_table_column>:ColumnName type '=' <type>:ColumnType");this.DropColumn=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop column","drop column <table_column>:ColumnName");this.DropTableColumns=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop table columns","drop table <table>:TableName columns '(' { <column>:ColumnName, ',' }+ ')'");this.AlterTableColumnDocStrings=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table column-docstrings","alter table <table>:TableName column-docstrings '(' { <column>:ColumnName ':' <string>:DocString, ',' }+ ')'");this.AlterMergeTableColumnDocStrings=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter-merge table column-docstrings","alter-merge table <table>:TableName column-docstrings '(' { <column>:ColumnName ':' <string>:DocString, ',' }+ ')'");this.FunctionResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Name",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Parameters",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Body",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Folder",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DocString",Kusto.Language.Symbols.ScalarTypes.String)]);this.ShowFunctions=new Kusto.Language.Symbols.CommandSymbol.ctor("show functions",Kusto.Language.Commands.FunctionResult);this.ShowFunction=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show function","show function <function>:FunctionName",Kusto.Language.Commands.FunctionResult);this.CreateFunction=new Kusto.Language.Symbols.CommandSymbol.$ctor1("create function","create function [ifnotexists] [with '(' { <name>:PropertyName '=' <value>:Value, ',' }+ ')'] <name>:FunctionName <function_declaration>",Kusto.Language.Commands.FunctionResult);this.AlterFunction=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter function","alter function [with '(' { <name>:PropertyName '=' <value>:Value, ',' }+ ')'] <name>:FunctionName <function_declaration>",Kusto.Language.Commands.FunctionResult);this.CreateOrAlterFunction=new Kusto.Language.Symbols.CommandSymbol.$ctor1("create-or-alter function","create-or-alter function [with '(' { <name>:PropertyName '=' <value>:Value, ',' }+ ')'] <name>:FunctionName <function_declaration>",Kusto.Language.Commands.FunctionResult);this.DropFunction=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop function","drop function <function>:FunctionName",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Name",Kusto.Language.Symbols.ScalarTypes.String)]));this.AlterFunctionDocString=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter function docstring","alter function <function> docstring <string>:Documentation",Kusto.Language.Commands.FunctionResult);this.AlterFunctionFolder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter function folder","alter function <function>:FunctionName folder <string>:Folder",Kusto.Language.Commands.FunctionResult);this.ExternalTableResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("TableName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("TableType",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Folder",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DocString",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Properties",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ConnectionStrings",Kusto.Language.Symbols.ScalarTypes.Dynamic)]);this.ExternalTableSchemaResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("TableName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Schema",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Folder",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DocString",Kusto.Language.Symbols.ScalarTypes.String)]);this.ExternalTableFullResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("TableName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("TableType",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Folder",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DocString",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Schema",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Properties",Kusto.Language.Symbols.ScalarTypes.String)]);this.ShowExternalTables=new Kusto.Language.Symbols.CommandSymbol.ctor("show external tables",Kusto.Language.Commands.ExternalTableResult);this.ShowExternalTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show external table","show external table <name>:TableName",Kusto.Language.Commands.ExternalTableResult);this.ShowExternalTableCslSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show external table cslschema","show external table <name>:TableName cslschema",Kusto.Language.Commands.ExternalTableSchemaResult);this.ShowExternalTableSchema=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show external table schema","show external table <name>:TableName schema as (json | csl)",Kusto.Language.Commands.ExternalTableSchemaResult);this.DropExternalTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop external table","drop external table <name>:TableName",Kusto.Language.Commands.ExternalTableFullResult);this.CreateExternalTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("create external table","create external table <name>:TableName '(' { <name>:ColumnName ':' <type>:ColumnType, ',' }+ ')'\r\n                    kind '=' (blob | adl):TableKind\r\n                    [partition by [format_datetime '=' <string>:DateTimePartitionFormat] bin '(' <name>:BinColumn ',' <timespan>:BinValue ')']\r\n                    dataformat '=' (csv | tsv | json | parquet):DataFormatKind '(' { <string>:StorageConnectionString, ',' }+ ')'\r\n                    [with '(' { <name>:PropertyName '=' <value>:Value, ',' }+ ')']",Kusto.Language.Commands.ExternalTableFullResult);this.AlterExternalTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter external table","alter external table <table>:TableName '(' { <name>:ColumnName ':' <type>:ColumnType, ',' }+ ')'\r\n                    kind '=' (blob | adl):TableKind\r\n                    [partition by [format_datetime '=' <string>:DateTimePartitionFormat] bin '(' <column>:BinColumn ',' <timespan>:BinValue ')']\r\n                    dataformat '=' (csv | tsv | json | parquet):DataFormatKind '(' { <string>:StorageConnectionString, ',' }+ ')'\r\n                    [with '(' { <name>:PropertyName '=' <value>:Value, ',' }+ ')']",Kusto.Language.Commands.ExternalTableFullResult);this.PolicyResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("PolicyName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("EntityName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Policy",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ChildEntities",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("EntityType",Kusto.Language.Symbols.ScalarTypes.String)]);this.ShowDatabasePolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database policy caching","show database <database> policy caching",Kusto.Language.Commands.PolicyResult);this.ShowTablePolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table policy caching","show table <database_table> policy caching",Kusto.Language.Commands.PolicyResult);this.AlterDatabasePolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter database policy caching","alter database <database> policy caching hot '=' <timespan>:Timespan",Kusto.Language.Commands.PolicyResult);this.AlterTablePolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table policy caching","alter table <database_table> policy caching hot '=' <timespan>:Timespan",Kusto.Language.Commands.PolicyResult);this.AlterClusterPolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter cluster policy caching","alter cluster policy caching hot '=' <timespan>:Timespan");this.DeleteTablePolicyCaching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete table policy caching","delete table <database_table> policy caching");this.ShowTablePolicyIngestionTime=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table policy ingestiontime","show table (<table> | '*'):TableName policy ingestiontime",Kusto.Language.Commands.PolicyResult);this.AlterTablePolicyIngestionTime=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table policy ingestiontime","alter table <table>:TableName policy ingestiontime true",Kusto.Language.Commands.PolicyResult);this.AlterTablesPolicyIngestionTime=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter tables policy ingestiontime","alter tables '(' { <table>:TableName, ',' }+ ')' policy ingestiontime true",Kusto.Language.Commands.PolicyResult);this.DeleteTablePolicyIngestionTime=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete table policy ingestiontime","delete table <table>:TableName policy ingestiontime");this.ShowTablePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table policy retention","show table (<database_table> | '*'):TableName policy retention",Kusto.Language.Commands.PolicyResult);this.ShowDatabasePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database policy retention","show database (<database> | '*'):DatabaseName policy retention",Kusto.Language.Commands.PolicyResult);this.AlterTablePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table policy retention","alter table <database_table>:TableName policy retention <string>:RetentionPolicy",Kusto.Language.Commands.PolicyResult);this.AlterDatabasePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter database policy retention","alter database <database>:DatabaseName policy retention <string>:RetentionPolicy",Kusto.Language.Commands.PolicyResult);this.AlterTablesPolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter tables policy retention","alter tables '(' { <table>:TableName, ',' }+ ')' policy retention <string>:RetentionPolicy",Kusto.Language.Commands.PolicyResult);this.AlterMergeTablePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter-merge table policy retention","alter-merge table <database_table>:TableName policy retention (<string>:RetentionPolicy | softdelete '=' <timespan>:SoftDeleteValue [recoverability '=' (disabled|enabled):RecoverabilityValue] | recoverability '=' (disabled|enabled):RecoverabilityValue)",Kusto.Language.Commands.PolicyResult);this.AlterMergeDatabasePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter-merge database policy retention","alter-merge database <database>:DatabaseName policy retention (<string>:RetentionPolicy | softdelete '=' <timespan>:SoftDeleteValue [recoverability '=' (disabled|enabled):RecoverabilityValue] | recoverability '=' (disabled|enabled):RecoverabilityValue)",Kusto.Language.Commands.PolicyResult);this.DeleteTablePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete table policy retention","delete table <database_table>:TableName policy retention");this.DeleteDatabasePolicyRetention=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete database policy retention","delete database <database>:DatabaseName policy retention");this.ShowTablePolicyRowOrder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table policy roworder","show table (<database_table> | '*'):TableName policy roworder",Kusto.Language.Commands.PolicyResult);this.AlterTablePolicyRowOrder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table policy roworder","alter table <database_table>:TableName policy roworder '(' { <column>:ColumnName (asc|desc), ',' }+ ')'",Kusto.Language.Commands.PolicyResult);this.AlterTablesPolicyRowOrder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter tables policy roworder","alter tables '(' { <table>:TableName, ',' }+ ')' policy roworder '(' { <name>:ColumnName (asc|desc), ',' }+ ')'",Kusto.Language.Commands.PolicyResult);this.AlterMergeTablePolicyRowOrder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter-merge table policy roworder","alter-merge table <database_table>:TableName policy roworder '(' { <column>:ColumnName (asc|desc), ',' }+ ')'",Kusto.Language.Commands.PolicyResult);this.DeleteTablePolicyRowOrder=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete table policy roworder","delete table <database_table>:TableName policy roworder");this.ShowTablePolicyUpdate=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table policy update","show table (<database_table> | '*'):TableName policy update",Kusto.Language.Commands.PolicyResult);this.AlterTablePolicyUpdate=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table policy update","alter table <database_table>:TableName policy update <string>:UpdatePolicy",Kusto.Language.Commands.PolicyResult);this.AlterMergeTablePolicyUpdate=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter-merge table policy update","alter-merge table <database_table>:TableName policy update <string>:UpdatePolicy",Kusto.Language.Commands.PolicyResult);this.DeleteTablePolicyUpdate=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete table policy update","delete table <database_table>:TableName policy update");this.ShowDatabasePolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database policy ingestionbatching","show database <database>:DatabaseName policy ingestionbatching",Kusto.Language.Commands.PolicyResult);this.ShowTablePolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table policy ingestionbatching","show table <database_table>:TableName policy ingestionbatching",Kusto.Language.Commands.PolicyResult);this.AlterDatabasePolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter database policy ingestionbatching","alter database <database>:DatabaseName policy ingestionbatching <string>:IngestionBatchingPolicy",Kusto.Language.Commands.PolicyResult);this.AlterTablePolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table policy ingestionbatching","alter table <database_table>:TableName policy ingestionbatching <string>:IngestionBatchingPolicy",Kusto.Language.Commands.PolicyResult);this.AlterTablesPolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter tables policy ingestionbatching","alter tables '(' { <table>:TableName, ',' }+ ')' policy ingestionbatching <string>:IngestionBatchingPolicy",Kusto.Language.Commands.PolicyResult);this.DeleteDatabasePolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete database policy ingestionbatching","delete database <database>:DatabaseName policy ingestionbatching");this.DeleteTablePolicyIngestionBatching=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete table policy ingestionbatching","delete table <database_table>:TableName policy ingestionbatching");this.ShowDatabasePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database policy encoding","show database <database>:DatabaseName policy encoding",Kusto.Language.Commands.PolicyResult);this.ShowTablePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table policy encoding","show table <database_table>:TableName policy encoding",Kusto.Language.Commands.PolicyResult);this.ShowColumnPolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show column policy encoding","show column <table_column>:ColumnName policy encoding",Kusto.Language.Commands.PolicyResult);this.AlterDatabasePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter database policy encoding","alter database <database>:DatabaseName policy encoding <string>:EncodingPolicy",Kusto.Language.Commands.PolicyResult);this.AlterTablePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table policy encoding","alter table <database_table>:TableName policy encoding <string>:EncodingPolicy",Kusto.Language.Commands.PolicyResult);this.AlterColumnPolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter column policy encoding","alter column <table_column>:ColumnName policy encoding <string>:EncodingPolicy",Kusto.Language.Commands.PolicyResult);this.AlterMergeDatabasePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter-merge database policy encoding","alter-merge database <database>:DatabaseName policy encoding <string>:EncodingPolicy",Kusto.Language.Commands.PolicyResult);this.AlterMergeTablePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter-merge table policy encoding","alter-merge table <database_table>:TableName policy encoding <string>:EncodingPolicy",Kusto.Language.Commands.PolicyResult);this.AlterMergeColumnPolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter-merge column policy encoding","alter-merge column <table_column>:ColumnName policy encoding <string>:EncodingPolicy",Kusto.Language.Commands.PolicyResult);this.DeleteDatabasePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete database policy encoding","delete database <database>:DatabaseName policy encoding");this.DeleteTablePolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete table policy encoding","delete table <database_table>:TableName policy encoding");this.DeleteColumnPolicyEncoding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete column policy encoding","delete column <table_column>:ColumnName policy encoding");this.ShowDatabasePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database policy merge","show database (<database> | '*'):DatabaseName policy merge",Kusto.Language.Commands.PolicyResult);this.ShowTablePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table policy merge","show table (<database_table> | '*'):TableName policy merge",Kusto.Language.Commands.PolicyResult);this.AlterDatabasePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter database policy merge","alter database <database>:DatabaseName policy merge <string>:MergePolicy",Kusto.Language.Commands.PolicyResult);this.AlterTablePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table policy merge","alter table <database_table>:TableName policy merge <string>:MergePolicy",Kusto.Language.Commands.PolicyResult);this.AlterMergeDatabasePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter-merge database policy merge","alter-merge database <database>:DatabaseName policy merge <string>:MergePolicy",Kusto.Language.Commands.PolicyResult);this.AlterMergeTablePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter-merge table policy merge","alter-merge table <database_table>:TableName policy merge <string>:MergePolicy",Kusto.Language.Commands.PolicyResult);this.DeleteDatabasePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete database policy merge","delete database <database>:DatabaseName policy merge");this.DeleteTablePolicyMerge=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete table policy merge","delete table <database_table>:TableName policy merge");this.ShowTablePolicyRestrictedViewAccess=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table policy restricted_view_access","show table (<database_table> | '*'):TableName policy restricted_view_access",Kusto.Language.Commands.PolicyResult);this.AlterTablePolicyRestrictedViewAccess=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table policy restricted_view_access","alter table <database_table>:TableName policy restricted_view_access (true | false)",Kusto.Language.Commands.PolicyResult);this.AlterTablesPolicyRestrictedViewAccess=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter tables policy restricted_view_access","alter tables '(' { <table>:TableName, ',' }+ ')' policy restricted_view_access (true | false)",Kusto.Language.Commands.PolicyResult);this.DeleteTablePolicyRestrictedViewAccess=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete table policy restricted_view_access","delete table <database_table>:TableName policy restricted_view_access");this.ShowClusterPolicyRowStore=new Kusto.Language.Symbols.CommandSymbol.ctor("show cluster policy rowstore",Kusto.Language.Commands.PolicyResult);this.AlterClusterPolicyRowStore=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter cluster policy rowstore","alter cluster policy rowstore <string>:RowStorePolicy",Kusto.Language.Commands.PolicyResult);this.AlterMergeClusterPolicyRowStore=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter-merge cluster policy rowstore","alter-merge cluster policy rowstore <string>:RowStorePolicy",Kusto.Language.Commands.PolicyResult);this.ShowClusterPolicySandbox=new Kusto.Language.Symbols.CommandSymbol.ctor("show cluster policy sandbox",Kusto.Language.Commands.PolicyResult);this.AlterClusterPolicySandbox=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter cluster policy sandbox","alter cluster policy sandbox <string>:SandboxPolicy",Kusto.Language.Commands.PolicyResult);this.ShowDatabasePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database policy sharding","show database <database>:DatabaseName policy sharding",Kusto.Language.Commands.PolicyResult);this.ShowTablePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table policy sharding","show table (<database_table> | '*'):TableName policy sharding",Kusto.Language.Commands.PolicyResult);this.AlterDatabasePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter database policy sharding","alter database <database>:DatabaseName policy sharding <string>:ShardingPolicy",Kusto.Language.Commands.PolicyResult);this.AlterTablePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table policy sharding","alter table <database_table>:TableName policy sharding <string>:ShardingPolicy",Kusto.Language.Commands.PolicyResult);this.AlterMergeDatabasePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter-merge database policy sharding","alter-merge database <database>:DatabaseName policy sharding <string>:ShardingPolicy",Kusto.Language.Commands.PolicyResult);this.AlterMergeTablePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter-merge table policy sharding","alter-merge table <database_table>:TableName policy sharding <string>:ShardingPolicy",Kusto.Language.Commands.PolicyResult);this.DeleteDatabasePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete database policy sharding","delete database <database>:DatabaseName policy sharding");this.DeleteTablePolicySharding=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete table policy sharding","delete table <database_table>:TableName policy sharding");this.ShowDatabasePolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database policy streamingingestion","show database <database>:DatabaseName policy streamingingestion",Kusto.Language.Commands.PolicyResult);this.ShowTablePolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table policy streamingingestion","show table <database_table>:TableName policy streamingingestion",Kusto.Language.Commands.PolicyResult);this.AlterDatabasePolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter database policy streamingingestion","alter database <database>:DatabaseName policy streamingingestion <string>:StreamingIngestionPolicy",Kusto.Language.Commands.PolicyResult);this.AlterTablePolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("alter table policy streamingingestion","alter table <database_table>:TableName policy streamingingestion <string>:StreamingIngestionPolicy",Kusto.Language.Commands.PolicyResult);this.DeleteDatabasePolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete database policy streamingingestion","delete database <database>:DatabaseName policy streamingingestion");this.DeleteTablePolicyStreamingIngestion=new Kusto.Language.Symbols.CommandSymbol.$ctor1("delete table policy streamingingestion","delete table <database_table>:TableName policy streamingingestion");this.ShowPrincipalRoles=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show principal roles","show principal [<string>:Principal] roles",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Scope",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DisplayName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("AADObjectID",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Role",Kusto.Language.Symbols.ScalarTypes.String)]));this.ShowPrincipalsResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Role",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrincipalType",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrincipalDisplayName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrincipalObjectId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrincipalFQN",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Notes",Kusto.Language.Symbols.ScalarTypes.String)]);this.ShowClusterPrincipals=new Kusto.Language.Symbols.CommandSymbol.ctor("show cluster principals",Kusto.Language.Commands.ShowPrincipalsResult);this.ShowDatabasePrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database principals",System.String.format("show database <database>:DatabaseName principals",null),Kusto.Language.Commands.ShowPrincipalsResult);this.ShowTablePrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table principals",System.String.format("show table <table>:TableName principals",null),Kusto.Language.Commands.ShowPrincipalsResult);this.ShowFunctionPrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show function principals",System.String.format("show function <function>:FunctionName principals",null),Kusto.Language.Commands.ShowPrincipalsResult);this.ClusterRole="(admins | databasecreators | users | viewers):Role";this.DatabaseRole="(admins | ingestors | monitors | unrestrictedviewers | users | viewers):Role";this.TableRole="(admins | ingestors):Role";this.FunctionRole="admins:Role";this.PrincipalsClause="'(' { <string>:Principal, ',' }+ ')' [skip-results:SkipResults] [<string>:Notes]";this.PrincipalsOrNoneClause=System.String.format("(none [skip-results:SkipResults] | {0})",[Kusto.Language.Commands.PrincipalsClause]);this.AddClusterRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("add cluster role",System.String.format("add cluster {0} {1}",Kusto.Language.Commands.ClusterRole,Kusto.Language.Commands.PrincipalsClause),Kusto.Language.Commands.ShowPrincipalsResult);this.DropClusterRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop cluster role",System.String.format("drop cluster {0} {1}",Kusto.Language.Commands.ClusterRole,Kusto.Language.Commands.PrincipalsClause));this.SetClusterRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("set cluster role",System.String.format("set cluster {0} {1}",Kusto.Language.Commands.ClusterRole,Kusto.Language.Commands.PrincipalsOrNoneClause),Kusto.Language.Commands.ShowPrincipalsResult);this.AddDatabaseRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("add database role",System.String.format("add database <database>:DatabaseName {0} {1}",Kusto.Language.Commands.DatabaseRole,Kusto.Language.Commands.PrincipalsClause),Kusto.Language.Commands.ShowPrincipalsResult);this.DropDatabaseRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop database role",System.String.format("drop database <database>:DatabaseName {0} {1}",Kusto.Language.Commands.DatabaseRole,Kusto.Language.Commands.PrincipalsClause));this.SetDatabaseRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("set database role",System.String.format("set database <database>:DatabaseName {0} {1}",Kusto.Language.Commands.DatabaseRole,Kusto.Language.Commands.PrincipalsOrNoneClause),Kusto.Language.Commands.ShowPrincipalsResult);this.AddTableRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("add table role",System.String.format("add table <table>:TableName {0} {1}",Kusto.Language.Commands.TableRole,Kusto.Language.Commands.PrincipalsClause),Kusto.Language.Commands.ShowPrincipalsResult);this.DropTableRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop table role",System.String.format("drop table <table>:TableName {0} {1}",Kusto.Language.Commands.TableRole,Kusto.Language.Commands.PrincipalsClause));this.SetTableRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("set table role",System.String.format("set table <table>:TableName {0} {1}",Kusto.Language.Commands.TableRole,Kusto.Language.Commands.PrincipalsOrNoneClause),Kusto.Language.Commands.ShowPrincipalsResult);this.AddFunctionRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("add function role",System.String.format("add function <function>:FunctionName {0} {1}",Kusto.Language.Commands.FunctionRole,Kusto.Language.Commands.PrincipalsClause),Kusto.Language.Commands.ShowPrincipalsResult);this.DropFunctionRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop function role",System.String.format("drop function <function>:FunctionName {0} {1}",Kusto.Language.Commands.FunctionRole,Kusto.Language.Commands.PrincipalsClause));this.SetFunctionRole=new Kusto.Language.Symbols.CommandSymbol.$ctor1("set function role",System.String.format("set function <function>:FunctionName {0} {1}",Kusto.Language.Commands.FunctionRole,Kusto.Language.Commands.PrincipalsOrNoneClause),Kusto.Language.Commands.ShowPrincipalsResult);this.BlockedPrincipalsResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("PrincipalType",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrincipalDisplayName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrincipalObjectId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("PrincipalFQN",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Application",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("User",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("BlockedUntil",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("Reason",Kusto.Language.Symbols.ScalarTypes.String)]);this.ShowClusterBlockedPrincipals=new Kusto.Language.Symbols.CommandSymbol.ctor("show cluster blockedprincipals",Kusto.Language.Commands.BlockedPrincipalsResult);this.AddClusterBlockedPrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("add cluster blockedprincipals","add cluster blockedprincipals <string>:Principal [application <string>:AppName] [user <string>:UserName] [period <timespan>:Period] [reason <string>:Reason]",Kusto.Language.Commands.BlockedPrincipalsResult);this.DropClusterBlockedPrincipals=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop cluster blockedprincipals","drop cluster blockedprincipals <string>:Principal [application <string>:AppName] [user <string>:UserName]");this.SourceDataLocatorList="'(' { <string>:SourceDataLocator, ',' }+ ')'";this.PropertyList="with '(' { <name>:PropertyName '=' <value>:PropertyValue, ',' }+ ')'";this.IngestIntoTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ingest into table",System.String.format("ingest [async] into table! <table>:TableName {0} [{1}]",Kusto.Language.Commands.SourceDataLocatorList,Kusto.Language.Commands.PropertyList),new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("ExtentId",Kusto.Language.Symbols.ScalarTypes.Guid),new Kusto.Language.Symbols.ColumnSymbol("ItemLoaded",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Duration",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.ColumnSymbol("HasErrors",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("OperationId",Kusto.Language.Symbols.ScalarTypes.Guid)]));this.IngestInlineIntoTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("ingest inline into table",System.String.format("ingest inline into! table <name>:TableName [{0}] '<|' <input_data>:Data",[Kusto.Language.Commands.PropertyList]),new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("ExtendId",Kusto.Language.Symbols.ScalarTypes.Guid)]));this.DataIngestionSetAppendResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("ExtentId",Kusto.Language.Symbols.ScalarTypes.Guid),new Kusto.Language.Symbols.ColumnSymbol("OriginalSize",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("ExtentSize",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("ColumnSize",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("IndexSize",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("RowCount",Kusto.Language.Symbols.ScalarTypes.Long)]);this.SetTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("set table",System.String.format("set [async] <name>:TableName [{0}] '<|' <input_query>:QueryOrCommand",[Kusto.Language.Commands.PropertyList]),Kusto.Language.Commands.DataIngestionSetAppendResult);this.AppendTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("append table",System.String.format("append [async] <table>:TableName [{0}] '<|' <input_query>:QueryOrCommand",[Kusto.Language.Commands.PropertyList]),Kusto.Language.Commands.DataIngestionSetAppendResult);this.SetOrAppendTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("set-or-append table",System.String.format("set-or-append [async] <name>:TableName [{0}] '<|' <input_query>:QueryOrCommand",[Kusto.Language.Commands.PropertyList]),Kusto.Language.Commands.DataIngestionSetAppendResult);this.SetOrReplaceTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("set-or-replace table",System.String.format("set-or-replace [async] <name>:TableName [{0}] '<|' <input_query>:QueryOrCommand",[Kusto.Language.Commands.PropertyList]),Kusto.Language.Commands.DataIngestionSetAppendResult);this.DataConnectionStringList="'(' { <string>:DataConnectionString, ',' }+ ')'";this.ExportToStorage=new Kusto.Language.Symbols.CommandSymbol.$ctor1("export to storage",System.String.format("export [async] [compressed] to (csv|tsv|json|parquet) {0} [{1}] '<|' <input_query>:Query",Kusto.Language.Commands.DataConnectionStringList,Kusto.Language.Commands.PropertyList));this.ExportToSqlTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("export to sql table",System.String.format("export [async] to sql <name>:SqlTableName <string>:SqlConnectionString [{0}] '<|' <input_query>:Query",[Kusto.Language.Commands.PropertyList]));this.ExportToExternalTable=new Kusto.Language.Symbols.CommandSymbol.$ctor1("export to external table",System.String.format("export [async] to table <name>:ExternalTableName [{0}] '<|' <input_query>:Query",[Kusto.Language.Commands.PropertyList]));this.OverClause="over '(' { <name>:TableName, ',' }+ ')'";this.CreateOrAlterContinuousExport=new Kusto.Language.Symbols.CommandSymbol.$ctor1("create-or-alter continuous-export",System.String.format("create-or-alter continuous-export <name>:ContinuousExportName [{0}] to table <name>:ExternalTableName [{1}] '<|' <input_query>:Query",Kusto.Language.Commands.OverClause,Kusto.Language.Commands.PropertyList));this.ShowContinuousExportResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Name",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ExternalTableName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Query",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ForcedLatency",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.ColumnSymbol("IntervalBetweenRuns",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.ColumnSymbol("CursorScopedTables",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ExportProperties",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("LastRunTime",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("StartCursor",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IsDisabled",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("LastRunResult",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ExportedTo",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("IsRunning",Kusto.Language.Symbols.ScalarTypes.Bool)]);this.ShowContinuousExport=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show continuous-export","show continuous-export <name>:ContinuousExportName",Kusto.Language.Commands.ShowContinuousExportResult);this.ShowContinuousExports=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show continuous-exports","show continuous-exports",Kusto.Language.Commands.ShowContinuousExportResult);this.ShowContinuousExportExportedArtifacts=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show continuous-export exported-artifacts","show continuous-export <name>:ContinuousExportName exported-artifacts",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Timestamp",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("ExternalTableName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Path",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("NumRecords",Kusto.Language.Symbols.ScalarTypes.Long)]));this.ShowContinuousExportFailures=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show continuous-export failures","show continuous-export <name>:ContinuousExportName failures",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Timestamp",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("OperationId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Name",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("LastSuccessRun",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("FailureKind",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Details",Kusto.Language.Symbols.ScalarTypes.String)]));this.DropContinuousExport=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop continuous-export","drop continuous-export <name>:ContinousExportName",Kusto.Language.Commands.ShowContinuousExportResult);this.EnableContinuousExport=new Kusto.Language.Symbols.CommandSymbol.$ctor1("enable continuous-export","enable continuous-export <name>:ContinousExportName",Kusto.Language.Commands.ShowContinuousExportResult);this.DisableContinuousExport=new Kusto.Language.Symbols.CommandSymbol.$ctor1("disable continuous-export","disable continuous-export <name>:ContinousExportName",Kusto.Language.Commands.ShowContinuousExportResult);this.ShowCluster=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show cluster","show cluster",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("NodeId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Address",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Name",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("StartTime",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("IsAdmin",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("MachineTotalMemory",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("MachineAvailableMemory",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("ProcessorCount",Kusto.Language.Symbols.ScalarTypes.Int),new Kusto.Language.Symbols.ColumnSymbol("EnvironmentDescription",Kusto.Language.Symbols.ScalarTypes.String)]));this.ShowDiagnostics=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show diagnostics","show diagnostics",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("IsHealthy",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("IsScaleOutRequired",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("MachineTotal",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("MachinesOffline",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("NodeLastRestartedOn",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("AdminLastElectedOn",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("MemoryLoadFactor",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("ExtentsTotal",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("InstancesTargetBasedOnDataCapacity",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("TotalOriginalDataSize",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("IngestionsLoadFactor",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("IngestionsInProgress",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("IngestionsSuccessRate",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("MergesInProgress",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("BuildVersion",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("BuildTime",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("ClusterDataCapacityFactor",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("IsDataWarmingRequired",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("DataWarmingLastRunOn",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("MergesSuccessRate",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("NotHealthyReason",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("IsAttentionRequired",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.ColumnSymbol("AttentionRequiredReason",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ProductVersion",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("FaliedIngestOperations",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("FailedMergeOperations",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("MaxExtentsInSingleTable",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("TableWithMaxExtents",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("WarmExtentSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("NumberOfDatabases",Kusto.Language.Symbols.ScalarTypes.Int)]));this.ShowCapacity=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show capacity","show capacity",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Resource",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Total",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Consumed",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Remaining",Kusto.Language.Symbols.ScalarTypes.Long)]));this.ShowOperations=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show operations","show operations [(<guid>:OperationId | '(' { <guid>:OperationId, ',' }+ ')')]",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Id",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Operation",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("NodeId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("StartedOn",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("LastUpdatedOn",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("Duration",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("State",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Status",Kusto.Language.Symbols.ScalarTypes.String)]));this.ShowOperationDetails=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show operation details","show operation <guid>:OperationId details",(new Kusto.Language.Symbols.TableSymbol.ctor).Open());this.JournalResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Event",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("EventTimestamp",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("Database",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("EntityName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("UpdatedEntityName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("EntityVersion",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("EntityContainerName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("OriginalEntityState",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("UpdatedEntityState",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ChangeCommand",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Principal",Kusto.Language.Symbols.ScalarTypes.String)]);this.ShowJournal=new Kusto.Language.Symbols.CommandSymbol.ctor("show journal",Kusto.Language.Commands.JournalResult);this.ShowDatabaseJournal=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database journal","show database <database>:DatabaseName journal",Kusto.Language.Commands.JournalResult);this.ShowClusterJournal=new Kusto.Language.Symbols.CommandSymbol.ctor("show cluster journal",Kusto.Language.Commands.JournalResult);this.QueryResults=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("ClientActivityId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Text",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Database",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("StartedOn",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("LastUpdatedOn",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("Duration",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.ColumnSymbol("State",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("RootActivityId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("User",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("FailureReason",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("TotalCpu",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.ColumnSymbol("CacheStatistics",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("Application",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("MemoryPeak",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("ScannedExtentsStatistics",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("Principal",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ClientRequestProperties",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("ResultSetStatistics",Kusto.Language.Symbols.ScalarTypes.Dynamic)]);this.ShowQueries=new Kusto.Language.Symbols.CommandSymbol.ctor("show queries",Kusto.Language.Commands.QueryResults);this.ShowRunningQueries=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show running queries","show running queries [by (user <string>:UserName | '*')]",Kusto.Language.Commands.QueryResults);this.CancelQuery=new Kusto.Language.Symbols.CommandSymbol.$ctor1("cancel query","cancel query <string>:ClientRequestId");this.ShowQueryPlan=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show queryplan","show queryplan '<|' <input_query>:Query",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("ResultType",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("RelopTree",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("QueryPlan",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Stat",Kusto.Language.Symbols.ScalarTypes.String)]));this.ShowBasicAuthUsers=new Kusto.Language.Symbols.CommandSymbol.ctor("show basicauth users",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("UserName",Kusto.Language.Symbols.ScalarTypes.String)]));this.ShowCache=new Kusto.Language.Symbols.CommandSymbol.ctor("show cache",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("NodeId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("TotalMemoryCapacity",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("MemoryCacheCapacity",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("MemoryCacheInUse",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("MemoryCacheHitCount",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("TotalDiskCapacity",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("DiskCacheCapacity",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("DiskCacheInUse",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("DiskCacheHitCount",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("DiskCacheMissCount",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("MemoryCacheDetails",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("DiskCacheDetails",Kusto.Language.Symbols.ScalarTypes.String)]));this.ShowCommands=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show commands","show commands",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("ClientActivityId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CommandType",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Text",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Database",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("StartedOn",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("LastUpdatedOn",Kusto.Language.Symbols.ScalarTypes.DateTime)]));this.ShowCommandsAndQueries=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show commands-and-queries","show commands-and-queries",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("ClientActivityId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CommandType",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Text",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Database",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("StartedOn",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("LastUpdatedOn",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("Duration",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.ColumnSymbol("State",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("FailureReason",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("RootActivityId",Kusto.Language.Symbols.ScalarTypes.Guid),new Kusto.Language.Symbols.ColumnSymbol("User",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Application",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Principal",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ClientRequestProperties",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("TotalCpu",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.ColumnSymbol("MemoryPeak",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("CacheStatistics",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("ScannedExtentsStatistics",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("ResultSetStatistics",Kusto.Language.Symbols.ScalarTypes.Dynamic)]));this.ShowIngestionFailures=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show ingestion failures","show ingestion failures [with '(' OperationId '=' <guid>:OperationId ')']",new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("OperationId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Database",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Table",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("FailedOn",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("IngestionSourcePath",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Details",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("FailureKind",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("RootActivityId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("OperationKind",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("OriginatesFromUpdatePolicy",Kusto.Language.Symbols.ScalarTypes.Bool)]));this.ShowExtentsResults=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("ExtendId",Kusto.Language.Symbols.ScalarTypes.Guid),new Kusto.Language.Symbols.ColumnSymbol("DatabaseName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("TableName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("MaxCreatedOn",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("OriginalSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("ExtentSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("CompressedSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("IndexSize",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("Blocks",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Segments",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("AssignedDataNodes",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("LoadedDataNodes",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ExtentContainerId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("RowCount",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("MinCreatedOn",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.ColumnSymbol("Tags",Kusto.Language.Symbols.ScalarTypes.String)]);this.ShowClusterExtents=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show cluster extents","show cluster extents [hot]",Kusto.Language.Commands.ShowExtentsResults);this.ExtentIdList="'(' {<guid>:ExtentId, ','}+ ')'";this.TagWhereClause="where { tags (has | contains | '!has' | '!contains') <string>:Tag, and }+";this.ShowDatabaseExtents=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show database extents",System.String.format("show database <database>:DatabaseName extents [{0}] [hot] [{1}]",Kusto.Language.Commands.ExtentIdList,Kusto.Language.Commands.TagWhereClause),Kusto.Language.Commands.ShowExtentsResults);this.ShowTableExtents=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show table extents",System.String.format("show table <table>:TableName extents [{0}] [hot] [{1}]",Kusto.Language.Commands.ExtentIdList,Kusto.Language.Commands.TagWhereClause),Kusto.Language.Commands.ShowExtentsResults);this.TableNameList="'(' { <table>:TableName, ',' }+ ')'";this.ShowTablesExtents=new Kusto.Language.Symbols.CommandSymbol.$ctor1("show tables extents",System.String.format("show tables {0} extents [{1}] [hot] [{2}]",Kusto.Language.Commands.TableNameList,Kusto.Language.Commands.ExtentIdList,Kusto.Language.Commands.TagWhereClause),Kusto.Language.Commands.ShowExtentsResults);this.MergeExtentsResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("OriginalExtentId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ResultExtentId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Duration",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]);this.GuidList="'(' {<guid>:GUID, ','}+ ')'";this.MergeExtents=new Kusto.Language.Symbols.CommandSymbol.$ctor1("merge extents",System.String.format("merge [async] <table>:TableName {0} [with '(' rebuild '=' true ')']",[Kusto.Language.Commands.GuidList]),Kusto.Language.Commands.MergeExtentsResult);this.MergeExtentsDryrun=new Kusto.Language.Symbols.CommandSymbol.$ctor1("merge extents",System.String.format("merge dryrun <table>:TableName {0}",[Kusto.Language.Commands.GuidList]),Kusto.Language.Commands.MergeExtentsResult);this.MoveExtentsResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("OriginalExtentId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ResultExtentId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Details",Kusto.Language.Symbols.ScalarTypes.String)]);this.MoveExtentsFrom=new Kusto.Language.Symbols.CommandSymbol.$ctor1("move extents from",System.String.format("move [async] extents (all | {0}) from table <table>:SourceTableName to table <table>:DestinationTableName",[Kusto.Language.Commands.GuidList]),Kusto.Language.Commands.MoveExtentsResult);this.MoveExtentsQuery=new Kusto.Language.Symbols.CommandSymbol.$ctor1("move extents query",System.String.format("move [async] extents to table <table>:DestinationTableName '<|' <input_query>:Query",null),Kusto.Language.Commands.MoveExtentsResult);this.DropExtentResult=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("ExtentId",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("TableName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("CreatedOn",Kusto.Language.Symbols.ScalarTypes.DateTime)]);this.DropExtent=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop extent","drop extent <guid>:ExtentId [from <table>:TableName]",Kusto.Language.Commands.DropExtentResult);this.DropProperties="[older <long>:Older (days | hours)] from (<table>:TableName | all tables) [trim by (extentsize | datasize) <long>:TrimSize (MB | GB | bytes)] [limit <long>:LimitCount]";this.DropExtents=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop extents","drop extents \r\n                    ('(' { <guid>:ExtentId, ',' }+ ')' [from <table>:TableName]\r\n                     | whatif '<|' <input_query>:Query\r\n                     | '<|' <input_query>:Query\r\n                     | older <long>:Older (days | hours) from (<table>:TableName | all tables) [trim by (extentsize | datasize) <long>:TrimSize (MB | GB | bytes)] [limit <long>:LimitCount]\r\n                     | from (<table>:TableName | all tables) [trim by (extentsize | datasize) <long>:TrimSize (MB | GB | bytes)] [limit <long>:LimitCount]\r\n                     )",Kusto.Language.Commands.DropExtentResult);this.DropPretendExtentsByProperties=new Kusto.Language.Symbols.CommandSymbol.$ctor1("drop-pretend extents by properties",System.String.format("drop-pretend extents {0}",[Kusto.Language.Commands.DropProperties]),Kusto.Language.Commands.DropExtentResult);this.All=System.Array.init([Kusto.Language.Commands.ShowDatabase,Kusto.Language.Commands.ShowDatabaseDetails,Kusto.Language.Commands.ShowDatabaseIdentity,Kusto.Language.Commands.ShowDatabasePolicies,Kusto.Language.Commands.ShowClusterDatabases,Kusto.Language.Commands.ShowClusterDatabasesDetails,Kusto.Language.Commands.ShowClusterDatabasesIdentity,Kusto.Language.Commands.ShowClusterDatabasesPolicies,Kusto.Language.Commands.ShowClusterDatabasesDataStats,Kusto.Language.Commands.CreateDatabasePersist,Kusto.Language.Commands.CreateDatabaseVolatile,Kusto.Language.Commands.AttachDatabase,Kusto.Language.Commands.DetachDatabase,Kusto.Language.Commands.AlterDatabasePrettyName,Kusto.Language.Commands.DropDatabasePrettyName,Kusto.Language.Commands.AlterDatabasePersistMetadata,Kusto.Language.Commands.SetAccess,Kusto.Language.Commands.ShowDatabaseSchema,Kusto.Language.Commands.ShowDatabaseSchemaAsJson,Kusto.Language.Commands.ShowDatabasesSchema,Kusto.Language.Commands.ShowDatabasesSchemaAsJson,Kusto.Language.Commands.ShowTables,Kusto.Language.Commands.ShowTablesDetails,Kusto.Language.Commands.ShowTableDetails,Kusto.Language.Commands.ShowTableCslSchema,Kusto.Language.Commands.ShowTableSchemaAsJson,Kusto.Language.Commands.CreateTable,Kusto.Language.Commands.CreateMergeTable,Kusto.Language.Commands.CreateTables,Kusto.Language.Commands.AlterTable,Kusto.Language.Commands.AlterMergeTable,Kusto.Language.Commands.RenameTable,Kusto.Language.Commands.RenameTables,Kusto.Language.Commands.DropTable,Kusto.Language.Commands.UndoDropTable,Kusto.Language.Commands.DropTables,Kusto.Language.Commands.CreateTableIngestionMapping,Kusto.Language.Commands.AlterTableIngestionMapping,Kusto.Language.Commands.ShowTableIngestionMappings,Kusto.Language.Commands.ShowTableIngestionMapping,Kusto.Language.Commands.DropTableIngestionMapping,Kusto.Language.Commands.AlterTableDocString,Kusto.Language.Commands.AlterTableFolder,Kusto.Language.Commands.RenameColumn,Kusto.Language.Commands.RenameColumns,Kusto.Language.Commands.AlterColumnType,Kusto.Language.Commands.DropColumn,Kusto.Language.Commands.DropTableColumns,Kusto.Language.Commands.AlterTableColumnDocStrings,Kusto.Language.Commands.AlterMergeTableColumnDocStrings,Kusto.Language.Commands.ShowFunctions,Kusto.Language.Commands.ShowFunction,Kusto.Language.Commands.DropFunction,Kusto.Language.Commands.AlterFunctionDocString,Kusto.Language.Commands.AlterFunctionFolder,Kusto.Language.Commands.CreateFunction,Kusto.Language.Commands.AlterFunction,Kusto.Language.Commands.CreateOrAlterFunction,Kusto.Language.Commands.ShowExternalTables,Kusto.Language.Commands.ShowExternalTable,Kusto.Language.Commands.ShowExternalTableCslSchema,Kusto.Language.Commands.ShowExternalTableSchema,Kusto.Language.Commands.DropExternalTable,Kusto.Language.Commands.CreateExternalTable,Kusto.Language.Commands.AlterExternalTable,Kusto.Language.Commands.ShowDatabasePolicyCaching,Kusto.Language.Commands.AlterDatabasePolicyCaching,Kusto.Language.Commands.ShowTablePolicyCaching,Kusto.Language.Commands.AlterTablePolicyCaching,Kusto.Language.Commands.AlterClusterPolicyCaching,Kusto.Language.Commands.DeleteTablePolicyCaching,Kusto.Language.Commands.AlterTablePolicyIngestionTime,Kusto.Language.Commands.AlterTablesPolicyIngestionTime,Kusto.Language.Commands.ShowTablePolicyIngestionTime,Kusto.Language.Commands.DeleteTablePolicyIngestionTime,Kusto.Language.Commands.ShowTablePolicyRetention,Kusto.Language.Commands.ShowDatabasePolicyRetention,Kusto.Language.Commands.DeleteTablePolicyRetention,Kusto.Language.Commands.DeleteDatabasePolicyRetention,Kusto.Language.Commands.AlterTablePolicyRetention,Kusto.Language.Commands.AlterTablesPolicyRetention,Kusto.Language.Commands.AlterDatabasePolicyRetention,Kusto.Language.Commands.AlterMergeTablePolicyRetention,Kusto.Language.Commands.AlterMergeDatabasePolicyRetention,Kusto.Language.Commands.ShowTablePolicyRowOrder,Kusto.Language.Commands.DeleteTablePolicyRowOrder,Kusto.Language.Commands.AlterTablePolicyRowOrder,Kusto.Language.Commands.AlterTablesPolicyRowOrder,Kusto.Language.Commands.AlterMergeTablePolicyRowOrder,Kusto.Language.Commands.ShowTablePolicyUpdate,Kusto.Language.Commands.AlterTablePolicyUpdate,Kusto.Language.Commands.AlterMergeTablePolicyUpdate,Kusto.Language.Commands.DeleteTablePolicyUpdate,Kusto.Language.Commands.ShowDatabasePolicyIngestionBatching,Kusto.Language.Commands.ShowTablePolicyIngestionBatching,Kusto.Language.Commands.AlterDatabasePolicyIngestionBatching,Kusto.Language.Commands.AlterTablePolicyIngestionBatching,Kusto.Language.Commands.AlterTablesPolicyIngestionBatching,Kusto.Language.Commands.DeleteDatabasePolicyIngestionBatching,Kusto.Language.Commands.DeleteTablePolicyIngestionBatching,Kusto.Language.Commands.ShowDatabasePolicyEncoding,Kusto.Language.Commands.ShowTablePolicyEncoding,Kusto.Language.Commands.ShowColumnPolicyEncoding,Kusto.Language.Commands.AlterDatabasePolicyEncoding,Kusto.Language.Commands.AlterTablePolicyEncoding,Kusto.Language.Commands.AlterColumnPolicyEncoding,Kusto.Language.Commands.AlterMergeDatabasePolicyEncoding,Kusto.Language.Commands.AlterMergeTablePolicyEncoding,Kusto.Language.Commands.AlterMergeColumnPolicyEncoding,Kusto.Language.Commands.DeleteDatabasePolicyEncoding,Kusto.Language.Commands.DeleteTablePolicyEncoding,Kusto.Language.Commands.DeleteColumnPolicyEncoding,Kusto.Language.Commands.ShowDatabasePolicyMerge,Kusto.Language.Commands.ShowTablePolicyMerge,Kusto.Language.Commands.AlterDatabasePolicyMerge,Kusto.Language.Commands.AlterTablePolicyMerge,Kusto.Language.Commands.AlterMergeDatabasePolicyMerge,Kusto.Language.Commands.AlterMergeTablePolicyMerge,Kusto.Language.Commands.DeleteDatabasePolicyMerge,Kusto.Language.Commands.DeleteTablePolicyMerge,Kusto.Language.Commands.ShowTablePolicyRestrictedViewAccess,Kusto.Language.Commands.AlterTablePolicyRestrictedViewAccess,Kusto.Language.Commands.AlterTablesPolicyRestrictedViewAccess,Kusto.Language.Commands.DeleteTablePolicyRestrictedViewAccess,Kusto.Language.Commands.ShowClusterPolicyRowStore,Kusto.Language.Commands.AlterClusterPolicyRowStore,Kusto.Language.Commands.AlterMergeClusterPolicyRowStore,Kusto.Language.Commands.ShowClusterPolicySandbox,Kusto.Language.Commands.AlterClusterPolicySandbox,Kusto.Language.Commands.ShowDatabasePolicySharding,Kusto.Language.Commands.ShowTablePolicySharding,Kusto.Language.Commands.AlterDatabasePolicySharding,Kusto.Language.Commands.AlterTablePolicySharding,Kusto.Language.Commands.AlterMergeDatabasePolicySharding,Kusto.Language.Commands.AlterMergeTablePolicySharding,Kusto.Language.Commands.DeleteDatabasePolicySharding,Kusto.Language.Commands.DeleteTablePolicySharding,Kusto.Language.Commands.ShowDatabasePolicyStreamingIngestion,Kusto.Language.Commands.ShowTablePolicyStreamingIngestion,Kusto.Language.Commands.AlterDatabasePolicyStreamingIngestion,Kusto.Language.Commands.AlterTablePolicyStreamingIngestion,Kusto.Language.Commands.DeleteDatabasePolicyStreamingIngestion,Kusto.Language.Commands.DeleteTablePolicyStreamingIngestion,Kusto.Language.Commands.ShowPrincipalRoles,Kusto.Language.Commands.ShowClusterPrincipals,Kusto.Language.Commands.ShowDatabasePrincipals,Kusto.Language.Commands.ShowTablePrincipals,Kusto.Language.Commands.ShowFunctionPrincipals,Kusto.Language.Commands.AddClusterRole,Kusto.Language.Commands.DropClusterRole,Kusto.Language.Commands.SetClusterRole,Kusto.Language.Commands.AddDatabaseRole,Kusto.Language.Commands.DropDatabaseRole,Kusto.Language.Commands.SetDatabaseRole,Kusto.Language.Commands.AddTableRole,Kusto.Language.Commands.DropTableRole,Kusto.Language.Commands.SetTableRole,Kusto.Language.Commands.AddFunctionRole,Kusto.Language.Commands.DropFunctionRole,Kusto.Language.Commands.SetFunctionRole,Kusto.Language.Commands.ShowClusterBlockedPrincipals,Kusto.Language.Commands.AddClusterBlockedPrincipals,Kusto.Language.Commands.DropClusterBlockedPrincipals,Kusto.Language.Commands.IngestInlineIntoTable,Kusto.Language.Commands.IngestIntoTable,Kusto.Language.Commands.SetTable,Kusto.Language.Commands.AppendTable,Kusto.Language.Commands.SetOrAppendTable,Kusto.Language.Commands.SetOrReplaceTable,Kusto.Language.Commands.ExportToStorage,Kusto.Language.Commands.ExportToSqlTable,Kusto.Language.Commands.ExportToExternalTable,Kusto.Language.Commands.CreateOrAlterContinuousExport,Kusto.Language.Commands.ShowContinuousExport,Kusto.Language.Commands.ShowContinuousExports,Kusto.Language.Commands.ShowContinuousExportExportedArtifacts,Kusto.Language.Commands.ShowContinuousExportFailures,Kusto.Language.Commands.DropContinuousExport,Kusto.Language.Commands.EnableContinuousExport,Kusto.Language.Commands.DisableContinuousExport,Kusto.Language.Commands.ShowCluster,Kusto.Language.Commands.ShowDiagnostics,Kusto.Language.Commands.ShowCapacity,Kusto.Language.Commands.ShowOperations,Kusto.Language.Commands.ShowOperationDetails,Kusto.Language.Commands.ShowJournal,Kusto.Language.Commands.ShowDatabaseJournal,Kusto.Language.Commands.ShowClusterJournal,Kusto.Language.Commands.ShowQueries,Kusto.Language.Commands.ShowRunningQueries,Kusto.Language.Commands.CancelQuery,Kusto.Language.Commands.ShowQueryPlan,Kusto.Language.Commands.ShowBasicAuthUsers,Kusto.Language.Commands.ShowCache,Kusto.Language.Commands.ShowCommands,Kusto.Language.Commands.ShowCommandsAndQueries,Kusto.Language.Commands.ShowIngestionFailures,Kusto.Language.Commands.ShowClusterExtents,Kusto.Language.Commands.ShowDatabaseExtents,Kusto.Language.Commands.ShowTableExtents,Kusto.Language.Commands.ShowTablesExtents,Kusto.Language.Commands.MergeExtents,Kusto.Language.Commands.MergeExtentsDryrun,Kusto.Language.Commands.MoveExtentsFrom,Kusto.Language.Commands.MoveExtentsQuery,Kusto.Language.Commands.DropExtent,Kusto.Language.Commands.DropExtents,Kusto.Language.Commands.DropPretendExtentsByProperties],Kusto.Language.Symbols.CommandSymbol)}}}});Bridge.define("Kusto.Language.Diagnostic",{statics:{fields:{NoDiagnostics:null},ctors:{init:function(){this.NoDiagnostics=System.Array.init(0,null,Kusto.Language.Diagnostic)}}},fields:{start:0,length:0},props:{Message:null,HasLocation:{get:function(){return this.length>0}},Start:{get:function(){return this.start}},Length:{get:function(){return this.length}},End:{get:function(){return this.Start+this.Length|0}}},ctors:{ctor:function(message){Kusto.Language.Diagnostic.$ctor1.call(this,message,0,0)},$ctor1:function(message,start,length){this.$initialize();this.Message=message;this.start=start;this.length=length}},methods:{WithLocation:function(location){return new Kusto.Language.Diagnostic.$ctor1(this.Message,location.TextStart,location.Width)},WithLocation$1:function(start,length){return new Kusto.Language.Diagnostic.$ctor1(this.Message,start,length)}}});Bridge.define("Kusto.Language.DiagnosticFacts",{statics:{methods:{GetMissingCharacter:function(ch){return new Kusto.Language.Diagnostic.ctor(System.String.format("Missing '{0}'",[Bridge.box(ch,System.Char,String.fromCharCode,System.Char.getHashCode)]))},GetUnexpectedCharacter:function(text){return new Kusto.Language.Diagnostic.ctor(System.String.format("Unexpected '{0}'",[text]))},GetMalformedToken:function(term){return new Kusto.Language.Diagnostic.ctor(System.String.format("Malformed {0}",[term]))},GetMalformedLiteral:function(){return new Kusto.Language.Diagnostic.ctor("Malformed literal")},GetTokenExpected:function(kinds){return kinds===void 0&&(kinds=[]),Kusto.Language.DiagnosticFacts.GetTokenExpected$1(Bridge.cast(kinds,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Syntax.SyntaxKind)))},GetTokenExpected$1:function(kinds){var list=Kusto.Language.Utils.ListExtensions.Join(System.Linq.Enumerable.from(kinds).select(function(k){return Kusto.Language.Syntax.SyntaxFacts.GetText(k)}).toList(System.String),", "," or ");return new Kusto.Language.Diagnostic.ctor(System.String.format("Expected {0}",[list]))},GetTokenExpected$2:function(texts){var list=Kusto.Language.Utils.ListExtensions.Join(texts,", "," or ");return new Kusto.Language.Diagnostic.ctor(System.String.format("Expected {0}",[list]))},GetTokenExpected$3:function(tokens){return tokens===void 0&&(tokens=[]),Kusto.Language.DiagnosticFacts.GetTokenExpected$2(Bridge.cast(tokens,System.Collections.Generic.IReadOnlyList$1(System.String)))},GetMissingElement:function(term){return new Kusto.Language.Diagnostic.ctor(System.String.format("Missing {0}",[term]))},GetMissingName:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("name")},GetMissingValue:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("value")},GetMissingExpression:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("expression")},GetMissingNumber:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("number")},GetMissingString:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("string")},GetMissingBoolean:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("boolean")},GetMissingTypeOfLiteral:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("typeof")},GetMissingFunctionCall:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("function call")},GetMissingFunctionDeclaration:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("function declaration")},GetMissingTypeName:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("type name")},GetMissingParameter:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("parameter")},GetMissingFirstOrLast:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("first or last")},GetMissingJsonValue:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("json value")},GetMissingJoinOnClause:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("join on condition clause")},GetMissingJsonPair:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("json key:value pair")},GetMissingStatement:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("statement")},GetMissingPatternMatch:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("pattern match clause")},GetMissingClause:function(){return Kusto.Language.DiagnosticFacts.GetMissingElement("clause")},GetParsePatternMustStartWithColumnNameOrStar:function(){return new Kusto.Language.Diagnostic.ctor("The pattern must start with a column name or *")},GetParsePatternNameDoesNotFollowStringLiteral:function(){return new Kusto.Language.Diagnostic.ctor("The column name must follow a string literal")},GetParsePatternStringLiteralMustFollowStar:function(){return new Kusto.Language.Diagnostic.ctor("A string literal must follow a *")},GetParsePatternUsingStarAfterStringColumnIsAmbiguous:function(){return new Kusto.Language.Diagnostic.ctor("Using * after parsing a string column is abmiguous.")},GetInvalidPatternPart:function(){return new Kusto.Language.Diagnostic.ctor("Invalid pattern part.")},GetIdentifierNameOnly:function(){return new Kusto.Language.Diagnostic.ctor("The name must be a single identifier only.")},GetOperatorNotDefined:function(name,argumentTypes){return argumentTypes===void 0&&(argumentTypes=[]),Kusto.Language.DiagnosticFacts.GetOperatorNotDefined$1(name,Bridge.cast(argumentTypes,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol)))},GetOperatorNotDefined$1:function(name,argumentTypes){if(System.Array.getCount(argumentTypes,Kusto.Language.Symbols.TypeSymbol)===1)return new Kusto.Language.Diagnostic.ctor(System.String.format("The operator '{0}' is not defined for the operand type {1}.",name,System.Array.getItem(argumentTypes,0,Kusto.Language.Symbols.TypeSymbol).Name));var list=Kusto.Language.Utils.ListExtensions.Join(System.Linq.Enumerable.from(argumentTypes).select(function(t){return t.Name}).toList(System.String),", "," and ");return new Kusto.Language.Diagnostic.ctor(System.String.format("The operator '{0}' is not defined for the operand types {1}.",name,list))},GetTypeExpected:function(type){return new Kusto.Language.Diagnostic.ctor(System.String.format("A value of type '{0}' expected.",[type.Name]))},GetTypeExpected$1:function(types){if(System.Array.getCount(types,Kusto.Language.Symbols.TypeSymbol)===0)return Kusto.Language.DiagnosticFacts.GetTypeExpected(System.Array.getItem(types,0,Kusto.Language.Symbols.TypeSymbol));var list=Kusto.Language.Utils.ListExtensions.Join(System.Linq.Enumerable.from(types).select(function(t){return"'"+(t.Name||"")+"'"}).toList(System.String),", "," or ");return new Kusto.Language.Diagnostic.ctor(System.String.format("A value of type {0} expected.",[list]))},GetScalarTypeExpected:function(){return new Kusto.Language.Diagnostic.ctor(System.String.format("Scalar value expected.",null))},GetColumnExpected:function(){return new Kusto.Language.Diagnostic.ctor("Column name expected.")},GetRenameAssignmentExpected:function(){return new Kusto.Language.Diagnostic.ctor("Column rename assignment expected.")},GetTableExpected:function(){return new Kusto.Language.Diagnostic.ctor("Table expected.")},GetTableOrScalarExpected:function(){return new Kusto.Language.Diagnostic.ctor("A table or scalar value expected.")},GetSingleColumnTableExpected:function(){return new Kusto.Language.Diagnostic.ctor("A table with only one column expected.")},GetDatabaseExpected:function(){return new Kusto.Language.Diagnostic.ctor("Database expected.")},GetClusterExpected:function(){return new Kusto.Language.Diagnostic.ctor("Cluster expected.")},GetTypeNotAllowed:function(type){return new Kusto.Language.Diagnostic.ctor(System.String.format("The value of type '{0}' is not allowed in this context.",[type.Name]))},GetFunctionRequiresArgumentList:function(functionName){return new Kusto.Language.Diagnostic.ctor(System.String.format("The function '{0}' requires an argument list.",[functionName]))},GetArgumentCountExpected:function(count){return count===0?new Kusto.Language.Diagnostic.ctor(System.String.format("No arguments expected.",null)):count===1?new Kusto.Language.Diagnostic.ctor(System.String.format("1 argument expected.",null)):new Kusto.Language.Diagnostic.ctor(System.String.format("{0} arguments expected.",[Bridge.box(count,System.Int32)]))},GetFunctionExpectsArgumentCountExact:function(functionName,count){return count===0?new Kusto.Language.Diagnostic.ctor(System.String.format("The function '{0}' expects no arguments.",[functionName])):count===1?new Kusto.Language.Diagnostic.ctor(System.String.format("The function '{0}' expects 1 argument.",[functionName])):new Kusto.Language.Diagnostic.ctor(System.String.format("The function '{0}' expects {1} arguments.",functionName,Bridge.box(count,System.Int32)))},GetFunctionExpectsArgumentCountRange:function(functionName,min,max){return min===max?Kusto.Language.DiagnosticFacts.GetFunctionExpectsArgumentCountExact(functionName,min):new Kusto.Language.Diagnostic.ctor(System.String.format("The function '{0}' expects between {1} and {2} arguments.",functionName,Bridge.box(min,System.Int32),Bridge.box(max,System.Int32)))},GetFunctionHasIncorrectNumberOfArguments:function(){return new Kusto.Language.Diagnostic.ctor(System.String.format("The function call has an incorrect number of arguments.",null))},GetScalarFunctionNotDefined:function(name){return new Kusto.Language.Diagnostic.ctor(System.String.format("The scalar function '{0}' is not defined.",[name]))},GetAggregateFunctionNotDefined:function(name){return new Kusto.Language.Diagnostic.ctor(System.String.format("The aggregate function '{0}' is not defined.",[name]))},GetPlugInFunctionNotDefined:function(name){return new Kusto.Language.Diagnostic.ctor(System.String.format("The plug-in function '{0}' is not defined.",[name]))},GetFunctionNotDefinedWithMatchingParameters:function(name,argumentTypes){var types=Bridge.toArray(System.Linq.Enumerable.from(argumentTypes).select(function(p){return p.Name})).join(", ");return new Kusto.Language.Diagnostic.ctor(System.String.format("The function '{0}' is not compatible with arguments ({1})",name,types))},GetNameIsNotAFunction:function(name){return new Kusto.Language.Diagnostic.ctor(System.String.format("The name '{0}' does not refer to a function.",[name]))},GetExpressionMustBeConstant:function(){return new Kusto.Language.Diagnostic.ctor("The expression must be a constant.")},GetExpressionMustBeConstantOrIdentifier:function(){return new Kusto.Language.Diagnostic.ctor("The expression must be a constant or identifier.")},GetExpressionMustBeLiteral:function(){return new Kusto.Language.Diagnostic.ctor(System.String.format("The expression must be a literal.",null))},GetExpressionMustBeLiteralScalarValue:function(){return new Kusto.Language.Diagnostic.ctor(System.String.format("The expression must be a literal scalar value.",null))},GetExpressionMustNotBeEmpty:function(){return new Kusto.Language.Diagnostic.ctor(System.String.format("The expression value must not be empty.",null))},GetExpressionMustBeInteger:function(){return new Kusto.Language.Diagnostic.ctor("The expression value must be an integer.")},GetExpressionMustBeRealOrDecimal:function(){return new Kusto.Language.Diagnostic.ctor("The expression value must be an real or decimal number.")},GetExpressionMustBeIntegerOrDynamic:function(){return new Kusto.Language.Diagnostic.ctor("The expression value must be an integer or dynamic.")},GetExpressionMustBeNumeric:function(){return new Kusto.Language.Diagnostic.ctor("The expression value must be a number.")},GetExpressionMustBeSummable:function(){return new Kusto.Language.Diagnostic.ctor("The argument value must be a number, timespan or datetime.")},GetMultiValuedExpressionCannotBeAssignedToVariable:function(){return new Kusto.Language.Diagnostic.ctor("The multi-valued expression cannot be assigned to a variable.")},GetExpressionMustHaveValue$1:function(T,values){if(System.Array.getCount(values,T)===1)return new Kusto.Language.Diagnostic.ctor(System.String.format("The expression must be the value: {0}",[System.Array.getItem(values,0,T)]));var list=Kusto.Language.Utils.ListExtensions.Join(System.Linq.Enumerable.from(values).select(function(v){return Bridge.toString(v)}).toList(System.String),", "," or ");return new Kusto.Language.Diagnostic.ctor(System.String.format("The expression must be one of the values: {0}",[list]))},GetExpressionMustHaveValue:function(T,values){return values===void 0&&(values=[]),Kusto.Language.DiagnosticFacts.GetExpressionMustHaveValue$1(T,Bridge.cast(values,System.Collections.Generic.IReadOnlyList$1(T)))},GetExpressionMustHaveType$1:function(types){if(System.Array.getCount(types,Kusto.Language.Symbols.Symbol)===1)return new Kusto.Language.Diagnostic.ctor(System.String.format("The expression must have the type {0}.",[System.Array.getItem(types,0,Kusto.Language.Symbols.Symbol).Name]));var list=Kusto.Language.Utils.ListExtensions.Join(System.Linq.Enumerable.from(types).select(function(s){return s.Name}).toList(System.String),", "," or ");return new Kusto.Language.Diagnostic.ctor(System.String.format("The expression must have one of the types: {0}.",[list]))},GetExpressionMustHaveType:function(types){return types===void 0&&(types=[]),Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType$1(Bridge.cast(types,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.Symbol)))},GetNameDoesNotReferToAnyKnownItem:function(name){return new Kusto.Language.Diagnostic.ctor(System.String.format("The name '{0}' does not refer to any known column, table, variable or function.",[name]))},GetNameDoesNotReferToAnyKnownFunction:function(name){return new Kusto.Language.Diagnostic.ctor(System.String.format("The name '{0}' does not refer to any known function.",[name]))},GetAggregateNotAllowedInThisContext:function(){return new Kusto.Language.Diagnostic.ctor("The aggregate function '{name}' is not allowed in this context.")},GetColumnMustExistOnBothSidesOfJoin:function(name){return new Kusto.Language.Diagnostic.ctor(System.String.format("The column '{0}' must exist on both sides of the join.",[name]))},GetNameRefersToMoreThanOneItem:function(name){return new Kusto.Language.Diagnostic.ctor(System.String.format("The name '{0}' refers to more than one column or variable",[name]))},GetTheElementAccessOperatorIsNotAllowedInThisContext:function(){return new Kusto.Language.Diagnostic.ctor("The element access operator [] is not allowed in this context.")},GetTheExpressionHasNoName:function(){return new Kusto.Language.Diagnostic.ctor("A column name cannot be inferred for this expression.")},GetTheExpressionDoesNotHaveMultipleValues:function(){return new Kusto.Language.Diagnostic.ctor("The expression does not have multiple named values.")},GetTheNameDoesNotHaveCorrespondingExpression:function(){return new Kusto.Language.Diagnostic.ctor("The name does not have a corresponding expression.")},GetInvalidTypeName:function(name){return new Kusto.Language.Diagnostic.ctor(System.String.format("The name '{0}' is not a valid type name.",[name]))},GetInvalidColumnDeclaration:function(){return new Kusto.Language.Diagnostic.ctor("The syntax is not a valid column declaration.")},GetDuplicateColumnDeclaration:function(name){return new Kusto.Language.Diagnostic.ctor(System.String.format("A column with the name '{0}' is already declared.",[name]))},GetInvalidTypeExpression:function(){return new Kusto.Language.Diagnostic.ctor("The syntax is not a valid type expression.")},GetIncorrectNumberOfDataValues:function(multiple){return new Kusto.Language.Diagnostic.ctor(System.String.format("Incorrect number of data values. The values should appear in multiples of {0}.",[Bridge.box(multiple,System.Int32)]))},GetQueryOperatorCannotBeFirst:function(){return new Kusto.Language.Diagnostic.ctor(System.String.format("The operator cannot be the first operator in a query.",null))},GetQueryOperatorMustBeFirst:function(){return new Kusto.Language.Diagnostic.ctor("The operator must be the first operator in the query.")},GetQueryOperatorExpected:function(){return new Kusto.Language.Diagnostic.ctor("Query operator expected.")},GetTypeIsNotIntervalType:function(intervalType,rangeType){return new Kusto.Language.Diagnostic.ctor(System.String.format("The type '{0}' is not an appropriate interval type for '{1}'",intervalType.Name,rangeType.Name))},GetUnknownParameterName:function(name){return new Kusto.Language.Diagnostic.ctor(System.String.format("The '{0}' is not a recognized parameter.",[name]))},GetParameterAlreadySpecified:function(name){return new Kusto.Language.Diagnostic.ctor(System.String.format("The parameter '{0}' is already specified.",[name]))},GetNameDoesNotReferToTable:function(name){return new Kusto.Language.Diagnostic.ctor(System.String.format("The name '{0}' does not refer to a table.",[name]))},GetInvalidJoinCondition:function(){return new Kusto.Language.Diagnostic.ctor("The join condition must be either the name of a column common to both tables or in the form $left.<column> == $right.<column>.")},GetInvalidJoinConditionOperand:function(prefix){return new Kusto.Language.Diagnostic.ctor(System.String.format("The join condition operand must be: {0}.<column>",[prefix]))},GetTheExpressionRefersToMoreThanOneColumn:function(){return new Kusto.Language.Diagnostic.ctor("The expression refers to more than one column.")},GetPackMustBeLastItemInList:function(){return new Kusto.Language.Diagnostic.ctor("The pack(*) expression must be the last item in the list.")},GetValueCountMustEqualParameterCount:function(){return new Kusto.Language.Diagnostic.ctor("The number of values must equal the number of parameters.")},GetPathValueWithNoPathParameter:function(){return new Kusto.Language.Diagnostic.ctor("A path value can only be specified when a path name is part of the declaration.")},GetPathValueExpected:function(){return new Kusto.Language.Diagnostic.ctor("A path value is expected.")},GetNoPatternMatchesArguments:function(){return new Kusto.Language.Diagnostic.ctor("No pattern matches the specified arguments.")},GetDefaultValueExpected:function(){return new Kusto.Language.Diagnostic.ctor("Default value expected.")},GetTableHasNoColumns:function(){return new Kusto.Language.Diagnostic.ctor("The table has no columns")},GetStarExpressionNotAllowed:function(){return new Kusto.Language.Diagnostic.ctor("The * syntax is not allowed here.")},GetStarExpressionMustBeLastArgument:function(){return new Kusto.Language.Diagnostic.ctor("The * syntax must be the last argument.")},GetNamedArgumentsNotSupported:function(){return new Kusto.Language.Diagnostic.ctor("Named arguments are not supported for this function.")},GetCompoundNamedArgumentsNotSupported:function(){return new Kusto.Language.Diagnostic.ctor("Compound named arguments are not supported.")},GetUnnamedArgumentAfterOutofOrderNamedArgument:function(){return new Kusto.Language.Diagnostic.ctor("All arguments after an unordered named argument must be named.")},GetUnknownArgumentName:function(){return new Kusto.Language.Diagnostic.ctor(System.String.format("The argument name does not refer to a declared parameter.",null))},GetMissingArgumentForParameter:function(parameterName){return new Kusto.Language.Diagnostic.ctor(System.String.format("The argument for parameter '{0}' is missing.",[parameterName]))},GetIncompleteFragment:function(){return new Kusto.Language.Diagnostic.ctor("The incomplete fragment is unexpected.")},GetNoColumnsInScope:function(){return new Kusto.Language.Diagnostic.ctor("No columns are currently in scope.")},GetErrorInExpansion:function(name,errors){return new Kusto.Language.Diagnostic.ctor(System.String.format("Failure in expansion of '{0}': {1}",name,errors))},GetMissingCommand:function(){return new Kusto.Language.Diagnostic.ctor("Missing command.")}}}});Bridge.define("Kusto.Language.Editor.BrackettingStyle",{$kind:"enum",statics:{fields:{None:0,Vertical:1,Diagonal:2}}});Bridge.define("Kusto.Language.Editor.ClassificationInfo",{statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Editor.ClassificationInfo(null)}}},props:{Classifications:null},ctors:{ctor:function(classifications){this.$initialize();this.Classifications=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Editor.ClassifiedRange,classifications)}}});Bridge.define("Kusto.Language.Editor.ClassificationKind",{$kind:"enum",statics:{fields:{PlainText:0,Comment:1,Punctuation:2,Directive:3,Literal:4,StringLiteral:5,Type:6,Column:7,Table:8,Database:9,Function:10,Parameter:11,Variable:12,Identifier:13,ClientParameter:14,QueryParameter:15,ScalarOperator:16,MathOperator:17,QueryOperator:18,Command:19,Keyword:20}}});Bridge.define("Kusto.Language.Editor.ClassifiedRange",{props:{Kind:0,Start:0,Length:0,End:{get:function(){return this.Start+this.Length|0}}},ctors:{ctor:function(kind,start,length){this.$initialize();this.Kind=kind;this.Start=start;this.Length=length}}});Bridge.define("Kusto.Language.Editor.TextRange",{props:{Start:0,Length:0,End:{get:function(){return this.Start+this.Length|0}}},ctors:{ctor:function(start,length){this.$initialize();this.Start=start;this.Length=length}}});Bridge.define("Kusto.Language.Editor.CodeBlock",{fields:{_codeService:null},props:{Text:{get:function(){return this._codeService.Text}},Start:0,Length:{get:function(){return this.Text.length}},End:{get:function(){return this.Start+this.Length|0}},Kind:{get:function(){return this._codeService.Kind}},Service:{get:function(){return this._codeService}}},ctors:{ctor:function(start,codeService){this.$initialize();this.Start=start;var ols;this._codeService=(ols=Bridge.as(codeService,Kusto.Language.Editor.OffsetCodeService))!=null?ols.WithOffset(start):new Kusto.Language.Editor.OffsetCodeService(codeService,start)}},methods:{WithStart:function(start){return new Kusto.Language.Editor.CodeBlock(start,this.Service)}}});Bridge.define("Kusto.Language.Editor.CodeKinds",{statics:{fields:{Query:null,Command:null,Directive:null,Unknown:null},ctors:{init:function(){this.Query="Query";this.Command="Command";this.Directive="Directive";this.Unknown="Unknown"}}}});Bridge.define("Kusto.Language.Editor.CodeScript",{statics:{methods:{From:function(text,factory){var $t;return Kusto.Language.Editor.CodeScript.CreateScript(($t=text,$t!=null?$t:""),factory)},From$1:function(text,globals){return Kusto.Language.Editor.CodeScript.From(text,new Kusto.Language.Editor.KustoCodeServiceFactory(globals))},CreateScript:function(text,factory,existingBlocks){var lineStarts,blockStarts,existingBlockMap,blocks,i,blockText,service;for(existingBlocks===void 0&&(existingBlocks=null),lineStarts=new(System.Collections.Generic.List$1(System.Int32).ctor),blockStarts=new(System.Collections.Generic.List$1(System.Int32).ctor),Kusto.Language.Editor.CodeScript.GetStarts(text,lineStarts,blockStarts),existingBlockMap=existingBlocks!=null?Kusto.Language.Utils.TextKeyedDictionaryExtensions.ToTextKeyedDictionary(Bridge.global.Kusto.Language.Editor.CodeBlock,Bridge.global.Kusto.Language.Editor.CodeBlock,existingBlocks,function(b){return b.Text},function(b){return b}):null,blocks=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CodeBlock).ctor),i=0;i<blockStarts.Count;i=i+1|0){var start=blockStarts.getItem(i),length=(i+1|0)<blockStarts.Count?blockStarts.getItem(i+1|0)-start|0:text.length-start|0,block={};existingBlockMap!=null&&existingBlockMap.TryGetValue(text,start,length,block)?block.v=block.v.WithStart(start):(blockText=text.substr(start,length),service={},factory.TryGetCodeService(blockText,service)||(service.v=new Kusto.Language.Editor.UnknownCodeService(blockText)),block.v=new Kusto.Language.Editor.CodeBlock(start,service.v));blocks.add(block.v)}return new Kusto.Language.Editor.CodeScript(text,lineStarts,blocks,factory)},GetStarts:function(text,lineStarts,blockStarts){var i,n,lb;lineStarts.add(0);blockStarts.add(0);var allWhitespace=!0,newBlockNextWhitespaceLine=!1,newBlockNextNonWhitespaceLine=!1,lineStart=0;for(i=0,n=text.length;i<n;)lb=Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,i),lb>0?(i=i+lb|0,allWhitespace?(newBlockNextWhitespaceLine&&blockStarts.add(lineStart),newBlockNextWhitespaceLine=!0,newBlockNextNonWhitespaceLine=!0):newBlockNextNonWhitespaceLine?(blockStarts.add(lineStart),newBlockNextWhitespaceLine=!1,newBlockNextNonWhitespaceLine=!1):newBlockNextWhitespaceLine=!1,lineStart=i,lineStarts.add(lineStart),allWhitespace=!0):(System.Char.isWhiteSpace(String.fromCharCode(text.charCodeAt(i)))||(allWhitespace=!1),i=i+1|0);(allWhitespace&&newBlockNextWhitespaceLine||!allWhitespace&&newBlockNextNonWhitespaceLine)&&blockStarts.add(lineStart)}}},fields:{lineStarts:null,blocks:null},props:{Text:null,Factory:null,Blocks:{get:function(){return this.blocks}},Globals:{get:function(){var $t;return($t=this.Factory.GetFactory(Kusto.Language.Editor.KustoCodeServiceFactory))!=null?$t.Globals:null}}},ctors:{ctor:function(text,lineStarts,blocks,factory){this.$initialize();this.Text=text;this.lineStarts=lineStarts;this.blocks=blocks;this.Factory=factory}},methods:{WithText:function(newText){var $t;return Kusto.Language.Editor.CodeScript.CreateScript(($t=newText,$t!=null?$t:""),this.Factory,this.Blocks)},WithFactory:function(factory){return Bridge.referenceEquals(factory,this.Factory)?this:Kusto.Language.Editor.CodeScript.CreateScript(this.Text,factory,null)},WithTextAndFactory:function(newText,factory){return this.WithText(newText).WithFactory(factory)},WithGlobals:function(newGlobals){var kustoFactory=this.Factory.GetFactory(Kusto.Language.Editor.KustoCodeServiceFactory);return kustoFactory!=null?this.WithFactory(this.Factory.WithFactory(kustoFactory.WithGlobals(newGlobals))):this},GetBlockAtPosition:function(position){if(position===0)return System.Array.getItem(this.Blocks,0,Kusto.Language.Editor.CodeBlock);if(position===this.Text.length)return System.Array.getItem(this.Blocks,System.Array.getCount(this.Blocks,Kusto.Language.Editor.CodeBlock)-1|0,Kusto.Language.Editor.CodeBlock);if(position>=0&&position<this.Text.length){var index=Kusto.Language.Utils.ListExtensions.BinarySearch(Bridge.global.Kusto.Language.Editor.CodeBlock,this.blocks,function(b){return position<b.Start?1:position>=b.End?-1:0});return System.Array.getItem(this.Blocks,index,Kusto.Language.Editor.CodeBlock)}return null},TryGetTextPosition:function(line,lineOffset,position){var lineStart,lineEnd,lineLength;if(line=line-1|0,lineOffset=lineOffset-1|0,position.v=0,line<0||line>=this.lineStarts.Count)return!1;for(lineStart=this.lineStarts.getItem(line),lineEnd=line<(this.lineStarts.Count-1|0)?this.lineStarts.getItem(line+1|0):this.Text.length;lineEnd>lineStart&&Kusto.Language.Parsing.TextFacts.GetLineBreakLength(this.Text,lineEnd-1|0)>0;)lineEnd=lineEnd-1|0;return(lineLength=lineEnd-lineStart|0,lineOffset<(lineLength+1|0))?(position.v=lineStart+lineOffset|0,!0):!1},TryGetLineAndOffset:function(position,line,lineOffset){return Kusto.Language.Parsing.TextFacts.TryGetLineAndOffset(this.Text,position,this.lineStarts,line,lineOffset)}}});Bridge.define("Kusto.Language.Editor.CodeService");Bridge.define("Kusto.Language.Editor.CodeServiceFactory",{methods:{GetFactory:function(TFactory){return Bridge.is(this,TFactory)?Bridge.cast(this,TFactory):null},WithFactory:function(factory){var af;return(af=Bridge.as(factory,Kusto.Language.Editor.CodeServiceFactory.AggregateCodeServiceFactory))!=null?af.WithFactory(this):Bridge.referenceEquals(Bridge.getType(factory),Bridge.getType(this))?factory:new Kusto.Language.Editor.CodeServiceFactory.AggregateCodeServiceFactory(System.Array.init([this],Kusto.Language.Editor.CodeServiceFactory)).WithFactory(factory)}}});Bridge.define("Kusto.Language.Editor.CodeServiceFeatures",{statics:{fields:{Diagnostics:null,Classification:null,Completion:null,Outlining:null,QuickInfo:null,ClusterReferences:null,DatabaseReferences:null,MinimalText:null,Formatting:null,ClientParameters:null},ctors:{init:function(){this.Diagnostics="Diagnostics";this.Classification="Classification";this.Completion="Completion";this.Outlining="Outlining";this.QuickInfo="QuickInfo";this.ClusterReferences="ClusterReferences";this.DatabaseReferences="DatabaseReferences";this.MinimalText="MinimalText";this.Formatting="Formatting";this.ClientParameters="ClientParameters"}}}});Bridge.define("Kusto.Language.Editor.CompletionHint",{$kind:"enum",statics:{fields:{None:0,Inherit:1,Expression:2,Scalar:4,Tabular:8,Boolean:16,Number:32,Literal:64,Aggregate:128,TabularFunction:256,ScalarFunction:512,DatabaseFunction:1024,Function:2048,Declaration:4096,Column:8192,Table:16384,Database:32768,Cluster:65536,Syntax:131072,Query:262144,Command:524288,Keyword:1048576,Clause:2097152}},$flags:!0});Bridge.define("Kusto.Language.Editor.CompletionInfo",{statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Editor.CompletionInfo(null,0,0)}}},props:{Items:null,EditStart:0,EditLength:0},ctors:{ctor:function(items,editStart,editLength){this.$initialize();this.Items=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Editor.CompletionItem,items);this.EditStart=editStart;this.EditLength=editLength}}});Bridge.define("Kusto.Language.Editor.CompletionItem",{props:{Kind:0,DisplayText:null,MatchText:null,EditText:null,AfterText:null,Priority:0},ctors:{ctor:function(kind,displayText,editText,afterText,matchText,priority){editText===void 0&&(editText=null);afterText===void 0&&(afterText=null);matchText===void 0&&(matchText=null);priority===void 0&&(priority=2);var $t,$t1,$t2;this.$initialize();this.DisplayText=($t=displayText,$t!=null?$t:"");this.Kind=kind;this.EditText=($t1=editText,$t1!=null?$t1:this.DisplayText);this.AfterText=afterText;this.MatchText=($t2=matchText,$t2!=null?$t2:displayText);this.Priority=priority}},methods:{WithKind:function(kind){return new Kusto.Language.Editor.CompletionItem(kind,this.DisplayText,this.EditText,this.AfterText,this.MatchText,this.Priority)},WithDisplayText:function(displayText){return new Kusto.Language.Editor.CompletionItem(this.Kind,displayText,this.EditText,this.AfterText,this.MatchText,this.Priority)},WithEditText:function(editText){return new Kusto.Language.Editor.CompletionItem(this.Kind,this.DisplayText,editText,this.AfterText,this.MatchText,this.Priority)},WithAfterText:function(afterText){return new Kusto.Language.Editor.CompletionItem(this.Kind,this.DisplayText,this.EditText,afterText,this.MatchText,this.Priority)},WithMatchText:function(matchText){return new Kusto.Language.Editor.CompletionItem(this.Kind,this.DisplayText,this.EditText,this.AfterText,matchText,this.Priority)},WithPriority:function(priority){return new Kusto.Language.Editor.CompletionItem(this.Kind,this.DisplayText,this.EditText,this.AfterText,this.MatchText,priority)}}});Bridge.define("Kusto.Language.Editor.CompletionKind",{$kind:"enum",statics:{fields:{Unknown:0,Keyword:1,Punctuation:2,Syntax:3,Identifier:4,Literal:5,ScalarPrefix:6,TabularPrefix:7,TabularSuffix:8,QueryPrefix:9,CommandPrefix:10,ScalarInfix:11,RenderChart:12,Column:13,Table:14,ScalarFunction:15,TabularFunction:16,AggregateFunction:17,Parameter:18,Variable:19,Database:20,Cluster:21}}});Bridge.define("Kusto.Language.Editor.CompletionOptions",{statics:{fields:{Default:null},ctors:{init:function(){this.Default=new Kusto.Language.Editor.CompletionOptions(Kusto.Language.Editor.CompletionOptions.OptionFlags.Default,Kusto.Language.IncludeFunctionKind.All)}},methods:{SetOption:function(flags,option,value){return value?flags|option:flags&~option}}},fields:{flags:0},props:{IncludeSymbols:{get:function(){return(this.flags&Kusto.Language.Editor.CompletionOptions.OptionFlags.IncludeSymbols)!=0}},IncludeSyntax:{get:function(){return(this.flags&Kusto.Language.Editor.CompletionOptions.OptionFlags.IncludeSyntax)!=0}},IncludePunctuationOnlySyntax:{get:function(){return(this.flags&Kusto.Language.Editor.CompletionOptions.OptionFlags.IncludePunctuation)!=0}},EnableParameterInjection:{get:function(){return(this.flags&Kusto.Language.Editor.CompletionOptions.OptionFlags.EnableParameterInjection)!=0}},AutoAppendWhitespace:{get:function(){return(this.flags&Kusto.Language.Editor.CompletionOptions.OptionFlags.AutoAppendWhitespace)!=0}},IncludeFunctions:0},ctors:{ctor:function(flags,includeFunctionKind){this.$initialize();this.flags=flags;this.IncludeFunctions=includeFunctionKind}},methods:{WithIncludeSymbols:function(include){return new Kusto.Language.Editor.CompletionOptions(Kusto.Language.Editor.CompletionOptions.SetOption(this.flags,Kusto.Language.Editor.CompletionOptions.OptionFlags.IncludeSymbols,include),this.IncludeFunctions)},WithIncludeFunctions:function(kind){return new Kusto.Language.Editor.CompletionOptions(this.flags,kind)},WithIncludeFunctions$1:function(include){return new Kusto.Language.Editor.CompletionOptions(this.flags,include?Kusto.Language.IncludeFunctionKind.All:Kusto.Language.IncludeFunctionKind.None)},WithIncludeSyntax:function(include){return new Kusto.Language.Editor.CompletionOptions(Kusto.Language.Editor.CompletionOptions.SetOption(this.flags,Kusto.Language.Editor.CompletionOptions.OptionFlags.IncludeSyntax,include),this.IncludeFunctions)},WithIncludePunctuationOnlySyntax:function(include){return new Kusto.Language.Editor.CompletionOptions(Kusto.Language.Editor.CompletionOptions.SetOption(this.flags,Kusto.Language.Editor.CompletionOptions.OptionFlags.IncludePunctuation,include),this.IncludeFunctions)},WithEnableParameterInjection:function(enable){return new Kusto.Language.Editor.CompletionOptions(Kusto.Language.Editor.CompletionOptions.SetOption(this.flags,Kusto.Language.Editor.CompletionOptions.OptionFlags.EnableParameterInjection,enable),this.IncludeFunctions)},WithAutoAppendWhitespace:function(enable){return new Kusto.Language.Editor.CompletionOptions(Kusto.Language.Editor.CompletionOptions.SetOption(this.flags,Kusto.Language.Editor.CompletionOptions.OptionFlags.AutoAppendWhitespace,enable),this.IncludeFunctions)}}});Bridge.define("Kusto.Language.Editor.CompletionOptions.OptionFlags",{$kind:"nested enum",statics:{fields:{IncludeSymbols:1,IncludeSyntax:2,IncludePunctuation:4,EnableParameterInjection:16,AutoAppendWhitespace:32,Default:39}},$flags:!0});Bridge.define("Kusto.Language.Editor.CompletionPriority",{$kind:"enum",statics:{fields:{Top:0,High:1,Normal:2,Low:3}}});Bridge.define("Kusto.Language.Editor.FindRelatedOptions",{$kind:"enum",statics:{fields:{None:0,SeeThroughVariables:1}},$flags:!0});Bridge.define("Kusto.Language.Editor.FormattedText",{props:{Text:null,Position:0},ctors:{ctor:function(newText,newPosition){this.$initialize();this.Text=newText;this.Position=newPosition}}});Bridge.define("Kusto.Language.Editor.FormattingOptions",{statics:{fields:{Default:null},ctors:{init:function(){this.Default=new Kusto.Language.Editor.FormattingOptions(4,!0,Kusto.Language.Editor.BrackettingStyle.Vertical,Kusto.Language.Editor.PlacementStyle.Smart,Kusto.Language.Editor.PlacementStyle.None)}}},props:{IndentationSize:0,InsertMissingTokens:!1,BrackettingStyle:0,PipeOperatorStyle:0,SemicolonStyle:0},ctors:{ctor:function(indentationSize,insertMissingTokens,brackettingStyle,pipeOperatorStyle,semicolonStyle){this.$initialize();this.IndentationSize=indentationSize;this.InsertMissingTokens=insertMissingTokens;this.BrackettingStyle=brackettingStyle;this.PipeOperatorStyle=pipeOperatorStyle;this.SemicolonStyle=semicolonStyle}},methods:{With:function(indentationSize,insertMissingTokens,brackettingStyle,pipeOperatorStyle,semicolonStyle){indentationSize===void 0&&(indentationSize=null);insertMissingTokens===void 0&&(insertMissingTokens=null);brackettingStyle===void 0&&(brackettingStyle=null);pipeOperatorStyle===void 0&&(pipeOperatorStyle=null);semicolonStyle===void 0&&(semicolonStyle=null);var newIndentationSize=System.Nullable.hasValue(indentationSize)?System.Nullable.getValue(indentationSize):this.IndentationSize,newInsertMissingTokens=System.Nullable.hasValue(insertMissingTokens)?System.Nullable.getValue(insertMissingTokens):this.InsertMissingTokens,newBrackettingStyle=System.Nullable.hasValue(brackettingStyle)?System.Nullable.getValue(brackettingStyle):this.BrackettingStyle,newPipeOperatorStyle=System.Nullable.hasValue(pipeOperatorStyle)?System.Nullable.getValue(pipeOperatorStyle):this.PipeOperatorStyle,newSemicolonStyle=System.Nullable.hasValue(semicolonStyle)?System.Nullable.getValue(semicolonStyle):this.SemicolonStyle;return newIndentationSize!==this.IndentationSize||newInsertMissingTokens!==this.InsertMissingTokens||newBrackettingStyle!==this.BrackettingStyle||newPipeOperatorStyle!==this.PipeOperatorStyle||newSemicolonStyle!==this.SemicolonStyle?new Kusto.Language.Editor.FormattingOptions(newIndentationSize,newInsertMissingTokens,newBrackettingStyle,newPipeOperatorStyle,newSemicolonStyle):this},WithIndentationSize:function(size){return this.With(size,void 0,void 0,void 0,void 0)},WithInsertMissingTokens:function(enable){return this.With(void 0,enable,void 0,void 0,void 0)},WithBrackettingStyle:function(style){return this.With(void 0,void 0,style,void 0,void 0)},WithPipeOperatorStyle:function(style){return this.With(void 0,void 0,void 0,style,void 0)},WithSemicolonStyle:function(style){return this.With(void 0,void 0,void 0,void 0,style)}}});Bridge.define("Kusto.Language.Editor.KustoClassifier",{statics:{methods:{GetClassifications:function(root,start,length,list,cancellationToken){var end=start+length|0,limiter=function(range){if(range.End>start&&range.Start<end){if((range.Start<start||range.End>end)&&(range=new Kusto.Language.Editor.ClassifiedRange(range.Kind,Math.max(range.Start,start),Math.min(range.End,end))),list.Count>0){var last=list.getItem(list.Count-1|0);if(last.Kind===range.Kind&&last.End===range.Start){list.setItem(list.Count-1|0,new Kusto.Language.Editor.ClassifiedRange(last.Kind,last.Start,last.Length+range.Length|0));return}}list.add(range)}};root.WalkTokens(start,end,function(token){if(cancellationToken.ThrowIfCancellationRequested(),Kusto.Language.Editor.KustoClassifier.GetTriviaClassifications(token,limiter),token.IsLiteral&&token.Prefix.length>0)limiter(new Kusto.Language.Editor.ClassifiedRange(Kusto.Language.Editor.ClassificationKind.Keyword,token.TextStart,token.Prefix.length)),limiter(new Kusto.Language.Editor.ClassifiedRange(Kusto.Language.Editor.ClassificationKind.Literal,token.TextStart+token.Prefix.length|0,token.Text.length-token.Prefix.length|0));else{var kind=Kusto.Language.Editor.KustoClassifier.GetKind(token);limiter(new Kusto.Language.Editor.ClassifiedRange(kind,token.TextStart,token.Width))}})},GetKind:function(token){var $step=0,$t,$asyncBody=Bridge.fn.bind(this,function(){for(;;){$step=System.Array.min([0,1,2,3,4,5,6,7,8,9,10],$step);switch($step){case 0:if(Kusto.Language.Editor.KustoClassifier.IsSkipped(token))return Kusto.Language.Editor.ClassificationKind.PlainText;if(Kusto.Language.Editor.KustoClassifier.IsCommandVerbToken(token))return Kusto.Language.Editor.ClassificationKind.Command;if(Bridge.is(token.Parent,Kusto.Language.Syntax.BracedName))return Kusto.Language.Editor.ClassificationKind.ClientParameter;if($t=Kusto.Language.Syntax.SyntaxFacts.GetCategory(token.Kind),$t===Kusto.Language.Syntax.SyntaxCategory.Identifier){$step=1;continue}else if($t===Kusto.Language.Syntax.SyntaxCategory.Literal){$step=2;continue}else if($t===Kusto.Language.Syntax.SyntaxCategory.Keyword){$step=3;continue}else if($t===Kusto.Language.Syntax.SyntaxCategory.Punctuation){$step=7;continue}else if($t===Kusto.Language.Syntax.SyntaxCategory.Operator){$step=8;continue}else{$step=9;continue}$step=10;continue;case 1:return Kusto.Language.Editor.KustoClassifier.IsQueryParameter(token)?Kusto.Language.Editor.ClassificationKind.QueryParameter:Kusto.Language.Editor.KustoClassifier.GetIdentifierKind(token);case 2:return token.Kind===Kusto.Language.Syntax.SyntaxKind.StringLiteralToken?Kusto.Language.Editor.ClassificationKind.StringLiteral:Kusto.Language.Editor.ClassificationKind.Literal;case 3:if(Kusto.Language.Editor.KustoClassifier.IsIdentifierKeyword(token)){$step=4;continue}else{$step=5;continue}case 4:$step=1;continue;case 5:return Kusto.Language.Editor.KustoClassifier.IsTypeToken(token)?Kusto.Language.Editor.ClassificationKind.Type:Kusto.Language.Editor.KustoClassifier.IsScalarOperatorToken(token)?Kusto.Language.Editor.ClassificationKind.ScalarOperator:Kusto.Language.Editor.KustoClassifier.IsQueryOperatorToken(token)?Kusto.Language.Editor.ClassificationKind.QueryOperator:Kusto.Language.Editor.KustoClassifier.IsQueryParameter(token)?Kusto.Language.Editor.ClassificationKind.QueryParameter:Kusto.Language.Editor.KustoClassifier.IsCommandVerbToken(token)?Kusto.Language.Editor.ClassificationKind.Command:Kusto.Language.Editor.ClassificationKind.Keyword;case 6:case 7:return Kusto.Language.Editor.ClassificationKind.Punctuation;case 8:return Kusto.Language.Editor.ClassificationKind.MathOperator;case 9:return token.Kind===Kusto.Language.Syntax.SyntaxKind.DirectiveToken?Kusto.Language.Editor.ClassificationKind.Directive:Kusto.Language.Editor.ClassificationKind.PlainText;case 10:return;default:return}}},arguments);return $asyncBody()},GetIdentifierKind:function(token){var $t,$t1,symbolKind=($t=($t1=token.Parent.GetFirstAncestorOrSelf(Kusto.Language.Syntax.SyntaxNode,function(n){return n.ReferencedSymbol!=null}))!=null?$t1.ReferencedSymbol.Kind:null,$t!=null?$t:Kusto.Language.Symbols.SymbolKind.None);switch(symbolKind){case Kusto.Language.Symbols.SymbolKind.Column:return Kusto.Language.Editor.ClassificationKind.Column;case Kusto.Language.Symbols.SymbolKind.Table:return Kusto.Language.Editor.ClassificationKind.Table;case Kusto.Language.Symbols.SymbolKind.Database:return Kusto.Language.Editor.ClassificationKind.Database;case Kusto.Language.Symbols.SymbolKind.Function:case Kusto.Language.Symbols.SymbolKind.Pattern:return Kusto.Language.Editor.ClassificationKind.Function;case Kusto.Language.Symbols.SymbolKind.Variable:return Kusto.Language.Editor.ClassificationKind.Variable;case Kusto.Language.Symbols.SymbolKind.Parameter:return Kusto.Language.Editor.ClassificationKind.Parameter;default:return Kusto.Language.Editor.KustoClassifier.IsName(token)?Kusto.Language.Editor.ClassificationKind.Identifier:Kusto.Language.Editor.ClassificationKind.Keyword}},IsSkipped:function(token){var ls;return(ls=Bridge.as(token.Parent,Kusto.Language.Syntax.SyntaxList))!=null&&Bridge.is(ls.Parent,Kusto.Language.Syntax.SkippedTokens)},IsName:function(token){return Bridge.is(token.Parent,Kusto.Language.Syntax.Name)},IsIdentifierKeyword:function(token){return Bridge.is(token.Parent,Kusto.Language.Syntax.TokenName)},IsTypeToken:function(token){var pt,type;return(pt=Bridge.as(token.Parent,Kusto.Language.Syntax.PrimitiveTypeExpression))!=null?(type=Kusto.Language.Binding.Binder.GetType(pt),type!=null&&!type.IsError):!1},IsScalarOperatorToken:function(token){var b,u;return(b=Bridge.as(token.Parent,Kusto.Language.Syntax.BinaryExpression))!=null&&Bridge.referenceEquals(b.Operator,token)||(u=Bridge.as(token.Parent,Kusto.Language.Syntax.PrefixUnaryExpression))!=null&&Bridge.referenceEquals(u.Operator,token)},IsQueryOperatorToken:function(token){var q;return(q=Bridge.as(token.Parent,Kusto.Language.Syntax.QueryOperator))!=null&&Bridge.referenceEquals(q.GetChild(0),token)},IsQueryParameter:function(token){var n,d,np;return(n=Bridge.as(token.Parent,Kusto.Language.Syntax.Name))!=null&&(d=Bridge.as(n.Parent,Kusto.Language.Syntax.NameDeclaration))!=null&&(np=Bridge.as(d.Parent,Kusto.Language.Syntax.NamedParameter))!=null&&Bridge.referenceEquals(np.GetChild(0),d)},IsCommandVerbToken:function(token){var c,cn,list,uc;return(c=Bridge.as(token.Parent,Kusto.Language.Syntax.Command))!=null&&c.GetChildIndex(token)<2||(cn=Bridge.as(token.Parent,Kusto.Language.Syntax.CustomNode))!=null&&Bridge.is(cn.Parent,Kusto.Language.Syntax.CustomCommand)&&cn.GetChildIndex(token)===0||(list=Bridge.as(token.Parent,Kusto.Language.Syntax.SyntaxList))!=null&&(uc=Bridge.as(list.Parent,Kusto.Language.Syntax.UnknownCommand))!=null&&Bridge.referenceEquals(uc.Parts.getItem$1(0),token)},GetTriviaClassifications:function(token,action){var trivia,i,start;if(token.TriviaWidth>0)for(trivia=token.Trivia,i=0;i<trivia.length;i=i+1|0)if(!Kusto.Language.Parsing.TextFacts.IsWhitespace(trivia.charCodeAt(i))){for(start=i;i<trivia.length;i=i+1|0)if(Kusto.Language.Parsing.TextFacts.IsLineBreakStart(trivia.charCodeAt(i)))break;action(new Kusto.Language.Editor.ClassifiedRange(Kusto.Language.Editor.ClassificationKind.Comment,token.TriviaStart+start|0,i-start|0))}}}}});Bridge.define("Kusto.Language.Editor.KustoCompleter",{statics:{fields:{AfterQueryStart:null,s_parameterListPool:null,punctuationWithoutSpace:null},ctors:{init:function(){this.AfterQueryStart="\n| ";this.s_parameterListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter)))(function(){return new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter).ctor)},function(list){list.clear()});this.punctuationWithoutSpace=System.Array.init(["(","[","{","*","@","$"],System.String)}},methods:{IsInsideComment:function(trivia,position){for(var ch,lbLen,p=0;p<trivia.length;p=p+1|0){if(position===p)break;if(ch=trivia.charCodeAt(p),!Kusto.Language.Parsing.TextFacts.IsWhitespace(ch)){for(var start=p,end=p,hasLineBreak=!1;end<trivia.length;end=end+1|0)if(lbLen=Kusto.Language.Parsing.TextFacts.GetLineBreakLength(trivia,end),lbLen>0){end=end+lbLen|0;hasLineBreak=!0;break}if(p=end-1|0,hasLineBreak&&position>=start&&position<end||!hasLineBreak&&position>=start)return!0}}return!1},IsInsideLiteral:function(token,position){return Kusto.Language.Syntax.SyntaxFacts.GetCategory(token.Kind)===Kusto.Language.Syntax.SyntaxCategory.Literal&&position>=token.TextStart&&position<=token.End},IsStartOfQuery:function(context){while(Bridge.is(context,Kusto.Language.Syntax.Name)||Bridge.is(context,Kusto.Language.Syntax.NameReference)||Bridge.is(context,Kusto.Language.Syntax.ExpressionStatement))context=context.Parent;return Bridge.is(context,Kusto.Language.Syntax.QueryBlock)||Bridge.is(context,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)))||Bridge.is(context,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))},IsInvokeFunctionContext:function(node){var op=node!=null?node.GetFirstAncestorOrSelf(Kusto.Language.Syntax.QueryOperator):null,fc=node!=null?node.GetFirstAncestorOrSelf(Kusto.Language.Syntax.FunctionCallExpression):null;return Bridge.is(op,Kusto.Language.Syntax.InvokeOperator)&&(fc==null||fc.TextStart<op.TextStart)},IsNameToken:function(kind){switch(Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)){case Kusto.Language.Syntax.SyntaxCategory.Identifier:case Kusto.Language.Syntax.SyntaxCategory.Keyword:return!0;default:return!1}},HasAffinity$1:function(token,position){return position>token.TextStart&&position<token.End||position===token.TextStart&&Kusto.Language.Editor.KustoCompleter.IsNameToken(token.Kind)||position===token.End&&Kusto.Language.Editor.KustoCompleter.IsNameToken(token.Kind)},HasAffinity:function(token,position){return position>token.TextStart&&position<token.End||position===token.TextStart&&Kusto.Language.Editor.KustoCompleter.IsNameToken(token.Kind)||position===token.End&&Kusto.Language.Editor.KustoCompleter.IsNameToken(token.Kind)},ContainsOnlyOneToken:function(node){while(node!=null&&node.ChildCount===1){var child=node.GetChild(0);if(Bridge.is(child,Kusto.Language.Syntax.SyntaxToken))return!0;node=Bridge.as(child,Kusto.Language.Syntax.SyntaxNode)}return!1},GetLeftOfFunctionCall:function(expression){var parent=expression.Parent,el,fc,pe;return((el=Bridge.as(parent,Kusto.Language.Syntax.ExpressionList))!=null&&(parent=el.Parent),(fc=Bridge.as(parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&(parent=fc.Parent),(pe=Bridge.as(parent,Kusto.Language.Syntax.PathExpression))!=null)?pe.Expression:null},GetSymbolMatch:function(hint){var match=Kusto.Language.Symbols.SymbolMatch.None;return(hint&Kusto.Language.Editor.CompletionHint.Column)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.Column),(hint&Kusto.Language.Editor.CompletionHint.TabularFunction)!=0&&(match|=140),(hint&640)!=0&&(match|=76),(hint&3072)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.Function),(hint&52)!=0&&(match|=77),(hint&Kusto.Language.Editor.CompletionHint.Tabular)!=0&&(match|=142),(hint&Kusto.Language.Editor.CompletionHint.Expression)!=0&&(match|=207),(hint&Kusto.Language.Editor.CompletionHint.Table)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.Table),(hint&Kusto.Language.Editor.CompletionHint.Database)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.Database),(hint&Kusto.Language.Editor.CompletionHint.Cluster)!=0&&(match|=Kusto.Language.Symbols.SymbolMatch.Cluster),match},IsChildMissingOrEmpty:function(contextNode,childIndex){return Kusto.Language.Editor.KustoCompleter.IsChildMissing(contextNode,childIndex)||Kusto.Language.Editor.KustoCompleter.IsChildEmpty(contextNode,childIndex)},IsChildMissing:function(node,index){var child=node.GetChild(index);return child!=null&&child.IsMissing},IsChildEmpty:function(node,index){var child=node.GetChild(index);return(child==null||child.Width===0)&&!Kusto.Language.Editor.KustoCompleter.IsChildMissing(node,index)},GetChildIndex:function(node,position){for(var child,bestEmptyChild,i1,child1,firstChildBeyond=node.ChildCount,lastWasNullOrEmpty=!1,i=0,n=node.ChildCount;i<n;i=i+1|0)if(child=node.GetChild(i),child!=null){if(position>child.TextStart&&position<child.End&&child.Width>0)return i;if(position<child.TextStart){firstChildBeyond=i;break}else if(position===child.TextStart){if(child.Width===0){firstChildBeyond=i+1|0;break}else if(lastWasNullOrEmpty){firstChildBeyond=i;break}}else lastWasNullOrEmpty=child.Width===0}else lastWasNullOrEmpty=!0;for(bestEmptyChild=firstChildBeyond-1|0,i1=firstChildBeyond-1|0;i1>=0;i1=i1-1|0)if(child1=node.GetChild(i1),child1!=null&&child1.Width>0)break;else bestEmptyChild=i1;return bestEmptyChild},HasEmptyChild:function(element,position){var hasEmptyChild,i,n,child;if(element==null)return!1;if(position>=element.End&&element.Kind===Kusto.Language.Syntax.SyntaxKind.List)return!0;for(hasEmptyChild=!1,i=0,n=element.ChildCount;i<n;i=i+1|0){if(child=element.GetChild(i),child!=null){if(position<=child.TextStart&&hasEmptyChild)return!0;if(position<child.End)return!1}hasEmptyChild=child==null||child.Width===0}return hasEmptyChild},GetNearestAncestorWithEmptyChild:function(token,position){for(var node=token.Parent;node!=null&&!Kusto.Language.Editor.KustoCompleter.HasEmptyChild(node,position);)node=node.Parent;return node},HasLetters:function(text){var $t,ch;$t=Bridge.getEnumerator(text);try{while($t.moveNext())if(ch=$t.Current,System.Char.isLetter(ch))return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!1},ReturnTypeMatchesContext:function(signature,arg0Type,returnTypeHint){return(returnTypeHint&Kusto.Language.Editor.CompletionHint.Boolean)!=0?Kusto.Language.Editor.KustoCompleter.IsBooleanReturnType(signature,arg0Type):(returnTypeHint&Kusto.Language.Editor.CompletionHint.Scalar)!=0||(returnTypeHint&Kusto.Language.Editor.CompletionHint.Aggregate)!=0?Kusto.Language.Editor.KustoCompleter.IsNonBooleanScalarReturnType(signature,arg0Type):(returnTypeHint&Kusto.Language.Editor.CompletionHint.Number)!=0?Kusto.Language.Editor.KustoCompleter.IsNumericReturnType(signature,arg0Type):(returnTypeHint&Kusto.Language.Editor.CompletionHint.Column)!=0?!1:!0},IsBooleanReturnType:function(signature,arg0Type){switch(signature.ReturnKind){case Kusto.Language.Symbols.ReturnTypeKind.Common:case Kusto.Language.Symbols.ReturnTypeKind.Widest:case Kusto.Language.Symbols.ReturnTypeKind.Parameter0:var s;return(s=Bridge.as(arg0Type,Kusto.Language.Symbols.ScalarSymbol))!=null&&Bridge.referenceEquals(s,Kusto.Language.Symbols.ScalarTypes.Bool);case Kusto.Language.Symbols.ReturnTypeKind.Declared:return Bridge.referenceEquals(signature.DeclaredReturnType,Kusto.Language.Symbols.ScalarTypes.Bool);default:return!1}},IsNonBooleanScalarReturnType:function(signature,arg0Type){switch(signature.ReturnKind){case Kusto.Language.Symbols.ReturnTypeKind.Common:case Kusto.Language.Symbols.ReturnTypeKind.Widest:case Kusto.Language.Symbols.ReturnTypeKind.Parameter0:var s;return(s=Bridge.as(arg0Type,Kusto.Language.Symbols.ScalarSymbol))!=null&&!Bridge.referenceEquals(s,Kusto.Language.Symbols.ScalarTypes.Bool);case Kusto.Language.Symbols.ReturnTypeKind.Declared:return signature.DeclaredReturnType.IsScalar&&!Bridge.referenceEquals(signature.DeclaredReturnType,Kusto.Language.Symbols.ScalarTypes.Bool);default:return!1}},IsNumericReturnType:function(signature,arg0Type){var s,s2;switch(signature.ReturnKind){case Kusto.Language.Symbols.ReturnTypeKind.Common:case Kusto.Language.Symbols.ReturnTypeKind.Widest:case Kusto.Language.Symbols.ReturnTypeKind.Parameter0:return(s=Bridge.as(arg0Type,Kusto.Language.Symbols.ScalarSymbol))!=null&&s.IsNumeric;case Kusto.Language.Symbols.ReturnTypeKind.Declared:return(s2=Bridge.as(signature.DeclaredReturnType,Kusto.Language.Symbols.ScalarSymbol))!=null&&s2.IsNumeric;default:return!1}},ParameterMatches:function(parameter,type){var s,s2,s3,tab,s4;switch(parameter.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Declared:if(Kusto.Language.Binding.Binder.SymbolsAssignable$1(parameter.DeclaredTypes,type)||Kusto.Language.Binding.Binder.IsPromotable(type,System.Array.getItem(parameter.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol)))return!0;break;case Kusto.Language.Symbols.ParameterTypeKind.Scalar:return type.IsScalar;case Kusto.Language.Symbols.ParameterTypeKind.Integer:return(s=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&s.IsInteger;case Kusto.Language.Symbols.ParameterTypeKind.RealOrDecimal:return Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Real)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Decimal);case Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic:return Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.String)||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Dynamic);case Kusto.Language.Symbols.ParameterTypeKind.Number:return(s2=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&s2.IsNumeric;case Kusto.Language.Symbols.ParameterTypeKind.Summable:return(s3=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&s3.IsSummable;case Kusto.Language.Symbols.ParameterTypeKind.Tabular:return type.IsTabular;case Kusto.Language.Symbols.ParameterTypeKind.SingleColumnTable:return(tab=Bridge.as(type,Kusto.Language.Symbols.TableSymbol))!=null&&System.Array.getCount(tab.Columns,Kusto.Language.Symbols.ColumnSymbol)===1;case Kusto.Language.Symbols.ParameterTypeKind.Database:return Bridge.is(type,Kusto.Language.Symbols.DatabaseSymbol);case Kusto.Language.Symbols.ParameterTypeKind.Cluster:return Bridge.is(type,Kusto.Language.Symbols.ClusterSymbol);case Kusto.Language.Symbols.ParameterTypeKind.NotBool:return Bridge.is(type,Kusto.Language.Symbols.ScalarSymbol)&&!Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Bool);case Kusto.Language.Symbols.ParameterTypeKind.NotRealOrBool:return Bridge.is(type,Kusto.Language.Symbols.ScalarSymbol)&&!Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Real)&&!Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Bool);case Kusto.Language.Symbols.ParameterTypeKind.NotDynamic:return Bridge.is(type,Kusto.Language.Symbols.ScalarSymbol)&&!Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Dynamic);case Kusto.Language.Symbols.ParameterTypeKind.IntegerOrDynamic:return(s4=Bridge.as(type,Kusto.Language.Symbols.ScalarSymbol))!=null&&s4.IsInteger||Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Dynamic);case Kusto.Language.Symbols.ParameterTypeKind.Parameter0:case Kusto.Language.Symbols.ParameterTypeKind.Parameter1:case Kusto.Language.Symbols.ParameterTypeKind.Parameter2:case Kusto.Language.Symbols.ParameterTypeKind.CommonScalar:case Kusto.Language.Symbols.ParameterTypeKind.CommonNumber:case Kusto.Language.Symbols.ParameterTypeKind.CommonSummable:case Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic:return Bridge.is(type,Kusto.Language.Symbols.ScalarSymbol)}return!1},GetOperatorKind:function(opText){var kind={v:new Kusto.Language.Syntax.SyntaxKind};return Kusto.Language.Syntax.SyntaxFacts.TryGetKind(opText,kind)?Kusto.Language.Syntax.SyntaxFacts.GetOperatorKind(kind.v):Kusto.Language.Symbols.OperatorKind.None}}},fields:{code:null,options:null,cancellationToken:null},ctors:{init:function(){this.cancellationToken=new Kusto.Language.Utils.CancellationToken},ctor:function(code,options,cancellationToken){this.$initialize();this.code=code;this.options=options;this.cancellationToken=cancellationToken}},methods:{GetCompletionItems:function(position){var $t,$t1,completionToken=this.GetTokenWithAffinity(position),editStart=($t=completionToken!=null?completionToken.TextStart:null,$t!=null?$t:position),editLength=($t1=completionToken!=null?completionToken.Width:null,$t1!=null?$t1:0),builder,mode,items,orderedItems;return this.ShouldComplete(position)?(builder=new Kusto.Language.Editor.KustoCompleter.CompletionBuilder,mode=Kusto.Language.Editor.KustoCompleter.CompletionMode.Combined,this.options.IncludeSymbols&&(mode=this.GetSymbolCompletions(editStart,builder)),mode===Kusto.Language.Editor.KustoCompleter.CompletionMode.Combined&&this.options.IncludeSyntax&&this.GetSyntaxCompletions(editStart,builder),items=builder.ToList(),orderedItems=System.Linq.Enumerable.from(items).orderBy(Bridge.fn.bind(this,function(i){return this.GetOrderingRank(i)})).thenBy(function(i){return i.Priority}).thenBy(function(i){return i.DisplayText.toLowerCase()}).ToArray(Kusto.Language.Editor.CompletionItem),new Kusto.Language.Editor.CompletionInfo(orderedItems,editStart,editLength)):new Kusto.Language.Editor.CompletionInfo(Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.CompletionItem).Instance,editStart,editLength)},ShouldAutoComplete:function(position,key){var token,expr;if(key===0||!this.ShouldComplete(position)||System.Char.isControl(key)&&key!==8||key===13||key===10)return!1;if(token=this.GetTokenLeftOfPosition(position),token!=null)if(System.Char.isWhiteSpace(String.fromCharCode(key))&&position===(token.End+1|0)){switch(token.Kind){case Kusto.Language.Syntax.SyntaxKind.OpenParenToken:case Kusto.Language.Syntax.SyntaxKind.OpenBracketToken:case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:case Kusto.Language.Syntax.SyntaxKind.CommaToken:case Kusto.Language.Syntax.SyntaxKind.ColonToken:case Kusto.Language.Syntax.SyntaxKind.BarToken:case Kusto.Language.Syntax.SyntaxKind.EqualToken:return!0}switch(Kusto.Language.Syntax.SyntaxFacts.GetCategory(token.Kind)){case Kusto.Language.Syntax.SyntaxCategory.Identifier:case Kusto.Language.Syntax.SyntaxCategory.Operator:case Kusto.Language.Syntax.SyntaxCategory.Keyword:return!0}if(expr=this.GetCompleteExpressionLeftOfPosition(position),expr!=null)return!0}else if(token.End===position){if(key===8)return Kusto.Language.Syntax.SyntaxFacts.GetCategory(token.Kind)===Kusto.Language.Syntax.SyntaxCategory.Identifier;switch(token.Kind){case Kusto.Language.Syntax.SyntaxKind.OpenParenToken:case Kusto.Language.Syntax.SyntaxKind.OpenBracketToken:case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:case Kusto.Language.Syntax.SyntaxKind.DotToken:case Kusto.Language.Syntax.SyntaxKind.ColonToken:case Kusto.Language.Syntax.SyntaxKind.EqualToken:return!0}switch(Kusto.Language.Syntax.SyntaxFacts.GetCategory(token.Kind)){case Kusto.Language.Syntax.SyntaxCategory.Identifier:case Kusto.Language.Syntax.SyntaxCategory.Operator:case Kusto.Language.Syntax.SyntaxCategory.Keyword:return!0}}return!1},ShouldComplete:function(position){var tokenOffset=this.GetTokenIndex(position),token=System.Array.getItem(this.code.LexerTokens,tokenOffset,Kusto.Language.Parsing.LexicalToken),previous=tokenOffset>0?System.Array.getItem(this.code.LexerTokens,tokenOffset-1|0,Kusto.Language.Parsing.LexicalToken):null,affinity=this.GetTokenWithAffinity(position)||token,leftOrSurrounding=position===token.TriviaStart?previous||token:token;return Kusto.Language.Editor.KustoCompleter.IsInsideLiteral(leftOrSurrounding,position)?!1:position<=affinity.TextStart&&affinity.Trivia.length>0?!Kusto.Language.Editor.KustoCompleter.IsInsideComment(token.Trivia,position-token.TriviaStart|0):!0},GetOrderingRank:function(item){var $t;this.cancellationToken.ThrowIfCancellationRequested();switch(item.Kind){case Kusto.Language.Editor.CompletionKind.Literal:return Kusto.Language.Editor.KustoCompleter.OrderingRank.Literal;case Kusto.Language.Editor.CompletionKind.Keyword:return Kusto.Language.Editor.KustoCompleter.OrderingRank.Keyword;case Kusto.Language.Editor.CompletionKind.AggregateFunction:return Kusto.Language.Editor.KustoCompleter.OrderingRank.Aggregate;case Kusto.Language.Editor.CompletionKind.Column:return Kusto.Language.Editor.KustoCompleter.OrderingRank.Column;case Kusto.Language.Editor.CompletionKind.Table:return Kusto.Language.Editor.KustoCompleter.OrderingRank.Table;case Kusto.Language.Editor.CompletionKind.Variable:case Kusto.Language.Editor.CompletionKind.Parameter:return Bridge.referenceEquals(item.DisplayText,"$left")||Bridge.referenceEquals(item.DisplayText,"$right")?Kusto.Language.Editor.KustoCompleter.OrderingRank.Literal:Kusto.Language.Editor.KustoCompleter.OrderingRank.Variable;case Kusto.Language.Editor.CompletionKind.ScalarFunction:case Kusto.Language.Editor.CompletionKind.TabularFunction:return Kusto.Language.Editor.KustoCompleter.OrderingRank.Function;case Kusto.Language.Editor.CompletionKind.ScalarInfix:return($t=item.DisplayText.charCodeAt(0),System.Char.isDigit($t)||System.Char.isLetter($t))?Kusto.Language.Editor.KustoCompleter.OrderingRank.StringOperator:Kusto.Language.Editor.KustoCompleter.OrderingRank.MathOperator;case Kusto.Language.Editor.CompletionKind.ScalarPrefix:case Kusto.Language.Editor.CompletionKind.TabularPrefix:case Kusto.Language.Editor.CompletionKind.TabularSuffix:case Kusto.Language.Editor.CompletionKind.QueryPrefix:case Kusto.Language.Editor.CompletionKind.Identifier:case Kusto.Language.Editor.CompletionKind.Cluster:case Kusto.Language.Editor.CompletionKind.Database:case Kusto.Language.Editor.CompletionKind.Punctuation:case Kusto.Language.Editor.CompletionKind.Syntax:case Kusto.Language.Editor.CompletionKind.Unknown:case Kusto.Language.Editor.CompletionKind.RenderChart:default:return Kusto.Language.Editor.KustoCompleter.OrderingRank.Other}},IsInCommand:function(element){var body,command;return element==null?!1:(body=element.GetFirstAncestorOrSelf(Kusto.Language.Syntax.FunctionBody),body!=null)?!1:(command=element.GetFirstAncestorOrSelf(Kusto.Language.Syntax.Command),command!=null)},GetSymbolCompletions:function(position,builder){var $t,hint=Kusto.Language.Editor.CompletionHint.None,contextNode={},contextChildIndex={},mode,symbols,match,isCommand,include,isInvoke,rowScope,symbol,fs,vs,vfs,item;if(this.TryGetCompletionContext(position,contextNode,contextChildIndex)){if(mode=this.GetFunctionArgumentCompletions(position,contextNode.v,contextChildIndex.v,builder),mode===Kusto.Language.Editor.KustoCompleter.CompletionMode.Isolated)return mode;hint=this.GetCompletionHint(contextNode.v,contextChildIndex.v)}symbols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Symbol).ctor);match=this.GetSymbolMatch(position);this.options.IncludeFunctions===Kusto.Language.IncludeFunctionKind.None&&(match&=-5);isCommand=this.IsInCommand(contextNode.v);include=this.options.IncludeFunctions;isCommand&&(include&=Kusto.Language.IncludeFunctionKind.DatabaseFunctions);Kusto.Language.Binding.Binder.GetSymbolsInScope(this.code.Syntax,position,this.code.Globals,match,include,symbols,this.cancellationToken);isInvoke=Kusto.Language.Editor.KustoCompleter.IsInvokeFunctionContext(contextNode.v);rowScope=isInvoke?Kusto.Language.Binding.Binder.GetRowScope(this.code.Syntax,position,this.code.Globals,this.cancellationToken):null;$t=Bridge.getEnumerator(symbols);try{while($t.moveNext())if(symbol=$t.Current,!symbol.IsHidden){if(isInvoke&&rowScope!=null&&!rowScope.IsOpen){if((fs=Bridge.as(symbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&!this.IsApplicable(fs,rowScope))continue;if((vs=Bridge.as(symbol,Kusto.Language.Symbols.VariableSymbol))!=null&&(vfs=Bridge.as(vs.Type,Kusto.Language.Symbols.FunctionSymbol))!=null&&!this.IsApplicable(vfs,rowScope))continue}item=this.GetSymbolCompletionItem(symbol,contextNode.v,isCommand);this.ShouldAugmentSymbolCompletionItem(symbol,hint)&&(item=this.GetAugmentedCompletionItem(item));builder.Add(item)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return Kusto.Language.Editor.KustoCompleter.CompletionMode.Combined},IsApplicable:function($function,implicitFirstArgumentType){var $t,$t1,sig,p,t,ts;if(Bridge.referenceEquals($function,Kusto.Language.Functions.Cluster)||Bridge.referenceEquals($function,Kusto.Language.Functions.Database)||Bridge.referenceEquals($function,Kusto.Language.Functions.Table))return!0;$t=Bridge.getEnumerator($function.Signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())if(sig=$t.Current,System.Array.getCount(sig.Parameters,Kusto.Language.Symbols.Parameter)!==0){p=System.Array.getItem(sig.Parameters,0,Kusto.Language.Symbols.Parameter);switch(p.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Declared:$t1=Bridge.getEnumerator(p.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol);try{while($t1.moveNext())if(t=$t1.Current,(ts=Bridge.as(t,Kusto.Language.Symbols.TableSymbol))!=null&&Kusto.Language.Binding.Binder.SymbolsAssignable(t,implicitFirstArgumentType))return!0}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}break;case Kusto.Language.Symbols.ParameterTypeKind.Tabular:return Bridge.is(implicitFirstArgumentType,Kusto.Language.Symbols.TableSymbol)}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!1},ShouldAugmentSymbolCompletionItem:function(symbol,hint){return(hint&Kusto.Language.Editor.CompletionHint.Boolean)!=0&&!Bridge.referenceEquals(Kusto.Language.Symbols.Symbol.GetExpressionResultType(symbol),Kusto.Language.Symbols.ScalarTypes.Bool)},GetSymbolCompletionItem:function(symbol,contextNode,nameOnly){var kind=this.GetCompletionKind(symbol),editName=Kusto.Language.KustoFacts.BracketNameIfNecessary(symbol.Name),t,f,builtIn,fdisplay,isInvoke,p,v,p1,d,cl;do return Bridge.is(symbol,Kusto.Language.Symbols.TableSymbol)?(t=Bridge.cast(symbol,Kusto.Language.Symbols.TableSymbol),Kusto.Language.Editor.KustoCompleter.IsStartOfQuery(contextNode)?new Kusto.Language.Editor.CompletionItem(kind,t.Name,(editName||"")+(Kusto.Language.Editor.KustoCompleter.AfterQueryStart||"")):new Kusto.Language.Editor.CompletionItem(kind,t.Name,editName)):Bridge.is(symbol,Kusto.Language.Symbols.FunctionSymbol)?(f=Bridge.cast(symbol,Kusto.Language.Symbols.FunctionSymbol),nameOnly)?new Kusto.Language.Editor.CompletionItem(kind,f.Name,editName):(builtIn=this.code.Globals.IsBuiltInFunction(f),builtIn&&(editName=f.Name),fdisplay=f.Display,System.Linq.Enumerable.from(f.Signatures).max(function(s){return System.Array.getCount(s.Parameters,Kusto.Language.Symbols.Parameter)})===0?(builtIn&&(editName=(editName||"")+"()"),Kusto.Language.Editor.KustoCompleter.IsStartOfQuery(contextNode)?new Kusto.Language.Editor.CompletionItem(kind,fdisplay,(editName||"")+(Kusto.Language.Editor.KustoCompleter.AfterQueryStart||""),void 0,f.Name,2):new Kusto.Language.Editor.CompletionItem(kind,fdisplay,editName,void 0,f.Name,2)):(isInvoke=Kusto.Language.Editor.KustoCompleter.IsInvokeFunctionContext(contextNode),!this.options.EnableParameterInjection||f.MaxArgumentCount!==1||builtIn||isInvoke?new Kusto.Language.Editor.CompletionItem(kind,fdisplay,(editName||"")+"(",")",f.Name,2):new Kusto.Language.Editor.CompletionItem(kind,fdisplay,(editName||"")+"({parameter})",void 0,f.Name,2))):Bridge.is(symbol,Kusto.Language.Symbols.PatternSymbol)?(p=Bridge.cast(symbol,Kusto.Language.Symbols.PatternSymbol),new Kusto.Language.Editor.CompletionItem(kind,p.Display,(editName||"")+"(",")",p.Name,2)):Bridge.is(symbol,Kusto.Language.Symbols.VariableSymbol)?(v=Bridge.cast(symbol,Kusto.Language.Symbols.VariableSymbol),Bridge.is(v.Type,Kusto.Language.Symbols.FunctionSymbol)?this.GetSymbolCompletionItem(v.Type,contextNode,nameOnly):Bridge.is(v.Type,Kusto.Language.Symbols.TableSymbol)&&Kusto.Language.Editor.KustoCompleter.IsStartOfQuery(contextNode)?new Kusto.Language.Editor.CompletionItem(kind,v.Name,(editName||"")+(Kusto.Language.Editor.KustoCompleter.AfterQueryStart||"")):new Kusto.Language.Editor.CompletionItem(kind,v.Name,editName)):Bridge.is(symbol,Kusto.Language.Symbols.ParameterSymbol)?(p1=Bridge.cast(symbol,Kusto.Language.Symbols.ParameterSymbol),Bridge.is(p1.Type,Kusto.Language.Symbols.FunctionSymbol)?this.GetSymbolCompletionItem(p1.Type,contextNode,nameOnly):new Kusto.Language.Editor.CompletionItem(kind,symbol.Name,editName)):Bridge.is(symbol,Kusto.Language.Symbols.DatabaseSymbol)?(d=Bridge.cast(symbol,Kusto.Language.Symbols.DatabaseSymbol),new Kusto.Language.Editor.CompletionItem(Kusto.Language.Editor.CompletionKind.Database,d.Name,editName)):Bridge.is(symbol,Kusto.Language.Symbols.ClusterSymbol)?(cl=Bridge.cast(symbol,Kusto.Language.Symbols.ClusterSymbol),new Kusto.Language.Editor.CompletionItem(Kusto.Language.Editor.CompletionKind.Cluster,cl.Name,Kusto.Language.KustoFacts.GetBrackettedName(cl.Name))):new Kusto.Language.Editor.CompletionItem(kind,symbol.Name,editName);while(0)},GetTokenWithAffinity:function(position){if(System.Array.getCount(this.code.LexerTokens,Kusto.Language.Parsing.LexicalToken)===0)return null;var tokenOffset=this.GetTokenIndex(position),token=System.Array.getItem(this.code.LexerTokens,tokenOffset,Kusto.Language.Parsing.LexicalToken),previous=tokenOffset>0?System.Array.getItem(this.code.LexerTokens,tokenOffset-1|0,Kusto.Language.Parsing.LexicalToken):null;return Kusto.Language.Editor.KustoCompleter.HasAffinity$1(token,position)?token:previous!=null&&Kusto.Language.Editor.KustoCompleter.HasAffinity$1(previous,position)?previous:null},GetSymbolMatch:function(position){var match=Kusto.Language.Symbols.SymbolMatch.None,contextNode={},index={},hint,grammarMatch;return this.TryGetCompletionContext(position,contextNode,index)&&(hint=this.GetCompletionHint(contextNode.v,index.v),match|=Kusto.Language.Editor.KustoCompleter.GetSymbolMatch(hint)),grammarMatch=this.GetSymbolMatchFromGrammar(position),match|grammarMatch},GetSymbolMatchFromGrammar:function(position){var match=Kusto.Language.Symbols.SymbolMatch.None;return this.ScanGrammarAtPosition(position,Bridge.fn.bind(this,function(g){var i,n,hint;for(this.cancellationToken.ThrowIfCancellationRequested(),i=0,n=System.Array.getCount(g.Annotations,System.Object);i<n;i=i+1|0)hint=new Kusto.Language.Editor.CompletionHint,(hint=Bridge.as(System.Array.getItem(g.Annotations,i,System.Object),System.Int32))!=null&&(match|=Kusto.Language.Editor.KustoCompleter.GetSymbolMatch(hint))})),match},TryGetFunctionOrOperatorArgument:function(contextNode,childIndex,signatures,$arguments,argumentIndex,argumentCount,parameterName){var $t,$t1,$t2,$t3,$t4,$t5,n,sn,functionCall,el,fc1,fs,fc2,fs2,be,os;for(parameterName.v=null,n=contextNode,Bridge.is(n,Kusto.Language.Syntax.NamedExpression)&&((sn=Bridge.as(n,Kusto.Language.Syntax.SimpleNamedExpression))!=null&&(parameterName.v=sn.Name.SimpleName),childIndex=($t=($t1=n.Parent)!=null?$t1.GetChildIndex(n):null,$t!=null?$t:0),n=n.Parent);Kusto.Language.Editor.KustoCompleter.ContainsOnlyOneToken(n)&&!Bridge.is(n.Parent,Kusto.Language.Syntax.SyntaxList);)childIndex=($t2=($t3=n.Parent)!=null?$t3.GetChildIndex(n):null,$t2!=null?$t2:0),n=n.Parent;if(Bridge.is(n,Kusto.Language.Syntax.SeparatedElement)&&childIndex===0&&(childIndex=($t4=($t5=n.Parent)!=null?$t5.GetChildIndex(n):null,$t4!=null?$t4:0),n=n.Parent),functionCall=null,Bridge.is(n,Kusto.Language.Syntax.SyntaxList)&&(el=Bridge.as(n.Parent,Kusto.Language.Syntax.ExpressionList))!=null&&(fc1=Bridge.as(el.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&(fs=Bridge.as(fc1.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null)signatures.v=fs.Signatures,functionCall=fc1,$arguments.v=System.Linq.Enumerable.from(fc1.ArgumentList.Expressions).select(function(e){return e.Element$1}).toList(Kusto.Language.Syntax.Expression),argumentIndex.v=childIndex,argumentCount.v=n.ChildCount;else if(Bridge.is(n,Kusto.Language.Syntax.ExpressionList)&&(fc2=Bridge.as(n.Parent,Kusto.Language.Syntax.FunctionCallExpression))!=null&&(fs2=Bridge.as(fc2.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null)signatures.v=fs2.Signatures,functionCall=fc2,$arguments.v=System.Linq.Enumerable.from(fc2.ArgumentList.Expressions).select(function(e){return e.Element$1}).toList(Kusto.Language.Syntax.Expression),argumentIndex.v=0,argumentCount.v=1;else return(be=Bridge.as(n,Kusto.Language.Syntax.BinaryExpression))!=null&&(os=Bridge.as(be.ReferencedSymbol,Kusto.Language.Symbols.OperatorSymbol))!=null?(signatures.v=os.Signatures,$arguments.v=function(_o1){return _o1.add(be.Left),_o1.add(be.Right),_o1}(new(System.Collections.Generic.List$1(Kusto.Language.Syntax.Expression).$ctor2)(2)),argumentIndex.v=childIndex===0?0:1,argumentCount.v=2,!0):(signatures.v=null,$arguments.v=null,argumentIndex.v=0,argumentCount.v=0,!1);return functionCall!=null&&$arguments.v!=null&&Kusto.Language.Editor.KustoCompleter.IsInvokeFunctionContext(functionCall.Parent)&&($arguments.v.insert(0,null),argumentIndex.v=argumentIndex.v+1|0,argumentCount.v=argumentCount.v+1|0),!0},GetFunctionArgumentCompletions:function(position,contextNode,childIndex,builder){var $t,$t1,$t2,$t3,signatures={},$arguments={},argumentIndex={},argumentCount={},name={},fs,suggestions,s,examples,sig,p,cpl,cc,dpl,ds,ex,x;if(this.TryGetFunctionOrOperatorArgument(contextNode,childIndex,signatures,$arguments,argumentIndex,argumentCount,name)){if(!Bridge.is(contextNode,Kusto.Language.Syntax.NamedExpression)&&(fs=Bridge.as(System.Array.getItem(signatures.v,0,Kusto.Language.Symbols.Signature).Symbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&this.ShowParameterNames(fs)){suggestions=this.GetArgumentNameSuggestions(signatures.v,$arguments.v,argumentIndex.v);$t=Bridge.getEnumerator(suggestions);try{while($t.moveNext())s=$t.Current,builder.Add(new Kusto.Language.Editor.CompletionItem(Kusto.Language.Editor.CompletionKind.Parameter,(s||"")+"=",(s||"")+"=",void 0,s,2))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}if(suggestions.Count>0&&this.IsArgumentNameRequired$1(signatures.v,$arguments.v,argumentIndex.v))return Kusto.Language.Editor.KustoCompleter.CompletionMode.Isolated}examples=null;$t1=Bridge.getEnumerator(signatures.v,Kusto.Language.Symbols.Signature);try{while($t1.moveNext()){if(sig=$t1.Current,p=name.v!=null?sig.GetParameter$2(name.v):sig.GetParameter$1(argumentIndex.v,argumentCount.v),argumentIndex.v===0)switch(sig.ReturnKind){case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Cluster:return builder.AddRange(this.GetMemberNameExamples(this.code.Globals.Clusters)),this.GetStringValuesInScope(position,contextNode,builder),Kusto.Language.Editor.KustoCompleter.CompletionMode.Isolated;case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Database:return(cpl=Bridge.as(Kusto.Language.Editor.KustoCompleter.GetLeftOfFunctionCall(contextNode),Kusto.Language.Syntax.Expression))!=null?(cc=Bridge.as(cpl.ResultType,Kusto.Language.Symbols.ClusterSymbol))!=null&&builder.AddRange(this.GetMemberNameExamples(cc.Members)):builder.AddRange(this.GetMemberNameExamples(this.code.Globals.Cluster.Members)),this.GetStringValuesInScope(position,contextNode,builder),Kusto.Language.Editor.KustoCompleter.CompletionMode.Isolated;case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Table:return(dpl=Bridge.as(Kusto.Language.Editor.KustoCompleter.GetLeftOfFunctionCall(contextNode),Kusto.Language.Syntax.Expression))!=null?(ds=Bridge.as(dpl.ResultType,Kusto.Language.Symbols.DatabaseSymbol))!=null&&builder.AddRange(this.GetMemberNameExamples(System.Linq.Enumerable.from(ds.Members).ofType(Kusto.Language.Symbols.TableSymbol))):builder.AddRange(this.GetMemberNameExamples(System.Linq.Enumerable.from(this.code.Globals.Database.Members).ofType(Kusto.Language.Symbols.TableSymbol))),this.GetStringValuesInScope(position,contextNode,builder),Kusto.Language.Editor.KustoCompleter.CompletionMode.Isolated}if(p!=null&&System.Array.getCount(p.Examples,System.String)>0){examples==null&&(examples=new(System.Collections.Generic.HashSet$1(System.String).ctor));$t2=Bridge.getEnumerator(p.Examples,System.String);try{while($t2.moveNext())ex=$t2.Current,examples.add(ex)}finally{Bridge.is($t2,System.IDisposable)&&$t2.System$IDisposable$Dispose()}}}}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}if(examples!=null){$t3=Bridge.getEnumerator(examples);try{while($t3.moveNext())x=$t3.Current,builder.Add(new Kusto.Language.Editor.CompletionItem(Kusto.Language.Editor.CompletionKind.Literal,x))}finally{Bridge.is($t3,System.IDisposable)&&$t3.System$IDisposable$Dispose()}}}return Kusto.Language.Editor.KustoCompleter.CompletionMode.Combined},GetStringValuesInScope:function(position,contextNode,builder){var $t,symbols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Symbol).ctor),i,type,symbol,item;for(Kusto.Language.Binding.Binder.GetSymbolsInScope(this.code.Syntax,position,this.code.Globals,Kusto.Language.Symbols.SymbolMatch.Local,Kusto.Language.IncludeFunctionKind.All,symbols,this.cancellationToken),i=symbols.Count-1|0;i>=0;i=i-1|0)type={},this.TryGetScalarType(symbols.getItem(i),type)&&Bridge.referenceEquals(type.v,Kusto.Language.Symbols.ScalarTypes.String)||symbols.removeAt(i);$t=Bridge.getEnumerator(symbols);try{while($t.moveNext())symbol=$t.Current,item=this.GetSymbolCompletionItem(symbol,contextNode,!1),builder.Add(item)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},TryGetScalarType:function(symbol,type){var ps,vs,cs;do return Bridge.is(symbol,Kusto.Language.Symbols.ParameterSymbol)?(ps=Bridge.cast(symbol,Kusto.Language.Symbols.ParameterSymbol),type.v=ps.Type,!0):Bridge.is(symbol,Kusto.Language.Symbols.VariableSymbol)?(vs=Bridge.cast(symbol,Kusto.Language.Symbols.VariableSymbol),type.v=vs.Type,!0):Bridge.is(symbol,Kusto.Language.Symbols.ColumnSymbol)?(cs=Bridge.cast(symbol,Kusto.Language.Symbols.ColumnSymbol),type.v=cs.Type,!0):(type.v=null,!1);while(0)},GetMemberNameExamples:function(symbols){return System.Linq.Enumerable.from(symbols).select(function(s){return new Kusto.Language.Editor.CompletionItem(Kusto.Language.Editor.CompletionKind.Literal,Kusto.Language.KustoFacts.GetStringLiteral(s.Name))})},ShowParameterNames:function($function){return!this.code.Globals.IsBuiltInFunction($function)&&$function.MaxArgumentCount>=2},IsArgumentNameRequired$1:function(signatures,$arguments,argumentIndex){var $t,sig;$t=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())if(sig=$t.Current,argumentIndex<sig.MaxArgumentCount&&this.IsArgumentNameRequired(sig,$arguments,argumentIndex))return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!1},IsArgumentNameRequired:function(signature,$arguments,argumentIndex){for(var arg,i=0,n=System.Array.getCount($arguments,Kusto.Language.Syntax.Expression);i<argumentIndex;i=i+1|0)if(arg=System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression),!Bridge.referenceEquals(signature.GetParameter(arg,i,n),signature.GetParameter$1(i,n)))return!0;return!1},GetSpecifiedArgumentNames:function($arguments){for(var arg,sn,names=new(System.Collections.Generic.HashSet$1(System.String).ctor),i=0;i<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression);i=i+1|0)arg=System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression),(sn=Bridge.as(arg,Kusto.Language.Syntax.SimpleNamedExpression))!=null&&names.add(sn.Name.SimpleName);return names},GetArgumentNameSuggestions:function(signatures,$arguments,argumentIndex){var $t,$t1,specifiedNames=this.GetSpecifiedArgumentNames($arguments),unspecifiedNames=new(System.Collections.Generic.HashSet$1(System.String).ctor),suggestedNames=new(System.Collections.Generic.HashSet$1(System.String).ctor),sig,i,n,arg,p,p1;$t=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())if(sig={v:$t.Current},System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)<=sig.v.MaxArgumentCount&&System.Linq.Enumerable.from(specifiedNames).all(function($me,sig){return function(n){return System.Linq.Enumerable.from(sig.v.Parameters).any(function(p){return Bridge.referenceEquals(p.Name,n)})}}(this,sig))){for(unspecifiedNames.clear(),i=0,n=System.Array.getCount($arguments,Kusto.Language.Syntax.Expression);i<n;i=i+1|0)i!==argumentIndex&&(arg=System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression),p=sig.v.GetParameter(arg,i,n),unspecifiedNames.add(p.Name));$t1=Bridge.getEnumerator(sig.v.Parameters,Kusto.Language.Symbols.Parameter);try{while($t1.moveNext())p1=$t1.Current,specifiedNames.contains(p1.Name)||unspecifiedNames.contains(p1.Name)||suggestedNames.add(p1.Name)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return suggestedNames},GetCompletionHint$1:function(position){var contextNode={},index={};return this.TryGetCompletionContext(position,contextNode,index)?this.GetCompletionHint(contextNode.v,index.v,Kusto.Language.Editor.CompletionHint.Query):Kusto.Language.Editor.CompletionHint.Query},GetCompletionHint:function(contextNode,childIndex,defaultHint){var hint,i,n,parent,indexInParent;if((defaultHint===void 0&&(defaultHint=0),hint=this.GetChildHint(contextNode,childIndex,defaultHint),Bridge.is(contextNode,Kusto.Language.Syntax.SeparatedElement)&&childIndex===1)||Kusto.Language.Editor.KustoCompleter.IsChildMissing(contextNode,childIndex))return hint;if(Kusto.Language.Editor.KustoCompleter.IsChildEmpty(contextNode,childIndex)||Bridge.is(contextNode,Kusto.Language.Syntax.SyntaxList))while(contextNode!=null){for(i=childIndex+1|0,n=contextNode.ChildCount;i<n;i=i+1|0)if(!Kusto.Language.Editor.KustoCompleter.IsChildMissingOrEmpty(contextNode,i)||(hint|=this.GetChildHint(contextNode,i,defaultHint),Kusto.Language.Editor.KustoCompleter.IsChildMissing(contextNode,i)))return hint;parent=contextNode.Parent;indexInParent=parent!=null?parent.GetChildIndex(contextNode):0;contextNode=parent;childIndex=indexInParent}return hint},GetChildHint:function(contextNode,childIndex,$default){var hint,parent;$default===void 0&&($default=0);var signatures={},argumentIndex={},argumentCount={},parameterName={};if(this.TryGetFunctionOrOperatorArgument(contextNode,childIndex,signatures,{},argumentIndex,argumentCount,parameterName))return this.GetParameterHint(signatures.v,parameterName.v,argumentIndex.v,argumentCount.v);for(;;){if(hint=contextNode.GetCompletionHint(childIndex),hint!==Kusto.Language.Editor.CompletionHint.Inherit)return hint;if((parent=contextNode.Parent)!=null)childIndex=parent.GetChildIndex(contextNode),contextNode=parent;else return $default}},GetParameterHint:function(signatures,parameterName,iArgument,nArguments){var $t,$t1,hint=Kusto.Language.Editor.CompletionHint.None,signature,parameterList,p;$t=Bridge.getEnumerator(signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())if(signature=$t.Current,!signature.IsHidden)if(parameterName!=null)hint|=this.GetParameterHint$1(signature,signature.GetParameter$2(parameterName));else{parameterList=Kusto.Language.Editor.KustoCompleter.s_parameterListPool.AllocateFromPool();try{signature.GetPossibleParameters(iArgument,nArguments,parameterList);$t1=Bridge.getEnumerator(parameterList);try{while($t1.moveNext())p=$t1.Current,hint|=this.GetParameterHint$1(signature,p)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}finally{Kusto.Language.Editor.KustoCompleter.s_parameterListPool.ReturnToPool(parameterList)}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return hint},GetParameterHint$1:function(signature,parameter){if(parameter!=null){switch(parameter.ArgumentKind){case Kusto.Language.Symbols.ArgumentKind.Column:return Kusto.Language.Editor.CompletionHint.Column;case Kusto.Language.Symbols.ArgumentKind.Star:return Kusto.Language.Editor.CompletionHint.None}switch(parameter.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Declared:if(System.Array.getItem(parameter.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol).IsScalar)return System.Array.getCount(parameter.DeclaredTypes,Kusto.Language.Symbols.TypeSymbol)===1&&Bridge.referenceEquals(System.Array.getItem(parameter.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol),Kusto.Language.Symbols.ScalarTypes.Bool)?Kusto.Language.Editor.CompletionHint.Boolean:System.Linq.Enumerable.from(parameter.DeclaredTypes).all(function(t){var s;(s=Bridge.as(t,Kusto.Language.Symbols.ScalarSymbol))!=null&&s.IsNumeric})?Kusto.Language.Editor.CompletionHint.Number:Kusto.Language.Editor.CompletionHint.Scalar;if(System.Array.getItem(parameter.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol).IsTabular)return Kusto.Language.Editor.CompletionHint.Tabular;break;case Kusto.Language.Symbols.ParameterTypeKind.Parameter0:return this.GetParameterHint$1(signature,signature.GetParameter$1(0,1));case Kusto.Language.Symbols.ParameterTypeKind.Parameter1:return this.GetParameterHint$1(signature,signature.GetParameter$1(1,2));case Kusto.Language.Symbols.ParameterTypeKind.Parameter2:return this.GetParameterHint$1(signature,signature.GetParameter$1(2,3));case Kusto.Language.Symbols.ParameterTypeKind.Tabular:case Kusto.Language.Symbols.ParameterTypeKind.SingleColumnTable:return Kusto.Language.Editor.CompletionHint.Tabular;case Kusto.Language.Symbols.ParameterTypeKind.Database:return Kusto.Language.Editor.CompletionHint.Database;case Kusto.Language.Symbols.ParameterTypeKind.Cluster:return Kusto.Language.Editor.CompletionHint.Cluster;case Kusto.Language.Symbols.ParameterTypeKind.Number:return Kusto.Language.Editor.CompletionHint.Number;default:return Kusto.Language.Editor.CompletionHint.Scalar}}return Kusto.Language.Editor.CompletionHint.None},TryGetCompletionContext:function(position,contextNode,contextChildIndex){var token,hasAffinity,prev,tokenNode,prevToken,prevNode,nextToken,nextNode;if(contextNode.v=null,contextChildIndex.v=0,token=this.code.Syntax.GetTokenAt(position),token==null)return!1;if(hasAffinity=Kusto.Language.Editor.KustoCompleter.HasAffinity(token,position),hasAffinity)return(prev=token.GetPreviousToken(!0),prev!=null&&prev.IsMissing)?!1:(contextNode.v=token.Parent,contextChildIndex.v=Kusto.Language.Editor.KustoCompleter.GetChildIndex(contextNode.v,position),!0);if(tokenNode=Kusto.Language.Editor.KustoCompleter.GetNearestAncestorWithEmptyChild(token,position),position<=token.TextStart&&!hasAffinity||token.Kind===Kusto.Language.Syntax.SyntaxKind.EndOfTextToken){if(prevToken=token.GetPreviousToken(),prevToken!=null&&(prevNode=Kusto.Language.Editor.KustoCompleter.GetNearestAncestorWithEmptyChild(prevToken,position),prevNode!=null&&(tokenNode==null||prevNode.Depth>=tokenNode.Depth)))return contextNode.v=prevNode,contextChildIndex.v=Kusto.Language.Editor.KustoCompleter.GetChildIndex(contextNode.v,position),!0}else if(position>=token.End&&!hasAffinity&&(nextToken=token.GetNextToken(),nextToken!=null&&(nextNode=Kusto.Language.Editor.KustoCompleter.GetNearestAncestorWithEmptyChild(nextToken,position),nextNode!=null&&(tokenNode==null||nextNode.Depth>tokenNode.Depth))))return contextNode.v=nextNode,contextChildIndex.v=Kusto.Language.Editor.KustoCompleter.GetChildIndex(contextNode.v,position),!0;return tokenNode!=null?(contextNode.v=tokenNode,contextChildIndex.v=Kusto.Language.Editor.KustoCompleter.GetChildIndex(contextNode.v,position),!0):!1},GetSyntaxCompletions:function(position,builder){var hints=this.GetCompletionHint$1(position),match=this.GetSymbolMatch(position),expr=this.GetCompleteExpressionLeftOfPosition(position);this.ScanGrammarAtPosition(position,Bridge.fn.bind(this,function(g){var i,n,item;for(this.cancellationToken.ThrowIfCancellationRequested(),i=0,n=System.Array.getCount(g.Annotations,System.Object);i<n;i=i+1|0)item=Bridge.as(System.Array.getItem(g.Annotations,i,System.Object),Kusto.Language.Editor.CompletionItem),item!=null&&this.IncludeSyntax(item,position,hints,match,expr)&&(this.ShouldAugmentSyntaxCompletionItem(item)&&(item=this.GetAugmentedCompletionItem(item)),builder.Add(item))}))},GetAugmentedCompletionItem:function(item){return item.WithEditText((item.EditText||"")+" ")},ShouldAugmentSyntaxCompletionItem:function(item){var $t,$t1;if(!this.options.AutoAppendWhitespace||System.Nullable.gt(($t=item.AfterText)!=null?$t.length:null,0)||System.String.endsWith(item.EditText,"=")&&($t1=item.EditText.charCodeAt(0),System.Char.isDigit($t1)||System.Char.isLetter($t1))&&item.EditText.length>1&&!System.Char.isWhiteSpace(String.fromCharCode(item.EditText.charCodeAt(item.EditText.length-2|0))))return!1;switch(item.Kind){case Kusto.Language.Editor.CompletionKind.Column:case Kusto.Language.Editor.CompletionKind.ScalarFunction:case Kusto.Language.Editor.CompletionKind.TabularFunction:case Kusto.Language.Editor.CompletionKind.AggregateFunction:case Kusto.Language.Editor.CompletionKind.Parameter:case Kusto.Language.Editor.CompletionKind.Variable:case Kusto.Language.Editor.CompletionKind.Table:case Kusto.Language.Editor.CompletionKind.Database:case Kusto.Language.Editor.CompletionKind.Cluster:return!1;case Kusto.Language.Editor.CompletionKind.Punctuation:return System.Linq.Enumerable.from(Kusto.Language.Editor.KustoCompleter.punctuationWithoutSpace).any(function(p){return Bridge.referenceEquals(item.DisplayText,p)});default:return!0}},ScanGrammarAtPosition:function(position,action){var offset=this.GetTokenIndex(position),source=new(Kusto.Language.Parsing.ArraySource$1(Kusto.Language.Parsing.LexicalToken))(this.code.LexerTokens);this.code.Grammar.Search$1(source,0,!1,function(_grammar,_source,_start,_prevWasMissing){_start===offset&&(_prevWasMissing||action(_grammar))})},GetTokenLeftOfPosition:function(position){var token=this.code.Syntax.GetTokenAt(position),hasAffinity=token!=null&&Kusto.Language.Editor.KustoCompleter.HasAffinity(token,position);return token!=null&&(position<token.TextStart||!hasAffinity||token.Kind===Kusto.Language.Syntax.SyntaxKind.EndOfTextToken)&&(token=token.GetPreviousToken()),token},GetCompleteExpressionLeftOfPosition:function(position){var token=this.GetTokenLeftOfPosition(position),expr=token!=null?token.GetFirstAncestorOrSelf(Kusto.Language.Syntax.Expression):null;return expr!=null&&expr.End===token.End&&!expr.HasMissingChildren()?expr:null},GetTokenIndex:function(position){if(System.Array.getCount(this.code.LexerTokens,Kusto.Language.Parsing.LexicalToken)===0)return 0;if(position>=System.Array.getItem(this.code.LexerTokens,System.Array.getCount(this.code.LexerTokens,Kusto.Language.Parsing.LexicalToken)-1|0,Kusto.Language.Parsing.LexicalToken).End)return System.Array.getCount(this.code.LexerTokens,Kusto.Language.Parsing.LexicalToken)-1|0;var offset=Kusto.Language.Utils.ListExtensions.BinarySearch(Bridge.global.Kusto.Language.Parsing.LexicalToken,this.code.LexerTokens,function(t){return position<t.TriviaStart?1:position>=t.End?-1:0});return offset>=0?offset:0},IncludeSyntax:function(item,position,hints,match,left){if(!this.options.IncludePunctuationOnlySyntax&&item.Kind===Kusto.Language.Editor.CompletionKind.Punctuation)return!1;switch(item.Kind){case Kusto.Language.Editor.CompletionKind.QueryPrefix:return(hints&Kusto.Language.Editor.CompletionHint.Query)!=0||(hints&Kusto.Language.Editor.CompletionHint.Keyword)!=0||(match&Kusto.Language.Symbols.SymbolMatch.Tabular)!=0;case Kusto.Language.Editor.CompletionKind.TabularPrefix:return(match&Kusto.Language.Symbols.SymbolMatch.Tabular)!=0;case Kusto.Language.Editor.CompletionKind.TabularSuffix:return left!=null&&left.ResultType!=null&&left.ResultType.IsTabular;case Kusto.Language.Editor.CompletionKind.ScalarPrefix:return(match&Kusto.Language.Symbols.SymbolMatch.Scalar)!=0;case Kusto.Language.Editor.CompletionKind.ScalarInfix:return this.AnyInfixMatches(left,item.DisplayText,position);default:return!0}},AnyInfixMatches:function(left,op,position){var kind=Kusto.Language.Editor.KustoCompleter.GetOperatorKind(op),hint,parent;if(kind===Kusto.Language.Symbols.OperatorKind.None)return!1;for(;left!=null;left=Bridge.as(left.Parent,Kusto.Language.Syntax.Expression)){if(position<left.End)break;if(left.ResultType!=null&&(hint=Kusto.Language.Editor.CompletionHint.None,(parent=left.Parent)!=null&&(hint=this.GetChildHint(parent,parent.GetChildIndex(left),Kusto.Language.Editor.CompletionHint.Query)),this.HasMatchingInfixOperator(kind,left.ResultType,hint)))return!0}return!1},HasMatchingInfixOperator:function(kind,arg0Type,returnTypeHint){var $t,op=this.code.Globals.GetOperator(kind),sig;$t=Bridge.getEnumerator(op.Signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())if(sig=$t.Current,!sig.IsHidden&&Kusto.Language.Editor.KustoCompleter.ParameterMatches(System.Array.getItem(sig.Parameters,0,Kusto.Language.Symbols.Parameter),arg0Type)&&Kusto.Language.Editor.KustoCompleter.ReturnTypeMatchesContext(sig,arg0Type,returnTypeHint))return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!1},GetCompletionKind:function(symbol){switch(symbol.Kind){case Kusto.Language.Symbols.SymbolKind.Cluster:return Kusto.Language.Editor.CompletionKind.Cluster;case Kusto.Language.Symbols.SymbolKind.Column:return Kusto.Language.Editor.CompletionKind.Column;case Kusto.Language.Symbols.SymbolKind.Database:return Kusto.Language.Editor.CompletionKind.Database;case Kusto.Language.Symbols.SymbolKind.Function:case Kusto.Language.Symbols.SymbolKind.Pattern:case Kusto.Language.Symbols.SymbolKind.Operator:return Bridge.referenceEquals(this.code.Globals.GetAggregate(symbol.Name),symbol)?Kusto.Language.Editor.CompletionKind.AggregateFunction:symbol.IsScalar?Kusto.Language.Editor.CompletionKind.ScalarFunction:Kusto.Language.Editor.CompletionKind.TabularFunction;case Kusto.Language.Symbols.SymbolKind.Variable:return this.GetVariableCompletionKind(Bridge.cast(symbol,Kusto.Language.Symbols.VariableSymbol));case Kusto.Language.Symbols.SymbolKind.Parameter:return Kusto.Language.Editor.CompletionKind.Parameter;case Kusto.Language.Symbols.SymbolKind.Table:return Kusto.Language.Editor.CompletionKind.Table;case Kusto.Language.Symbols.SymbolKind.Tuple:case Kusto.Language.Symbols.SymbolKind.Scalar:case Kusto.Language.Symbols.SymbolKind.Group:case Kusto.Language.Symbols.SymbolKind.Void:default:return Kusto.Language.Editor.CompletionKind.Unknown}},GetVariableCompletionKind:function(vs){switch(vs.Type.Kind){case Kusto.Language.Symbols.SymbolKind.Table:case Kusto.Language.Symbols.SymbolKind.Function:case Kusto.Language.Symbols.SymbolKind.Pattern:return this.GetCompletionKind(vs.Type);default:return Kusto.Language.Editor.CompletionKind.Variable}}}});Bridge.define("Kusto.Language.Editor.KustoCompleter.CompletionBuilder",{$kind:"nested class",statics:{methods:{GetBetterItem:function(existing,other){return existing.Kind===Kusto.Language.Editor.CompletionKind.Keyword&&other.Kind===Kusto.Language.Editor.CompletionKind.QueryPrefix?other:existing}}},fields:{list:null,indexMap:null},ctors:{init:function(){this.list=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CompletionItem).ctor);this.indexMap=new(System.Collections.Generic.Dictionary$2(System.String,System.Int32))},ctor:function(){this.$initialize()}},methods:{ToList:function(){return this.list.AsReadOnly()},Add:function(item){var existingItemIndex={},better;this.indexMap.tryGetValue(item.DisplayText,existingItemIndex)?(better=Kusto.Language.Editor.KustoCompleter.CompletionBuilder.GetBetterItem(this.list.getItem(existingItemIndex.v),item),Bridge.referenceEquals(better,item)&&this.list.setItem(existingItemIndex.v,item)):(this.indexMap.add(item.DisplayText,this.list.Count),this.list.add(item))},AddRange:function(items){var $t,item;$t=Bridge.getEnumerator(items,Kusto.Language.Editor.CompletionItem);try{while($t.moveNext())item=$t.Current,this.Add(item)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}});Bridge.define("Kusto.Language.Editor.KustoCompleter.CompletionMode",{$kind:"nested enum",statics:{fields:{Isolated:0,Combined:1}}});Bridge.define("Kusto.Language.Editor.KustoCompleter.OrderingRank",{$kind:"nested enum",statics:{fields:{Literal:0,Aggregate:1,Column:2,Table:3,Variable:4,Function:5,Keyword:6,StringOperator:7,MathOperator:8,Other:9}}});Bridge.define("Kusto.Language.Editor.KustoFormatter",{statics:{fields:{s_Spaces:null},ctors:{init:function(){this.s_Spaces=System.String.fromCharCount(32,256)}},methods:{GetFormattedText:function(node,options,cursorPosition){var formatter=new Kusto.Language.Editor.KustoFormatter(cursorPosition,options||Kusto.Language.Editor.FormattingOptions.Default);return formatter.Format(node),new Kusto.Language.Editor.FormattedText(formatter._builder.toString(),formatter._newCursorPosition)},SkipWhitespace:function(text,start){for(var p=start;p<text.length&&Kusto.Language.Parsing.TextFacts.IsWhitespace(text.charCodeAt(p))&&!Kusto.Language.Parsing.TextFacts.IsLineBreakStart(text.charCodeAt(p));)p=p+1|0;return p},IsIdentifierOrKeyword:function(token){return token.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||Kusto.Language.Syntax.SyntaxFacts.IsKeyword(token.Kind)},IsWildcardPart:function(token){return Bridge.is(token.Parent,Kusto.Language.Syntax.WildcardedName)},DidSpanMultipleLines$1:function(first,last,inclusive,excluded){if(inclusive===void 0&&(inclusive=!1),excluded===void 0&&(excluded=null),first!=null&&last!=null){if(inclusive&&!Bridge.referenceEquals(first,excluded)&&Kusto.Language.Parsing.TextFacts.HasLineBreaks(first.Trivia))return!0;for(var token=first.GetNextToken();token!=null;){if(!Bridge.referenceEquals(token,excluded)&&Kusto.Language.Parsing.TextFacts.HasLineBreaks(token.Trivia))return!0;if(Bridge.referenceEquals(token,last))break;token=token.GetNextToken()}}return!1},DidSpanMultipleLines:function(node,inclusive,excluded){return(inclusive===void 0&&(inclusive=!1),excluded===void 0&&(excluded=null),node!=null)?Kusto.Language.Editor.KustoFormatter.DidSpanMultipleLines$1(node.GetFirstToken(),node.GetLastToken(),inclusive,excluded):!1}}},fields:{_options:null,_builder:null,_cursorPosition:0,_newCursorPosition:0,_spacingRules:null,_alignmentRules:null,_elementIndentations:null},ctors:{init:function(){this._spacingRules=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Editor.KustoFormatter.SpacingRule));this._alignmentRules=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Editor.KustoFormatter.AlignmentRule));this._elementIndentations=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Syntax.SyntaxElement,System.Int32))},ctor:function(cursorPosition,options){this.$initialize();this._cursorPosition=cursorPosition;this._newCursorPosition=-1;this._options=options;this._builder=new System.Text.StringBuilder}},methods:{Format:function(node){this.IdentityFormattingRules(node);this.WriteFormattedText(node,0);this._newCursorPosition===-1&&(this._newCursorPosition=this._cursorPosition<=0?this._cursorPosition:this._cursorPosition<=node.End?this._builder.getLength():this._cursorPosition+(this._builder.getLength()-node.Width|0)|0)},WriteFormattedText:function(node,indentation){var i,child,alignment,elementIndentation,n,t2;if(node!=null)for(i=0;i<node.ChildCount;i=i+1|0)if(child=node.GetChild(i),child!=null){var spacingKind=Kusto.Language.Editor.KustoFormatter.SpacingKind.AlignOnly,childIndentation=indentation,spacing={};this._spacingRules.tryGetValue(child,spacing)&&(spacingKind=spacing.v.GetKind());alignment={};this._alignmentRules.tryGetValue(child,alignment)&&(alignment.v.RelativeToElement==null?childIndentation=childIndentation+alignment.v.IndentationDelta|0:(elementIndentation={},this._elementIndentations.tryGetValue(alignment.v.RelativeToElement,elementIndentation)&&(childIndentation=elementIndentation.v+alignment.v.IndentationDelta|0)));(n=Bridge.as(child,Kusto.Language.Syntax.SyntaxNode))!=null?this.WriteFormattedText(n,childIndentation):(t2=Bridge.as(child,Kusto.Language.Syntax.SyntaxToken))!=null&&(this.WriteToken(t2,childIndentation,spacingKind),this._elementIndentations.add(t2,childIndentation));i===0&&this._elementIndentations.add(node,childIndentation)}},WriteToken:function(token,indentation,spacingKind){if(spacingKind===void 0&&(spacingKind=2),(token.Text.length>0||token.Trivia.length>0||token.IsMissing&&this._options.InsertMissingTokens)&&this.WriteTrivia(token,indentation,spacingKind,token.Kind!==Kusto.Language.Syntax.SyntaxKind.EndOfTextToken),this._newCursorPosition===-1&&(this._cursorPosition>=token.TextStart&&this._cursorPosition<=token.End?this._newCursorPosition=this._builder.getLength()+(this._cursorPosition-token.TextStart|0)|0:this._cursorPosition<token.TextStart&&(this._newCursorPosition=this._builder.getLength())),token.IsMissing&&this._options.InsertMissingTokens){var text=Kusto.Language.Syntax.SyntaxFacts.GetText(token.Kind);System.String.isNullOrEmpty(text)||this._builder.append(text)}else this._builder.append(token.Text)},WriteTrivia:function(token,indentation,spacingKind,hasFollowingToken){var trivia=token.Trivia,cursorInTrivia=this._cursorPosition>=token.TriviaStart&&this._cursorPosition<token.TextStart,lineStart,lineEnd,whitespaceEnd,nextLineBreakStart,nextLineStart;switch(spacingKind){case Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpace:return;case Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpace:this._builder.append(" ");return}if(spacingKind!==Kusto.Language.Editor.KustoFormatter.SpacingKind.AsIs&&Kusto.Language.Parsing.TextFacts.HasLineBreaks(trivia))for(lineStart=0,lineEnd=0;lineStart<trivia.length;lineStart=lineEnd)whitespaceEnd=Kusto.Language.Editor.KustoFormatter.SkipWhitespace(trivia,lineStart),lineStart===0?this._builder.append(trivia,lineStart,whitespaceEnd-lineStart|0):this.WriteIndentation(indentation),nextLineBreakStart=Kusto.Language.Parsing.TextFacts.GetNextLineBreakStart(trivia,whitespaceEnd),nextLineStart=Kusto.Language.Parsing.TextFacts.GetNextLineStart(trivia,whitespaceEnd),lineEnd=nextLineStart>=0?nextLineStart:whitespaceEnd,this._builder.append(trivia,whitespaceEnd,lineEnd-whitespaceEnd|0),lineEnd>=trivia.length&&nextLineBreakStart>=0&&hasFollowingToken&&this.WriteIndentation(indentation);else switch(spacingKind){case Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpaceIfOnSameLine:break;case Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine:this._builder.append(" ");break;case Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine:this._builder.appendLine();this.WriteIndentation(indentation);break;case Kusto.Language.Editor.KustoFormatter.SpacingKind.AsIs:case Kusto.Language.Editor.KustoFormatter.SpacingKind.AlignOnly:default:this._builder.append(trivia)}},WriteIndentation:function(indentation){this._builder.append(Kusto.Language.Editor.KustoFormatter.s_Spaces,0,Math.min(indentation,Kusto.Language.Editor.KustoFormatter.s_Spaces.length))},IdentityFormattingRules:function(node){var i,child,n,t;if(node!=null){for(i=0;i<node.ChildCount;i=i+1|0)child=node.GetChild(i),(n=Bridge.as(child,Kusto.Language.Syntax.SyntaxNode))!=null?this.IdentityFormattingRules(n):(t=Bridge.as(child,Kusto.Language.Syntax.SyntaxToken))!=null&&this.IdentifyTokenSpacing(t);this.IdentifyNodeSpacing(node)}},IdentifyTokenSpacing:function(token){var prev,be,pbe,pue;if(!Kusto.Language.Parsing.TextFacts.HasLineBreaks(token.Trivia)&&(prev=token.GetPreviousToken(),prev!=null))if(Kusto.Language.Editor.KustoFormatter.IsWildcardPart(token))Bridge.referenceEquals(token.Trivia,"")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpace));else if(Kusto.Language.Editor.KustoFormatter.IsIdentifierOrKeyword(token)&&Kusto.Language.Editor.KustoFormatter.IsIdentifierOrKeyword(prev))Bridge.referenceEquals(token.Trivia," ")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine));else if((be=Bridge.as(token.Parent,Kusto.Language.Syntax.BinaryExpression))!=null&&Bridge.referenceEquals(be.Operator,token)||(pbe=Bridge.as(prev.Parent,Kusto.Language.Syntax.BinaryExpression))!=null&&Bridge.referenceEquals(pbe.Operator,prev))Bridge.referenceEquals(token.Trivia," ")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine));else if((pue=Bridge.as(prev.Parent,Kusto.Language.Syntax.PrefixUnaryExpression))!=null&&Bridge.referenceEquals(pue.Operator,prev))Bridge.referenceEquals(token.Trivia,"")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpaceIfOnSameLine));else if(token.Kind!==Kusto.Language.Syntax.SyntaxKind.EndOfTextToken){switch(token.Kind){case Kusto.Language.Syntax.SyntaxKind.CloseBraceToken:case Kusto.Language.Syntax.SyntaxKind.CloseBracketToken:case Kusto.Language.Syntax.SyntaxKind.CloseParenToken:case Kusto.Language.Syntax.SyntaxKind.CommaToken:case Kusto.Language.Syntax.SyntaxKind.ColonToken:case Kusto.Language.Syntax.SyntaxKind.SemicolonToken:case Kusto.Language.Syntax.SyntaxKind.DotToken:case Kusto.Language.Syntax.SyntaxKind.DotDotToken:Bridge.referenceEquals(token.Trivia,"")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpaceIfOnSameLine));break;case Kusto.Language.Syntax.SyntaxKind.BarToken:Bridge.referenceEquals(token.Trivia," ")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine))}switch(prev.Kind){case Kusto.Language.Syntax.SyntaxKind.OpenBraceToken:case Kusto.Language.Syntax.SyntaxKind.OpenBracketToken:case Kusto.Language.Syntax.SyntaxKind.OpenParenToken:case Kusto.Language.Syntax.SyntaxKind.DotDotToken:case Kusto.Language.Syntax.SyntaxKind.DotToken:Bridge.referenceEquals(token.Trivia,"")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpaceIfOnSameLine));break;case Kusto.Language.Syntax.SyntaxKind.CommaToken:case Kusto.Language.Syntax.SyntaxKind.ColonToken:case Kusto.Language.Syntax.SyntaxKind.BarToken:case Kusto.Language.Syntax.SyntaxKind.SemicolonToken:Bridge.referenceEquals(token.Trivia," ")||this.AddRule$2(token,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine))}}},IdentifyNodeSpacing:function(n){var $t,$t1,pe,entirePipeExpression,opToken,firstToken,fd,letStatement,statement,firstToken1,firstToken2,se,be;(Bridge.is(n.Parent,Kusto.Language.Syntax.Statement)&&!Bridge.is(n.Parent,Kusto.Language.Syntax.ExpressionStatement)||Bridge.is(n.Parent,Kusto.Language.Syntax.QueryOperator)||Bridge.is(n.Parent,Kusto.Language.Syntax.Command))&&(n.Parent.GetChildIndex(n)>0&&this.AddRule(n,this.IndentRule()),Bridge.is(n,Kusto.Language.Syntax.Clause)&&this.AddRule$2(n.GetFirstToken(),new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,Bridge.fn.bind(this,function(){return this.DidOrWillSpanMultipleLines(n.Parent)}))));do{if(Bridge.is(n,Kusto.Language.Syntax.PipeExpression)){pe={v:Bridge.cast(n,Kusto.Language.Syntax.PipeExpression)};switch(this._options.PipeOperatorStyle){case Kusto.Language.Editor.PlacementStyle.Smart:entirePipeExpression={v:pe.v.GetFirstAncestorOrSelf(Kusto.Language.Syntax.SyntaxNode,function(a){return!Bridge.is(a.Parent,Kusto.Language.Syntax.PipeExpression)})};this.AddRule$2(pe.v.Bar,new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,function($me,entirePipeExpression,pe){return Bridge.fn.bind($me,function(){return this.DidOrWillSpanMultipleLines(entirePipeExpression.v,!1,pe.v.Bar)})}(this,entirePipeExpression,pe)));opToken=pe.v.Operator.GetFirstToken();this.AddRule$2(opToken,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpace));Bridge.referenceEquals(entirePipeExpression.v,pe.v)&&Bridge.is(pe.v.Parent,Kusto.Language.Syntax.ParenthesizedExpression)&&(firstToken={v:pe.v.GetFirstToken()},this.AddRule$2(firstToken.v,new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,function($me,entirePipeExpression,firstToken){return Bridge.fn.bind($me,function(){return this.DidOrWillSpanMultipleLines(entirePipeExpression.v,!1,firstToken.v)})}(this,entirePipeExpression,firstToken))));break;case Kusto.Language.Editor.PlacementStyle.NewLine:this.AddRule$2(pe.v.Bar,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine));opToken=pe.v.Operator.GetFirstToken();this.AddRule$2(opToken,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpace))}break}if(Bridge.is(n,Kusto.Language.Syntax.FunctionDeclaration)){fd={v:Bridge.cast(n,Kusto.Language.Syntax.FunctionDeclaration)};letStatement=fd.v.Parent;this.AddBrackettingStyleRules(fd.v.Body.OpenBrace,fd.v.Body.CloseBrace,letStatement);$t=Bridge.getEnumerator(fd.v.Body.Statements,"GetEnumerator$1");try{while($t.moveNext())statement=$t.Current,firstToken1={v:statement.GetFirstToken()},this.AddRule$2(firstToken1.v,new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,function($me,fd,firstToken1){return Bridge.fn.bind($me,function(){return this.DidOrWillSpanMultipleLines(fd.v.Body,!0,firstToken1.v)})}(this,fd,firstToken1)))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}this.AddRule(fd.v.Body.Statements,this.IndentRule(letStatement));fd.v.Body.Expression!=null&&(firstToken2={v:fd.v.Body.Expression.GetFirstToken()},this.AddRule$2(firstToken2.v,new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,function($me,fd,firstToken2){return Bridge.fn.bind($me,function(){return this.DidOrWillSpanMultipleLines(fd.v.Body,!0,firstToken2.v)})}(this,fd,firstToken2))),this.AddRule(fd.v.Body.Expression,this.IndentRule(letStatement)));break}if(Bridge.is(n,Kusto.Language.Syntax.SeparatedElement)){if(se={v:Bridge.cast(n,Kusto.Language.Syntax.SeparatedElement)},System.Nullable.eq(($t1=se.v.Separator)!=null?$t1.Kind:null,Kusto.Language.Syntax.SyntaxKind.SemicolonToken)&&Bridge.is(se.v.Element,Kusto.Language.Syntax.LetStatement))switch(this._options.SemicolonStyle){case Kusto.Language.Editor.PlacementStyle.Smart:this.AddRule$2(se.v.Separator,new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,function($me,se){return Bridge.fn.bind($me,function(){return this.DidOrWillSpanMultipleLines(Bridge.cast(se.v.Element,Kusto.Language.Syntax.SyntaxNode))})}(this,se)));this.AddRule(se.v.Separator,this.IndentRule(se.v));break;case Kusto.Language.Editor.PlacementStyle.NewLine:this.AddRule$2(se.v.Separator,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine));this.AddRule(se.v.Separator,this.IndentRule(se.v))}break}if(Bridge.is(n,Kusto.Language.Syntax.BrackettedExpression)){be=Bridge.cast(n,Kusto.Language.Syntax.BrackettedExpression);Bridge.is(be.Parent,Kusto.Language.Syntax.ElementExpression)&&this.AddRule$2(be.OpenBracket,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpaceIfOnSameLine));break}}while(0)},AddBrackettingStyleRules:function(open,close,alignedTo){switch(this._options.BrackettingStyle){case Kusto.Language.Editor.BrackettingStyle.Vertical:this.AddRule$2(open,new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,Bridge.fn.bind(this,function(){return this.DidOrWillSpanMultipleLines$1(open,close,!0,open)})).Otherwise(Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine)));var next=open.GetNextToken();next==null||Bridge.referenceEquals(next,close)||this.AddRule$2(next,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine));this.AddRule(open,new Kusto.Language.Editor.KustoFormatter.AlignmentRule.ctor(alignedTo));this.AddRule$2(close,new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,Bridge.fn.bind(this,function(){return this.DidOrWillSpanMultipleLines$1(open,close,!0,close)})).Otherwise(Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine)));this.AddRule(close,new Kusto.Language.Editor.KustoFormatter.AlignmentRule.ctor(alignedTo));break;case Kusto.Language.Editor.BrackettingStyle.Diagonal:this.AddRule$2(open,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpace));next=open.GetNextToken();next==null||Bridge.referenceEquals(next,close)||this.AddRule$2(next,Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine));this.AddRule$2(close,new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,Bridge.fn.bind(this,function(){return this.DidOrWillSpanMultipleLines$1(open,close,!0,close)})).Otherwise(Kusto.Language.Editor.KustoFormatter.SpacingRule.From(Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpaceIfOnSameLine)));this.AddRule(close,new Kusto.Language.Editor.KustoFormatter.AlignmentRule.ctor(alignedTo))}},AddListElementRules:function(TElement,list,relativeTo){var i,se;for(this.AddRule(list,this.IndentRule(relativeTo)),i=0;i<list.ChildCount;i=i+1|0)se=list.getItem$1(i),this.AddRule$1(se.Element$1,new Kusto.Language.Editor.KustoFormatter.SpacingRule(Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine,Bridge.fn.bind(this,function(){return this.DidOrWillSpanMultipleLines(list,!0,void 0)})))},IndentRule:function(relativeTo){return relativeTo===void 0&&(relativeTo=null),new Kusto.Language.Editor.KustoFormatter.AlignmentRule.ctor(relativeTo,this._options.IndentationSize)},AddRule$1:function(node,rule){node!=null&&this.AddRule$2(node.GetFirstToken(),rule)},AddRule$2:function(token,rule){if(token!=null){var existingRule={};this._spacingRules.tryGetValue(token,existingRule)&&(rule=rule.Otherwise(existingRule.v));this._spacingRules.set(token,rule)}},AddRule:function(element,rule){element!=null&&this._alignmentRules.set(element,rule)},DidOrWillSpanMultipleLines$1:function(first,last,inclusive,excluded){return(inclusive===void 0&&(inclusive=!1),excluded===void 0&&(excluded=null),Kusto.Language.Editor.KustoFormatter.DidSpanMultipleLines$1(first,last,inclusive,excluded))?!0:this.WillSpanMultipleLines$1(first,last,inclusive,excluded)},DidOrWillSpanMultipleLines:function(node,inclusive,excluded){return(inclusive===void 0&&(inclusive=!1),excluded===void 0&&(excluded=null),Kusto.Language.Editor.KustoFormatter.DidSpanMultipleLines(node,inclusive,excluded))?!0:this.WillSpanMultipleLines(node,inclusive,excluded)},WillSpanMultipleLines$1:function(first,last,inclusive,excluded){if(inclusive===void 0&&(inclusive=!1),excluded===void 0&&(excluded=null),first!=null&&last!=null){if(inclusive&&!Bridge.referenceEquals(first,excluded)&&this.WillHaveLineBreak(first))return!0;for(var token=first.GetNextToken();token!=null;){if(!Bridge.referenceEquals(token,excluded)&&this.WillHaveLineBreak(token))return!0;if(Bridge.referenceEquals(token,last))break;token=token.GetNextToken()}}return!1},WillSpanMultipleLines:function(node,inclusive,excluded){if(inclusive===void 0&&(inclusive=!1),excluded===void 0&&(excluded=null),node!=null){var first=node.GetFirstToken(),last=node.GetLastToken();return this.WillSpanMultipleLines$1(first,last,inclusive,excluded)}return!1},WillHaveLineBreak:function(token){return Kusto.Language.Parsing.TextFacts.HasLineBreaks(token.Trivia)?!this.WillHaveLineBreakRemoved(token):this.WillHaveLineBreakAdded(token)},WillHaveLineBreakAdded:function(token){var s={};return this._spacingRules.tryGetValue(token,s)?s.v.GetKind()===Kusto.Language.Editor.KustoFormatter.SpacingKind.NewLine:!1},WillHaveLineBreakRemoved:function(token){var s={},kind;return this._spacingRules.tryGetValue(token,s)?(kind=s.v.GetKind(),kind===Kusto.Language.Editor.KustoFormatter.SpacingKind.NoSpace||kind===Kusto.Language.Editor.KustoFormatter.SpacingKind.SingleSpace):!1}}});Bridge.define("Kusto.Language.Editor.KustoFormatter.AlignmentRule",{$kind:"nested class",props:{RelativeToElement:null,IndentationDelta:0},ctors:{ctor:function(relativeTo,indentationDelta){indentationDelta===void 0&&(indentationDelta=0);this.$initialize();this.RelativeToElement=relativeTo;this.IndentationDelta=indentationDelta},$ctor1:function(indentationDelta){Kusto.Language.Editor.KustoFormatter.AlignmentRule.ctor.call(this,null,indentationDelta)}}});Bridge.define("Kusto.Language.Editor.KustoFormatter.ComputationState",{$kind:"nested enum",statics:{fields:{Uncomputed:0,Computing:1,Computed:2}}});Bridge.define("Kusto.Language.Editor.KustoFormatter.SpacingKind",{$kind:"nested enum",statics:{fields:{Unknown:0,AsIs:2,AlignOnly:4,NoSpace:8,NoSpaceIfOnSameLine:16,SingleSpace:32,SingleSpaceIfOnSameLine:64,NewLine:128}},$flags:!0});Bridge.define("Kusto.Language.Editor.KustoFormatter.SpacingRule",{$kind:"nested class",statics:{fields:{s_spacings:null},ctors:{ctor:function(){var nSpacings=129,i;for(Kusto.Language.Editor.KustoFormatter.SpacingRule.s_spacings=System.Array.init(nSpacings,null,Kusto.Language.Editor.KustoFormatter.SpacingRule),i=0;i<nSpacings;i=i+1|0)Kusto.Language.Editor.KustoFormatter.SpacingRule.s_spacings[System.Array.index(i,Kusto.Language.Editor.KustoFormatter.SpacingRule.s_spacings)]=new Kusto.Language.Editor.KustoFormatter.SpacingRule(i,null,null)}},methods:{From:function(kind){return Kusto.Language.Editor.KustoFormatter.SpacingRule.s_spacings[System.Array.index(kind,Kusto.Language.Editor.KustoFormatter.SpacingRule.s_spacings)]}}},fields:{_kind:0,_otherwise:null,_condition:null,_computeState:0,_computedKind:0},ctors:{ctor:function(kind,condition,otherwise){otherwise===void 0&&(otherwise=null);this.$initialize();this._kind=kind;this._otherwise=otherwise;this._condition=condition}},methods:{GetKind:function(){if(Bridge.staticEquals(this._condition,null))return this._kind;switch(this._computeState){case Kusto.Language.Editor.KustoFormatter.ComputationState.Computing:return this.GetPossibleKinds();case Kusto.Language.Editor.KustoFormatter.ComputationState.Uncomputed:this._computeState=Kusto.Language.Editor.KustoFormatter.ComputationState.Computing;this._computedKind=this._condition()?this._kind:this._otherwise!=null?this._otherwise.GetKind():Kusto.Language.Editor.KustoFormatter.SpacingKind.AlignOnly;this._computeState=Kusto.Language.Editor.KustoFormatter.ComputationState.Computed}return this._computedKind},GetPossibleKinds:function(){return Bridge.staticEquals(this._condition,null)?this._kind:this._otherwise!=null?this._kind|this._otherwise.GetPossibleKinds():this._kind|Kusto.Language.Editor.KustoFormatter.SpacingKind.AlignOnly},Otherwise:function(rule){return Bridge.staticEquals(this._condition,null)?this:this._otherwise==null?new Kusto.Language.Editor.KustoFormatter.SpacingRule(this._kind,this._condition,rule):Bridge.staticEquals(this._otherwise._condition,null)&&!Bridge.staticEquals(rule._condition,null)?new Kusto.Language.Editor.KustoFormatter.SpacingRule(this._kind,this._condition,rule.Otherwise(this._otherwise)):new Kusto.Language.Editor.KustoFormatter.SpacingRule(this._kind,this._condition,this._otherwise.Otherwise(rule))}}});Bridge.define("Kusto.Language.Editor.KustoQuickInfoBuilder",{fields:{_code:null},ctors:{ctor:function(code){this.$initialize();this._code=code}},methods:{GetQuickInfo:function(position,cancellationToken){var $t;if(this._code.HasSemantics){var builder=new System.Text.StringBuilder,symbolInfo=($t=this.GetSymbolInfo$1(position),$t!=null?$t:this.GetSyntaxInfo(position)),diagnosticInfo=this.GetDiagnosticInfo(position,cancellationToken);if(symbolInfo!=null)return diagnosticInfo!=null?new Kusto.Language.Editor.QuickInfo(System.String.format("{0}\n\n{1}",symbolInfo,diagnosticInfo)):new Kusto.Language.Editor.QuickInfo(symbolInfo);if(diagnosticInfo!=null)return new Kusto.Language.Editor.QuickInfo(diagnosticInfo)}return Kusto.Language.Editor.QuickInfo.Empty},GetSymbolInfo$1:function(position){var token=this._code.Syntax.GetTokenAt(position),node,expr,info,br,info1;if(token!=null&&(node=token.Parent)!=null)if(expr=node.GetFirstAncestorOrSelf(Kusto.Language.Syntax.Expression),node.ReferencedSymbol==null||Bridge.referenceEquals(expr,node)){if(expr!=null){if(expr.IsLiteral)if((br=Bridge.as(expr.Parent,Kusto.Language.Syntax.BrackettedExpression))!=null)expr=br;else if(expr.ResultType!=null&&expr.ResultType.IsScalar)return System.String.format("(literal) {0}",[expr.ResultType.Display]);if(info1=this.GetSymbolInfo(expr.ReferencedSymbol,expr.ResultType),info1!=null)return info1}}else if(info=this.GetSymbolInfo(node.ReferencedSymbol,null),info!=null)return info;return null},GetSymbolInfo:function(symbol,type){var c,t,v,f,o,p,d,c1,p1,t1,g;if(Bridge.referenceEquals(type,Kusto.Language.Symbols.ScalarTypes.Type))return System.String.format("(type) {0}",[symbol.Display]);do return Bridge.is(symbol,Kusto.Language.Symbols.ColumnSymbol)?(c=Bridge.cast(symbol,Kusto.Language.Symbols.ColumnSymbol),System.String.format("(column) {0}: {1}",c.Name,c.Type.Display)):Bridge.is(symbol,Kusto.Language.Symbols.TableSymbol)?(t=Bridge.cast(symbol,Kusto.Language.Symbols.TableSymbol),System.String.format("(table) {0}: {1}",t.Name,t.Display)):Bridge.is(symbol,Kusto.Language.Symbols.VariableSymbol)?(v=Bridge.cast(symbol,Kusto.Language.Symbols.VariableSymbol),Bridge.is(v.Type,Kusto.Language.Symbols.FunctionSymbol)||Bridge.is(v.Type,Kusto.Language.Symbols.PatternSymbol)||Bridge.is(v.Type,Kusto.Language.Symbols.TableSymbol)?this.GetSymbolInfo(v.Type,type):Bridge.is(v.Type,Kusto.Language.Symbols.ScalarSymbol)?System.String.format("(scalar) {0}: {1}",v.Name,v.Type.Display):System.String.format("(variable) {0}: {1}",v.Name,v.Type.Display)):Bridge.is(symbol,Kusto.Language.Symbols.FunctionSymbol)?(f=Bridge.cast(symbol,Kusto.Language.Symbols.FunctionSymbol),type==null||type.IsError?System.String.format("(function) {0}",[f.GetDisplay$1(!0)]):System.String.format("(function) {0}: {1}",f.GetDisplay$1(!0),type.Display)):Bridge.is(symbol,Kusto.Language.Symbols.OperatorSymbol)?(o=Bridge.cast(symbol,Kusto.Language.Symbols.OperatorSymbol),type==null||type.IsError?System.String.format("(operator) {0}",[o.Name]):System.String.format("(operator) {0}: {1}",o.Name,type.Display)):Bridge.is(symbol,Kusto.Language.Symbols.PatternSymbol)?(p=Bridge.cast(symbol,Kusto.Language.Symbols.PatternSymbol),type==null||type.IsError?System.String.format("(pattern) {0}",[p.Display]):System.String.format("(pattern) {0}: {1}",p.Display,type.Display)):Bridge.is(symbol,Kusto.Language.Symbols.DatabaseSymbol)?(d=Bridge.cast(symbol,Kusto.Language.Symbols.DatabaseSymbol),System.String.format("(database) {0}",[d.Name])):Bridge.is(symbol,Kusto.Language.Symbols.ClusterSymbol)?(c1=Bridge.cast(symbol,Kusto.Language.Symbols.ClusterSymbol),System.String.format("(cluster) {0}",[c1.Name])):Bridge.is(symbol,Kusto.Language.Symbols.ParameterSymbol)?(p1=Bridge.cast(symbol,Kusto.Language.Symbols.ParameterSymbol),System.String.format("(parameter) {0}",[p1.Display])):Bridge.is(symbol,Kusto.Language.Symbols.TupleSymbol)?(t1=Bridge.cast(symbol,Kusto.Language.Symbols.TupleSymbol),System.String.format("(tuple) {0}",[t1.Display])):Bridge.is(symbol,Kusto.Language.Symbols.GroupSymbol)?(g=Bridge.cast(symbol,Kusto.Language.Symbols.GroupSymbol),Bridge.toArray(System.Linq.Enumerable.from(g.Members).select(Bridge.fn.bind(this,function(m){return this.GetSymbolInfo(m,null)}))).join("\n")):null;while(0)},GetSyntaxInfo:function(){return null},GetBestGrammarAtPosition:function(position){var offset=this.GetTokenIndex(position),source=new(Kusto.Language.Parsing.ArraySource$1(Kusto.Language.Parsing.LexicalToken))(this._code.LexerTokens),bestGrammar=null,bestLength=-1;return this._code.Grammar.Search(source,function(_parser,_source,_start){if(_start===offset&&_parser.Tag!=null){var scanLength=_parser.Scan(source,_start);scanLength>bestLength&&(bestGrammar=_parser,bestLength=scanLength)}}),bestGrammar},GetTokenIndex:function(position){if(System.Array.getCount(this._code.LexerTokens,Kusto.Language.Parsing.LexicalToken)===0)return 0;if(position>=System.Array.getItem(this._code.LexerTokens,System.Array.getCount(this._code.LexerTokens,Kusto.Language.Parsing.LexicalToken)-1|0,Kusto.Language.Parsing.LexicalToken).End)return System.Array.getCount(this._code.LexerTokens,Kusto.Language.Parsing.LexicalToken)-1|0;var offset=Kusto.Language.Utils.ListExtensions.BinarySearch(Bridge.global.Kusto.Language.Parsing.LexicalToken,this._code.LexerTokens,function(t){return position<t.TriviaStart?1:position>=t.End?-1:0});return offset>=0?offset:0},GetDiagnosticInfo:function(position,cancellationToken){var $t,builder=null,d,end;$t=Bridge.getEnumerator(this._code.GetDiagnostics(cancellationToken),Kusto.Language.Diagnostic);try{while($t.moveNext())d=$t.Current,end=d.End>d.Start?d.End:d.End+1|0,position>=d.Start&&position<end&&(builder==null&&(builder=new System.Text.StringBuilder),builder.getLength()>0&&builder.appendLine(),builder.append(d.Message))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return builder!=null?builder.toString():null}}});Bridge.define("Kusto.Language.Editor.KustoRelatedElementFinder",{statics:{methods:{AreSymbolsEqual:function(symbol,element,options){var canSee=(options&Kusto.Language.Editor.FindRelatedOptions.SeeThroughVariables)!=0,n,d;return(n=Bridge.as(element,Kusto.Language.Syntax.NameReference))!=null&&(Bridge.referenceEquals(n.ReferencedSymbol,symbol)||canSee&&Bridge.referenceEquals(n.ReferencedSymbol,Kusto.Language.Symbols.Symbol.GetExpressionResultType(symbol)))||(d=Bridge.as(element,Kusto.Language.Syntax.NameDeclaration))!=null&&(Bridge.referenceEquals(d.ReferencedSymbol,symbol)||canSee&&Bridge.referenceEquals(Kusto.Language.Symbols.Symbol.GetExpressionResultType(d.ReferencedSymbol),symbol))}}},fields:{_code:null},ctors:{ctor:function(code){this.$initialize();this._code=code}},methods:{FindRelatedElements:function(position,options){var token,prev,elements,current,currentIndex;return(options===void 0&&(options=0),token=this._code.Syntax.GetTokenAt(position),token==null||position>token.TriviaStart&&position<(token.TextStart-1|0))?Kusto.Language.Editor.RelatedInfo.Empty:(prev=token!=null?token.GetPreviousToken():null,position===token.TriviaStart&&(token.Trivia.length>0||prev!=null&&this.IsRelatable(prev)&&!this.IsRelatable(token))&&(token=token.GetPreviousToken()),token==null)?Kusto.Language.Editor.RelatedInfo.Empty:(elements=new(System.Collections.Generic.List$1(Kusto.Language.Editor.RelatedElement).ctor),this.IsBracket(token)?this.GetRelatedBrackets(token,elements):this.IsNameReferenceOrDeclaration(token)&&this.GetRelatedNameReferencesAndDeclarations(token,elements,options),elements.Count>1&&(current=System.Linq.Enumerable.from(elements).firstOrDefault(function(r){return r.Start===token.TextStart},null),current!=null))?(currentIndex=elements.indexOf(current),new Kusto.Language.Editor.RelatedInfo(elements,currentIndex)):Kusto.Language.Editor.RelatedInfo.Empty},IsRelatable:function(token){return this.IsBracket(token)||this.IsNameReferenceOrDeclaration(token)},IsBracket:function(token){switch(token.Text){case"{":case"}":case"[":case"]":case"(":case")":return!0;default:return!1}},GetRelatedBrackets:function(token,elements){switch(token.Text){case"{":this.GetNextTokenReference(token,"}",elements);break;case"}":this.GetPreviousTokenReference(token,"{",elements);break;case"(":this.GetNextTokenReference(token,")",elements);break;case")":this.GetPreviousTokenReference(token,"(",elements);break;case"[":this.GetNextTokenReference(token,"]",elements);break;case"]":this.GetPreviousTokenReference(token,"[",elements)}},GetNextTokenReference:function(token,matchingText,elements){for(var child,t,parent=token.Parent,index=parent.GetChildIndex(token),i=index+1|0;i<parent.ChildCount;i=i+1|0)if(child=parent.GetChild(i),(t=Bridge.as(child,Kusto.Language.Syntax.SyntaxToken))!=null&&Bridge.referenceEquals(t.Text,matchingText)){elements.add(new Kusto.Language.Editor.RelatedElement.ctor(token.TextStart,token.Text.length,Kusto.Language.Editor.RelatedElementKind.Syntax));elements.add(new Kusto.Language.Editor.RelatedElement.ctor(t.TextStart,t.Text.length,Kusto.Language.Editor.RelatedElementKind.Syntax));return}},GetPreviousTokenReference:function(token,matchingText,elements){for(var child,t,parent=token.Parent,index=parent.GetChildIndex(token),i=index-1|0;i>=0;i=i-1|0)if(child=parent.GetChild(i),(t=Bridge.as(child,Kusto.Language.Syntax.SyntaxToken))!=null&&Bridge.referenceEquals(t.Text,matchingText)){elements.add(new Kusto.Language.Editor.RelatedElement.ctor(t.TextStart,t.Text.length,Kusto.Language.Editor.RelatedElementKind.Syntax));elements.add(new Kusto.Language.Editor.RelatedElement.ctor(token.TextStart,token.Text.length,Kusto.Language.Editor.RelatedElementKind.Syntax));return}},IsNameReferenceOrDeclaration:function(token){var n;return(n=Bridge.as(token.Parent,Kusto.Language.Syntax.Name))!=null&&(Bridge.is(n.Parent,Kusto.Language.Syntax.NameReference)||Bridge.is(n.Parent,Kusto.Language.Syntax.NameDeclaration))},GetRelatedNameReferencesAndDeclarations:function(token,elements,options){var $t,symbol=($t=token.Parent.GetFirstAncestorOrSelf(Kusto.Language.Syntax.SyntaxNode,function(n){return n.ReferencedSymbol!=null}))!=null?$t.ReferencedSymbol:null;symbol!=null&&this._code.Syntax.WalkElements(function(e){if(Kusto.Language.Editor.KustoRelatedElementFinder.AreSymbolsEqual(symbol,e,options)){var kind=new Kusto.Language.Editor.RelatedElementKind;kind=Bridge.is(e,Kusto.Language.Syntax.NameDeclaration)?Kusto.Language.Editor.RelatedElementKind.Declaration:Bridge.is(e,Kusto.Language.Syntax.NameReference)?Kusto.Language.Editor.RelatedElementKind.Reference:Kusto.Language.Editor.RelatedElementKind.Other;elements.add(new Kusto.Language.Editor.RelatedElement.$ctor1(e.TextStart,e.Width,kind,e.TextStart,e.TextStart))}})}}});Bridge.define("Kusto.Language.Editor.OutlineInfo",{statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Editor.OutlineInfo(null)}}},props:{Ranges:null},ctors:{ctor:function(ranges){this.$initialize();this.Ranges=ranges||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.OutlineRange).Instance}}});Bridge.define("Kusto.Language.Editor.OutlineRange",{props:{Start:0,Length:0,CollapsedText:null},ctors:{ctor:function(start,length,collapsedText){var $t;this.$initialize();this.Start=start;this.Length=length;this.CollapsedText=($t=collapsedText,$t!=null?$t:"")}}});Bridge.define("Kusto.Language.Editor.PlacementStyle",{$kind:"enum",statics:{fields:{None:0,NewLine:1,Smart:2}}});Bridge.define("Kusto.Language.Editor.QuickInfo",{statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Editor.QuickInfo("")}}},props:{Text:null},ctors:{ctor:function(text){this.$initialize();this.Text=text}}});Bridge.define("Kusto.Language.Editor.RelatedElementKind",{$kind:"enum",statics:{fields:{Syntax:0,Reference:1,Declaration:2,Other:3}}});Bridge.define("Kusto.Language.Editor.RelatedInfo",{statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Editor.RelatedInfo(Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.RelatedElement).Instance,0)}}},props:{Elements:null,CurrentIndex:0},ctors:{ctor:function(elements,currentIndex){this.$initialize();this.Elements=elements;this.CurrentIndex=currentIndex}},methods:{GetNextIndex:function(index){return index<(System.Array.getCount(this.Elements,Kusto.Language.Editor.RelatedElement)-1|0)?index+1|0:0},GetPreviousIndex:function(index){return index>0?index-1|0:System.Array.getCount(this.Elements,Kusto.Language.Editor.RelatedElement)-1|0}}});Bridge.define("Kusto.Language.FunctionHelpers",{statics:{fields:{MaxRepeat:0},ctors:{init:function(){this.MaxRepeat=32767}},methods:{MakePrefixedTuple:function(signature,parameterName,args,baseTuple){var $t,$t1,$t2,functionPrefix=($t=Bridge.cast(signature.Symbol,Kusto.Language.Symbols.FunctionSymbol).ResultNamePrefix,$t!=null?$t:signature.Symbol.Name),argumentPrefix=($t1=($t2=Kusto.Language.FunctionHelpers.GetReferencedColumn(signature,parameterName,args))!=null?$t2.Name:null,$t1!=null?$t1:"");return new Kusto.Language.Symbols.TupleSymbol.$ctor1(System.Linq.Enumerable.from(baseTuple.Columns).select(function(c){return new Kusto.Language.Symbols.ColumnSymbol(Kusto.Language.FunctionHelpers.GetPrefixedName(functionPrefix,argumentPrefix,c.Name),c.Type)}))},GetPrefixedName:function(functionPrefix,argumentPrefix,name){return functionPrefix!=null&&argumentPrefix!=null?System.String.format("{0}_{1}_{2}",functionPrefix,argumentPrefix,name):functionPrefix!=null?System.String.format("{0}_{1}",functionPrefix,name):argumentPrefix!=null?System.String.format("{0}_{1}",argumentPrefix,name):name},AddReferencedColumns:function(columns,signature,parameterName,args,type){var argIndex,arg,c;type===void 0&&(type=null);var parameter=signature.GetParameter$2(parameterName),start={},length={};for(signature.GetArgumentRange(parameter,args,start,length),argIndex=start.v;argIndex>=0&&argIndex<(start.v+length.v|0);argIndex=argIndex+1|0)arg=System.Array.getItem(args,argIndex,Kusto.Language.Syntax.Expression),(c=Bridge.as(arg.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null&&(type==null||Bridge.referenceEquals(c.Type,type)||(c=new Kusto.Language.Symbols.ColumnSymbol(c.Name,type)),columns.add(c))},AddReferencedColumn:function(columns,signature,parameterName,args,name,type){var parameter,argIndex,arg,c;name===void 0&&(name=null);type===void 0&&(type=null);parameter=signature.GetParameter$2(parameterName);argIndex=signature.GetArgumentIndex(parameter,args);argIndex>=0&&argIndex<System.Array.getCount(args,Kusto.Language.Syntax.Expression)&&(arg=System.Array.getItem(args,argIndex,Kusto.Language.Syntax.Expression),(c=Bridge.as(arg.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null&&(type==null||Bridge.referenceEquals(c.Type,type)||(c=new Kusto.Language.Symbols.ColumnSymbol(c.Name,type)),name==null||Bridge.referenceEquals(c.Name,name)||(c=new Kusto.Language.Symbols.ColumnSymbol(name,c.Type)),columns.add(c)))},GetReferencedColumn:function(signature,parameterName,args){var parameter=signature.GetParameter$2(parameterName),argIndex=signature.GetArgumentIndex(parameter,args),arg,c;return argIndex>=0&&argIndex<System.Array.getCount(args,Kusto.Language.Syntax.Expression)&&(arg=System.Array.getItem(args,argIndex,Kusto.Language.Syntax.Expression),(c=Bridge.as(arg.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null)?c:null},GetArgument:function(args,signature,parameterName){var p=signature.GetParameter$2(parameterName),argIndex;return p!=null&&(argIndex=signature.GetArgumentIndex(p,args),argIndex>=0&&argIndex<System.Array.getCount(args,Kusto.Language.Syntax.Expression))?System.Array.getItem(args,argIndex,Kusto.Language.Syntax.Expression):null},GetExpressionResultName:function(expr,defaultName,rowScope){return defaultName===void 0&&(defaultName=""),rowScope===void 0&&(rowScope=null),Kusto.Language.Binding.Binder.GetExpressionResultName(expr,defaultName,rowScope)},GetLiteralValue:function(expr){var $t,$t1;return $t=($t1=expr.LiteralValue)!=null?Bridge.toString($t1):null,$t!=null?$t:""},MakeValidNameFragment:function(text){return System.Linq.Enumerable.from(text).all(function(c){return System.Char.isDigit(c)||System.Char.isLetter(c)})?text:System.String.fromCharArray(System.Linq.Enumerable.from(text).select(function(c){return System.Char.isDigit(c)||System.Char.isLetter(c)?c:95}).ToArray(System.Char))},GetSummarizeByColumns:function(args){if(System.Array.getCount(args,Kusto.Language.Syntax.Expression)>0){var op=System.Array.getItem(args,0,Kusto.Language.Syntax.Expression).GetFirstAncestorOrSelf(Kusto.Language.Syntax.SummarizeOperator);if(op!=null&&op.ByClause!=null)return Kusto.Language.FunctionHelpers.GetColumnSymbols(op.ByClause.Expressions)}return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol).Instance},GetColumnSymbols:function(exprs){for(var expr,sn,c,symbols=null,i=0;i<exprs.Count;i=i+1|0)expr=exprs.getItem$1(i).Element$1,(sn=Bridge.as(expr,Kusto.Language.Syntax.SimpleNamedExpression))!=null&&(expr=sn.Expression),(c=Bridge.as(expr.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol))!=null&&(symbols==null&&(symbols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor)),symbols.add(c));return symbols||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol).Instance}}}});Bridge.define("Kusto.Language.Functions",{statics:{fields:{Cluster:null,Database:null,Table:null,Strcat:null,StrcatArray:null,ArrayStrcat:null,StrcatDelim:null,Strcmp:null,Strrep:null,Strlen:null,StringSize:null,ToUpper:null,ToLower:null,ToUtf8:null,Substring:null,IndexOf:null,IndexOfRegex:null,Reverse:null,Split:null,Extract:null,ExtractAll_Depricated:null,ExtractAll:null,ExtractJson:null,Replace:null,TrimStart:null,TrimEnd:null,Trim:null,CountOf:null,Translate:null,MakeString:null,DateTimeToLocaleString:null,NumberToLocaleString:null,ToString:null,ToHex:null,ToDynamic_:null,ToObject_Depricated:null,ToLong:null,ToInt:null,ToReal:null,ToDouble:null,ToDateTime:null,ToTimespan:null,ToTime:null,ToBool:null,ToBoolean:null,ToDecimal:null,ToGuid:null,GetType:null,UrlEncode:null,UrlDecode:null,Base64EncodeString:null,Base64EncodeToString:null,Base64DecodeString:null,Base64DecodeToString:null,Base64DecodeToArray:null,ParseCsv:null,ParseJson_Depricated:null,ParseJson:null,ParseXml:null,ParseUrl_Depricated:null,ParseUrl:null,ParseUrlQuery_Depricated:null,ParseUrlQuery:null,ParseIPV4:null,ParsePath:null,ParseUserAgent:null,ParseVersion:null,FormatDatetime:null,FormatTimespan:null,MakeDatetime:null,MakeTimespan:null,s_dateDiffLiteralValues:null,s_datePartLiteralValues:null,DatetimeAdd:null,DatetimeDiff:null,DayOfWeek:null,DayOfMonth:null,DayOfYear:null,HourOfDay:null,WeekOfYear:null,MonthOfYear:null,StartOfDay:null,StartOfWeek:null,StartOfMonth:null,StartOfYear:null,EndOfDay:null,EndOfWeek:null,EndOfMonth:null,EndOfYear:null,GetYear:null,GetMonth:null,DatePart:null,DatetimePart:null,Now:null,Ago:null,Crc32Hash:null,HashDjb2:null,HashXXH64:null,Hash:null,HashSha256:null,Iif:null,Iff:null,Case:null,Assert:null,Bin:null,Floor:null,BinAt:null,BinAuto:null,Not:null,NotNull_Depricated:null,IsNotNull:null,IsNull:null,NotEmpty_Depricated:null,IsNotEmpty:null,IsEmpty:null,IsAscii:null,IsUtf8:null,IsColumnExists:null,ColumnIfExists_Depricated:null,ColumnIfExists:null,BinaryAnd:null,BinaryOr:null,BinaryXor:null,BinaryNot:null,BinaryShiftRight:null,BinaryShiftLeft:null,TreePath:null,Repeat:null,Arraylength_Depricated:null,ArrayLength:null,Range:null,ArrayConcat:null,ArrayIff:null,ArrayIif:null,ArraySlice:null,ArraySplit:null,ArrayShiftLeft:null,ArrayShiftRight:null,ArrayRotateLeft:null,ArrayRotateRight:null,BagKeys:null,Zip:null,Pack:null,PackDictionary:null,PackAll:null,PackArray:null,SetUnion:null,SetIntersect:null,SetDifference:null,PercentileTDigest:null,PercentRankTDigest:null,RankTDigest:null,TDigestMerge:null,MergeTDigests:null,HllMerge:null,DCountHll:null,SeriesFir:null,SeriesStats:null,SeriesStatsDynamic:null,SeriesFitLine:null,SeriesFitLineDynamic:null,SeriesFit2Lines:null,SeriesFit2LinesDynamic:null,SeriesOutliers:null,SeriesIIR:null,SeriesPeriodsDetect:null,SeriesPeriodsValidate:null,SeriesFillBackwards:null,SeriesFillForward:null,SeriesFillConst:null,SeriesFillLinear:null,SeriesAdd:null,SeriesSubtract:null,SeriesMultiply:null,SeriesDivide:null,SeriesGreater:null,SeriesGreaterEquals:null,SeriesLess:null,SeriesLessEquals:null,SeriesEquals:null,SeriesNotEquals:null,SeriesSeasonal:null,SeriesDecompose:null,SeriesDecomposeForecast:null,SeriesDecomposeAnomalies:null,Round:null,Ceiling:null,Pow:null,Sqrt:null,Log:null,Log2:null,Log10:null,Exp:null,Exp2:null,Exp10:null,PI:null,Cos:null,Sin:null,Tan:null,Acos:null,Asin:null,Atan:null,Atan2:null,Abs:null,Cot:null,Degrees:null,Radians:null,Sign:null,Rand:null,BetaCdf:null,BetaInv:null,BetaPdf:null,Gamma:null,LogGamma:null,IsNan:null,IsInf:null,IsFinite:null,Coalesce:null,MaxOf:null,MinOf:null,WelchTest:null,Point:null,Distance:null,CurrentClusterEndpoint:null,CurrentDatabase:null,CurrentPrincipal:null,CurrentPrincipalDetails:null,ExtentId:null,ExtentId2:null,ExtentTags:null,CurrentNodeId:null,IngestionTime:null,CursorAfter:null,CursorBeforeOrAt:null,CursorCurrent:null,CursorCurrent2:null,RowNumber:null,RowCumSum:null,RowWindowSession:null,Prev:null,Next:null,RowstoreOrdinalRange:null,EstimateDataSize:null,NewGuid:null},props:{All:null},ctors:{init:function(){this.Cluster=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("cluster",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Cluster,[new Kusto.Language.Symbols.Parameter.$ctor2("name",Kusto.Language.Symbols.ScalarTypes.String)]);this.Database=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("database",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Database,[new Kusto.Language.Symbols.Parameter.$ctor2("name",Kusto.Language.Symbols.ScalarTypes.String)]);this.Table=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("table",Kusto.Language.Symbols.ReturnTypeKind.Parameter0Table,[new Kusto.Language.Symbols.Parameter.$ctor2("name",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("query_data_scope",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,0,1,void 0)]);this.Strcat=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("strcat",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("arg",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,64,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.StrcatArray=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("strcat_array",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("array",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("delimiter",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ArrayStrcat=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("array_strcat",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("array",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("delimiter",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.StrcatDelim=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("strcat_delim",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("delimiter",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("arg",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,2,64,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Strcmp=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("strcmp",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("s1",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("s2",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]);this.Strrep=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("strrep",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("multiplier",Kusto.Language.Symbols.ScalarTypes.Long)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Strlen=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("strlen",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("string",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.NameAndFirstArgument);this.StringSize=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("string_size",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("string",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ToUpper=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("toupper",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ToLower=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("tolower",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ToUtf8=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("to_utf8",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Substring=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("substring",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("string",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("length",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.IndexOf=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("indexof",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("string",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("match",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("length",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("occurence",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.IndexOfRegex=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("indexof_regex",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("string",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("match",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("length",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("occurence",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Reverse=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("reverse",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Split=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("split",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("delimiter",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("requestedIndex",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Extract=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("extract",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("regex",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("captureGroup",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.Parameter.$ctor2("text",Kusto.Language.Symbols.ScalarTypes.String)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.ParameterNLiteral,[new Kusto.Language.Symbols.Parameter.$ctor2("regex",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("captureGroup",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.Parameter.$ctor2("text",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("typeLiteral",Kusto.Language.Symbols.ScalarTypes.Type,Kusto.Language.Symbols.ArgumentKind.Literal)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ExtractAll_Depricated=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("extractall",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("regex",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("text",Kusto.Language.Symbols.ScalarTypes.String)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("regex",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("captureGroups",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("text",Kusto.Language.Symbols.ScalarTypes.String)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.ExtractAll=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("extract_all",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("regex",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("text",Kusto.Language.Symbols.ScalarTypes.String)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("regex",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("captureGroups",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("text",Kusto.Language.Symbols.ScalarTypes.String)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ExtractJson=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("extractjson",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("jsonPath",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("jsonText",Kusto.Language.Symbols.ScalarTypes.String)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.ParameterNLiteral,[new Kusto.Language.Symbols.Parameter.$ctor2("jsonPath",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("jsonText",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("type",Kusto.Language.Symbols.ScalarTypes.Type,Kusto.Language.Symbols.ArgumentKind.Literal)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Replace=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("replace",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("regex",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("rewrite",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("text",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.TrimStart=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("trim_start",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("regex",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("text",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.TrimEnd=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("trim_end",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("regex",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("text",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Trim=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("trim",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("regex",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("text",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.CountOf=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("countof",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("text",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("search",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("kind",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Literal,System.Array.init(["normal","regex"],System.Object),void 0,!0,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Translate=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("translate",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor3("searchList",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor3("replacementList",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor2("text",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.MakeString=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("make_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.IntegerOrDynamic,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.DateTimeToLocaleString=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("datetime_to_locale_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("culture",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("options",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).Hide();this.NumberToLocaleString=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("number_to_locale_string",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("culture",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("options",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).Hide();this.ToString=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("tostring",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToHex=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("tohex",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToDynamic_=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("todynamic",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToObject_Depricated=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("toobject",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).Hide();this.ToLong=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("tolong",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToInt=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("toint",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToReal=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("toreal",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToDouble=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("todouble",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToDateTime=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("todatetime",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToTimespan=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("totimespan",Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToTime=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("totime",Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).Hide().ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToBool=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("tobool",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToBoolean=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("toboolean",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToDecimal=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("todecimal",Kusto.Language.Symbols.ScalarTypes.Decimal,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ToGuid=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("toguid",Kusto.Language.Symbols.ScalarTypes.Guid,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.GetType=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("gettype",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("type");this.UrlEncode=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("url_encode",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("url",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.UrlDecode=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("url_decode",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("encoded_url",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Base64EncodeString=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("base64_encodestring",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Base64EncodeToString=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("base64_encode_tostring",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Base64DecodeString=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("base64_decodestring",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("base64_string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Base64DecodeToString=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("base64_decode_tostring",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("base64_string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Base64DecodeToArray=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("base64_decode_toarray",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("base64_string",Kusto.Language.Symbols.ScalarTypes.String)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ParseCsv=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("parse_csv",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("csv_text",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ParseJson_Depricated=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("parsejson",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("json_text",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).Hide();this.ParseJson=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("parse_json",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("json_text",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ParseXml=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("parse_xml",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("xml_text",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.ParseUrl_Depricated=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("parseurl",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("url",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.ParseUrl=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("parse_url",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("url",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ParseUrlQuery_Depricated=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("parseurlquery",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("query",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.ParseUrlQuery=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("parse_urlquery",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("query",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ParseIPV4=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("parse_ipv4",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("ipvb",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ParsePath=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("parse_path",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("path",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ParseUserAgent=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("parse_user_agent",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("user_agent",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("look_for",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ParseVersion=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("parse_version",Kusto.Language.Symbols.ScalarTypes.Decimal,[new Kusto.Language.Symbols.Parameter.$ctor2("version",Kusto.Language.Symbols.ScalarTypes.String)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.FormatDatetime=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("format_datetime",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("format",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.LiteralNotEmpty)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.FormatTimespan=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("format_timespan",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.$ctor2("timespan",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor3("format",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.LiteralNotEmpty)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.MakeDatetime=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("make_datetime",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.ctor("dateTime",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.ctor("year",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("month",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("day",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("hour",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("minute",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("second",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0)])]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.OnlyArgument);this.MakeTimespan=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("make_timespan",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.ctor("timespan",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.ctor("hours",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("minutes",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("seconds",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.ctor("days",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("hours",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("minutes",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("seconds",Kusto.Language.Symbols.ParameterTypeKind.Integer)])]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.OnlyArgument);this.s_dateDiffLiteralValues=System.Array.init(["Year","Quarter","Month","Week","Day","Hour","Minute","Second","Millisecond","Microsecond","Nanosecond"],System.String);this.s_datePartLiteralValues=System.Array.init(["Year","Quarter","Month","WeekOfYear","Day","DayOfYear","Hour","Minute","Second","Millisecond","Microsecond","Nanosecond"],System.String);this.DatetimeAdd=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("datetime_add",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor3("part",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Literal,Kusto.Language.Functions.s_dateDiffLiteralValues),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.$ctor2("datetime",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.DatetimeDiff=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("datetime_diff",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor3("part",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Literal,Kusto.Language.Functions.s_dateDiffLiteralValues),new Kusto.Language.Symbols.Parameter.$ctor2("datetime1",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("datetime2",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.DayOfWeek=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("dayofweek",Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.DayOfMonth=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("dayofmonth",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.DayOfYear=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("dayofyear",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.HourOfDay=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("hourofday",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.WeekOfYear=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("weekofyear",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.MonthOfYear=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("monthofyear",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.StartOfDay=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("startofday",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.StartOfWeek=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("startofweek",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.StartOfMonth=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("startofmonth",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.StartOfYear=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("startofyear",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.EndOfDay=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("endofday",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.EndOfWeek=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("endofweek",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.EndOfMonth=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("endofmonth",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.EndOfYear=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("endofyear",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.GetYear=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("getyear",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.GetMonth=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("getmonth",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.DatePart=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("datepart",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor3("part",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Literal,Kusto.Language.Functions.s_datePartLiteralValues),new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.DatetimePart=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("datetime_part",Kusto.Language.Symbols.ScalarTypes.Int,[new Kusto.Language.Symbols.Parameter.$ctor3("part",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Literal,Kusto.Language.Functions.s_datePartLiteralValues),new Kusto.Language.Symbols.Parameter.$ctor2("date",Kusto.Language.Symbols.ScalarTypes.DateTime)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Now=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("now",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.TimeSpan,0,void 0,void 0,!1,void 0,0,1,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Ago=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("ago",Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor3("timespan",Kusto.Language.Symbols.ScalarTypes.TimeSpan,0,void 0,Kusto.Language.KustoFacts.AgoExamples,!1,void 0,1,1,void 0)]).ConstantFoldable().WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Crc32Hash=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("__crc32_hash",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("arg",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,2,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.HashDjb2=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("__hash_djb2",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic),new Kusto.Language.Symbols.Parameter.ctor("mod",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.HashXXH64=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("__hash_xxh64",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic),new Kusto.Language.Symbols.Parameter.ctor("mod",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).Hide();this.Hash=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("hash",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic),new Kusto.Language.Symbols.Parameter.ctor("mod",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.HashSha256=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("hash_sha256",Kusto.Language.Symbols.ScalarTypes.String,[new Kusto.Language.Symbols.Parameter.ctor("source",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Iif=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("iif",Kusto.Language.Symbols.ReturnTypeKind.Common,[new Kusto.Language.Symbols.Parameter.$ctor2("if",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("then",Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("else",Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic)]);this.Iff=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("iff",Kusto.Language.Symbols.ReturnTypeKind.Common,[new Kusto.Language.Symbols.Parameter.$ctor2("if",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("then",Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("else",Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic)]);this.Case=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("case",Kusto.Language.Symbols.ReturnTypeKind.Common,[new Kusto.Language.Symbols.Parameter.$ctor3("predicate",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0),new Kusto.Language.Symbols.Parameter.ctor("then",Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0),new Kusto.Language.Symbols.Parameter.ctor("else",Kusto.Language.Symbols.ParameterTypeKind.CommonScalarOrDynamic)]);this.Assert=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("assert",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("predicate",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.$ctor2("message",Kusto.Language.Symbols.ScalarTypes.String)]);this.Bin=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("bin",[new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("roundTo",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("roundTo",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("roundTo",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("roundTo",Kusto.Language.Symbols.ScalarTypes.TimeSpan)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.Floor=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("floor",[new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("roundTo",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("roundTo",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("roundTo",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("roundTo",Kusto.Language.Symbols.ScalarTypes.TimeSpan)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.BinAt=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("bin_at",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("bin_size",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("fixed_point",Kusto.Language.Symbols.ParameterTypeKind.Integer)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("bin_size",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("fixed_point",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.ctor("bin_size",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("fixed_point",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("bin_size",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("fixed_point",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.ctor("bin_size",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.$ctor2("fixed_point",Kusto.Language.Symbols.ScalarTypes.DateTime)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.BinAuto=new Kusto.Language.Symbols.FunctionSymbol.$ctor14("bin_auto","bin_at(value, query_bin_auto_size, query_bin_auto_at)",Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).Hide();this.Not=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("not",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("expression",Kusto.Language.Symbols.ScalarTypes.Bool)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.NotNull_Depricated=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("notnull",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("expression",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.IsNotNull=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("isnotnull",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("expression",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.IsNull=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("isnull",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("expression",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.NotEmpty_Depricated=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("notempty",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.IsNotEmpty=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("isnotempty",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.IsEmpty=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("isempty",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.IsAscii=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("isascii",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.IsUtf8=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("isutf8",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.IsColumnExists=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("iscolumnexists",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor3("column_name",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Literal)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.ColumnIfExists_Depricated=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("columnifexists",Kusto.Language.Symbols.ReturnTypeKind.Parameter1,[new Kusto.Language.Symbols.Parameter.$ctor3("column_name",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Literal),new Kusto.Language.Symbols.Parameter.ctor("defaultValue",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgumentValueIfColumn).Hide();this.ColumnIfExists=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("column_ifexists",Kusto.Language.Symbols.ReturnTypeKind.Parameter1,[new Kusto.Language.Symbols.Parameter.$ctor3("column_name",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Literal),new Kusto.Language.Symbols.Parameter.ctor("defaultValue",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgumentValueIfColumn);this.BinaryAnd=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("binary_and",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value1",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("value2",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BinaryOr=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("binary_or",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value1",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("value2",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BinaryXor=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("binary_xor",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value1",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("value2",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BinaryNot=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("binary_not",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BinaryShiftRight=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("binary_shift_right",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("shift",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BinaryShiftLeft=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("binary_shift_left",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("shift",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.TreePath=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("treepath",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("object",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("tree");this.Repeat=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("repeat",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.$ctor2("count",Kusto.Language.Symbols.ScalarTypes.Long)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixAndFirstArgument).WithResultNamePrefix("repeat");this.Arraylength_Depricated=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("arraylength",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("array",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.ArrayLength=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("array_length",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("array",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Range=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("range",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("stop",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("step",Kusto.Language.Symbols.ParameterTypeKind.Summable,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ArrayConcat=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("array_concat",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor3("array",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,1,64,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ArrayIff=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("array_iff",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("condition_array",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("when_true",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("when_false",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ArrayIif=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("array_iif",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("condition_array",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("when_true",Kusto.Language.Symbols.ParameterTypeKind.Scalar),new Kusto.Language.Symbols.Parameter.ctor("when_false",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).Hide();this.ArraySlice=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("array_slice",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("array",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ArraySplit=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("array_split",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("array",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("index",Kusto.Language.Symbols.ParameterTypeKind.Integer)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("array",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("indices",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ArrayShiftLeft=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("array_shift_left",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("array",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("shift_count",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("default_value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ArrayShiftRight=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("array_shift_right",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("array",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("shift_count",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("default_value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ArrayRotateLeft=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("array_rotate_left",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("array",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("rotate_count",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ArrayRotateRight=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("array_rotate_right",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("array",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("rotate_count",Kusto.Language.Symbols.ParameterTypeKind.Integer)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.BagKeys=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("bag_keys",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("object",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Zip=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("zip",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor3("array",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,2,64,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Pack=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("pack",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor3("key",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.PackDictionary=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("pack_dictionary",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor3("key",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.PackAll=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("pack_all",Kusto.Language.Symbols.ScalarTypes.Dynamic).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.PackArray=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("pack_array",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SetUnion=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("set_union",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor3("set",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,2,64,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SetIntersect=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("set_intersect",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor3("set",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,2,64,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SetDifference=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("set_difference",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor3("set",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,2,64,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.PercentileTDigest=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("percentile_tdigest",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("tdigest",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("percentile1",Kusto.Language.Symbols.ScalarTypes.Real)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.ParameterNLiteral,[new Kusto.Language.Symbols.Parameter.$ctor2("tdigest",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("percentile1",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor3("type",Kusto.Language.Symbols.ScalarTypes.Type,Kusto.Language.Symbols.ArgumentKind.Literal)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.NameAndFirstArgument);this.PercentRankTDigest=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("percentrank_tdigest",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("digest",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.RankTDigest=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("rank_tdigest",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("digest",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.TDigestMerge=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("tdigest_merge",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor3("tdigest",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,2,16,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixOnly).WithResultNamePrefix("tdigests_merge_result");this.MergeTDigests=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("merge_tdigests",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor3("tdigest",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,2,16,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixOnly).WithResultNamePrefix("tdigests_merge_result");this.HllMerge=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("hll_merge",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor3("hll",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,2,16,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixOnly).WithResultNamePrefix("hll_merged_result");this.DCountHll=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("dcount_hll",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("hll",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.NameAndFirstArgument);this.SeriesFir=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_fir",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("filter",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor3("normalize",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("center",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.SeriesStats=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_stats",function(table,args,sig){return Kusto.Language.FunctionHelpers.MakePrefixedTuple(sig,"series",args,new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("min",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("min_idx",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("max",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("max_idx",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("avg",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("stdev",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("variance",Kusto.Language.Symbols.ScalarTypes.Real)]))},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic)]);this.SeriesStatsDynamic=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_stats_dynamic",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesFitLine=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_fit_line",function(table,args,sig){return Kusto.Language.FunctionHelpers.MakePrefixedTuple(sig,"series",args,new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("rsquare",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("slope",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("variance",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("rvariance",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("interception",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("line_fit",Kusto.Language.Symbols.ScalarTypes.Dynamic)]))},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic)]);this.SeriesFitLineDynamic=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_fit_line_dynamic",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesFit2Lines=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_fit_2lines",function(table,args,sig){return Kusto.Language.FunctionHelpers.MakePrefixedTuple(sig,"array",args,new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("rsquare",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("split_idx",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("variance",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("rvariance",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("line_fit",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("right_rsquare",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("right_slope",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("right_interception",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("right_variance",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("right_rvariance",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("left_rsquare",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("left_slope",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("left_interception",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("left_variance",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("left_rvariance",Kusto.Language.Symbols.ScalarTypes.Real)]))},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.$ctor2("array",Kusto.Language.Symbols.ScalarTypes.Dynamic)]);this.SeriesFit2LinesDynamic=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_fit_2lines_dynamic",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesOutliers=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("series_outliers",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor3("kind",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("ignore_val",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("kind",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("ignore_val",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor2("min_percentile",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.Parameter.$ctor3("max_percentile",Kusto.Language.Symbols.ScalarTypes.Real,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("test_points",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.SeriesIIR=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_iir",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("numerators",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("denominators",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.SeriesPeriodsDetect=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_periods_detect",function(table,args,sig){return Kusto.Language.FunctionHelpers.MakePrefixedTuple(sig,"series",args,new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("periods",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("scores",Kusto.Language.Symbols.ScalarTypes.Dynamic)]))},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("min_period",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("max_period",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("num_periods",Kusto.Language.Symbols.ScalarTypes.Long)]);this.SeriesPeriodsValidate=new Kusto.Language.Symbols.FunctionSymbol.ctor("series_periods_validate",function(table,args,sig){return Kusto.Language.FunctionHelpers.MakePrefixedTuple(sig,"series",args,new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("periods",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("scores",Kusto.Language.Symbols.ScalarTypes.Dynamic)]))},Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("period",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,1,16,void 0)]);this.SeriesFillBackwards=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_fill_backward",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("missing_value_placeholder",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.SeriesFillForward=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_fill_forward",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("missing_value_placeholder",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.SeriesFillConst=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_fill_const",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("constant_value",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("missing_value_placeholder",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.SeriesFillLinear=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_fill_linear",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("missing_value_placeholder",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("fill_edges",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("constant_value",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument);this.SeriesAdd=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_add",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series1",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("series2",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesSubtract=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_subtract",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series1",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("series2",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesMultiply=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_multiply",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series1",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("series2",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesDivide=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_divide",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series1",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("series2",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesGreater=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_greater",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series1",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("series2",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesGreaterEquals=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_greater_equals",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series1",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("series2",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesLess=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_less",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series1",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("series2",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesLessEquals=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_less_equals",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series1",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("series2",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesEquals=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_equals",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series1",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("series2",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesNotEquals=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("series_not_equals",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series1",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("series2",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesSeasonal=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("series_seasonal",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("period",Kusto.Language.Symbols.ParameterTypeKind.Integer)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("period",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("test_points",Kusto.Language.Symbols.ParameterTypeKind.Integer)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.SeriesDecompose=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("series_decompose",[new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Functions.SeriesDecomposeResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("period",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("trend",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("test_points",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)])]);this.SeriesDecomposeForecast=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("series_decompose_forecast",[new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Functions.SeriesDecomposeResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("test_points",Kusto.Language.Symbols.ParameterTypeKind.Integer),new Kusto.Language.Symbols.Parameter.ctor("period",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("trend",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,0,1,void 0)])]);this.SeriesDecomposeAnomalies=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("series_decompose_anomalies",[new Kusto.Language.Symbols.Signature.ctor(Kusto.Language.Functions.SeriesDecomposeResult,Kusto.Language.Symbols.Tabularity.Scalar,[new Kusto.Language.Symbols.Parameter.$ctor2("series",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("threshold",Kusto.Language.Symbols.ParameterTypeKind.Number,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("period",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("trend",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("test_points",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("method",Kusto.Language.Symbols.ScalarTypes.String,0,void 0,void 0,!1,void 0,0,1,void 0)])]);this.Round=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("round",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor3("precision",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Ceiling=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("ceiling",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Pow=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("pow",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("base",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("exponent",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Sqrt=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("sqrt",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Log=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("log",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Log2=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("log2",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Log10=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("log10",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Exp=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("exp",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Exp2=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("exp2",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Exp10=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("exp10",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.PI=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("pi",Kusto.Language.Symbols.ScalarTypes.Real).ConstantFoldable();this.Cos=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("cos",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Sin=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("sin",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Tan=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("tan",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Acos=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("acos",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Asin=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("asin",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Atan=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("atan",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Atan2=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("atan2",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("x",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("y",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Abs=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("abs",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Integer)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.RealOrDecimal)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.Cot=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("cot",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Degrees=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("degrees",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("radians",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Radians=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("radians",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("degrees",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Sign=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("sign",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Rand=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("rand",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.BetaCdf=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("beta_cdf",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("x",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("alpha",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("beta",Kusto.Language.Symbols.ParameterTypeKind.Number)]).ConstantFoldable();this.BetaInv=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("beta_inv",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("probability",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("alpha",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("beta",Kusto.Language.Symbols.ParameterTypeKind.Number)]).ConstantFoldable();this.BetaPdf=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("beta_pdf",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("x",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("alpha",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("beta",Kusto.Language.Symbols.ParameterTypeKind.Number)]).ConstantFoldable();this.Gamma=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("gamma",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.LogGamma=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("loggamma",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("number",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.FirstArgument).ConstantFoldable();this.IsNan=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("isnan",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("number",Kusto.Language.Symbols.ScalarTypes.Real)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.IsInf=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("isinf",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("number",Kusto.Language.Symbols.ScalarTypes.Real)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.IsFinite=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("isfinite",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("number",Kusto.Language.Symbols.ScalarTypes.Real)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.Coalesce=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("coalesce",Kusto.Language.Symbols.ReturnTypeKind.Common,[new Kusto.Language.Symbols.Parameter.ctor("arg",Kusto.Language.Symbols.ParameterTypeKind.CommonScalar,0,void 0,void 0,!1,void 0,2,64,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.MaxOf=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("max_of",Kusto.Language.Symbols.ReturnTypeKind.Common,[new Kusto.Language.Symbols.Parameter.ctor("arg",Kusto.Language.Symbols.ParameterTypeKind.CommonSummable,0,void 0,void 0,!1,void 0,2,64,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.MinOf=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("min_of",Kusto.Language.Symbols.ReturnTypeKind.Common,[new Kusto.Language.Symbols.Parameter.ctor("arg",Kusto.Language.Symbols.ParameterTypeKind.CommonSummable,0,void 0,void 0,!1,void 0,2,64,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).ConstantFoldable();this.WelchTest=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("welch_test",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.ctor("mean1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("variance1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("count1",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("mean2",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("variance2",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("count2",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Point=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("point",Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.ctor("latitude",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("longitude",Kusto.Language.Symbols.ParameterTypeKind.Number)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.Distance=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("distance",Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("point1",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("point2",Kusto.Language.Symbols.ScalarTypes.Dynamic)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.CurrentClusterEndpoint=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("current_cluster_endpoint",Kusto.Language.Symbols.ScalarTypes.String);this.CurrentDatabase=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("current_database",Kusto.Language.Symbols.ScalarTypes.String);this.CurrentPrincipal=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("current_principal",Kusto.Language.Symbols.ScalarTypes.String);this.CurrentPrincipalDetails=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("current_principal_details",Kusto.Language.Symbols.ScalarTypes.Dynamic).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ExtentId=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("extent_id",Kusto.Language.Symbols.ScalarTypes.Guid).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.ExtentId2=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("extentid",Kusto.Language.Symbols.ScalarTypes.Guid).Hide();this.ExtentTags=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("extent_tags",Kusto.Language.Symbols.ScalarTypes.Dynamic).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.CurrentNodeId=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("current_node_id",Kusto.Language.Symbols.ScalarTypes.String).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.IngestionTime=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("ingestion_time",Kusto.Language.Symbols.ScalarTypes.DateTime).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.PrefixOnly).WithResultNamePrefix("$IngestionTime");this.CursorAfter=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("cursor_after",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("cursor",Kusto.Language.Symbols.ScalarTypes.String)]);this.CursorBeforeOrAt=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("cursor_before_or_at",Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("cursor",Kusto.Language.Symbols.ScalarTypes.String)]);this.CursorCurrent=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("cursor_current",Kusto.Language.Symbols.ScalarTypes.String);this.CursorCurrent2=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("current_cursor",Kusto.Language.Symbols.ScalarTypes.String).Hide();this.RowNumber=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("row_number",Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor3("startingIndex",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("restart",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.RowCumSum=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("row_cumsum",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("term",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor3("restart",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.RowWindowSession=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("row_window_session",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.$ctor2("expr",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("maxDistanceFromFirst",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("minDistanceBetweenNeighbors",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor3("restart",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Prev=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("prev",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("column",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("default_value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.Next=new Kusto.Language.Symbols.FunctionSymbol.$ctor4("next",Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("column",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.$ctor3("offset",Kusto.Language.Symbols.ScalarTypes.Long,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("default_value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0)]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.RowstoreOrdinalRange=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("rowstore_ordinal_range",Kusto.Language.Symbols.ScalarTypes.Dynamic).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None).Hide();this.EstimateDataSize=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("estimate_data_size",[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("column",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,1,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.ctor("column",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Star)])]).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.NewGuid=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("new_guid",Kusto.Language.Symbols.ScalarTypes.Guid).WithResultNameKind(Kusto.Language.Symbols.ResultNameKind.None);this.All=System.Array.init([Kusto.Language.Functions.Cluster,Kusto.Language.Functions.Database,Kusto.Language.Functions.Table,Kusto.Language.Functions.Strcat,Kusto.Language.Functions.StrcatArray,Kusto.Language.Functions.ArrayStrcat,Kusto.Language.Functions.StrcatDelim,Kusto.Language.Functions.Strcmp,Kusto.Language.Functions.Strrep,Kusto.Language.Functions.Strlen,Kusto.Language.Functions.StringSize,Kusto.Language.Functions.ToUpper,Kusto.Language.Functions.ToLower,Kusto.Language.Functions.ToUtf8,Kusto.Language.Functions.Substring,Kusto.Language.Functions.IndexOf,Kusto.Language.Functions.IndexOfRegex,Kusto.Language.Functions.Reverse,Kusto.Language.Functions.Split,Kusto.Language.Functions.Extract,Kusto.Language.Functions.ExtractAll_Depricated,Kusto.Language.Functions.ExtractAll,Kusto.Language.Functions.ExtractJson,Kusto.Language.Functions.Replace,Kusto.Language.Functions.TrimStart,Kusto.Language.Functions.TrimEnd,Kusto.Language.Functions.Trim,Kusto.Language.Functions.CountOf,Kusto.Language.Functions.Translate,Kusto.Language.Functions.MakeString,Kusto.Language.Functions.DateTimeToLocaleString,Kusto.Language.Functions.NumberToLocaleString,Kusto.Language.Functions.ToString,Kusto.Language.Functions.ToHex,Kusto.Language.Functions.ToDynamic_,Kusto.Language.Functions.ToObject_Depricated,Kusto.Language.Functions.ToLong,Kusto.Language.Functions.ToInt,Kusto.Language.Functions.ToReal,Kusto.Language.Functions.ToDouble,Kusto.Language.Functions.ToDateTime,Kusto.Language.Functions.ToTimespan,Kusto.Language.Functions.ToTime,Kusto.Language.Functions.ToBool,Kusto.Language.Functions.ToBoolean,Kusto.Language.Functions.ToDecimal,Kusto.Language.Functions.ToGuid,Kusto.Language.Functions.GetType,Kusto.Language.Functions.UrlEncode,Kusto.Language.Functions.UrlDecode,Kusto.Language.Functions.Base64EncodeString,Kusto.Language.Functions.Base64EncodeToString,Kusto.Language.Functions.Base64DecodeToArray,Kusto.Language.Functions.Base64DecodeString,Kusto.Language.Functions.Base64DecodeToString,Kusto.Language.Functions.ParseCsv,Kusto.Language.Functions.ParseJson_Depricated,Kusto.Language.Functions.ParseJson,Kusto.Language.Functions.ParseXml,Kusto.Language.Functions.ParseUrl_Depricated,Kusto.Language.Functions.ParseUrl,Kusto.Language.Functions.ParseUrlQuery_Depricated,Kusto.Language.Functions.ParseUrlQuery,Kusto.Language.Functions.ParseIPV4,Kusto.Language.Functions.ParsePath,Kusto.Language.Functions.ParseUserAgent,Kusto.Language.Functions.ParseVersion,Kusto.Language.Functions.FormatDatetime,Kusto.Language.Functions.FormatTimespan,Kusto.Language.Functions.MakeDatetime,Kusto.Language.Functions.MakeTimespan,Kusto.Language.Functions.DatetimeAdd,Kusto.Language.Functions.DatetimeDiff,Kusto.Language.Functions.DayOfWeek,Kusto.Language.Functions.DayOfMonth,Kusto.Language.Functions.DayOfYear,Kusto.Language.Functions.HourOfDay,Kusto.Language.Functions.WeekOfYear,Kusto.Language.Functions.MonthOfYear,Kusto.Language.Functions.StartOfDay,Kusto.Language.Functions.StartOfWeek,Kusto.Language.Functions.StartOfMonth,Kusto.Language.Functions.StartOfYear,Kusto.Language.Functions.EndOfDay,Kusto.Language.Functions.EndOfWeek,Kusto.Language.Functions.EndOfMonth,Kusto.Language.Functions.EndOfYear,Kusto.Language.Functions.GetYear,Kusto.Language.Functions.GetMonth,Kusto.Language.Functions.DatePart,Kusto.Language.Functions.DatetimePart,Kusto.Language.Functions.Now,Kusto.Language.Functions.Ago,Kusto.Language.Functions.Crc32Hash,Kusto.Language.Functions.HashDjb2,Kusto.Language.Functions.Hash,Kusto.Language.Functions.HashSha256,Kusto.Language.Functions.HashXXH64,Kusto.Language.Functions.Iif,Kusto.Language.Functions.Iff,Kusto.Language.Functions.Case,Kusto.Language.Functions.Assert,Kusto.Language.Functions.Bin,Kusto.Language.Functions.Floor,Kusto.Language.Functions.BinAt,Kusto.Language.Functions.BinAuto,Kusto.Language.Functions.Not,Kusto.Language.Functions.NotNull_Depricated,Kusto.Language.Functions.IsNotNull,Kusto.Language.Functions.IsNull,Kusto.Language.Functions.NotEmpty_Depricated,Kusto.Language.Functions.IsColumnExists,Kusto.Language.Functions.IsAscii,Kusto.Language.Functions.IsUtf8,Kusto.Language.Functions.IsNotEmpty,Kusto.Language.Functions.IsEmpty,Kusto.Language.Functions.ColumnIfExists_Depricated,Kusto.Language.Functions.ColumnIfExists,Kusto.Language.Functions.BinaryAnd,Kusto.Language.Functions.BinaryOr,Kusto.Language.Functions.BinaryXor,Kusto.Language.Functions.BinaryNot,Kusto.Language.Functions.BinaryShiftRight,Kusto.Language.Functions.BinaryShiftLeft,Kusto.Language.Functions.TreePath,Kusto.Language.Functions.Repeat,Kusto.Language.Functions.Arraylength_Depricated,Kusto.Language.Functions.ArrayLength,Kusto.Language.Functions.Range,Kusto.Language.Functions.ArrayConcat,Kusto.Language.Functions.ArrayIif,Kusto.Language.Functions.ArrayIff,Kusto.Language.Functions.ArraySlice,Kusto.Language.Functions.ArraySplit,Kusto.Language.Functions.ArrayShiftLeft,Kusto.Language.Functions.ArrayShiftRight,Kusto.Language.Functions.ArrayRotateLeft,Kusto.Language.Functions.ArrayRotateRight,Kusto.Language.Functions.BagKeys,Kusto.Language.Functions.Zip,Kusto.Language.Functions.Pack,Kusto.Language.Functions.PackDictionary,Kusto.Language.Functions.PackAll,Kusto.Language.Functions.PackArray,Kusto.Language.Functions.SetUnion,Kusto.Language.Functions.SetIntersect,Kusto.Language.Functions.SetDifference,Kusto.Language.Functions.PercentileTDigest,Kusto.Language.Functions.PercentRankTDigest,Kusto.Language.Functions.RankTDigest,Kusto.Language.Functions.TDigestMerge,Kusto.Language.Functions.MergeTDigests,Kusto.Language.Functions.HllMerge,Kusto.Language.Functions.DCountHll,Kusto.Language.Functions.SeriesFir,Kusto.Language.Functions.SeriesStats,Kusto.Language.Functions.SeriesStatsDynamic,Kusto.Language.Functions.SeriesFitLine,Kusto.Language.Functions.SeriesFitLineDynamic,Kusto.Language.Functions.SeriesFit2Lines,Kusto.Language.Functions.SeriesFit2LinesDynamic,Kusto.Language.Functions.SeriesOutliers,Kusto.Language.Functions.SeriesIIR,Kusto.Language.Functions.SeriesPeriodsDetect,Kusto.Language.Functions.SeriesPeriodsValidate,Kusto.Language.Functions.SeriesFillBackwards,Kusto.Language.Functions.SeriesFillForward,Kusto.Language.Functions.SeriesFillConst,Kusto.Language.Functions.SeriesFillLinear,Kusto.Language.Functions.SeriesAdd,Kusto.Language.Functions.SeriesSubtract,Kusto.Language.Functions.SeriesMultiply,Kusto.Language.Functions.SeriesDivide,Kusto.Language.Functions.SeriesGreater,Kusto.Language.Functions.SeriesGreaterEquals,Kusto.Language.Functions.SeriesLess,Kusto.Language.Functions.SeriesLessEquals,Kusto.Language.Functions.SeriesEquals,Kusto.Language.Functions.SeriesNotEquals,Kusto.Language.Functions.SeriesSeasonal,Kusto.Language.Functions.SeriesDecompose,Kusto.Language.Functions.SeriesDecomposeForecast,Kusto.Language.Functions.SeriesDecomposeAnomalies,Kusto.Language.Functions.Round,Kusto.Language.Functions.Ceiling,Kusto.Language.Functions.Pow,Kusto.Language.Functions.Sqrt,Kusto.Language.Functions.Log,Kusto.Language.Functions.Log2,Kusto.Language.Functions.Log10,Kusto.Language.Functions.Exp,Kusto.Language.Functions.Exp2,Kusto.Language.Functions.Exp10,Kusto.Language.Functions.PI,Kusto.Language.Functions.Cos,Kusto.Language.Functions.Sin,Kusto.Language.Functions.Tan,Kusto.Language.Functions.Acos,Kusto.Language.Functions.Asin,Kusto.Language.Functions.Atan,Kusto.Language.Functions.Atan2,Kusto.Language.Functions.Abs,Kusto.Language.Functions.Cot,Kusto.Language.Functions.Degrees,Kusto.Language.Functions.Radians,Kusto.Language.Functions.Sign,Kusto.Language.Functions.Rand,Kusto.Language.Functions.BetaCdf,Kusto.Language.Functions.BetaInv,Kusto.Language.Functions.BetaPdf,Kusto.Language.Functions.Gamma,Kusto.Language.Functions.LogGamma,Kusto.Language.Functions.IsNan,Kusto.Language.Functions.IsInf,Kusto.Language.Functions.IsFinite,Kusto.Language.Functions.Coalesce,Kusto.Language.Functions.MaxOf,Kusto.Language.Functions.MinOf,Kusto.Language.Functions.WelchTest,Kusto.Language.Functions.Point,Kusto.Language.Functions.Distance,Kusto.Language.Functions.CurrentClusterEndpoint,Kusto.Language.Functions.CurrentDatabase,Kusto.Language.Functions.CurrentPrincipal,Kusto.Language.Functions.CurrentPrincipalDetails,Kusto.Language.Functions.ExtentId,Kusto.Language.Functions.ExtentId2,Kusto.Language.Functions.ExtentTags,Kusto.Language.Functions.CurrentNodeId,Kusto.Language.Functions.IngestionTime,Kusto.Language.Functions.CursorAfter,Kusto.Language.Functions.CursorBeforeOrAt,Kusto.Language.Functions.CursorCurrent,Kusto.Language.Functions.CursorCurrent2,Kusto.Language.Functions.RowNumber,Kusto.Language.Functions.RowCumSum,Kusto.Language.Functions.RowWindowSession,Kusto.Language.Functions.Prev,Kusto.Language.Functions.Next,Kusto.Language.Functions.RowstoreOrdinalRange,Kusto.Language.Functions.EstimateDataSize,Kusto.Language.Functions.NewGuid],Kusto.Language.Symbols.FunctionSymbol)}},methods:{SeriesDecomposeResult:function(table,args,sig){return Kusto.Language.FunctionHelpers.MakePrefixedTuple(sig,"series",args,new Kusto.Language.Symbols.TupleSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("baseline",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("seasonal",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("trend",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("residual",Kusto.Language.Symbols.ScalarTypes.Dynamic)]))}}}});Bridge.define("Kusto.Language.GlobalState",{statics:{fields:{NoClusters:null,NoCommands:null,s_default:null},props:{Default:{get:function(){return Kusto.Language.GlobalState.s_default==null&&Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.Kusto.Language.GlobalState,Bridge.ref(Kusto.Language.GlobalState,"s_default"),new Kusto.Language.GlobalState(Kusto.Language.GlobalState.NoClusters,null,null,Kusto.Language.Functions.All,null,Kusto.Language.Aggregates.All,null,Kusto.Language.PlugIns.All,null,Kusto.Language.Operators.All,null,Kusto.Language.Commands.All,null,null),null),Kusto.Language.GlobalState.s_default}}},ctors:{init:function(){this.NoClusters=Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol).Instance;this.NoCommands=Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol).Instance}},methods:{Optional:function(T,value){return new(Kusto.Language.Utils.Optional$1(T).$ctor1)(value)}}},fields:{aggregatesMap:null,functionsMap:null,pluginMap:null,operatorMap:null,commandMap:null,commandListMap:null,reverseClusterMap:null,reverseDatabaseMap:null,reverseTableMap:null,cache:null},props:{Clusters:null,Cluster:null,Database:null,Functions:null,Aggregates:null,PlugIns:null,Operators:null,Commands:null,Cache:{get:function(){return this.cache==null&&Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.Kusto.Language.KustoCache,Bridge.ref(this,"cache"),new Kusto.Language.KustoCache,null),this.cache}}},ctors:{ctor:function(clusters,cluster,database,functions,functionMap,aggregates,aggregateMap,plugins,pluginMap,operators,operatorMap,commands,commandMap,commandListMap){this.$initialize();this.Clusters=clusters;this.Cluster=cluster||new Kusto.Language.Symbols.ClusterSymbol.$ctor1("",null,!0);this.Database=database||new Kusto.Language.Symbols.DatabaseSymbol.$ctor1("",null,!0);this.Functions=functions;this.Aggregates=aggregates;this.PlugIns=plugins;this.Operators=operators;this.Commands=commands;this.commandMap=commandMap;this.commandListMap=commandListMap}},methods:{With:function(clusters,cluster,database,functions,aggregates,plugins,operators,commands){clusters===void 0&&(clusters=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol))));cluster===void 0&&(cluster=new(Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.ClusterSymbol)));database===void 0&&(database=new(Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.DatabaseSymbol)));functions===void 0&&(functions=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol))));aggregates===void 0&&(aggregates=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol))));plugins===void 0&&(plugins=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol))));operators===void 0&&(operators=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol))));commands===void 0&&(commands=new(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol))));var useClusters=clusters.HasValue?clusters.Value:this.Clusters,useCluster=cluster.HasValue?cluster.Value:this.Cluster,useDatabase=database.HasValue?database.Value:this.Database,useFunctions=functions.HasValue?functions.Value:this.Functions,useAggregates=aggregates.HasValue?aggregates.Value:this.Aggregates,usePlugins=plugins.HasValue?plugins.Value:this.PlugIns,useOperators=operators.HasValue?operators.Value:this.Operators,useCommands=commands.HasValue?commands.Value:this.Commands;return Bridge.referenceEquals(useClusters,this.Clusters)&&Bridge.referenceEquals(useCluster,this.Cluster)&&Bridge.referenceEquals(useDatabase,this.Database)&&Bridge.referenceEquals(useFunctions,this.Functions)&&Bridge.referenceEquals(useAggregates,this.Aggregates)&&Bridge.referenceEquals(usePlugins,this.PlugIns)&&Bridge.referenceEquals(useOperators,this.Operators)&&Bridge.referenceEquals(useCommands,this.Commands)?this:new Kusto.Language.GlobalState(useClusters,useCluster,useDatabase,useFunctions,Bridge.referenceEquals(useFunctions,this.Functions)?this.functionsMap:null,useAggregates,Bridge.referenceEquals(useAggregates,this.Aggregates)?this.aggregatesMap:null,usePlugins,Bridge.referenceEquals(usePlugins,this.PlugIns)?this.pluginMap:null,useOperators,Bridge.referenceEquals(useOperators,this.Operators)?this.operatorMap:null,useCommands,Bridge.referenceEquals(useCommands,this.Commands)?this.commandMap:null,Bridge.referenceEquals(useCommands,this.Commands)?this.commandListMap:null)},WithClusterList:function(clusters){return this.With(Kusto.Language.GlobalState.Optional(Bridge.global.System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol),clusters),void 0,void 0,void 0,void 0,void 0,void 0,void 0)},WithCluster:function(cluster){if(System.Linq.Enumerable.from(this.Clusters).contains(cluster))return this.With(void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.ClusterSymbol).op_Implicit(cluster),void 0,void 0,void 0,void 0,void 0,void 0);var newClusters=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ClusterSymbol).$ctor1)(this.Clusters);return newClusters.add(cluster),this.With(Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ClusterSymbol)).op_Implicit(newClusters),Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.ClusterSymbol).op_Implicit(cluster),void 0,void 0,void 0,void 0,void 0,void 0)},WithDatabase:function(database){var existingCluster,cluster;return this.Cluster!=null&&System.Linq.Enumerable.from(this.Cluster.Databases).contains(database)?this.With(void 0,void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.DatabaseSymbol).op_Implicit(database),void 0,void 0,void 0,void 0,void 0):(existingCluster=this.GetCluster(database),existingCluster!=null?this.With(void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.ClusterSymbol).op_Implicit(existingCluster),Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.DatabaseSymbol).op_Implicit(database),void 0,void 0,void 0,void 0,void 0):(cluster=new Kusto.Language.Symbols.ClusterSymbol.ctor((database.Name||"")+":cluster",[database]),this.WithCluster(cluster).With(void 0,void 0,Kusto.Language.Utils.Optional$1(Kusto.Language.Symbols.DatabaseSymbol).op_Implicit(database),void 0,void 0,void 0,void 0,void 0)))},IsDatabaseTable:function(table){return this.GetDatabase$1(table)!=null},IsDatabaseFunction:function($function){return this.GetDatabase($function)!=null},WithFunctions:function(functions){return this.With(void 0,void 0,void 0,Kusto.Language.GlobalState.Optional(Bridge.global.System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),functions),void 0,void 0,void 0,void 0)},AddOrUpdateCluster:function(newCluster){var clusterInList=System.Linq.Enumerable.from(this.Clusters).firstOrDefault(function(c){return Bridge.referenceEquals(c.Name,newCluster.Name)},null),newList,newGlobals,oldCurrentDatabase,newDatabase;return clusterInList==null?this.WithClusterList(System.Linq.Enumerable.from(this.Clusters).concat(System.Array.init([newCluster],Kusto.Language.Symbols.ClusterSymbol)).toList(Kusto.Language.Symbols.ClusterSymbol)):Bridge.referenceEquals(clusterInList,newCluster)?this:(newList=System.Linq.Enumerable.from(this.Clusters).select(function(c){return Bridge.referenceEquals(c,clusterInList)?newCluster:c}).ToArray(Kusto.Language.Symbols.ClusterSymbol),newGlobals=this.WithClusterList(newList),Bridge.referenceEquals(this.Cluster,clusterInList)&&(newGlobals=newGlobals.WithCluster(newCluster)),oldCurrentDatabase=System.Linq.Enumerable.from(clusterInList.Databases).firstOrDefault(Bridge.fn.bind(this,function(d){return Bridge.referenceEquals(d,this.Database)}),null),oldCurrentDatabase!=null&&(newDatabase=System.Linq.Enumerable.from(newCluster.Databases).firstOrDefault(function(d){return Bridge.referenceEquals(d.Name,oldCurrentDatabase.Name)},null),newDatabase!=null&&(newGlobals=newGlobals.WithDatabase(newDatabase))),newGlobals)},GetCluster$1:function(name){var $t;return(name=($t=Kusto.Language.KustoFacts.GetHostName(name),$t!=null?$t:name),Kusto.Language.KustoFacts.IsClusterHostName(name,this.Cluster.Name)||Kusto.Language.KustoFacts.IsClusterShortName(name,this.Cluster.Name)&&Kusto.Language.KustoFacts.IsKustoWindowsNet(this.Cluster.Name))?this.Cluster:System.Linq.Enumerable.from(this.Clusters).firstOrDefault(function(c){return Kusto.Language.KustoFacts.IsClusterHostName(name,c.Name)},null)||System.Linq.Enumerable.from(this.Clusters).firstOrDefault(function(c){return Kusto.Language.KustoFacts.IsClusterShortName(name,c.Name)&&Kusto.Language.KustoFacts.IsKustoWindowsNet(c.Name)},null)||System.Linq.Enumerable.from(this.Clusters).firstOrDefault(function(c){return Kusto.Language.KustoFacts.IsClusterShortName(name,c.Name)},null)},GetCluster:function(database){var $t,$t1,map,cluster,member,result;if(database==null)return null;if(this.reverseClusterMap==null){map=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.ClusterSymbol));$t=Bridge.getEnumerator(this.Clusters,Kusto.Language.Symbols.ClusterSymbol);try{while($t.moveNext()){cluster=$t.Current;$t1=Bridge.getEnumerator(cluster.Members,Kusto.Language.Symbols.Symbol);try{while($t1.moveNext())member=$t1.Current,map.set(member,cluster)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.ClusterSymbol),Bridge.ref(this,"reverseClusterMap"),map,null)}return result={},this.reverseClusterMap.tryGetValue(database,result),result.v},GetDatabase$1:function(table){return this.GetDatabase$2(Bridge.cast(table,Kusto.Language.Symbols.Symbol))},GetDatabase:function($function){return this.GetDatabase$2(Bridge.cast($function,Kusto.Language.Symbols.Symbol))},GetDatabase$2:function(symbol){var $t,$t1,map,database,member,result;if(symbol==null)return null;if(this.reverseDatabaseMap==null){map=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.DatabaseSymbol));$t=Bridge.getEnumerator(System.Linq.Enumerable.from(this.Clusters).selectMany(function(c){return c.Databases}));try{while($t.moveNext()){database=$t.Current;$t1=Bridge.getEnumerator(database.Members,Kusto.Language.Symbols.Symbol);try{while($t1.moveNext())member=$t1.Current,map.set(member,database)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.DatabaseSymbol),Bridge.ref(this,"reverseDatabaseMap"),map,null)}return result={},this.reverseDatabaseMap.tryGetValue(symbol,result),result.v},GetTable:function(column){var $t,$t1,map,table,col,result;if(column==null)return null;if(this.reverseTableMap==null){map=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.TableSymbol));$t=Bridge.getEnumerator(System.Linq.Enumerable.from(this.Clusters).selectMany(function(c){return c.Databases}).selectMany(function(d){return d.Tables}));try{while($t.moveNext()){table=$t.Current;$t1=Bridge.getEnumerator(table.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t1.moveNext())col=$t1.Current,map.set(col,table)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.System.Collections.Generic.Dictionary$2(Kusto.Language.Symbols.Symbol,Kusto.Language.Symbols.TableSymbol),Bridge.ref(this,"reverseTableMap"),map,null)}return result={},this.reverseTableMap.tryGetValue(column,result),result.v},GetFunction:function(name){var map,fn;return this.functionsMap==null&&(map=System.Linq.Enumerable.from(this.Functions).toDictionary(function(f){return f.Name},null,System.String,Bridge.global.Kusto.Language.Symbols.FunctionSymbol),Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),Bridge.ref(this,"functionsMap"),map,null)),fn={},this.functionsMap.tryGetValue(name,fn),fn.v},WithAggregates:function(aggregates){return this.With(void 0,void 0,void 0,void 0,Kusto.Language.GlobalState.Optional(Bridge.global.System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),aggregates),void 0,void 0,void 0)},GetAggregate:function(name){var map,fn;return this.aggregatesMap==null&&(map=System.Linq.Enumerable.from(this.Aggregates).toDictionary(function(f){return f.Name},null,System.String,Bridge.global.Kusto.Language.Symbols.FunctionSymbol),Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),Bridge.ref(this,"aggregatesMap"),map,null)),fn={},this.aggregatesMap.tryGetValue(name,fn),fn.v},WithPlugIns:function(plugins){return this.With(void 0,void 0,void 0,void 0,void 0,Kusto.Language.GlobalState.Optional(Bridge.global.System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.FunctionSymbol),plugins),void 0,void 0)},GetPlugIn:function(name){var map,fn;return this.pluginMap==null&&(map=System.Linq.Enumerable.from(this.PlugIns).toDictionary(function(f){return f.Name},null,System.String,Bridge.global.Kusto.Language.Symbols.FunctionSymbol),Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.FunctionSymbol),Bridge.ref(this,"pluginMap"),map,null)),fn={},this.pluginMap.tryGetValue(name,fn),fn.v},IsAggregateFunction:function(fn){return Bridge.referenceEquals(this.GetAggregate(fn.Name),fn)},IsBuiltInFunction:function(fn){return Bridge.referenceEquals(this.GetFunction(fn.Name),fn)||Bridge.referenceEquals(this.GetAggregate(fn.Name),fn)||Bridge.referenceEquals(this.GetPlugIn(fn.Name),fn)},WithOperators:function(operators){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.GlobalState.Optional(Bridge.global.System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.OperatorSymbol),operators),void 0)},GetOperator:function(kind){this.operatorMap==null&&(this.operatorMap=System.Linq.Enumerable.from(this.Operators).toDictionary(function(o){return o.OperatorKind},null,Bridge.global.Kusto.Language.Symbols.OperatorKind,Bridge.global.Kusto.Language.Symbols.OperatorSymbol));var op={};return this.operatorMap.tryGetValue(kind,op)?op.v:null},WithCommands:function(commands){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.GlobalState.Optional(Bridge.global.System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol),commands))},AddCommands$1:function(additionalCommands){return this.With(void 0,void 0,void 0,void 0,void 0,void 0,void 0,Kusto.Language.Utils.Optional$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol)).op_Implicit(System.Linq.Enumerable.from(this.Commands).concat(additionalCommands).toList(Kusto.Language.Symbols.CommandSymbol)))},AddCommands:function(additionalCommands){return additionalCommands===void 0&&(additionalCommands=[]),this.AddCommands$1(Bridge.cast(additionalCommands,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.CommandSymbol)))},GetCommand:function(name){var $t,map,c,command;if(this.commandMap==null){map=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.CommandSymbol));$t=Bridge.getEnumerator(this.Commands,Kusto.Language.Symbols.CommandSymbol);try{while($t.moveNext())c=$t.Current,map.set(c.Name,c)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.CommandSymbol),Bridge.ref(this,"commandMap"),map,null)}return command={},this.commandMap.tryGetValue(name,command),command.v}}});Bridge.define("Kusto.Language.IncludeFunctionKind",{$kind:"enum",statics:{fields:{BuiltInFunctions:1,DatabaseFunctions:2,LocalFunctions:4,None:0,All:7}},$flags:!0});Bridge.define("Kusto.Language.KustoCache",{fields:{m_cache:null},ctors:{init:function(){this.m_cache=new(System.Collections.Generic.Dictionary$2(Function,System.Object))},ctor:function(){this.$initialize()}},methods:{GetOrCreate:function(T){var value={};return this.m_cache.tryGetValue(T,value)||(value.v=Bridge.createInstance(T),this.m_cache.add(T,value.v)),Bridge.cast(Bridge.unbox(value.v),T)},GetOrCreate$1:function(T,creator){var value={};return this.m_cache.tryGetValue(T,value)||(value.v=creator(),this.m_cache.add(T,value.v)),Bridge.cast(Bridge.unbox(value.v),T)},TryGetValue:function(T,value){var obj={};return this.m_cache.tryGetValue(T,obj)?(value.v=Bridge.cast(Bridge.unbox(obj.v),T),!0):(value.v=Bridge.getDefaultValue(T),!1)}}});Bridge.define("Kusto.Language.KustoCode",{statics:{methods:{Parse:function(text,globals){if(globals===void 0&&(globals=null),text==null)throw new System.ArgumentNullException.$ctor1("text");var tokens=Kusto.Language.Parsing.LexicalGrammar.GetTokens(text,!0);return Kusto.Language.KustoCode.Create(text,globals||Kusto.Language.GlobalState.Default,tokens,!1,Bridge.getDefaultValue(Kusto.Language.Utils.CancellationToken))},ParseAndAnalyze:function(text,globals,cancellationToken){if(globals===void 0&&(globals=null),cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),text==null)throw new System.ArgumentNullException.$ctor1("text");var tokens=Kusto.Language.Parsing.LexicalGrammar.GetTokens(text,!0);return Kusto.Language.KustoCode.Create(text,globals||Kusto.Language.GlobalState.Default,tokens,!0,cancellationToken)},Create:function(text,globals,tokens,analyze,cancellationToken){var grammar,syntax,kind=Kusto.Language.KustoCode.GetKind(text),commandBlock,queryBlock,localCache;switch(kind){case Kusto.Language.Editor.CodeKinds.Command:commandBlock=Kusto.Language.Parsing.CommandGrammar.From(globals).CommandBlock;grammar=commandBlock;syntax=Kusto.Language.Parsing.SyntaxParsers.ParseFirst$1(Bridge.global.Kusto.Language.Syntax.CommandBlock,commandBlock,tokens);break;case Kusto.Language.Editor.CodeKinds.Directive:grammar=Kusto.Language.Parsing.DirectiveGrammar.DirectiveBlock;syntax=Kusto.Language.Parsing.SyntaxParsers.ParseFirst$1(Bridge.global.Kusto.Language.Syntax.DirectiveBlock,Kusto.Language.Parsing.DirectiveGrammar.DirectiveBlock,tokens);break;case Kusto.Language.Editor.CodeKinds.Query:default:queryBlock=Kusto.Language.Parsing.QueryGrammar.From(globals).QueryBlock;grammar=queryBlock;syntax=Kusto.Language.Parsing.SyntaxParsers.ParseFirst$1(Bridge.global.Kusto.Language.Syntax.QueryBlock,queryBlock,tokens)}return localCache=null,analyze&&(cancellationToken.ThrowIfCancellationRequested(),localCache=new Kusto.Language.Binding.LocalBindingCache,Kusto.Language.Binding.Binder.Bind(syntax,globals,localCache,null,cancellationToken)),new Kusto.Language.KustoCode(text,kind,globals,grammar,syntax,analyze,tokens,localCache)},GetKind:function(text){var token=Kusto.Language.Parsing.LexicalGrammar.GetFirstToken(text);if(token!=null){if(token.Kind===Kusto.Language.Syntax.SyntaxKind.DotToken)return Kusto.Language.Editor.CodeKinds.Command;if(token.Kind===Kusto.Language.Syntax.SyntaxKind.DirectiveToken)return Kusto.Language.Editor.CodeKinds.Directive}return Kusto.Language.Editor.CodeKinds.Query}}},fields:{lexerTokens:null,localCache:null,diagnostics:null,syntaxDiagnostics:null,lineStarts:null},props:{Text:null,Kind:null,Syntax:null,Grammar:null,HasSemantics:!1,Globals:null,LexerTokens:{get:function(){return this.lexerTokens}}},ctors:{ctor:function(text,kind,globals,grammar,syntax,hasSemantics,lexerTokens,localCache){this.$initialize();this.Text=text;this.Kind=kind;this.Globals=globals;this.Grammar=grammar;this.Syntax=syntax;this.HasSemantics=hasSemantics;this.lexerTokens=lexerTokens;this.localCache=localCache}},methods:{Analyze:function(globals,cancellationToken){return globals===void 0&&(globals=null),cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),globals==null&&(globals=this.Globals),this.HasSemantics&&Bridge.referenceEquals(this.Globals,globals)?this:Kusto.Language.KustoCode.Create(this.Text,this.Globals,this.lexerTokens,!0,cancellationToken)},WithGlobals:function(globals,cancellationToken){return cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),Bridge.referenceEquals(this.Globals,globals)?this:Kusto.Language.KustoCode.Create(this.Text,globals,this.lexerTokens,this.HasSemantics,cancellationToken)},GetDiagnostics:function(cancellationToken){if(cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),this.diagnostics==null){var diagnostics=this.Syntax.GetContainedDiagnostics(3,cancellationToken);Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Diagnostic),Bridge.ref(this,"diagnostics"),diagnostics,null)}return this.diagnostics},GetSyntaxDiagnostics:function(cancellationToken){if(cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),this.syntaxDiagnostics==null){var diagnostics=this.Syntax.GetContainedSyntaxDiagnostics();Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Diagnostic),Bridge.ref(this,"syntaxDiagnostics"),diagnostics,null)}return this.syntaxDiagnostics},GetSymbolsInScope:function(position,match,include,cancellationToken){match===void 0&&(match=255);include===void 0&&(include=7);cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var symbols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Symbol).ctor);return this.HasSemantics&&Kusto.Language.Binding.Binder.GetSymbolsInScope(this.Syntax,position,this.Globals,match,include,symbols,cancellationToken),Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.Symbol,symbols)},TryGetLineAndOffset:function(position,line,lineOffset){if(this.lineStarts==null){var tmp=new(System.Collections.Generic.List$1(System.Int32).ctor);Kusto.Language.Parsing.TextFacts.GetLineStarts(this.Text,tmp);Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.System.Collections.Generic.List$1(System.Int32),Bridge.ref(this,"lineStarts"),tmp,null)}return Kusto.Language.Parsing.TextFacts.TryGetLineAndOffset(this.Text,position,this.lineStarts,line,lineOffset)}}});Bridge.define("Kusto.Language.KustoFacts",{statics:{fields:{StorageTypes:null,ChartTypes:null,HiddenChartTypes:null,VisibleChartTypes:null,ChartProperties:null,ChartKinds:null,ChartLegends:null,ChartAxis:null,ChartYSplit:null,JoinKinds:null,JoinHintRemotes:null,JoinHintStrategies:null,DistributionHintStrategies:null,FindWithSourceProperty:null,SearchKinds:null,MvExpandBagExpansionProperty:null,MvExpandBagExpansions:null,MvExpandWithItemIndexProperty:null,MvApplyWithItemIndexProperty:null,ReduceByKinds:null,UnionWithSourceProperties:null,UnionKinds:null,ParseKinds:null,DataScopeValues:null,ToScalarKinds:null,ToTableKinds:null,LimitExamples:null,TopExamples:null,AgoExamples:null,singleQuoteStringEscapes:null,doubleQuoteStringEscapes:null,HostNamePrefix:null,KustoWindowsNet:null},ctors:{init:function(){this.StorageTypes=System.Array.init(["bool","boolean","int8","char","uint8","byte","int16","uint16","int","int32","uint","uint32","int64","long","uint64","ulong","single","float","real","double","string","date","datetime","time","timespan","guid","uniqueid","dynamic","decimal"],System.String);this.ChartTypes=System.Array.init(["table","list","barchart","piechart","ladderchart","timechart","linechart","anomalychart","pivotchart","areachart","stackedareachart","scatterchart","timepivot","columnchart","timeline","3Dchart"],System.String);this.HiddenChartTypes=System.Array.init(["3Dchart"],System.String);this.VisibleChartTypes=System.Linq.Enumerable.from(Kusto.Language.KustoFacts.ChartTypes).where(function(c){return!System.Linq.Enumerable.from(Kusto.Language.KustoFacts.HiddenChartTypes).contains(c)}).ToArray(System.String);this.ChartProperties=System.Array.init(["title","xcolumn","series","ycolumns","anomalycolumns","kind","xtitle","ytitle","xaxis","yaxis","legend","ysplit","accumulate","ymin","ymax"],System.String);this.ChartKinds=System.Array.init(["default","unstacked","stacked","stacked100"],System.String);this.ChartLegends=System.Array.init(["visible","hidden"],System.String);this.ChartAxis=System.Array.init(["linear","log"],System.String);this.ChartYSplit=System.Array.init(["none","axes","panels"],System.String);this.JoinKinds=System.Array.init(["inner","fullouter","outer","innerunique","leftanti","leftantisemi","anti","leftouter","leftsemi","rightanti","rightantisemi","rightouter","rightsemi"],System.String);this.JoinHintRemotes=System.Array.init(["auto","left","local","right"],System.String);this.JoinHintStrategies=System.Array.init(["broadcast","centralized"],System.String);this.DistributionHintStrategies=System.Array.init(["single","per_node","per_shard","default"],System.String);this.FindWithSourceProperty="withsource";this.SearchKinds=System.Array.init(["default","case_insensitive","case_sensitive"],System.String);this.MvExpandBagExpansionProperty="bagexpansion";this.MvExpandBagExpansions=System.Array.init(["bag","array"],System.String);this.MvExpandWithItemIndexProperty="with_itemindex";this.MvApplyWithItemIndexProperty="with_itemindex";this.ReduceByKinds=System.Array.init(["source"],System.String);this.UnionWithSourceProperties=System.Array.init(["withsource","with_source"],System.String);this.UnionKinds=System.Array.init(["inner","outer"],System.String);this.ParseKinds=System.Array.init(["simple","regex","relaxed"],System.String);this.DataScopeValues=System.Array.init(["all","hotcache"],System.String);this.ToScalarKinds=System.Array.init(["nooptimization"],System.String);this.ToTableKinds=System.Array.init(["nooptimization"],System.String);this.LimitExamples=System.Array.init(["10","100","1000"],System.String);this.TopExamples=System.Array.init(["10","100","1000"],System.String);this.AgoExamples=System.Array.init(["30min","1h","1d"],System.String);this.singleQuoteStringEscapes=function(_o1){return _o1.add(39,"\\'"),_o1.add(92,"\\\\"),_o1.add(7,"\\a"),_o1.add(8,"\\b"),_o1.add(12,"\\f"),_o1.add(10,"\\n"),_o1.add(13,"\\r"),_o1.add(9,"\\t"),_o1}(new(System.Collections.Generic.Dictionary$2(System.Char,System.String)));this.doubleQuoteStringEscapes=function(_o2){return _o2.add(34,'\\"'),_o2.add(92,"\\\\"),_o2.add(7,"\\a"),_o2.add(8,"\\b"),_o2.add(12,"\\f"),_o2.add(10,"\\n"),_o2.add(13,"\\r"),_o2.add(9,"\\t"),_o2}(new(System.Collections.Generic.Dictionary$2(System.Char,System.String)));this.HostNamePrefix="://";this.KustoWindowsNet=".kusto.windows.net"}},methods:{CanBeIdentifier:function(text){return!Kusto.Language.KustoFacts.IsKeyword(text)&&Kusto.Language.Parsing.ScannerExtensions.Matches(Kusto.Language.Parsing.LexicalGrammar.Identifier,text)},IsKeyword:function(text){var kind={v:new Kusto.Language.Syntax.SyntaxKind};return Kusto.Language.Syntax.SyntaxFacts.TryGetKind(text,kind)&&Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind.v)===Kusto.Language.Syntax.SyntaxCategory.Keyword},IsKeywordThatCanBeIdentifier:function(text){var kind={v:new Kusto.Language.Syntax.SyntaxKind};return Kusto.Language.Syntax.SyntaxFacts.TryGetKind(text,kind)&&Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind.v)===Kusto.Language.Syntax.SyntaxCategory.Keyword&&Kusto.Language.Syntax.SyntaxFacts.CanBeIdentifier(kind.v)},BracketNameIfNecessary:function(name){return Kusto.Language.KustoFacts.CanBeIdentifier(name)?name:Kusto.Language.KustoFacts.GetBrackettedName(name)},GetBrackettedName:function(name){return"["+(Kusto.Language.KustoFacts.GetStringLiteral(name)||"")+"]"},GetStringLiteral:function(text){return System.String.contains(text,"'")?Kusto.Language.KustoFacts.GetDoubleQuotedStringLiteral(text):Kusto.Language.KustoFacts.GetSingleQuotedStringLiteral(text)},GetSingleQuotedStringLiteral:function(text){return"'"+(Kusto.Language.KustoFacts.GetEscapedString(text,Kusto.Language.KustoFacts.singleQuoteStringEscapes)||"")+"'"},GetDoubleQuotedStringLiteral:function(text){return'"'+(Kusto.Language.KustoFacts.GetEscapedString(text,Kusto.Language.KustoFacts.doubleQuoteStringEscapes)||"")+'"'},GetEscapedString:function(text,escapes){var $t,builder=new System.Text.StringBuilder,ch,escape;$t=Bridge.getEnumerator(text);try{while($t.moveNext())ch=$t.Current,escape={},escapes.System$Collections$Generic$IReadOnlyDictionary$2$System$Char$System$String$tryGetValue(ch,escape)?builder.append(escape.v):builder.append(String.fromCharCode(ch))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return builder.toString()},GetExpressionResultName:function(expr,defaultName,rowScope){return defaultName===void 0&&(defaultName=""),rowScope===void 0&&(rowScope=null),Kusto.Language.Binding.Binder.GetExpressionResultName(expr,defaultName,rowScope)},GetStringLiteralValue:function(text){var start=0,end=text.length,verbatim=!1,quote;return end===0?"":((text.charCodeAt(0)===104||text.charCodeAt(0)===72)&&(start=start+1|0),start<text.length&&text.charCodeAt(start)===64&&(verbatim=!0,start=start+1|0),start>=text.length)?"":(quote=text.charCodeAt(start),start=start+1|0,end>0&&text.charCodeAt(end-1|0)===quote&&(end=end-1|0),end<=start?"":!verbatim&&System.String.indexOf(text,String.fromCharCode(92),start)>=start?Kusto.Language.KustoFacts.DecodeEscapes(text,start,end-start|0):verbatim&&Kusto.Language.KustoFacts.HasInteriorQuote(text,start,end,quote)?Kusto.Language.KustoFacts.DecodeDoubleQuotes(text,start,end-start|0,quote):start>0||end<text.length?text.substr(start,end-start|0):text)},HasInteriorQuote:function(text,start,end,quote){var position=System.String.indexOf(text,String.fromCharCode(quote));return position>=0&&position<end},DecodeEscapes:function(text,start,length){for(var ch,ch2,builder=new System.Text.StringBuilder,i={v:start},end=start+length|0;i.v<end;i.v=i.v+1|0)if(ch=text.charCodeAt(i.v),ch===92&&(i.v+1|0)<end){ch2=text.charCodeAt(i.v+1|0);switch(ch2){case 39:case 34:case 92:builder.append(String.fromCharCode(ch2));i.v=i.v+1|0;break;case 97:builder.append(String.fromCharCode(7));i.v=i.v+1|0;break;case 98:builder.append(String.fromCharCode(8));i.v=i.v+1|0;break;case 102:builder.append(String.fromCharCode(12));i.v=i.v+1|0;break;case 110:builder.append(String.fromCharCode(10));i.v=i.v+1|0;break;case 114:builder.append(String.fromCharCode(13));i.v=i.v+1|0;break;case 116:builder.append(String.fromCharCode(9));i.v=i.v+1|0;break;case 118:builder.append(String.fromCharCode(11));i.v=i.v+1|0;break;case 117:case 85:case 120:builder.append(String.fromCharCode(Kusto.Language.KustoFacts.DecodeHex(text,i)));break;default:builder.append(String.fromCharCode(Kusto.Language.KustoFacts.DecodeOctal(text,i)))}}else builder.append(String.fromCharCode(ch));return builder.toString()},DecodeOctal:function(text,index){for(var value=System.Int64(0);index.v<text.length&&System.Char.isDigit(text.charCodeAt(index.v));index.v=index.v+1|0)value=value.shl(3).add(System.Int64(text.charCodeAt(index.v)-48|0));return System.Int64.clipu16(value)},DecodeHex:function(text,index){for(var value=System.Int64(0),ch;index.v<text.length;index.v=index.v+1|0)if(ch=text.charCodeAt(index.v),ch>=97&&ch<=102)value=value.shl(4).add(System.Int64(ch-97|0));else if(ch>=65&&ch<=70)value=value.shl(4).add(System.Int64(ch-65|0));else if(ch>=48&&ch<=57)value=value.shl(4).add(System.Int64(ch-48|0));else break;return System.Int64.clipu16(value)},DecodeDoubleQuotes:function(text,start,length,quote){for(var ch,builder=new System.Text.StringBuilder,i=start,end=start+length|0;i<end;i=i+1|0)ch=text.charCodeAt(i),ch===quote&&(i+1|0)<end&&text.charCodeAt(i+1|0)===quote&&(i=i+1|0),builder.append(String.fromCharCode(ch));return builder.toString()},IsClusterHostName:function(name,hostName){return System.String.compare(name,hostName,!0)===0},IsKustoWindowsNet:function(hostname){return System.String.endsWith(hostname,Kusto.Language.KustoFacts.KustoWindowsNet,5)},IsClusterShortName:function(name,hostName){return!System.String.contains(name,".")&&System.String.startsWith(hostName,(name||"")+".",5)},GetHostName:function(clusterUriOrName){var start=0,end=clusterUriOrName.length,hostNamePrefixStart=System.String.indexOf(clusterUriOrName,Kusto.Language.KustoFacts.HostNamePrefix),colon;return hostNamePrefixStart>0&&(start=hostNamePrefixStart+Kusto.Language.KustoFacts.HostNamePrefix.length|0,colon=System.String.indexOf(clusterUriOrName,String.fromCharCode(58),start),colon>=0&&(end=colon)),start===0&&end===clusterUriOrName.length?clusterUriOrName:clusterUriOrName.substr(start,end-start|0)},Matches:function(pattern,text){if(pattern==null)throw new System.ArgumentNullException.$ctor1("pattern");if(text==null)throw new System.ArgumentNullException.$ctor1("text");return pattern.length===0?!1:Kusto.Language.KustoFacts.Matches$1(pattern,0,text,0)},Matches$1:function(pattern,patternSegmentStart,text,textPosition){for(var asteriskPosition=System.String.indexOf(pattern,String.fromCharCode(42),patternSegmentStart),sawAsterisk=asteriskPosition>=0,patternSegmentEnd=sawAsterisk?asteriskPosition:pattern.length,nextPatternStart,patternSegmentLength,matchesPosition;sawAsterisk&&(asteriskPosition+1|0)<pattern.length&&pattern.charCodeAt(asteriskPosition+1|0)===42;)asteriskPosition=asteriskPosition+1|0;return nextPatternStart=sawAsterisk?asteriskPosition+1|0:pattern.length,patternSegmentLength=patternSegmentEnd-patternSegmentStart|0,patternSegmentLength===0?patternSegmentStart>=pattern.length?!0:Kusto.Language.KustoFacts.Matches$1(pattern,nextPatternStart,text,textPosition):patternSegmentStart===0?sawAsterisk?patternSegmentLength>text.length||System.String.compare(text.substr(0,patternSegmentLength),pattern.substr(0,patternSegmentLength))!==0?!1:Kusto.Language.KustoFacts.Matches$1(pattern,nextPatternStart,text,patternSegmentLength):text.length===patternSegmentLength&&System.String.compare(text.substr(0,patternSegmentLength),pattern.substr(0,patternSegmentLength))===0:sawAsterisk?(matchesPosition=Kusto.Language.KustoFacts.IndexOf(text,textPosition,pattern,patternSegmentStart,patternSegmentLength),matchesPosition===-1)?!1:Kusto.Language.KustoFacts.Matches$1(pattern,nextPatternStart,text,matchesPosition+patternSegmentLength|0):patternSegmentLength<=(text.length-textPosition|0)&&System.String.compare(text.substr(text.length-patternSegmentLength|0,patternSegmentLength),pattern.substr(patternSegmentStart,patternSegmentLength))===0},IndexOf:function(text,textStart,value,valueStart,valueLength){for(var firstChar=value.charCodeAt(valueStart),firstCharPosition;;){if(firstCharPosition=System.String.indexOf(text,String.fromCharCode(firstChar),textStart),firstCharPosition<textStart||(firstCharPosition+valueLength|0)>text.length)return-1;if(System.String.compare(text.substr(firstCharPosition,valueLength),value.substr(valueStart,valueLength))===0)return firstCharPosition;textStart=firstCharPosition+1|0}}}}});Bridge.define("Kusto.Language.Operators",{statics:{fields:{DateAndTimespan:null,StringOrDynamic:null,DynamicAddable:null,UnaryMinus:null,UnaryPlus:null,And:null,Or:null,Add:null,Subtract:null,Multiply:null,Divide:null,Modulo:null,LessThan:null,LessThanOrEqual:null,GreaterThan:null,GreaterThanOrEqual:null,Equal:null,NotEqual:null,EqualTilde:null,BangTilde:null,Has:null,HasCs:null,NotHas:null,NotHasCs:null,HasPrefix:null,HasPrefixCs:null,NotHasPrefix:null,NotHasPrefixCs:null,HasSuffix:null,HasSuffixCs:null,NotHasSuffix:null,NotHasSuffixCs:null,Like:null,LikeCs:null,NotLike:null,NotLikeCs:null,Contains:null,ContainsCs:null,NotContains:null,NotContainsCs:null,StartsWith:null,StartsWithCs:null,NotStartsWith:null,NotStartsWithCs:null,EndsWith:null,EndsWithCs:null,NotEndsWith:null,NotEndsWithCs:null,MatchRegex:null,Search:null,In:null,HasAny:null,InCs:null,NotIn:null,NotInCs:null,Between:null,NotBetween:null},props:{All:null},ctors:{init:function(){this.DateAndTimespan=System.Array.init([Kusto.Language.Symbols.ScalarTypes.DateTime,Kusto.Language.Symbols.ScalarTypes.TimeSpan],Kusto.Language.Symbols.ScalarSymbol);this.StringOrDynamic=System.Array.init([Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ScalarTypes.Dynamic],Kusto.Language.Symbols.ScalarSymbol);this.DynamicAddable=System.Array.init([Kusto.Language.Symbols.ScalarTypes.Int,Kusto.Language.Symbols.ScalarTypes.Long,Kusto.Language.Symbols.ScalarTypes.Real,Kusto.Language.Symbols.ScalarTypes.Decimal,Kusto.Language.Symbols.ScalarTypes.TimeSpan,Kusto.Language.Symbols.ScalarTypes.DateTime],Kusto.Language.Symbols.ScalarSymbol);this.UnaryMinus=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.UnaryMinus,[new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("operand",Kusto.Language.Symbols.ParameterTypeKind.Summable)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("operand",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.UnaryPlus=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.UnaryPlus,[new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("operand",Kusto.Language.Symbols.ParameterTypeKind.Summable)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("operand",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.And=Kusto.Language.Operators.Binary(Kusto.Language.Symbols.OperatorKind.And,Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ScalarTypes.Bool);this.Or=Kusto.Language.Operators.Binary(Kusto.Language.Symbols.OperatorKind.Or,Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ScalarTypes.Bool);this.Add=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Add,[new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Widest,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor4("left",Kusto.Language.Operators.DateAndTimespan),new Kusto.Language.Symbols.Parameter.$ctor4("right",Kusto.Language.Operators.DateAndTimespan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Int)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Int),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter1,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor4("right",Kusto.Language.Operators.DynamicAddable)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.$ctor4("left",Kusto.Language.Operators.DynamicAddable),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.Subtract=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Subtract,[new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Widest,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Int)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Int),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter1,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor4("right",Kusto.Language.Operators.DynamicAddable)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.$ctor4("left",Kusto.Language.Operators.DynamicAddable),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.Multiply=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Multiply,[new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Widest,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Int)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Int),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter1,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.Divide=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Divide,[new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Widest,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Real,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Int)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Int),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter1,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.Modulo=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Modulo,[new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Widest,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.TimeSpan,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.DateTime,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Dynamic,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Int)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Long,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Int),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter1,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor4(Kusto.Language.Symbols.ReturnTypeKind.Parameter0,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.LessThan=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.LessThan,[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.LessThanOrEqual=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.LessThanOrEqual,[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.GreaterThan=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.GreaterThan,[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.GreaterThanOrEqual=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.GreaterThanOrEqual,[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.TimeSpan),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.DateTime)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.Dynamic)])]);this.Equal=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Equal,[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.NotBool),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Scalar)])]);this.NotEqual=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.NotEqual,[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("left",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Scalar)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.NotBool),new Kusto.Language.Symbols.Parameter.ctor("right",Kusto.Language.Symbols.ParameterTypeKind.Scalar)])]);this.EqualTilde=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.EqualTilde);this.BangTilde=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.BangTilde);this.Has=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.Has);this.HasCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.HasCs);this.NotHas=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotHas);this.NotHasCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotHasCs);this.HasPrefix=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.HasPrefix);this.HasPrefixCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.HasPrefixCs);this.NotHasPrefix=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotHasPrefix);this.NotHasPrefixCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotHasPrefixCs);this.HasSuffix=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.HasSuffix);this.HasSuffixCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.HasSuffixCs);this.NotHasSuffix=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotHasSuffix);this.NotHasSuffixCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotHasSuffixCs);this.Like=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.Like);this.LikeCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.LikeCs);this.NotLike=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotLike);this.NotLikeCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotLikeCs);this.Contains=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.Contains);this.ContainsCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.ContainsCs);this.NotContains=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotContains);this.NotContainsCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotContainsCs);this.StartsWith=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.StartsWith);this.StartsWithCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.StartsWithCs);this.NotStartsWith=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotStartsWith);this.NotStartsWithCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotStartsWithCs);this.EndsWith=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.EndsWith);this.EndsWithCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.EndsWithCs);this.NotEndsWith=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotEndsWith);this.NotEndsWithCs=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.NotEndsWithCs);this.MatchRegex=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.MatchRegex);this.Search=Kusto.Language.Operators.StringBinary(Kusto.Language.Symbols.OperatorKind.Search);this.In=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.In,[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.NotRealOrBool),new Kusto.Language.Symbols.Parameter.ctor("table",Kusto.Language.Symbols.ParameterTypeKind.SingleColumnTable)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.$ctor3("value",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,1,32767,void 0)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.NotRealOrBool),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,32767,void 0)])]);this.HasAny=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.HasAny,[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor4("value",Kusto.Language.Operators.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("table",Kusto.Language.Symbols.ParameterTypeKind.SingleColumnTable)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor4("value",Kusto.Language.Operators.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,32767,void 0)])]);this.InCs=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.InCs,[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor4("value",Kusto.Language.Operators.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("table",Kusto.Language.Symbols.ParameterTypeKind.SingleColumnTable)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor4("value",Kusto.Language.Operators.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,32767,void 0)])]);this.NotIn=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.NotIn,[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.NotRealOrBool),new Kusto.Language.Symbols.Parameter.ctor("table",Kusto.Language.Symbols.ParameterTypeKind.SingleColumnTable)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Bool),new Kusto.Language.Symbols.Parameter.$ctor3("value",Kusto.Language.Symbols.ScalarTypes.Bool,0,void 0,void 0,!1,void 0,1,32767,void 0)]).Hide(),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.NotRealOrBool),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,32767,void 0)])]);this.NotInCs=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.NotInCs,[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor4("value",Kusto.Language.Operators.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("table",Kusto.Language.Symbols.ParameterTypeKind.SingleColumnTable)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor4("value",Kusto.Language.Operators.StringOrDynamic),new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,1,32767,void 0)])]);this.Between=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.Between,[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Parameter0),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Parameter0)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("start",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("end",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("start",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Parameter1)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Parameter1)])]);this.NotBetween=new Kusto.Language.Symbols.OperatorSymbol.ctor(Kusto.Language.Symbols.OperatorKind.NotBetween,[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Number)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Parameter0),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Parameter0)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("start",Kusto.Language.Symbols.ScalarTypes.DateTime),new Kusto.Language.Symbols.Parameter.$ctor2("end",Kusto.Language.Symbols.ScalarTypes.TimeSpan)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("value",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.$ctor2("start",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Parameter1)]),new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.$ctor2("value",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.Parameter.ctor("start",Kusto.Language.Symbols.ParameterTypeKind.Number),new Kusto.Language.Symbols.Parameter.ctor("end",Kusto.Language.Symbols.ParameterTypeKind.Parameter1)])]);this.All=System.Array.init([Kusto.Language.Operators.UnaryMinus,Kusto.Language.Operators.UnaryPlus,Kusto.Language.Operators.And,Kusto.Language.Operators.Or,Kusto.Language.Operators.Add,Kusto.Language.Operators.Subtract,Kusto.Language.Operators.Multiply,Kusto.Language.Operators.Divide,Kusto.Language.Operators.Modulo,Kusto.Language.Operators.LessThan,Kusto.Language.Operators.LessThanOrEqual,Kusto.Language.Operators.GreaterThan,Kusto.Language.Operators.GreaterThanOrEqual,Kusto.Language.Operators.Equal,Kusto.Language.Operators.NotEqual,Kusto.Language.Operators.EqualTilde,Kusto.Language.Operators.BangTilde,Kusto.Language.Operators.Has,Kusto.Language.Operators.HasCs,Kusto.Language.Operators.NotHas,Kusto.Language.Operators.NotHasCs,Kusto.Language.Operators.HasPrefix,Kusto.Language.Operators.HasPrefixCs,Kusto.Language.Operators.NotHasPrefix,Kusto.Language.Operators.NotHasPrefixCs,Kusto.Language.Operators.HasSuffix,Kusto.Language.Operators.HasSuffixCs,Kusto.Language.Operators.NotHasSuffix,Kusto.Language.Operators.NotHasSuffixCs,Kusto.Language.Operators.Like,Kusto.Language.Operators.LikeCs,Kusto.Language.Operators.NotLike,Kusto.Language.Operators.NotLikeCs,Kusto.Language.Operators.Contains,Kusto.Language.Operators.ContainsCs,Kusto.Language.Operators.NotContains,Kusto.Language.Operators.NotContainsCs,Kusto.Language.Operators.StartsWith,Kusto.Language.Operators.StartsWithCs,Kusto.Language.Operators.NotStartsWith,Kusto.Language.Operators.NotStartsWithCs,Kusto.Language.Operators.EndsWith,Kusto.Language.Operators.EndsWithCs,Kusto.Language.Operators.NotEndsWith,Kusto.Language.Operators.NotEndsWithCs,Kusto.Language.Operators.MatchRegex,Kusto.Language.Operators.Search,Kusto.Language.Operators.In,Kusto.Language.Operators.InCs,Kusto.Language.Operators.NotIn,Kusto.Language.Operators.NotInCs,Kusto.Language.Operators.Between,Kusto.Language.Operators.NotBetween,Kusto.Language.Operators.HasAny],Kusto.Language.Symbols.OperatorSymbol)}},methods:{Binary:function(kind,left,right,result){return new Kusto.Language.Symbols.OperatorSymbol.ctor(kind,[new Kusto.Language.Symbols.Signature.$ctor7(result,[new Kusto.Language.Symbols.Parameter.$ctor2("left",left),new Kusto.Language.Symbols.Parameter.$ctor2("right",right)])])},StringBinary:function(kind){return new Kusto.Language.Symbols.OperatorSymbol.ctor(kind,[new Kusto.Language.Symbols.Signature.$ctor7(Kusto.Language.Symbols.ScalarTypes.Bool,[new Kusto.Language.Symbols.Parameter.ctor("left",Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic),new Kusto.Language.Symbols.Parameter.$ctor2("right",Kusto.Language.Symbols.ScalarTypes.String)])])}}}});Bridge.define("Kusto.Language.Parsing.ApplyKind",{$kind:"enum",statics:{fields:{One:0,ZeroOrOne:1,ZeroOrMore:2}}});Bridge.define("Kusto.Language.Parsing.Parser$1",function(TInput){return{fields:{description:null},props:{Tag:null,Annotations:null,Description:{get:function(){return this.description==null&&(this.description=this.Tag==null?Kusto.Language.Parsing.GrammarBuilder.BuildGrammar(TInput,this):Kusto.Language.Parsing.GrammarBuilder.BuildGrammar(TInput,this.WithTag(null))),this.description}},IsHidden:!1,IsOptional:{get:function(){return!1}}},ctors:{init:function(){this.Tag="";this.Annotations=Kusto.Language.Utils.EmptyReadOnlyList$1(System.Object).Instance;this.IsHidden=!1}},methods:{WithTag:function(tag){var $t,clone;return tag=($t=tag,$t!=null?$t:""),Bridge.referenceEquals(tag,this.Tag)?this:(clone=this.Clone(),clone.Tag=tag,clone.Annotations=this.Annotations,clone.IsHidden=this.IsHidden,clone)},WithAnnotations:function(annotations){var list=Kusto.Language.Utils.ListExtensions.ToReadOnly(System.Object,annotations),clone;return Bridge.referenceEquals(this.Annotations,list)?this:(clone=this.Clone(),clone.Annotations=list,clone.Tag=this.Tag,clone.IsHidden=this.IsHidden,clone)},WithIsHidden:function(isHidden){if(isHidden!==this.IsHidden){var clone=this.Clone();return clone.IsHidden=isHidden,clone.Tag=this.Tag,clone.Annotations=this.Annotations,clone}return this},Hide:function(){return this.WithIsHidden(!0)},Search$1:function(input,inputStart,prevWasMissing,action){return Kusto.Language.Parsing.SafeSearcher.SearchSafe(TInput,this,input,inputStart,prevWasMissing,action)},Search:function(input,action){return this.Search$1(input,0,!1,action)}}}});Bridge.define("Kusto.Language.Parsing.Source$1",function(){return{}});Bridge.define("Kusto.Language.Parsing.CharScanners",{statics:{fields:{Letter:null,Digit:null,HexDigit:null,Whitespace:null,LineBreak:null},ctors:{init:function(){this.Letter=Kusto.Language.Parsing.Parsers$1(System.Char).Match$1(Kusto.Language.Parsing.TextFacts.IsLetter).WithTag("<letter>");this.Digit=Kusto.Language.Parsing.Parsers$1(System.Char).Match$1(Kusto.Language.Parsing.TextFacts.IsDigit).WithTag("<digit>");this.HexDigit=Kusto.Language.Parsing.Parsers$1(System.Char).Match$1(Kusto.Language.Parsing.TextFacts.IsHexDigit).WithTag("<hex-digit>");this.Whitespace=Kusto.Language.Parsing.Parsers$1(System.Char).Match$1(Kusto.Language.Parsing.TextFacts.IsWhitespace).WithTag("<whitespace>");this.LineBreak=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(13),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Char(10))]),Kusto.Language.Parsing.CharScanners.Char(10),Kusto.Language.Parsing.CharScanners.Char(8232),Kusto.Language.Parsing.CharScanners.Char(8233)]).WithTag("<line-break>")}},methods:{Chars:function(text,ignoreCase){if(ignoreCase===void 0&&(ignoreCase=!1),text.length===1)return Kusto.Language.Parsing.CharScanners.Char(text.charCodeAt(0),ignoreCase);if(ignoreCase){var lower=text.toLowerCase(),upper=text.toUpperCase();return Kusto.Language.Parsing.Parsers$1(System.Char).Match(function(source,start){var textSource=Bridge.as(source,Kusto.Language.Parsing.TextSource),ts,i,ch;if((ts=Bridge.as(source,Kusto.Language.Parsing.TextSource))!=null)return ts.Matches$1(start,text,!0)?text.length:-1;for(i=0;i<text.length;i=i+1|0)if(ch=source.Peek(start+i|0),ch!==lower.charCodeAt(i)&&ch!==upper.charCodeAt(i))return-1;return text.length}).WithTag(System.String.format("'{0}'",[text]))}return Kusto.Language.Parsing.Parsers$1(System.Char).Match(function(source,start){var textSource=Bridge.as(source,Kusto.Language.Parsing.TextSource),ts,i;if((ts=Bridge.as(source,Kusto.Language.Parsing.TextSource))!=null)return ts.Matches(start,text)?text.length:-1;for(i=0;i<text.length;i=i+1|0)if(source.Peek(start+i|0)!==text.charCodeAt(i))return-1;return text.length}).WithTag(System.String.format("'{0}'",[text]))},Char:function(ch,ignoreCase){return ignoreCase===void 0&&(ignoreCase=!1),ignoreCase?Kusto.Language.Parsing.CharScanners.MatchCharIgnoreCase(ch,String.fromCharCode(ch).toUpperCase().charCodeAt(0),String.fromCharCode(ch).toLowerCase().charCodeAt(0)).WithTag(System.String.format("'{0}'",[String.fromCharCode(ch)])):Kusto.Language.Parsing.Parsers$1(System.Char).Match$1(function(c){return c===ch}).WithTag(System.String.format("'{0}'",[String.fromCharCode(ch)]))},MatchCharIgnoreCase:function(ch,chUpper,chLower){return Kusto.Language.Parsing.Parsers$1(System.Char).Match$1(function(c){return c===ch||c===chUpper||c===chLower})}}}});Bridge.define("Kusto.Language.Parsing.CommandGrammar",{statics:{fields:{MissingCommandStatementNode:null,MissingCommandStatement:null},ctors:{init:function(){this.MissingCommandStatementNode=new Kusto.Language.Syntax.ExpressionStatement(new Kusto.Language.Syntax.BadCommand(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.DotToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingCommand()],Kusto.Language.Diagnostic)));this.MissingCommandStatement=function(){return Bridge.cast(Kusto.Language.Parsing.CommandGrammar.MissingCommandStatementNode.Clone$1(),Kusto.Language.Syntax.Statement)}}},methods:{From:function(globals){var grammar={};return globals.Cache.TryGetValue(Kusto.Language.Parsing.CommandGrammar,grammar)||(grammar.v=globals.Cache.GetOrCreate$1(Bridge.global.Kusto.Language.Parsing.CommandGrammar,function(){return Kusto.Language.Parsing.CommandGrammar.Create(globals)})),grammar.v},Create:function(globals){var q=Kusto.Language.Parsing.QueryGrammar.From(globals),commandCore=null,command=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.Command,function(){return commandCore}).WithTag$1("<command>"),unknownCommandToken=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.BarToken),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LessThanBarToken),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EndOfTextToken)])),Kusto.Language.Parsing.SyntaxParsers.AnyToken),unknownCommand=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),Bridge.global.Kusto.Language.Syntax.Command,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).OneOrMore$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),unknownCommandToken,function(tokens){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken).$ctor1)(tokens)}),function(dot,parts){return Bridge.cast(new Kusto.Language.Syntax.UnknownCommand(dot,parts),Kusto.Language.Syntax.Command)}).WithTag$1("<unknown-command>"),badCommand=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Command,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DotToken),function(dot){return Bridge.cast(new Kusto.Language.Syntax.BadCommand(dot,System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingCommand()],Kusto.Language.Diagnostic)),Kusto.Language.Syntax.Command)}).WithTag$1("<bad-command>"),grammarParser=Kusto.Language.Parsing.CommandGrammar.CreateCommandGrammarParser(globals,command),commandParsers=System.Linq.Enumerable.from(globals.Commands).select(function(c){return Kusto.Language.Parsing.CommandGrammar.CreateCommandParser(c,grammarParser)}).ToArray(Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command)),map=System.Linq.Enumerable.range(0,commandParsers.length).toDictionary(function(i){return System.Array.getItem(globals.Commands,i,Kusto.Language.Symbols.CommandSymbol)},function(i){return commandParsers[System.Array.index(i,commandParsers)]},Bridge.global.Kusto.Language.Symbols.CommandSymbol,Bridge.global.Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.Command));commandCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Command,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Best$1(Bridge.global.Kusto.Language.Syntax.Command,commandParsers),unknownCommand,badCommand]).WithTag$1("<command>");var commandOutputPipeExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Bridge.global.Kusto.Language.Syntax.Expression,command.Cast(Kusto.Language.Syntax.Expression),function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.QueryOperator,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.BarToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.QueryOperator,q.FollowingPipeElementExpression,Kusto.Language.Parsing.QueryGrammar.MissingQueryOperator),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.PipeExpression(left,op,right),Kusto.Language.Syntax.Expression)}).WithTag("<command-output-pipe>")}),commandStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Statement,commandOutputPipeExpression,function(cmd){return Bridge.cast(new Kusto.Language.Syntax.ExpressionStatement(cmd),Kusto.Language.Syntax.Statement)}),commandBlock=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),Bridge.global.Kusto.Language.Syntax.SkippedTokens,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.CommandBlock,Kusto.Language.Parsing.SyntaxParsers.SeparatedList(Bridge.global.Kusto.Language.Syntax.Statement,commandStatement,q.Statement,Kusto.Language.Syntax.SyntaxKind.SemicolonToken,Kusto.Language.Parsing.CommandGrammar.MissingCommandStatementNode,!0,!0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SkippedTokens,q.SkippedTokens),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EndOfTextToken)),function(cmd,skipped,end){return new Kusto.Language.Syntax.CommandBlock(cmd,skipped,end)});return new Kusto.Language.Parsing.CommandGrammar(commandBlock,grammarParser,map)},CreateCommandParser:function(symbol,commandGrammarParser){var commandParser=null,customParser;try{customParser=Kusto.Language.Parsing.ParserExtensions.Parse(Bridge.global.Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement),commandGrammarParser,symbol.Grammar).Value;customParser!=null&&(commandParser=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxElement,Bridge.global.Kusto.Language.Syntax.Command,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DotToken),customParser,function(dot,custom){return Bridge.cast(new Kusto.Language.Syntax.CustomCommand(symbol.Name,dot,custom),Kusto.Language.Syntax.Command)}).WithTag$1(System.String.format("<{0}>",[symbol.Name])))}finally{}return commandParser||Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(Bridge.global.Kusto.Language.Syntax.Command,function(){return!1},function(){return null})},IsHex:function(text){return System.Linq.Enumerable.from(text).all(function(c){return Kusto.Language.Parsing.TextFacts.IsHexDigit(c)})},GetCompletionKind:function(textAndOffset){if(textAndOffset.Offset===0)return Kusto.Language.Editor.CompletionKind.CommandPrefix;var kind={v:new Kusto.Language.Syntax.SyntaxKind};if(Kusto.Language.Syntax.SyntaxFacts.TryGetKind(textAndOffset.Value,kind))switch(Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind.v)){case Kusto.Language.Syntax.SyntaxCategory.Punctuation:return Kusto.Language.Editor.CompletionKind.Punctuation;case Kusto.Language.Syntax.SyntaxCategory.Operator:return Kusto.Language.Editor.CompletionKind.ScalarInfix;case Kusto.Language.Syntax.SyntaxCategory.Literal:return Kusto.Language.Editor.CompletionKind.Literal;default:return Kusto.Language.Editor.CompletionKind.Keyword}else return Kusto.Language.Editor.CompletionKind.Keyword},GetCommandGrammarParser:function(globals){var grammar=Kusto.Language.Parsing.CommandGrammar.From(globals);return grammar.commandGrammarParser},CreateCommandGrammarParser:function(globals,command){var q=Kusto.Language.Parsing.QueryGrammar.From(globals),StringName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Name,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.TokenName(token),Kusto.Language.Syntax.Name)}),GuidLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Convert$3(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$1(function(t){return Kusto.Language.Parsing.CommandGrammar.IsHex(t.Text)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$1(function(t){return t.Kind===Kusto.Language.Syntax.SyntaxKind.MinusToken&&t.Trivia.length===0}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$1(function(t){return Kusto.Language.Parsing.CommandGrammar.IsHex(t.Text)&&t.Trivia.length===0})]))]),function(list){var text=System.String.concat(Bridge.toArray(System.Linq.Enumerable.from(list).select(function(e){return e.Text})));return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Literal(System.Array.getItem(list,0,Kusto.Language.Parsing.LexicalToken).Trivia,text,Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken)),Kusto.Language.Syntax.Expression)}).WithTag$1("<guid>"),Name=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Name,[q.IdentifierName,q.BrackettedName,q.BracedName,StringName]).WithTag$1("<name>"),ColumnNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.Name,Bridge.global.Kusto.Language.Syntax.Expression,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,Kusto.Language.Symbols.SymbolMatch.Column),Kusto.Language.Syntax.Expression)}),Kusto.Language.Editor.CompletionHint.Column).WithTag$1("<column>"),TableNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.Name,Bridge.global.Kusto.Language.Syntax.Expression,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,Kusto.Language.Symbols.SymbolMatch.Table),Kusto.Language.Syntax.Expression)}),Kusto.Language.Editor.CompletionHint.Table).WithTag$1("<table>"),DatabaseNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.Name,Bridge.global.Kusto.Language.Syntax.Expression,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,Kusto.Language.Symbols.SymbolMatch.Database),Kusto.Language.Syntax.Expression)}),Kusto.Language.Editor.CompletionHint.Database).WithTag$1("<database>"),ClusterNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.Name,Bridge.global.Kusto.Language.Syntax.Expression,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,Kusto.Language.Symbols.SymbolMatch.Cluster),Kusto.Language.Syntax.Expression)}),Kusto.Language.Editor.CompletionHint.Cluster).WithTag$1("<cluster>"),DatabaseFunctionNameReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.Name,Bridge.global.Kusto.Language.Syntax.Expression,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,Kusto.Language.Symbols.SymbolMatch.Function),Kusto.Language.Syntax.Expression)}),Kusto.Language.Editor.CompletionHint.DatabaseFunction).WithTag$1("<function>"),DatabaseOrTableReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.Name,Bridge.global.Kusto.Language.Syntax.Expression,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,18),Kusto.Language.Syntax.Expression)}),49152).WithTag$1("<database_or_table>"),DatabaseTableNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,DatabaseOrTableReference,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$3(".").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,TableNameReference,Kusto.Language.Parsing.QueryGrammar.MissingNameReference),function(expr,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(expr,dot,selector),Kusto.Language.Syntax.Expression)})}).WithTag$1("<database_table>"),DatabaseOrTableOrColumnReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.Name,Bridge.global.Kusto.Language.Syntax.Expression,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,19),Kusto.Language.Syntax.Expression)}),57344).WithTag$1("<database_or_table_or_column>"),DatabaseTableColumnNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,DatabaseOrTableOrColumnReference,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$3(".").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,DatabaseOrTableOrColumnReference,Kusto.Language.Parsing.QueryGrammar.MissingNameReference),function(expr,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(expr,dot,selector),Kusto.Language.Syntax.Expression)})}).WithTag$1("<database_table_column>"),TableOrColumnReference=Kusto.Language.Parsing.SyntaxParsers.WithCompletionHint(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.Name,Bridge.global.Kusto.Language.Syntax.Expression,Name,function(name){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(name,3),Kusto.Language.Syntax.Expression)}),24576).WithTag$1("<table_or_column>"),TableColumnNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,TableOrColumnReference,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token$3(".").Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,TableOrColumnReference,Kusto.Language.Parsing.QueryGrammar.MissingNameReference),function(expr,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(expr,dot,selector),Kusto.Language.Syntax.Expression)})}).WithTag$1("<table_column>"),KustoStringLiteralInfo=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(q.StringLiteral.Cast(Kusto.Language.Syntax.SyntaxElement),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Literal,!1),function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingStringLiteral(),Kusto.Language.Syntax.SyntaxElement)}),KustoGuidLiteralInfo=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(GuidLiteral.Cast(Kusto.Language.Syntax.SyntaxElement),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Literal,!1),function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingValue(),Kusto.Language.Syntax.SyntaxElement)}),KustoValueInfo=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxElement,[GuidLiteral.Cast(Kusto.Language.Syntax.SyntaxElement),q.Literal.Cast(Kusto.Language.Syntax.SyntaxElement)]),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Literal,!1),function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingValue(),Kusto.Language.Syntax.SyntaxElement)}),KustoTypeInfo=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(q.ParamTypeExtended.Cast(Kusto.Language.Syntax.SyntaxElement),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Syntax,!1),function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingType(),Kusto.Language.Syntax.SyntaxElement)}),NameDeclarationOrStringLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[q.SimpleNameDeclarationExpression,q.StringLiteral]),KustoNameDeclarationInfo=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(NameDeclarationOrStringLiteral.Cast(Kusto.Language.Syntax.SyntaxElement),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.None,!1),function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameDeclaration(),Kusto.Language.Syntax.SyntaxElement)}),KustoColumnNameInfo=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(ColumnNameReference.Cast(Kusto.Language.Syntax.SyntaxElement),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Column,!1),function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameReference(),Kusto.Language.Syntax.SyntaxElement)}),KustoTableNameInfo=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(TableNameReference.Cast(Kusto.Language.Syntax.SyntaxElement),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Table,!1),function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameReference(),Kusto.Language.Syntax.SyntaxElement)}),KustoDatabaseNameInfo=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(DatabaseNameReference.Cast(Kusto.Language.Syntax.SyntaxElement),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Database,!1),function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameReference(),Kusto.Language.Syntax.SyntaxElement)}),KustoDatabaseTableNameInfo=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(DatabaseTableNameReference.Cast(Kusto.Language.Syntax.SyntaxElement),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Table,!1),function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameReference(),Kusto.Language.Syntax.SyntaxElement)}),KustoClusterNameInfo=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(ClusterNameReference.Cast(Kusto.Language.Syntax.SyntaxElement),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Cluster,!1),function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameReference(),Kusto.Language.Syntax.SyntaxElement)}),KustoFunctionNameInfo=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(DatabaseFunctionNameReference.Cast(Kusto.Language.Syntax.SyntaxElement),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Function),function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameReference(),Kusto.Language.Syntax.SyntaxElement)}),KustoDatabaseTableColumnNameInfo=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(DatabaseTableColumnNameReference.Cast(Kusto.Language.Syntax.SyntaxElement),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Column,!1),function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameReference(),Kusto.Language.Syntax.SyntaxElement)}),KustoTableColumnNameInfo=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(TableColumnNameReference.Cast(Kusto.Language.Syntax.SyntaxElement),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Column,!1),function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameReference(),Kusto.Language.Syntax.SyntaxElement)}),KustoFunctionDeclaration=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.FunctionParameters,Bridge.global.Kusto.Language.Syntax.FunctionBody,Bridge.global.Kusto.Language.Syntax.SyntaxElement,q.FunctionParameters,q.FunctionBody,function(p,b){return Bridge.cast(new Kusto.Language.Syntax.FunctionDeclaration(null,p,b),Kusto.Language.Syntax.SyntaxElement)}),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Syntax,!1),function(){return new Kusto.Language.Syntax.FunctionDeclaration(null,new Kusto.Language.Syntax.FunctionParameters(Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)).Empty(),Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)),new Kusto.Language.Syntax.FunctionBody(Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)).Empty(),null,null,Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken)))}),CommandInput=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxElement,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DotToken),command.Cast(Kusto.Language.Syntax.SyntaxElement)),q.StatementList.Cast(Kusto.Language.Syntax.SyntaxElement)]),KustoCommandInputInfo=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(CommandInput,new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Query),function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingExpression(),Kusto.Language.Syntax.SyntaxElement)}),InputTextTokens=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ZeroOrMore(Kusto.Language.Parsing.SyntaxParsers.AnyTokenButEnd),InputText=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,function(source,start){return InputTextTokens.Scan(source,start)},function(source,start,length){var builder=new System.Text.StringBuilder,token=source.Peek(start),trivia=token.Trivia,i;for(builder.append(source.Peek(start).Text),i=1;i<length;i=i+1|0)token=source.Peek(start+i|0),builder.append(token.Trivia),builder.append(token.Text);return Kusto.Language.Syntax.SyntaxToken.Other(trivia,builder.toString(),Kusto.Language.Syntax.SyntaxKind.InputTextToken)}),KustoInputText=new Kusto.Language.Parsing.CommandGrammar.ParserInfo(InputText.Cast(Kusto.Language.Syntax.SyntaxElement),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.None),function(){return Bridge.cast(Kusto.Language.Syntax.SyntaxToken.Other("","",Kusto.Language.Syntax.SyntaxKind.InputTextToken),Kusto.Language.Syntax.SyntaxElement)}),grammar=Kusto.Language.Parsing.GrammarGrammar.CreateParser(Bridge.global.Kusto.Language.Parsing.CommandGrammar.ParserInfo,function(name){switch(name){case"value":return KustoValueInfo;case"timespan":return KustoValueInfo;case"datetime":return KustoValueInfo;case"string":return KustoStringLiteralInfo;case"bool":return KustoValueInfo;case"long":return KustoValueInfo;case"int":return KustoValueInfo;case"decimal":return KustoValueInfo;case"real":return KustoValueInfo;case"type":return KustoTypeInfo;case"guid":return KustoGuidLiteralInfo;case"name":return KustoNameDeclarationInfo;case"column":return KustoColumnNameInfo;case"table_column":return KustoTableColumnNameInfo;case"database_table_column":return KustoDatabaseTableColumnNameInfo;case"table":return KustoTableNameInfo;case"database_table":return KustoDatabaseTableNameInfo;case"database":return KustoDatabaseNameInfo;case"cluster":return KustoClusterNameInfo;case"function":return KustoFunctionNameInfo;case"function_declaration":return KustoFunctionDeclaration;case"input_query":return KustoCommandInputInfo;case"input_data":return KustoInputText;default:return null}},function(textAndOffset){return new Kusto.Language.Parsing.CommandGrammar.ParserInfo(Kusto.Language.Parsing.SyntaxParsers.Token$3(textAndOffset.Value,Kusto.Language.Parsing.CommandGrammar.GetCompletionKind(textAndOffset)).Cast(Kusto.Language.Syntax.SyntaxElement),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(Kusto.Language.Editor.CompletionHint.Syntax,!1),function(){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$3(textAndOffset.Value)},!0)},function(elem){return new Kusto.Language.Parsing.CommandGrammar.ParserInfo(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SyntaxElement,elem.Parser),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(elem.Element.CompletionHint,!0),elem.Missing)},function(elem){return new Kusto.Language.Parsing.CommandGrammar.ParserInfo(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.SyntaxElement,elem.Parser,elem.Missing),elem.Element,elem.Missing)},function(elem,tag){return elem.WithElement(elem.Element.WithName(tag))},function(list){var i,t,p,parser;if(System.Array.getCount(list,Kusto.Language.Parsing.CommandGrammar.ParserInfo)===1)return System.Array.getItem(list,0,Kusto.Language.Parsing.CommandGrammar.ParserInfo);var shape=System.Linq.Enumerable.from(list).select(function(t){return t.Element}).ToArray(Kusto.Language.Syntax.CustomElementDescriptor),parsers=new(System.Collections.Generic.List$1(Kusto.Language.Parsing.Parser$1(Kusto.Language.Parsing.LexicalToken)).ctor),term=!0;for(i=0;i<System.Array.getCount(list,Kusto.Language.Parsing.CommandGrammar.ParserInfo);i=i+1|0)t=System.Array.getItem(list,i,Kusto.Language.Parsing.CommandGrammar.ParserInfo),term=!!(term&i===0||t.IsTerm),p=term||t.Parser.IsOptional?t.Parser:Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.SyntaxElement,t.Parser,t.Missing),parsers.add(p);return parser=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Produce(Bridge.global.Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Sequence(parsers.ToArray()),function(elemList){return new Kusto.Language.Syntax.CustomNode.ctor(shape,System.Linq.Enumerable.from(elemList).select(function(x){return Bridge.cast(x,Kusto.Language.Syntax.SyntaxElement)}).ToArray(Kusto.Language.Syntax.SyntaxElement))}),new Kusto.Language.Parsing.CommandGrammar.ParserInfo(parser,System.Array.getItem(list,0,Kusto.Language.Parsing.CommandGrammar.ParserInfo).Element,function(){return new Kusto.Language.Syntax.CustomNode.ctor(shape,System.Linq.Enumerable.from(list).select(function(t1){return t1.Missing()}).ToArray(Kusto.Language.Syntax.SyntaxElement))})},function(list){return new Kusto.Language.Parsing.CommandGrammar.ParserInfo(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Best$1(Bridge.global.Kusto.Language.Syntax.SyntaxElement,System.Linq.Enumerable.from(list).select(function(t){return t.Parser}).ToArray(Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement))),System.Array.getItem(list,0,Kusto.Language.Parsing.CommandGrammar.ParserInfo).Element,System.Array.getItem(list,0,Kusto.Language.Parsing.CommandGrammar.ParserInfo).Missing,System.Array.getItem(list,0,Kusto.Language.Parsing.CommandGrammar.ParserInfo).IsTerm)},function(elem){return new Kusto.Language.Parsing.CommandGrammar.ParserInfo(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).List(Bridge.global.Kusto.Language.Syntax.SyntaxElement,Bridge.global.Kusto.Language.Syntax.SyntaxElement,elem.Parser,elem.Missing,!1,function(elements){return Bridge.cast(new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxElement).ctor)(System.Linq.Enumerable.from(elements).ToArray()),Kusto.Language.Syntax.SyntaxElement)}),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(elem.Element.CompletionHint,!1),function(){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxElement).ctor)(System.Array.init([],Kusto.Language.Syntax.SyntaxElement))})},function(elem){return new Kusto.Language.Parsing.CommandGrammar.ParserInfo(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).List(Bridge.global.Kusto.Language.Syntax.SyntaxElement,Bridge.global.Kusto.Language.Syntax.SyntaxElement,elem.Parser,elem.Missing,!0,function(elements){return Bridge.cast(new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxElement).ctor)(System.Linq.Enumerable.from(elements).ToArray()),Kusto.Language.Syntax.SyntaxElement)}),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(elem.Element.CompletionHint,!1),function(){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxElement).ctor)(System.Array.init([elem.Missing()],Kusto.Language.Syntax.SyntaxElement))})},function(elem,sep){return new Kusto.Language.Parsing.CommandGrammar.ParserInfo(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).SeparatedList$1(Bridge.global.Kusto.Language.Syntax.SyntaxElement,Bridge.global.Kusto.Language.Syntax.SyntaxElement,elem.Parser,sep.Parser,elem.Missing,sep.Missing,!1,!1,function(elements){return Kusto.Language.Parsing.SyntaxParsers.MakeSeparatedList(Bridge.global.Kusto.Language.Syntax.SyntaxElement,System.Linq.Enumerable.from(elements).ToArray())}),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(elem.Element.CompletionHint,!1),function(){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)(System.Array.init([],Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)))})},function(elem,sep){return new Kusto.Language.Parsing.CommandGrammar.ParserInfo(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).SeparatedList$1(Bridge.global.Kusto.Language.Syntax.SyntaxElement,Bridge.global.Kusto.Language.Syntax.SyntaxElement,elem.Parser,sep.Parser,elem.Missing,sep.Missing,!0,!1,function(elements){return Kusto.Language.Parsing.SyntaxParsers.MakeSeparatedList(Bridge.global.Kusto.Language.Syntax.SyntaxElement,System.Linq.Enumerable.from(elements).ToArray())}),new Kusto.Language.Syntax.CustomElementDescriptor.ctor(elem.Element.CompletionHint,!1),function(){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)).ctor)(System.Array.init([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement))(elem.Missing())],Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.SyntaxElement)))})});return Kusto.Language.Parsing.Parsers$1(System.Char).Rule(Bridge.global.Kusto.Language.Parsing.CommandGrammar.ParserInfo,Bridge.global.Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxElement),grammar,function(g){return g.Parser})}}},fields:{commandGrammarParser:null,commandToParserMap:null},props:{CommandBlock:null},ctors:{ctor:function(commandBlockParser,commandGrammarParser,commandToParserMap){this.$initialize();this.CommandBlock=commandBlockParser;this.commandGrammarParser=commandGrammarParser;this.commandToParserMap=commandToParserMap}},methods:{GetCommandParser:function(command){var parser={};return this.commandToParserMap.tryGetValue(command,parser),parser.v}}});Bridge.define("Kusto.Language.Parsing.CommandGrammar.ParserInfo",{$kind:"nested class",props:{Parser:null,Element:null,Missing:null,IsTerm:!1},ctors:{ctor:function(parser,element,missing,isTerm){isTerm===void 0&&(isTerm=!1);this.$initialize();this.Parser=parser;this.Element=element;this.Missing=missing;this.IsTerm=isTerm}},methods:{WithElement:function(element){return Bridge.referenceEquals(this.Element,element)?this:new Kusto.Language.Parsing.CommandGrammar.ParserInfo(this.Parser,element,this.Missing,this.IsTerm)}}});Bridge.define("Kusto.Language.Parsing.DirectiveGrammar",{statics:{fields:{DirectiveBlock:null},ctors:{init:function(){this.DirectiveBlock=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.DirectiveBlock,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.DirectiveToken),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.AnyTokenButEnd),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EndOfTextToken)),function(directive,list,end){return new Kusto.Language.Syntax.DirectiveBlock(directive,list,end)})}}}});Bridge.define("Kusto.Language.Parsing.GrammarBuilder",{statics:{methods:{BuildGrammar:function(TInput,parser,showRequired){showRequired===void 0&&(showRequired=!1);var builder=new(Kusto.Language.Parsing.GrammarBuilder.Builder$1(TInput))(showRequired);return builder.Visit(parser),builder.toString()}}}});Bridge.define("Kusto.Language.Parsing.ParserVisitor$1",function(){return{}});Bridge.define("Kusto.Language.Parsing.GrammarGrammar",{statics:{methods:{CreateParser:function(TResult,getRule,createTerm,createOptional,createRequired,createTagged,createSequence,createAlternation,createZeroOrMore,createOneOrMore,createZeroOrMoreSeparated,createOneOrMoreSeparated){var Token=null,TokenText=null,elementCore=null,element=Kusto.Language.Parsing.Parsers$1(System.Char).Forward(TResult,function(){return elementCore}),WhitespaceCount=Kusto.Language.Parsing.Parsers$1(System.Char).Count(Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.CharScanners.Whitespace)),IdentifierScan=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Letter,Kusto.Language.Parsing.CharScanners.Char(95)]),Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Letter,Kusto.Language.Parsing.CharScanners.Digit,Kusto.Language.Parsing.CharScanners.Char(95),Kusto.Language.Parsing.CharScanners.Char(45)]))]),IdentifierText=Kusto.Language.Parsing.Parsers$1(System.Char).Text(IdentifierScan),IdentifierTextAndOffset=Kusto.Language.Parsing.Parsers$1(System.Char).TextAndOffset(IdentifierScan),StringLiteralScan=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(39),Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(System.Char).Not(Kusto.Language.Parsing.CharScanners.Char(39))),Kusto.Language.Parsing.CharScanners.Char(39)]),StringLiteralText=Kusto.Language.Parsing.Parsers$1(System.Char).Text(StringLiteralScan),StringLiteralTextAndOffset=Kusto.Language.Parsing.Parsers$1(System.Char).TextAndOffset(StringLiteralScan),Identifier=Kusto.Language.Parsing.Parsers$1(System.Char).Rule$1(System.Int32,System.String,System.String,WhitespaceCount,IdentifierText,function(ws,tx){return tx}),IdentifierAndOffset=Kusto.Language.Parsing.Parsers$1(System.Char).Rule$1(System.Int32,Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),WhitespaceCount,IdentifierTextAndOffset,function(ws,tx){return tx}),StringLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).Rule$1(System.Int32,System.String,System.String,WhitespaceCount,StringLiteralText,function(ws,tx){return tx}),StringLiteralAndOffset=Kusto.Language.Parsing.Parsers$1(System.Char).Rule$1(System.Int32,Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),WhitespaceCount,StringLiteralTextAndOffset,function(ws,tx){return tx}),term=Kusto.Language.Parsing.Parsers$1(System.Char).First$1(TResult,[Kusto.Language.Parsing.Parsers$1(System.Char).Rule(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),TResult,IdentifierAndOffset,function(text){return createTerm(text)}),Kusto.Language.Parsing.Parsers$1(System.Char).Rule(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),TResult,StringLiteralAndOffset,function(text){return createTerm(new(Kusto.Language.Parsing.OffsetValue$1(System.String).$ctor1)(text.Offset,Kusto.Language.KustoFacts.GetStringLiteralValue(text.Value)))})]).WithTag$1("<term>");TokenText=function(text){return Kusto.Language.Parsing.Parsers$1(System.Char).Convert(System.String,Kusto.Language.Parsing.CharScanners.Chars(text),text)};Token=function(text){return Kusto.Language.Parsing.Parsers$1(System.Char).Rule$1(System.Int32,System.String,System.String,WhitespaceCount,TokenText(text),function(ws,tx){return tx})};var rule=Kusto.Language.Parsing.Parsers$1(System.Char).Rule$2(System.String,System.String,System.String,TResult,Token("<"),Kusto.Language.Parsing.Parsers$1(System.Char).Text(Kusto.Language.Parsing.Parsers$1(System.Char).OneOrMore(Kusto.Language.Parsing.Parsers$1(System.Char).Not(Token(">")))),Token(">"),function(open,name){var ruleValue=getRule(name);if(ruleValue==null)throw new System.InvalidOperationException.$ctor1(System.String.format("Unknown rule <{0}>",[name]));else return ruleValue}).WithTag$1("<rule>"),sequence=Kusto.Language.Parsing.Parsers$1(System.Char).Produce$1(TResult,TResult,Kusto.Language.Parsing.Parsers$1(System.Char).OneOrMore(element),function(list){return System.Array.getCount(list,TResult)===0?System.Array.getItem(list,0,TResult):createSequence(System.Linq.Enumerable.from(list).toList(TResult))}).WithTag$1("<sequence>"),alternation=Kusto.Language.Parsing.Parsers$1(System.Char).SeparatedList$1(System.Object,TResult,sequence.Cast(System.Object),Token("|").Cast(System.Object),function(){return null},function(){return null},!1,!1,function(list){return System.Array.getCount(list,System.Object)>1?createAlternation(System.Linq.Enumerable.from(list).ofType(TResult).ToArray(TResult)):Bridge.cast(System.Array.getItem(list,0,System.Object),TResult)}).WithTag$1("<alternation>"),separator=Kusto.Language.Parsing.Parsers$1(System.Char).Rule$1(System.String,TResult,TResult,Token(","),term,function(colon,word){return word}),repeatition=Kusto.Language.Parsing.Parsers$1(System.Char).Rule$4(System.String,TResult,TResult,System.String,System.String,TResult,Token("{"),alternation,Kusto.Language.Parsing.Parsers$1(System.Char).Optional$1(TResult,separator),Token("}"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional$1(System.String,Kusto.Language.Parsing.Parsers$1(System.Char).First$1(System.String,[Token("+"),Token("*")])),function(open,elem,sep,close,kind){var zeroOrMore=kind==null||Bridge.referenceEquals(kind,"*");return zeroOrMore?sep!=null?createZeroOrMoreSeparated(elem,sep):createZeroOrMore(elem):sep!=null?createOneOrMoreSeparated(elem,sep):createOneOrMore(elem)}).WithTag$1("<repetition>"),grouped=Kusto.Language.Parsing.Parsers$1(System.Char).Rule$2(System.String,TResult,System.String,TResult,Token("("),alternation,Token(")"),function(open,parser){return parser}).WithTag$1("<grouping>"),optional=Kusto.Language.Parsing.Parsers$1(System.Char).Rule$2(System.String,TResult,System.String,TResult,Token("["),alternation,Token("]"),function(open,tuplet){return createOptional(tuplet)}).WithTag$1("<optional>"),primaryElement=Kusto.Language.Parsing.Parsers$1(System.Char).First$1(TResult,[term,rule,grouped]).WithTag$1("<element>"),postfixPrimary=Kusto.Language.Parsing.Parsers$1(System.Char).First$1(TResult,[optional,repeatition,Kusto.Language.Parsing.Parsers$1(System.Char).ApplyOptional(TResult,primaryElement,function(_left){return Kusto.Language.Parsing.Parsers$1(System.Char).First$2(TResult,[Kusto.Language.Parsing.Parsers$1(System.Char).Rule$10(TResult,System.String,TResult,_left,Token("!"),function(left){return createRequired(left)}).WithTag("<required>"),Kusto.Language.Parsing.Parsers$1(System.Char).Rule$10(TResult,System.String,TResult,_left,Token("?"),function(left){return createOptional(left)}).WithTag("<optional>"),Kusto.Language.Parsing.Parsers$1(System.Char).Rule$10(TResult,System.String,TResult,_left,Token("*"),function(left){return createZeroOrMore(left)}).WithTag("<zero-or-more>"),Kusto.Language.Parsing.Parsers$1(System.Char).Rule$10(TResult,System.String,TResult,_left,Token("+"),function(left){return createOneOrMore(left)}).WithTag("<one-or-more>")])})]),taggedPrimary=Kusto.Language.Parsing.Parsers$1(System.Char).First$1(TResult,[Kusto.Language.Parsing.Parsers$1(System.Char).Rule$2(System.String,System.String,TResult,TResult,Identifier,Token("="),postfixPrimary,function(id,eq,elem){return createTagged(elem,id)}),Kusto.Language.Parsing.Parsers$1(System.Char).Rule$2(System.String,System.String,TResult,TResult,StringLiteral,Token("="),postfixPrimary,function(str,eq,elem){return createTagged(elem,Kusto.Language.KustoFacts.GetStringLiteralValue(str))}),Kusto.Language.Parsing.Parsers$1(System.Char).ApplyOptional(TResult,postfixPrimary,function(_left){return Kusto.Language.Parsing.Parsers$1(System.Char).First$2(TResult,[Kusto.Language.Parsing.Parsers$1(System.Char).Rule$11(TResult,System.String,System.String,TResult,_left,Token(":"),Identifier,function(left,colon,id){return createTagged(left,id)}),Kusto.Language.Parsing.Parsers$1(System.Char).Rule$11(TResult,System.String,System.String,TResult,_left,Token(":"),StringLiteral,function(left,colon,str){return createTagged(left,Kusto.Language.KustoFacts.GetStringLiteralValue(str))})])}).WithTag$1("<tagged>")]);return elementCore=taggedPrimary,sequence}}}});Bridge.define("Kusto.Language.Parsing.IToken",{$kind:"interface"});Bridge.define("Kusto.Language.Parsing.LexicalGrammar",{statics:{fields:{Identifier:null,ClientParameter:null,SingleLineComment:null,Trivia:null,NonHexIntegerNumber:null,HexIntegerPrefix:null,HexIntegerNumber:null,LongLiteral:null,PlusOrMinus:null,Exponent:null,RealLiteral:null,Goo:null,PrefixedLongLiteral:null,PrefixedIntLiteral:null,PrefixedRealLiteral:null,PrefixedDecimalLiteral:null,PrefixedBooleanLiteral:null,BooleanLiteral:null,PrefixedDateTimeLiteral:null,PrefixedTimespanLiteral:null,TimespanLiteral:null,PrefixedGuidLiteral:null,TwoHexDigits:null,FourHexDigits:null,EightHexDigits:null,ZeroToThree:null,ZeroToSeven:null,Escape:null,HiddenPrefix:null,SingleQuoteStringLiteral:null,DoubleQuoteStringLiteral:null,Directive:null,KeywordOrPunctuationInfo:null,Token:null,EndOfText:null,TokenOrEnd:null,Tokens:null,TokensAndEnd:null},ctors:{init:function(){this.Identifier=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Char(36),Kusto.Language.Parsing.CharScanners.Char(95),Kusto.Language.Parsing.CharScanners.Letter]),Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Char(95),Kusto.Language.Parsing.CharScanners.Letter,Kusto.Language.Parsing.CharScanners.Digit]))]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.Parsers$1(System.Char).OneOrMore(Kusto.Language.Parsing.CharScanners.Digit),Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Char(95),Kusto.Language.Parsing.CharScanners.Letter]),Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Char(95),Kusto.Language.Parsing.CharScanners.Letter,Kusto.Language.Parsing.CharScanners.Digit]))])]);this.ClientParameter=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(123),Kusto.Language.Parsing.LexicalGrammar.Identifier,Kusto.Language.Parsing.CharScanners.Char(125)]);this.SingleLineComment=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("//"),Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(System.Char).Not(Kusto.Language.Parsing.CharScanners.LineBreak))]);this.Trivia=Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).OneOrMore(Kusto.Language.Parsing.CharScanners.Whitespace),Kusto.Language.Parsing.LexicalGrammar.SingleLineComment]));this.NonHexIntegerNumber=Kusto.Language.Parsing.Parsers$1(System.Char).OneOrMore(Kusto.Language.Parsing.CharScanners.Digit);this.HexIntegerPrefix=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Chars("0x"),Kusto.Language.Parsing.CharScanners.Chars("0X")]);this.HexIntegerNumber=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.LexicalGrammar.HexIntegerPrefix,Kusto.Language.Parsing.Parsers$1(System.Char).OneOrMore(Kusto.Language.Parsing.CharScanners.HexDigit)]);this.LongLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.LexicalGrammar.NonHexIntegerNumber,Kusto.Language.Parsing.LexicalGrammar.HexIntegerNumber]);this.PlusOrMinus=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Char(43),Kusto.Language.Parsing.CharScanners.Char(45)]);this.Exponent=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Char(101),Kusto.Language.Parsing.CharScanners.Char(69)]),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.LexicalGrammar.PlusOrMinus),Kusto.Language.Parsing.Parsers$1(System.Char).OneOrMore(Kusto.Language.Parsing.CharScanners.Digit)]);this.RealLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.LexicalGrammar.NonHexIntegerNumber,Kusto.Language.Parsing.CharScanners.Char(46),Kusto.Language.Parsing.Parsers$1(System.Char).Fails(Kusto.Language.Parsing.CharScanners.Char(46)),Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.CharScanners.Digit),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.LexicalGrammar.Exponent)]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.LexicalGrammar.NonHexIntegerNumber,Kusto.Language.Parsing.LexicalGrammar.Exponent])]);this.Goo=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(40),Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(System.Char).Not(Kusto.Language.Parsing.CharScanners.Char(41))),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Char(41))]);this.PrefixedLongLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("long"),Kusto.Language.Parsing.LexicalGrammar.Goo])]);this.PrefixedIntLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("int"),Kusto.Language.Parsing.LexicalGrammar.Goo])]);this.PrefixedRealLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("real"),Kusto.Language.Parsing.LexicalGrammar.Goo]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("double"),Kusto.Language.Parsing.LexicalGrammar.Goo])]);this.PrefixedDecimalLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("decimal"),Kusto.Language.Parsing.LexicalGrammar.Goo]);this.PrefixedBooleanLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("bool"),Kusto.Language.Parsing.LexicalGrammar.Goo]);this.BooleanLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Chars("true"),Kusto.Language.Parsing.CharScanners.Chars("false"),Kusto.Language.Parsing.CharScanners.Chars("TRUE"),Kusto.Language.Parsing.CharScanners.Chars("FALSE"),Kusto.Language.Parsing.CharScanners.Chars("True"),Kusto.Language.Parsing.CharScanners.Chars("False")]);this.PrefixedDateTimeLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("datetime"),Kusto.Language.Parsing.LexicalGrammar.Goo]);this.PrefixedTimespanLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("time"),Kusto.Language.Parsing.LexicalGrammar.Goo]);this.TimespanLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.LexicalGrammar.NonHexIntegerNumber,Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(109),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("in"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Chars("ute"))]),Kusto.Language.Parsing.CharScanners.Chars("inutes")]))]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(115),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("ec"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Chars("ond"))]),Kusto.Language.Parsing.CharScanners.Chars("econds")]))]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(100),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("ay"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Char(115))]))]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(104),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("our"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Char(115))]))]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("hr"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Char(115))]),Kusto.Language.Parsing.CharScanners.Chars("ms"),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("milli"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("s"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("ec"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("ond"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Char(115))]))]))]))]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("micro"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("s"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("ec"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("ond"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Char(115))]))]))]))]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("nano"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("s"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("ec"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("ond"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Char(115))]))]))]))]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("tick"),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Char(115))])])]);this.PrefixedGuidLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("guid"),Kusto.Language.Parsing.LexicalGrammar.Goo]);this.TwoHexDigits=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.HexDigit,Kusto.Language.Parsing.CharScanners.HexDigit]);this.FourHexDigits=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.HexDigit,Kusto.Language.Parsing.CharScanners.HexDigit,Kusto.Language.Parsing.CharScanners.HexDigit,Kusto.Language.Parsing.CharScanners.HexDigit]);this.EightHexDigits=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.LexicalGrammar.FourHexDigits,Kusto.Language.Parsing.LexicalGrammar.FourHexDigits]);this.ZeroToThree=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Char(48),Kusto.Language.Parsing.CharScanners.Char(49),Kusto.Language.Parsing.CharScanners.Char(50),Kusto.Language.Parsing.CharScanners.Char(51)]);this.ZeroToSeven=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.LexicalGrammar.ZeroToThree,Kusto.Language.Parsing.CharScanners.Char(52),Kusto.Language.Parsing.CharScanners.Char(53),Kusto.Language.Parsing.CharScanners.Char(54),Kusto.Language.Parsing.CharScanners.Char(55)]);this.Escape=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(92),Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Char(39),Kusto.Language.Parsing.CharScanners.Char(34),Kusto.Language.Parsing.CharScanners.Char(92),Kusto.Language.Parsing.CharScanners.Char(97),Kusto.Language.Parsing.CharScanners.Char(98),Kusto.Language.Parsing.CharScanners.Char(102),Kusto.Language.Parsing.CharScanners.Char(110),Kusto.Language.Parsing.CharScanners.Char(114),Kusto.Language.Parsing.CharScanners.Char(116),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(117),Kusto.Language.Parsing.LexicalGrammar.FourHexDigits]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(85),Kusto.Language.Parsing.LexicalGrammar.EightHexDigits]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(120),Kusto.Language.Parsing.LexicalGrammar.TwoHexDigits]),Kusto.Language.Parsing.CharScanners.Char(118),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.LexicalGrammar.ZeroToThree,Kusto.Language.Parsing.LexicalGrammar.ZeroToSeven,Kusto.Language.Parsing.LexicalGrammar.ZeroToSeven]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.LexicalGrammar.ZeroToSeven,Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.LexicalGrammar.ZeroToSeven)])])]);this.HiddenPrefix=Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Char(104),Kusto.Language.Parsing.CharScanners.Char(72)]);this.SingleQuoteStringLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.LexicalGrammar.HiddenPrefix),Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(39),Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.LexicalGrammar.Escape,Kusto.Language.Parsing.Parsers$1(System.Char).Not(Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Char(92),Kusto.Language.Parsing.CharScanners.Char(39),Kusto.Language.Parsing.CharScanners.Char(13),Kusto.Language.Parsing.CharScanners.Char(10)]))])),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Char(39))]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars("@'"),Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Chars("''"),Kusto.Language.Parsing.Parsers$1(System.Char).Not(Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Char(39),Kusto.Language.Parsing.CharScanners.Char(13),Kusto.Language.Parsing.CharScanners.Char(10)]))])),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Char(39))])])]);this.DoubleQuoteStringLiteral=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.LexicalGrammar.HiddenPrefix),Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(34),Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.LexicalGrammar.Escape,Kusto.Language.Parsing.Parsers$1(System.Char).Not(Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Char(92),Kusto.Language.Parsing.CharScanners.Char(34),Kusto.Language.Parsing.CharScanners.Char(13),Kusto.Language.Parsing.CharScanners.Char(10)]))])),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Char(34))]),Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Chars('@"'),Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Chars('""'),Kusto.Language.Parsing.Parsers$1(System.Char).Not(Kusto.Language.Parsing.Parsers$1(System.Char).Or([Kusto.Language.Parsing.CharScanners.Char(34),Kusto.Language.Parsing.CharScanners.Char(13),Kusto.Language.Parsing.CharScanners.Char(10)]))])),Kusto.Language.Parsing.Parsers$1(System.Char).Optional(Kusto.Language.Parsing.CharScanners.Char(34))])])]);this.Directive=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.CharScanners.Char(35),Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(System.Char).Not(Kusto.Language.Parsing.CharScanners.LineBreak))]);this.KeywordOrPunctuationInfo=Kusto.Language.Parsing.Parsers$1(System.Char).Map(Bridge.global.Kusto.Language.Parsing.LexicalGrammar.FixedTextInfo,System.Linq.Enumerable.from(Kusto.Language.Syntax.SyntaxFacts.GetKindsWithFixedText()).select(function(k){return new(System.Collections.Generic.KeyValuePair$2(System.Collections.Generic.IEnumerable$1(System.Char),Kusto.Language.Parsing.LexicalGrammar.FixedTextInfo).$ctor1)(Kusto.Language.Syntax.SyntaxFacts.GetText(k),new Kusto.Language.Parsing.LexicalGrammar.FixedTextInfo.$ctor1(k,Kusto.Language.Syntax.SyntaxFacts.GetText(k)))}));this.Token=Kusto.Language.Parsing.Parsers$1(System.Char).Apply(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),Bridge.global.Kusto.Language.Parsing.LexicalToken,Kusto.Language.Parsing.Parsers$1(System.Char).TextAndOffset(Kusto.Language.Parsing.LexicalGrammar.Trivia),function(_trivia){return Kusto.Language.Parsing.Parsers$1(System.Char).Best$2(Bridge.global.Kusto.Language.Parsing.LexicalToken,[Kusto.Language.Parsing.Parsers$1(System.Char).Rule$10(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),Bridge.global.Kusto.Language.Parsing.LexicalGrammar.FixedTextInfo,Bridge.global.Kusto.Language.Parsing.LexicalToken,_trivia,Kusto.Language.Parsing.LexicalGrammar.KeywordOrPunctuationInfo,function(trivia,info){return new Kusto.Language.Parsing.LexicalToken(trivia.Offset,info.Kind,trivia.Value,info.Text)}),Kusto.Language.Parsing.LexicalGrammar.EndCheckedToken(_trivia,Kusto.Language.Parsing.LexicalGrammar.SingleQuoteStringLiteral,Kusto.Language.Syntax.SyntaxKind.StringLiteralToken,39),Kusto.Language.Parsing.LexicalGrammar.EndCheckedToken(_trivia,Kusto.Language.Parsing.LexicalGrammar.DoubleQuoteStringLiteral,Kusto.Language.Syntax.SyntaxKind.StringLiteralToken,34),Kusto.Language.Parsing.LexicalGrammar.GooCheckedToken(_trivia,Kusto.Language.Parsing.LexicalGrammar.PrefixedBooleanLiteral,Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken),Kusto.Language.Parsing.LexicalGrammar.GooCheckedToken(_trivia,Kusto.Language.Parsing.LexicalGrammar.PrefixedGuidLiteral,Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken),Kusto.Language.Parsing.LexicalGrammar.GooCheckedToken(_trivia,Kusto.Language.Parsing.LexicalGrammar.PrefixedDateTimeLiteral,Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralToken),Kusto.Language.Parsing.LexicalGrammar.GooCheckedToken(_trivia,Kusto.Language.Parsing.LexicalGrammar.PrefixedTimespanLiteral,Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken),Kusto.Language.Parsing.LexicalGrammar.GooCheckedToken(_trivia,Kusto.Language.Parsing.LexicalGrammar.PrefixedLongLiteral,Kusto.Language.Syntax.SyntaxKind.LongLiteralToken),Kusto.Language.Parsing.LexicalGrammar.GooCheckedToken(_trivia,Kusto.Language.Parsing.LexicalGrammar.PrefixedIntLiteral,Kusto.Language.Syntax.SyntaxKind.IntLiteralToken),Kusto.Language.Parsing.LexicalGrammar.GooCheckedToken(_trivia,Kusto.Language.Parsing.LexicalGrammar.PrefixedRealLiteral,Kusto.Language.Syntax.SyntaxKind.RealLiteralToken),Kusto.Language.Parsing.LexicalGrammar.GooCheckedToken(_trivia,Kusto.Language.Parsing.LexicalGrammar.PrefixedDecimalLiteral,Kusto.Language.Syntax.SyntaxKind.DecimalLiteralToken),Kusto.Language.Parsing.Parsers$1(System.Char).Rule$10(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),System.String,Bridge.global.Kusto.Language.Parsing.LexicalToken,_trivia,Kusto.Language.Parsing.Parsers$1(System.Char).Text(Kusto.Language.Parsing.LexicalGrammar.BooleanLiteral),function(trivia,text){return new Kusto.Language.Parsing.LexicalToken(trivia.Offset,Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken,trivia.Value,text)}),Kusto.Language.Parsing.Parsers$1(System.Char).Rule$10(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),System.String,Bridge.global.Kusto.Language.Parsing.LexicalToken,_trivia,Kusto.Language.Parsing.Parsers$1(System.Char).Text(Kusto.Language.Parsing.LexicalGrammar.LongLiteral),function(trivia,text){return new Kusto.Language.Parsing.LexicalToken(trivia.Offset,Kusto.Language.Syntax.SyntaxKind.LongLiteralToken,trivia.Value,text)}),Kusto.Language.Parsing.Parsers$1(System.Char).Rule$10(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),System.String,Bridge.global.Kusto.Language.Parsing.LexicalToken,_trivia,Kusto.Language.Parsing.Parsers$1(System.Char).Text(Kusto.Language.Parsing.LexicalGrammar.RealLiteral),function(trivia,text){return new Kusto.Language.Parsing.LexicalToken(trivia.Offset,Kusto.Language.Syntax.SyntaxKind.RealLiteralToken,trivia.Value,text)}),Kusto.Language.Parsing.Parsers$1(System.Char).Rule$10(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),System.String,Bridge.global.Kusto.Language.Parsing.LexicalToken,_trivia,Kusto.Language.Parsing.Parsers$1(System.Char).Text(Kusto.Language.Parsing.LexicalGrammar.TimespanLiteral),function(trivia,text){return new Kusto.Language.Parsing.LexicalToken(trivia.Offset,Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken,trivia.Value,text)}),Kusto.Language.Parsing.Parsers$1(System.Char).Rule$10(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),System.String,Bridge.global.Kusto.Language.Parsing.LexicalToken,_trivia,Kusto.Language.Parsing.Parsers$1(System.Char).Text(Kusto.Language.Parsing.LexicalGrammar.Identifier),function(trivia,text){return new Kusto.Language.Parsing.LexicalToken(trivia.Offset,Kusto.Language.Syntax.SyntaxKind.IdentifierToken,trivia.Value,text)}),Kusto.Language.Parsing.Parsers$1(System.Char).Rule$10(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),System.String,Bridge.global.Kusto.Language.Parsing.LexicalToken,_trivia,Kusto.Language.Parsing.Parsers$1(System.Char).Text(Kusto.Language.Parsing.LexicalGrammar.Directive),function(trivia,text){return new Kusto.Language.Parsing.LexicalToken(trivia.Offset,Kusto.Language.Syntax.SyntaxKind.DirectiveToken,trivia.Value,text)}),Kusto.Language.Parsing.Parsers$1(System.Char).Rule$10(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),System.String,Bridge.global.Kusto.Language.Parsing.LexicalToken,_trivia,Kusto.Language.Parsing.Parsers$1(System.Char).Text(Kusto.Language.Parsing.Parsers$1(System.Char).Any),function(trivia,text){return new Kusto.Language.Parsing.LexicalToken(trivia.Offset,Kusto.Language.Syntax.SyntaxKind.BadToken,trivia.Value,text,System.Array.init([Kusto.Language.DiagnosticFacts.GetUnexpectedCharacter(text)],Kusto.Language.Diagnostic))})])});this.EndOfText=Kusto.Language.Parsing.Parsers$1(System.Char).Apply(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),Bridge.global.Kusto.Language.Parsing.LexicalToken,Kusto.Language.Parsing.Parsers$1(System.Char).TextAndOffset(Kusto.Language.Parsing.LexicalGrammar.Trivia),function(_trivia){return Kusto.Language.Parsing.Parsers$1(System.Char).If$2(Bridge.global.Kusto.Language.Parsing.LexicalToken,Kusto.Language.Parsing.Parsers$1(System.Char).Fails(Kusto.Language.Parsing.Parsers$1(System.Char).Any),Kusto.Language.Parsing.Parsers$1(System.Char).Rule$9(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),Bridge.global.Kusto.Language.Parsing.LexicalToken,_trivia,function(trivia){return new Kusto.Language.Parsing.LexicalToken(trivia.Offset,Kusto.Language.Syntax.SyntaxKind.EndOfTextToken,trivia.Value,null)}))});this.TokenOrEnd=Kusto.Language.Parsing.Parsers$1(System.Char).First$1(Bridge.global.Kusto.Language.Parsing.LexicalToken,[Kusto.Language.Parsing.LexicalGrammar.Token,Kusto.Language.Parsing.LexicalGrammar.EndOfText]);this.Tokens=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.LexicalGrammar.Token),Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrOne(Kusto.Language.Parsing.Parsers$1(System.Char).If$1(Bridge.global.Kusto.Language.Parsing.LexicalToken,Kusto.Language.Parsing.Parsers$1(System.Char).Any,Kusto.Language.Parsing.LexicalGrammar.EndOfText))]);this.TokensAndEnd=Kusto.Language.Parsing.Parsers$1(System.Char).And([Kusto.Language.Parsing.Parsers$1(System.Char).ZeroOrMore(Kusto.Language.Parsing.LexicalGrammar.Token),Kusto.Language.Parsing.LexicalGrammar.EndOfText])}},methods:{GetTokens:function(text,alwaysProduceEndToken){alwaysProduceEndToken===void 0&&(alwaysProduceEndToken=!1);var list=new(System.Collections.Generic.List$1(System.Object).ctor),parser=alwaysProduceEndToken?Kusto.Language.Parsing.LexicalGrammar.TokensAndEnd:Kusto.Language.Parsing.LexicalGrammar.Tokens;return Kusto.Language.Parsing.ParserExtensions.Parse$1(parser,text,list),System.Linq.Enumerable.from(list).select(function(e){return Bridge.cast(e,Kusto.Language.Parsing.LexicalToken)}).ToArray(Kusto.Language.Parsing.LexicalToken)},GetFirstToken:function(text){return Kusto.Language.Parsing.ParserExtensions.Parse(Bridge.global.Kusto.Language.Parsing.LexicalToken,Kusto.Language.Parsing.LexicalGrammar.TokenOrEnd,text).Value},EndCheckedToken:function(left,scanner,kind,expectedEndChar){return Kusto.Language.Parsing.Parsers$1(System.Char).Rule$10(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),System.String,Bridge.global.Kusto.Language.Parsing.LexicalToken,left,Kusto.Language.Parsing.Parsers$1(System.Char).Text(scanner),function(trivia,text){var dx=text.charCodeAt(text.length-1|0)===expectedEndChar?null:System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingCharacter(expectedEndChar)],Kusto.Language.Diagnostic);return new Kusto.Language.Parsing.LexicalToken(trivia.Offset,kind,trivia.Value,text,dx)})},GooCheckedToken:function(left,gooScanner,kind){return Kusto.Language.Parsing.LexicalGrammar.EndCheckedToken(left,gooScanner,kind,41)}}}});Bridge.define("Kusto.Language.Parsing.LexicalGrammar.FixedTextInfo",{$kind:"nested struct",statics:{methods:{getDefaultValue:function(){return new Kusto.Language.Parsing.LexicalGrammar.FixedTextInfo}}},fields:{Kind:0,Text:null},ctors:{$ctor1:function(kind,text){this.$initialize();this.Kind=kind;this.Text=text},ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([5440800653,this.Kind,this.Text])},equals:function(o){return Bridge.is(o,Kusto.Language.Parsing.LexicalGrammar.FixedTextInfo)?Bridge.equals(this.Kind,o.Kind)&&Bridge.equals(this.Text,o.Text):!1},$clone:function(to){var s=to||new Kusto.Language.Parsing.LexicalGrammar.FixedTextInfo;return s.Kind=this.Kind,s.Text=this.Text,s}}});Bridge.define("Kusto.Language.Parsing.OffsetValue$1",function(TValue){return{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new(Kusto.Language.Parsing.OffsetValue$1(TValue))}}},fields:{Offset:0,Value:Bridge.getDefaultValue(TValue)},ctors:{$ctor1:function(offset,value){this.$initialize();this.Offset=offset;this.Value=value},ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([3575795744,this.Offset,this.Value])},equals:function(o){return Bridge.is(o,Kusto.Language.Parsing.OffsetValue$1(TValue))?Bridge.equals(this.Offset,o.Offset)&&Bridge.equals(this.Value,o.Value):!1},$clone:function(to){var s=to||new(Kusto.Language.Parsing.OffsetValue$1(TValue));return s.Offset=this.Offset,s.Value=this.Value,s}}}});Bridge.define("Kusto.Language.Parsing.ParseResult$1",function(TOutput){return{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new(Kusto.Language.Parsing.ParseResult$1(TOutput))}}},props:{Length:0,Value:Bridge.getDefaultValue(TOutput)},ctors:{$ctor1:function(length,value){this.$initialize();this.Length=length;this.Value=value},ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([3880525866,this.Length,this.Value])},equals:function(o){return Bridge.is(o,Kusto.Language.Parsing.ParseResult$1(TOutput))?Bridge.equals(this.Length,o.Length)&&Bridge.equals(this.Value,o.Value):!1},$clone:function(){return this}}}});Bridge.define("Kusto.Language.Parsing.ParserExtensions",{statics:{methods:{Parse$1:function(parser,text,output){return parser.Parse(new Kusto.Language.Parsing.TextSource.ctor(text),0,output,0)},Parse:function(TOutput,parser,text){return parser.Parse$1(new Kusto.Language.Parsing.TextSource.ctor(text),0)},TryParse:function(TOutput,parser,text,value){var result=Kusto.Language.Parsing.ParserExtensions.Parse(TOutput,parser,text);return value.v=result.Value,result.Length>0}}}});Bridge.define("Kusto.Language.Parsing.Parsers$1",function(TInput){return{statics:{fields:{Any:null},ctors:{init:function(){this.Any=Kusto.Language.Parsing.Parsers$1(TInput).Match$1(function(){return!0}).WithTag("<any>")}},methods:{And:function(parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.SequenceParser$1(TInput))(parsers)},Apply:function(TLeft,TOutput,leftParser,fnRightParser){return new(Kusto.Language.Parsing.ApplyParser$3(TInput,TLeft,TOutput).$ctor1)(Kusto.Language.Parsing.ApplyKind.One,leftParser,fnRightParser(Bridge.getDefaultValue(Kusto.Language.Parsing.Parsers$1.LeftValue$1(TInput,TLeft))))},ApplyOptional:function(TOutput,leftParser,fnRightParser){return new(Kusto.Language.Parsing.ApplyParser$3(TInput,TOutput,TOutput).$ctor1)(Kusto.Language.Parsing.ApplyKind.ZeroOrOne,leftParser,fnRightParser(Bridge.getDefaultValue(Kusto.Language.Parsing.Parsers$1.LeftValue$1(TInput,TOutput))))},ApplyZeroOrMore:function(TOutput,leftParser,fnRightParser){return new(Kusto.Language.Parsing.ApplyParser$3(TInput,TOutput,TOutput).$ctor1)(Kusto.Language.Parsing.ApplyKind.ZeroOrMore,leftParser,fnRightParser(Bridge.getDefaultValue(Kusto.Language.Parsing.Parsers$1.LeftValue$1(TInput,TOutput))))},Best:function(parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.BestParser$1(TInput))(parsers)},Best$1:function(TOutput,parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.BestParser$2(TInput,TOutput))(parsers)},Best$2:function(TOutput,parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(new(Kusto.Language.Parsing.BestParser$2(TInput,TOutput))(System.Linq.Enumerable.from(parsers).select(function(p){return p.Parser}).ToArray(Kusto.Language.Parsing.Parser$2(TInput,TOutput))))},Convert$1:function(TOutput,pattern,producer){return new(Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).ctor)(pattern,producer)},Convert$3:function(TOutput,pattern,producer){return new(Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).$ctor3)(pattern,producer)},Convert$4:function(TOutput,pattern,producer){return Kusto.Language.Parsing.Parsers$1(System.Char).Convert$1(TOutput,pattern,function(source,start,length){return producer(Bridge.cast(source,Kusto.Language.Parsing.TextSource).PeekText$1(start,length))})},Convert$2:function(TOutput,pattern,producer){return new(Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).$ctor2)(pattern,producer)},Convert:function(TOutput,pattern,value){return Kusto.Language.Parsing.Parsers$1(TInput).Convert$2(TOutput,pattern,function(){return value})},Count:function(scanner){return Kusto.Language.Parsing.Parsers$1(TInput).Convert$1(System.Int32,scanner,function(source,start,length){return length})},Fails:function(parser){return new(Kusto.Language.Parsing.FailsParser$1(TInput))(parser)},First$1:function(TOutput,parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.FirstParser$2(TInput,TOutput))(parsers)},First:function(parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.FirstParser$1(TInput))(parsers)},First$2:function(TOutput,parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(new(Kusto.Language.Parsing.FirstParser$2(TInput,TOutput))(System.Linq.Enumerable.from(parsers).select(function(p){return p.Parser}).ToArray(Kusto.Language.Parsing.Parser$2(TInput,TOutput))))},Forward:function(TOutput,deferredParser){return new(Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput))(deferredParser)},If$1:function(TOutput,test,parser){return new(Kusto.Language.Parsing.IfParser$2(TInput,TOutput))(test,parser)},If$2:function(TOutput,test,parser){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(new(Kusto.Language.Parsing.IfParser$2(TInput,TOutput))(test,parser.Parser))},If:function(test,parser){return new(Kusto.Language.Parsing.IfParser$1(TInput))(test,parser)},List:function(TElement,TProducer,element,missingElement,oneOrMore,producer){if(oneOrMore&&!Bridge.staticEquals(missingElement,null)){var requiredElement=Kusto.Language.Parsing.Parsers$1(TInput).Required(TElement,element,missingElement);return Kusto.Language.Parsing.Parsers$1(TInput).Produce$1(TElement,TProducer,Kusto.Language.Parsing.Parsers$1(TInput).Sequence([requiredElement,Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore(element)]),producer)}return Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore$1(TElement,TProducer,element,producer)},Map:function(TOutput,keyValuePairs){return new(Kusto.Language.Parsing.MapParser$2(TInput,TOutput).$ctor1)(System.Linq.Enumerable.from(keyValuePairs).toDictionary(function(kvp){return kvp.key},function(kvp){return function(){return kvp.value}},Bridge.global.System.Collections.Generic.IEnumerable$1(TInput),Bridge.global.Function))},Map$1:function(TOutput,keyValuePairs){return new(Kusto.Language.Parsing.MapParser$2(TInput,TOutput).$ctor1)(keyValuePairs)},Match$1:function(predicate){return new(Kusto.Language.Parsing.MatchParser$1(TInput).$ctor1)(predicate)},Match:function(consumer){return new(Kusto.Language.Parsing.MatchParser$1(TInput).ctor)(consumer)},Match$3:function(TOutput,predicate,producer){return new(Kusto.Language.Parsing.MatchParser$2(TInput,TOutput).$ctor1)(predicate,producer)},Match$2:function(TOutput,consumer,producer){return new(Kusto.Language.Parsing.MatchParser$2(TInput,TOutput).ctor)(consumer,producer)},Not:function(parser){return new(Kusto.Language.Parsing.NotParser$1(TInput))(parser)},OneOrMore$1:function(TParser,TProducer,parser,producer){return Kusto.Language.Parsing.Parsers$1(TInput).Produce$1(TParser,TProducer,Kusto.Language.Parsing.Parsers$1(TInput).OneOrMore(parser),producer)},OneOrMore:function(parser){return new(Kusto.Language.Parsing.OneOrMoreParser$1(TInput))(parser)},Optional:function(parser){return new(Kusto.Language.Parsing.ZeroOrMoreParser$1(TInput))(parser,!0)},Optional$1:function(TOutput,parser){return new(Kusto.Language.Parsing.OptionalParser$2(TInput,TOutput))(parser,function(){return Bridge.getDefaultValue(TOutput)})},Optional$2:function(TOutput,parser,producer){return new(Kusto.Language.Parsing.OptionalParser$2(TInput,TOutput))(parser,producer)},Or:function(parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.BestParser$1(TInput))(parsers)},Produce:function(TOutput,parser,producer){return new(Kusto.Language.Parsing.ProduceParser$2(TInput,TOutput))(parser,Kusto.Language.Parsing.Parsers$1(TInput).Produce$2(System.Object,TOutput,producer))},Produce$1:function(TElement,TOutput,parser,producer){return new(Kusto.Language.Parsing.ProduceParser$2(TInput,TOutput))(parser,Kusto.Language.Parsing.Parsers$1(TInput).Produce$2(TElement,TOutput,producer))},Produce$2:function(TElement,TOutput,producer){return function(list,start){return Kusto.Language.Parsing.Parsers$1.ElementProducer$2(TInput,TElement,TOutput).Produce(list,start,producer)}},Required:function(TOutput,parser,producer){return new(Kusto.Language.Parsing.RequiredParser$2(TInput,TOutput))(parser,producer)},Rule:function(TParser1,TOutput,parser1,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start)),TParser1))},function(source,start){var result1=parser1.Parse$1(source,start),produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(produced=producer(result1.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,produced))})},Rule$1:function(TParser1,TParser2,TOutput,parser1,parser2,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start)),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0)),TParser2))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,produced=producer(result1.Value,result2.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$2:function(TParser1,TParser2,TParser3,TOutput,parser1,parser2,parser3,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start)),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0)),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+2|0)),TParser3))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,result3,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,result3=parser3.Parse$1(source,start+len|0),result3.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result3.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result3.Length|0,produced=producer(result1.Value,result2.Value,result3.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$3:function(TParser1,TParser2,TParser3,TParser4,TOutput,parser1,parser2,parser3,parser4,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3,parser4],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start)),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0)),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+2|0)),TParser3),Bridge.cast(Bridge.unbox(list.getItem(start+3|0)),TParser4))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,result3,result4,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,result3=parser3.Parse$1(source,start+len|0),result3.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result3.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result3.Length|0,result4=parser4.Parse$1(source,start+len|0),result4.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result4.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result4.Length|0,produced=producer(result1.Value,result2.Value,result3.Value,result4.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$4:function(TParser1,TParser2,TParser3,TParser4,TParser5,TOutput,parser1,parser2,parser3,parser4,parser5,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3,parser4,parser5],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start)),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0)),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+2|0)),TParser3),Bridge.cast(Bridge.unbox(list.getItem(start+3|0)),TParser4),Bridge.cast(Bridge.unbox(list.getItem(start+4|0)),TParser5))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,result3,result4,result5,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,result3=parser3.Parse$1(source,start+len|0),result3.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result3.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result3.Length|0,result4=parser4.Parse$1(source,start+len|0),result4.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result4.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result4.Length|0,result5=parser5.Parse$1(source,start+len|0),result5.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result5.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result5.Length|0,produced=producer(result1.Value,result2.Value,result3.Value,result4.Value,result5.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$5:function(TParser1,TParser2,TParser3,TParser4,TParser5,TParser6,TOutput,parser1,parser2,parser3,parser4,parser5,parser6,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3,parser4,parser5,parser6],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start)),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0)),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+2|0)),TParser3),Bridge.cast(Bridge.unbox(list.getItem(start+3|0)),TParser4),Bridge.cast(Bridge.unbox(list.getItem(start+4|0)),TParser5),Bridge.cast(Bridge.unbox(list.getItem(start+5|0)),TParser6))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,result3,result4,result5,result6,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,result3=parser3.Parse$1(source,start+len|0),result3.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result3.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result3.Length|0,result4=parser4.Parse$1(source,start+len|0),result4.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result4.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result4.Length|0,result5=parser5.Parse$1(source,start+len|0),result5.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result5.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result5.Length|0,result6=parser6.Parse$1(source,start+len|0),result6.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result6.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result6.Length|0,produced=producer(result1.Value,result2.Value,result3.Value,result4.Value,result5.Value,result6.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$6:function(TParser1,TParser2,TParser3,TParser4,TParser5,TParser6,TParser7,TOutput,parser1,parser2,parser3,parser4,parser5,parser6,parser7,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3,parser4,parser5,parser6,parser7],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start)),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0)),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+2|0)),TParser3),Bridge.cast(Bridge.unbox(list.getItem(start+3|0)),TParser4),Bridge.cast(Bridge.unbox(list.getItem(start+4|0)),TParser5),Bridge.cast(Bridge.unbox(list.getItem(start+5|0)),TParser6),Bridge.cast(Bridge.unbox(list.getItem(start+6|0)),TParser7))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,result3,result4,result5,result6,result7,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,result3=parser3.Parse$1(source,start+len|0),result3.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result3.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result3.Length|0,result4=parser4.Parse$1(source,start+len|0),result4.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result4.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result4.Length|0,result5=parser5.Parse$1(source,start+len|0),result5.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result5.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result5.Length|0,result6=parser6.Parse$1(source,start+len|0),result6.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result6.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result6.Length|0,result7=parser7.Parse$1(source,start+len|0),result7.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result7.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result7.Length|0,produced=producer(result1.Value,result2.Value,result3.Value,result4.Value,result5.Value,result6.Value,result7.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$7:function(TParser1,TParser2,TParser3,TParser4,TParser5,TParser6,TParser7,TParser8,TOutput,parser1,parser2,parser3,parser4,parser5,parser6,parser7,parser8,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3,parser4,parser5,parser6,parser7,parser8],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start)),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0)),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+2|0)),TParser3),Bridge.cast(Bridge.unbox(list.getItem(start+3|0)),TParser4),Bridge.cast(Bridge.unbox(list.getItem(start+4|0)),TParser5),Bridge.cast(Bridge.unbox(list.getItem(start+5|0)),TParser6),Bridge.cast(Bridge.unbox(list.getItem(start+6|0)),TParser7),Bridge.cast(Bridge.unbox(list.getItem(start+7|0)),TParser8))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,result3,result4,result5,result6,result7,result8,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,result3=parser3.Parse$1(source,start+len|0),result3.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result3.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result3.Length|0,result4=parser4.Parse$1(source,start+len|0),result4.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result4.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result4.Length|0,result5=parser5.Parse$1(source,start+len|0),result5.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result5.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result5.Length|0,result6=parser6.Parse$1(source,start+len|0),result6.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result6.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result6.Length|0,result7=parser7.Parse$1(source,start+len|0),result7.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result7.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result7.Length|0,result8=parser8.Parse$1(source,start+len|0),result8.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result8.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result8.Length|0,produced=producer(result1.Value,result2.Value,result3.Value,result4.Value,result5.Value,result6.Value,result7.Value,result8.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$8:function(TParser1,TParser2,TParser3,TParser4,TParser5,TParser6,TParser7,TParser8,TParser9,TOutput,parser1,parser2,parser3,parser4,parser5,parser6,parser7,parser8,parser9,producer){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3,parser4,parser5,parser6,parser7,parser8,parser9],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start)),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+1|0)),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+2|0)),TParser3),Bridge.cast(Bridge.unbox(list.getItem(start+3|0)),TParser4),Bridge.cast(Bridge.unbox(list.getItem(start+4|0)),TParser5),Bridge.cast(Bridge.unbox(list.getItem(start+5|0)),TParser6),Bridge.cast(Bridge.unbox(list.getItem(start+6|0)),TParser7),Bridge.cast(Bridge.unbox(list.getItem(start+7|0)),TParser8),Bridge.cast(Bridge.unbox(list.getItem(start+8|0)),TParser9))},function(source,start){var result1=parser1.Parse$1(source,start),len,result2,result3,result4,result5,result6,result7,result8,result9,produced;return result1.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(result1.Length,Bridge.getDefaultValue(TOutput)):(len=result1.Length,result2=parser2.Parse$1(source,start+len|0),result2.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result2.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result2.Length|0,result3=parser3.Parse$1(source,start+len|0),result3.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result3.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result3.Length|0,result4=parser4.Parse$1(source,start+len|0),result4.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result4.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result4.Length|0,result5=parser5.Parse$1(source,start+len|0),result5.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result5.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result5.Length|0,result6=parser6.Parse$1(source,start+len|0),result6.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result6.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result6.Length|0,result7=parser7.Parse$1(source,start+len|0),result7.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result7.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result7.Length|0,result8=parser8.Parse$1(source,start+len|0),result8.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result8.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result8.Length|0,result9=parser9.Parse$1(source,start+len|0),result9.Length<0)?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)((-len|0)+result9.Length|0,Bridge.getDefaultValue(TOutput)):(len=len+result9.Length|0,produced=producer(result1.Value,result2.Value,result3.Value,result4.Value,result5.Value,result6.Value,result7.Value,result8.Value,result9.Value),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(len,produced))})},Rule$9:function(TLeft,TOutput,left,producer){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start)),TLeft))}))},Rule$10:function(TLeft,TParser1,TOutput,left,parser1,producer){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start)),TLeft),Bridge.cast(Bridge.unbox(list.getItem(start+1|0)),TParser1))}))},Rule$11:function(TLeft,TParser1,TParser2,TOutput,left,parser1,parser2,producer){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start)),TLeft),Bridge.cast(Bridge.unbox(list.getItem(start+1|0)),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+2|0)),TParser2))}))},Rule$12:function(TLeft,TParser1,TParser2,TParser3,TOutput,left,parser1,parser2,parser3,producer){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(new(Kusto.Language.Parsing.RuleParser$2(TInput,TOutput))(System.Array.init([parser1,parser2,parser3],Kusto.Language.Parsing.Parser$1(TInput)),function(list,start){return producer(Bridge.cast(Bridge.unbox(list.getItem(start)),TLeft),Bridge.cast(Bridge.unbox(list.getItem(start+1|0)),TParser1),Bridge.cast(Bridge.unbox(list.getItem(start+2|0)),TParser2),Bridge.cast(Bridge.unbox(list.getItem(start+3|0)),TParser3))}))},SeparatedList$1:function(TParser,TProducer,element,separator,missingElement,missingSeparator,oneOrMore,allowTrailingSeparator,producer){return Kusto.Language.Parsing.Parsers$1(TInput).SeparatedList(TParser,TProducer,element,element,separator,missingElement,missingSeparator,oneOrMore,allowTrailingSeparator,producer)},SeparatedList:function(TElement,TList,primaryElement,secondaryElement,separator,missingElement,missingSeparator,oneOrMore,allowTrailingSeparator,producer){var requiredPrimaryElement=Kusto.Language.Parsing.Parsers$1(TInput).Required(TElement,primaryElement,missingElement),requiredSecondaryElement=Kusto.Language.Parsing.Parsers$1(TInput).Required(TElement,secondaryElement,missingElement),requiredSeparator=Kusto.Language.Parsing.Parsers$1(TInput).Required(TElement,separator,missingSeparator),emptyList=function(){return producer(System.Array.init([],TElement))};return oneOrMore?allowTrailingSeparator?Kusto.Language.Parsing.Parsers$1(TInput).Produce$1(TElement,TList,Kusto.Language.Parsing.Parsers$1(TInput).Sequence([requiredPrimaryElement,Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(TInput).First([Kusto.Language.Parsing.Parsers$1(TInput).Sequence([separator,secondaryElement]),Kusto.Language.Parsing.Parsers$1(TInput).If(secondaryElement,Kusto.Language.Parsing.Parsers$1(TInput).Sequence([requiredSeparator,secondaryElement])).Hide()])),Kusto.Language.Parsing.Parsers$1(TInput).Optional$1(TElement,separator)]),producer):Kusto.Language.Parsing.Parsers$1(TInput).Produce$1(TElement,TList,Kusto.Language.Parsing.Parsers$1(TInput).Sequence([requiredPrimaryElement,Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(TInput).First([Kusto.Language.Parsing.Parsers$1(TInput).Sequence([separator,requiredSecondaryElement]),Kusto.Language.Parsing.Parsers$1(TInput).If(secondaryElement,Kusto.Language.Parsing.Parsers$1(TInput).Sequence([requiredSeparator,secondaryElement])).Hide()]))]),producer):allowTrailingSeparator?Kusto.Language.Parsing.Parsers$1(TInput).Optional$2(TList,Kusto.Language.Parsing.Parsers$1(TInput).Produce$1(TElement,TList,Kusto.Language.Parsing.Parsers$1(TInput).Sequence([Kusto.Language.Parsing.Parsers$1(TInput).First$1(TElement,[Kusto.Language.Parsing.Parsers$1(TInput).If$1(TElement,separator,requiredPrimaryElement).Hide$1(),primaryElement]),Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(TInput).First([Kusto.Language.Parsing.Parsers$1(TInput).Sequence([separator,secondaryElement]),Kusto.Language.Parsing.Parsers$1(TInput).If(secondaryElement,Kusto.Language.Parsing.Parsers$1(TInput).Sequence([requiredSeparator,secondaryElement])).Hide()])),Kusto.Language.Parsing.Parsers$1(TInput).Optional$1(TElement,separator)]),producer),emptyList):Kusto.Language.Parsing.Parsers$1(TInput).Optional$2(TList,Kusto.Language.Parsing.Parsers$1(TInput).Produce$1(TElement,TList,Kusto.Language.Parsing.Parsers$1(TInput).Sequence([Kusto.Language.Parsing.Parsers$1(TInput).First$1(TElement,[Kusto.Language.Parsing.Parsers$1(TInput).If$1(TElement,separator,requiredPrimaryElement).Hide$1(),primaryElement]),Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(TInput).First([Kusto.Language.Parsing.Parsers$1(TInput).Sequence([separator,requiredPrimaryElement]),Kusto.Language.Parsing.Parsers$1(TInput).If(secondaryElement,Kusto.Language.Parsing.Parsers$1(TInput).Sequence([requiredSeparator,secondaryElement])).Hide()]))]),producer),emptyList)},Sequence:function(parsers){return parsers===void 0&&(parsers=[]),new(Kusto.Language.Parsing.SequenceParser$1(TInput))(parsers)},Text:function(pattern){return Kusto.Language.Parsing.Parsers$1(System.Char).Convert$1(System.String,pattern,function(source,start,length){return Bridge.cast(source,Kusto.Language.Parsing.TextSource).PeekText$1(start,length)})},TextAndOffset:function(pattern){return Kusto.Language.Parsing.Parsers$1(System.Char).Convert$1(Bridge.global.Kusto.Language.Parsing.OffsetValue$1(System.String),pattern,function(source,start,length){return new(Kusto.Language.Parsing.OffsetValue$1(System.String).$ctor1)(start,Bridge.cast(source,Kusto.Language.Parsing.TextSource).PeekText$1(start,length))})},ZeroOrMore$1:function(TParser,TProducer,parser,producer){return Kusto.Language.Parsing.Parsers$1(TInput).Produce$1(TParser,TProducer,Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore(parser),producer)},ZeroOrMore:function(parser){return new(Kusto.Language.Parsing.ZeroOrMoreParser$1(TInput))(parser)},ZeroOrOne:function(parser){return new(Kusto.Language.Parsing.ZeroOrMoreParser$1(TInput))(parser,!0)}}}}});Bridge.define("Kusto.Language.Parsing.Parsers$1.ElementProducer$2",function(TInput,TElement,TProducer){return{$kind:"nested class",statics:{fields:{listPool:null},ctors:{init:function(){this.listPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(TElement)))(function(){return new(System.Collections.Generic.List$1(TElement).ctor)},function(list){list.clear()})}},methods:{Produce:function(output,outputStart,producer){var list=Kusto.Language.Parsing.Parsers$1.ElementProducer$2(TInput,TElement,TProducer).listPool.AllocateFromPool(),i;try{for(i=outputStart;i<output.Count;i=i+1|0)list.add(Bridge.cast(Bridge.unbox(output.getItem(i)),TElement));return producer(list)}finally{Kusto.Language.Parsing.Parsers$1.ElementProducer$2(TInput,TElement,TProducer).listPool.ReturnToPool(list)}}}}}});Bridge.define("Kusto.Language.Parsing.Parsers$1.LeftValue$1",function(TInput,TLeft){return{$kind:"nested struct",statics:{methods:{getDefaultValue:function(){return new(Kusto.Language.Parsing.Parsers$1.LeftValue$1(TInput,TLeft))}}},methods:{$clone:function(){return this}}}});Bridge.define("Kusto.Language.Parsing.ParserVisitor$2",function(){return{}});Bridge.define("Kusto.Language.Parsing.QueryGrammar",{statics:{fields:{s_Instance:null,MissingNameDeclarationNode:null,MissingNameDeclaration:null,MissingNameDeclarationExpression:null,MissingNameReferenceNode:null,MissingNameReference:null,MissingExpressionNode:null,MissingExpression:null,MissingValueNode:null,MissingValue:null,MissingTypeNode:null,MissingType:null,MissingLongLiteralNode:null,MissingLongLiteral:null,MissingStringLiteralNode:null,MissingStringLiteral:null,MissingBooleanLiteralNode:null,MissingBooleanLiteral:null,MissingTypeofLiteralNode:null,MissingTypeOfLiteral:null,MissingJsonValueNode:null,MissingJsonValue:null,MissingJsonPairNode:null,MissingJoinOnClauseNode:null,MissingJoinOnClause:null,MissingJsonPair:null,MissingFunctionCallNode:null,MissingFunctionCall:null,MissingFunctionCallExpression:null,MissingQueryOperatorNode:null,MissingQueryOperator:null,MissingQueryOperatorExpression:null,MissingMakeSeriesExpressionNode:null,MissingMakeSeriesExpression:null,MissingMvExpandExpressionNode:null,MissingMvExpandExpression:null,MissingMvApplyExpressionNode:null,MissingMvApplyExpression:null,MissingMvApplySubqueryExpressionNode:null,MissingMvApplySubqueryExpression:null,MissingForkExpressionNode:null,MissingForkExpression:null,MissingPartitionSubqueryExpressionNode:null,MissingPartitionSubqueryExpression:null,MissingPartitionQueryExpressionNode:null,MissingPartitionQueryExpression:null,MissingStatementNode:null,MissingStatement:null,MissingStatementElementNode:null,MissingStatementElement:null,MissingNameAndTypeDeclarationNode:null,MissingNameAndTypeDeclaration:null,MissingFunctionParameterNode:null,MissingFunctionParameter:null,MissingNamedParameterNode:null,MissingNamedParameter:null,MissingFunctionDeclarationNode:null,MissingFunctionDeclaration:null,StringOperatorMap:null,KnownQueryOperatorParameterNames:null},ctors:{init:function(){this.MissingNameDeclarationNode=new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingName()],Kusto.Language.Diagnostic));this.MissingNameDeclaration=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameDeclarationNode.Clone$1(),Kusto.Language.Syntax.NameDeclaration)};this.MissingNameDeclarationExpression=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameDeclarationNode.Clone$1(),Kusto.Language.Syntax.NameDeclaration)};this.MissingNameReferenceNode=new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingName()],Kusto.Language.Diagnostic));this.MissingNameReference=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameReferenceNode.Clone$1(),Kusto.Language.Syntax.NameReference)};this.MissingExpressionNode=new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingExpression()],Kusto.Language.Diagnostic));this.MissingExpression=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode.Clone$1(),Kusto.Language.Syntax.Expression)};this.MissingValueNode=new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingValue()],Kusto.Language.Diagnostic));this.MissingValue=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingValueNode.Clone$1(),Kusto.Language.Syntax.Expression)};this.MissingTypeNode=new Kusto.Language.Syntax.PrimitiveTypeExpression(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingTypeName()],Kusto.Language.Diagnostic));this.MissingType=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingTypeNode.Clone$1(),Kusto.Language.Syntax.TypeExpression)};this.MissingLongLiteralNode=new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.LongLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.LongLiteralToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingNumber()],Kusto.Language.Diagnostic));this.MissingLongLiteral=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingLongLiteralNode.Clone$1(),Kusto.Language.Syntax.Expression)};this.MissingStringLiteralNode=new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingString()],Kusto.Language.Diagnostic));this.MissingStringLiteral=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingStringLiteralNode.Clone$1(),Kusto.Language.Syntax.Expression)};this.MissingBooleanLiteralNode=new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingBoolean()],Kusto.Language.Diagnostic));this.MissingBooleanLiteral=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingBooleanLiteralNode.Clone$1(),Kusto.Language.Syntax.Expression)};this.MissingTypeofLiteralNode=new Kusto.Language.Syntax.TypeOfLiteralExpression(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingTypeOfLiteral()],Kusto.Language.Diagnostic));this.MissingTypeOfLiteral=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingTypeofLiteralNode.Clone$1(),Kusto.Language.Syntax.Expression)};this.MissingJsonValueNode=new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingJsonValue()],Kusto.Language.Diagnostic));this.MissingJsonValue=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingJsonValueNode.Clone$1(),Kusto.Language.Syntax.Expression)};this.MissingJsonPairNode=new Kusto.Language.Syntax.JsonPair(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.ColonToken),new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingJsonPair()],Kusto.Language.Diagnostic));this.MissingJoinOnClauseNode=new Kusto.Language.Syntax.JoinOnClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.JoinOnClause),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingJoinOnClause()],Kusto.Language.Diagnostic));this.MissingJoinOnClause=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingJoinOnClauseNode.Clone$1(),Kusto.Language.Syntax.JoinOnClause)};this.MissingJsonPair=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingJsonPairNode.Clone$1(),Kusto.Language.Syntax.JsonPair)};this.MissingFunctionCallNode=new Kusto.Language.Syntax.FunctionCallExpression(new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),new Kusto.Language.Syntax.ExpressionList(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingFunctionCall()],Kusto.Language.Diagnostic));this.MissingFunctionCall=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingFunctionCallNode.Clone$1(),Kusto.Language.Syntax.FunctionCallExpression)};this.MissingFunctionCallExpression=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingFunctionCallNode.Clone$1(),Kusto.Language.Syntax.FunctionCallExpression)};this.MissingQueryOperatorNode=new Kusto.Language.Syntax.BadQueryOperator(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetQueryOperatorExpected()],Kusto.Language.Diagnostic));this.MissingQueryOperator=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingQueryOperatorNode.Clone$1(),Kusto.Language.Syntax.QueryOperator)};this.MissingQueryOperatorExpression=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingQueryOperatorNode.Clone$1(),Kusto.Language.Syntax.QueryOperator)};this.MissingMakeSeriesExpressionNode=new Kusto.Language.Syntax.MakeSeriesExpression(Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode.Clone$1(),Kusto.Language.Syntax.Expression),null);this.MissingMakeSeriesExpression=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingMakeSeriesExpressionNode.Clone$1(),Kusto.Language.Syntax.MakeSeriesExpression)};this.MissingMvExpandExpressionNode=new Kusto.Language.Syntax.MvExpandExpression(Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode.Clone$1(),Kusto.Language.Syntax.Expression),null);this.MissingMvExpandExpression=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingMvExpandExpressionNode.Clone$1(),Kusto.Language.Syntax.MvExpandExpression)};this.MissingMvApplyExpressionNode=new Kusto.Language.Syntax.MvApplyExpression(Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode.Clone$1(),Kusto.Language.Syntax.Expression),null);this.MissingMvApplyExpression=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingMvApplyExpressionNode.Clone$1(),Kusto.Language.Syntax.MvApplyExpression)};this.MissingMvApplySubqueryExpressionNode=new Kusto.Language.Syntax.MvApplySubqueryExpression(Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode.Clone$1(),Kusto.Language.Syntax.Expression),Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken));this.MissingMvApplySubqueryExpression=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingMvApplySubqueryExpressionNode.Clone$1(),Kusto.Language.Syntax.MvApplySubqueryExpression)};this.MissingForkExpressionNode=new Kusto.Language.Syntax.ForkExpression(null,Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode.Clone$1(),Kusto.Language.Syntax.Expression),Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken));this.MissingForkExpression=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingForkExpressionNode.Clone$1(),Kusto.Language.Syntax.ForkExpression)};this.MissingPartitionSubqueryExpressionNode=new Kusto.Language.Syntax.PartitionExpression(Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode.Clone$1(),Kusto.Language.Syntax.Expression),Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken));this.MissingPartitionSubqueryExpression=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingPartitionSubqueryExpressionNode.Clone$1(),Kusto.Language.Syntax.PartitionExpression)};this.MissingPartitionQueryExpressionNode=new Kusto.Language.Syntax.PartitionExpression(Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode.Clone$1(),Kusto.Language.Syntax.Expression),Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken));this.MissingPartitionQueryExpression=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingPartitionQueryExpressionNode.Clone$1(),Kusto.Language.Syntax.PartitionExpression)};this.MissingStatementNode=new Kusto.Language.Syntax.ExpressionStatement(new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingStatement()],Kusto.Language.Diagnostic));this.MissingStatement=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingStatementNode.Clone$1(),Kusto.Language.Syntax.Statement)};this.MissingStatementElementNode=new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))(Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingStatementNode.Clone$1(),Kusto.Language.Syntax.Statement));this.MissingStatementElement=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingStatementElementNode.Clone$1(),Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))};this.MissingNameAndTypeDeclarationNode=new Kusto.Language.Syntax.NameAndTypeDeclaration(new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.ColonToken),new Kusto.Language.Syntax.PrimitiveTypeExpression(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringKeyword)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingParameter()],Kusto.Language.Diagnostic));this.MissingNameAndTypeDeclaration=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameAndTypeDeclarationNode.Clone$1(),Kusto.Language.Syntax.NameAndTypeDeclaration)};this.MissingFunctionParameterNode=new Kusto.Language.Syntax.FunctionParameter(new Kusto.Language.Syntax.NameAndTypeDeclaration(new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.ColonToken),new Kusto.Language.Syntax.PrimitiveTypeExpression(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.StringKeyword))),null,System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingParameter()],Kusto.Language.Diagnostic));this.MissingFunctionParameter=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingFunctionParameterNode.Clone$1(),Kusto.Language.Syntax.FunctionParameter)};this.MissingNamedParameterNode=new Kusto.Language.Syntax.NamedParameter(new Kusto.Language.Syntax.NameDeclaration.$ctor1(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.EqualToken),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),Kusto.Language.Editor.CompletionHint.None,System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingParameter()],Kusto.Language.Diagnostic));this.MissingNamedParameter=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNamedParameterNode.Clone$1(),Kusto.Language.Syntax.NamedParameter)};this.MissingFunctionDeclarationNode=new Kusto.Language.Syntax.FunctionDeclaration(null,new Kusto.Language.Syntax.FunctionParameters(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)),new Kusto.Language.Syntax.FunctionBody(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)).Empty(),null,null,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingFunctionDeclaration()],Kusto.Language.Diagnostic));this.MissingFunctionDeclaration=function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingFunctionDeclarationNode.Clone$1(),Kusto.Language.Syntax.FunctionDeclaration)};this.StringOperatorMap=function(_o1){return _o1.add(Kusto.Language.Syntax.SyntaxKind.EqualTildeToken,Kusto.Language.Syntax.SyntaxKind.EqualTildeExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.BangTildeToken,Kusto.Language.Syntax.SyntaxKind.BangTildeExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.HasKeyword,Kusto.Language.Syntax.SyntaxKind.HasExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.ColonToken,Kusto.Language.Syntax.SyntaxKind.SearchExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotHasKeyword,Kusto.Language.Syntax.SyntaxKind.NotHasExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.HasCsKeyword,Kusto.Language.Syntax.SyntaxKind.HasCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotHasCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotHasCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.HasPrefixKeyword,Kusto.Language.Syntax.SyntaxKind.HasPrefixExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotHasPrefixKeyword,Kusto.Language.Syntax.SyntaxKind.NotHasPrefixExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.HasPrefixCsKeyword,Kusto.Language.Syntax.SyntaxKind.HasPrefixCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotHasPrefixCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotHasPrefixCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.HasSuffixKeyword,Kusto.Language.Syntax.SyntaxKind.HasSuffixExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotHasSuffixKeyword,Kusto.Language.Syntax.SyntaxKind.NotHasSuffixExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.HasSuffixCsKeyword,Kusto.Language.Syntax.SyntaxKind.HasSuffixCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotHasSuffixCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotHasSuffixCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.LikeKeyword,Kusto.Language.Syntax.SyntaxKind.LikeExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotLikeKeyword,Kusto.Language.Syntax.SyntaxKind.NotLikeExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.LikeCsKeyword,Kusto.Language.Syntax.SyntaxKind.LikeCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotLikeCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotLikeCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.ContainsKeyword,Kusto.Language.Syntax.SyntaxKind.ContainsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotContainsKeyword,Kusto.Language.Syntax.SyntaxKind.NotContainsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotBangContainsKeyword,Kusto.Language.Syntax.SyntaxKind.NotContainsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.ContainsCsKeyword,Kusto.Language.Syntax.SyntaxKind.ContainsCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.Contains_CsKeyword,Kusto.Language.Syntax.SyntaxKind.ContainsCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotContainsCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotContainsCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotBangContainsCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotContainsCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.StartsWithKeyword,Kusto.Language.Syntax.SyntaxKind.StartsWithExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotStartsWithKeyword,Kusto.Language.Syntax.SyntaxKind.NotStartsWithExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.StartsWithCsKeyword,Kusto.Language.Syntax.SyntaxKind.StartsWithCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotStartsWithCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotStartsWithCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.EndsWithKeyword,Kusto.Language.Syntax.SyntaxKind.EndsWithExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotEndsWithKeyword,Kusto.Language.Syntax.SyntaxKind.NotEndsWithExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.EndsWithCsKeyword,Kusto.Language.Syntax.SyntaxKind.EndsWithCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.NotEndsWithCsKeyword,Kusto.Language.Syntax.SyntaxKind.NotEndsWithCsExpression),_o1.add(Kusto.Language.Syntax.SyntaxKind.MatchesRegexKeyword,Kusto.Language.Syntax.SyntaxKind.MatchesRegexExpression),_o1}(new(System.Collections.Generic.Dictionary$2(Kusto.Language.Syntax.SyntaxKind,Kusto.Language.Syntax.SyntaxKind)));this.KnownQueryOperatorParameterNames=System.Array.init(["kind","withsource","with_source","bagexpansion","hint.concurrency","hint.materialized","hint.spread","hint.remote","hint.strategy","hint.shufflekey","hint.num_partitions","expandoutput","isfuzzy","bin_legacy","decodeblocks","with_itemindex","__packedColumn","__noWithSource","__sourceColumnIndex","__crossDB","__crossCluster","__isFuzzy"],System.String)}},methods:{From:function(){return Kusto.Language.Parsing.QueryGrammar.s_Instance==null&&Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.Kusto.Language.Parsing.QueryGrammar,Bridge.ref(Kusto.Language.Parsing.QueryGrammar,"s_Instance"),new Kusto.Language.Parsing.QueryGrammar,null),Kusto.Language.Parsing.QueryGrammar.s_Instance},MissingTokenLiteralNode:function(tokens){return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetTokenExpected$2(tokens)],Kusto.Language.Diagnostic))},MissingTokenLiteral:function(tokens){var diagnostic=Kusto.Language.DiagnosticFacts.GetTokenExpected$2(tokens);return function(){return new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),System.Array.init([diagnostic],Kusto.Language.Diagnostic))}},MissingTokenLiteral$1:function(tokens){return tokens===void 0&&(tokens=[]),Kusto.Language.Parsing.QueryGrammar.MissingTokenLiteral(Bridge.cast(tokens,System.Collections.Generic.IReadOnlyList$1(System.String)))},AsIdentifierNameDeclaration:function(tokenParser){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.NameDeclaration,tokenParser,function(keyword){return new Kusto.Language.Syntax.NameDeclaration.$ctor1(keyword)})},AsIdentifierNameReference:function(tokenParser){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,tokenParser,function(keyword){return Bridge.cast(new Kusto.Language.Syntax.NameReference.$ctor2(keyword),Kusto.Language.Syntax.Expression)})},AsPrimitiveTypeExpression:function(tokenParser){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.TypeExpression,tokenParser,function(typeToken){return Bridge.cast(new Kusto.Language.Syntax.PrimitiveTypeExpression(typeToken),Kusto.Language.Syntax.TypeExpression)})},AsTokenLiteral:function(tokenParser){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,tokenParser,function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression,token),Kusto.Language.Syntax.Expression)})},IsTokenVisible:function(tokenKind){switch(tokenKind){case Kusto.Language.Syntax.SyntaxKind.LikeCsKeyword:case Kusto.Language.Syntax.SyntaxKind.LikeKeyword:case Kusto.Language.Syntax.SyntaxKind.NotLikeCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotLikeKeyword:case Kusto.Language.Syntax.SyntaxKind.ContainsCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotContainsCsKeyword:case Kusto.Language.Syntax.SyntaxKind.NotContainsKeyword:return!1;default:return!0}},NamedParameter:function(tokenParser,valueParser,expressionHint){return expressionHint===void 0&&(expressionHint=0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.QueryGrammar.AsIdentifierNameDeclaration(tokenParser),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),valueParser,function(name,equal,value){return new Kusto.Language.Syntax.NamedParameter(name,equal,value,expressionHint)})},NamedParameter$1:function(tokenParser,valueParser,missingValue,expressionHint){return expressionHint===void 0&&(expressionHint=0),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.QueryGrammar.AsIdentifierNameDeclaration(tokenParser),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,valueParser,missingValue||Kusto.Language.Parsing.QueryGrammar.MissingValue),function(name,equal,value){return new Kusto.Language.Syntax.NamedParameter(name,equal,value,expressionHint)})},NamedParameter$2:function(keyword,valueParser,missingValue,expressionHint){return missingValue===void 0&&(missingValue=null),expressionHint===void 0&&(expressionHint=0),Kusto.Language.Parsing.QueryGrammar.NamedParameter$1(Kusto.Language.Parsing.SyntaxParsers.Token(keyword,void 0,2,(Kusto.Language.Syntax.SyntaxFacts.GetText(keyword)||"")+"="),valueParser,missingValue,expressionHint)},NamedParameter$3:function(keyword,valueParser,missingValue,expressionHint){return missingValue===void 0&&(missingValue=null),expressionHint===void 0&&(expressionHint=0),Kusto.Language.Parsing.QueryGrammar.NamedParameter$1(Kusto.Language.Parsing.SyntaxParsers.Token$3(keyword,void 0,2,(keyword||"")+"="),valueParser,missingValue,expressionHint)}}},props:{QueryBlock:null,Statement:null,StatementList:null,FunctionBody:null,FunctionParameters:null,Expression:null,FollowingPipeElementExpression:null,SimpleNameDeclaration:null,SimpleNameDeclarationExpression:null,BrackettedNameDeclaration:null,IdentifierName:null,BrackettedName:null,BracedName:null,ParamTypeExtended:null,SimpleNameReference:null,ConstantExpression:null,Literal:null,StringLiteral:null,SkippedTokens:null},ctors:{ctor:function(){this.$initialize();this.Initialize()}},methods:{Initialize:function(){var DataScopeClause=null,StringNamedParameter=null,StringNamedParameterK=null,NumericNamedParameter=null,NumericNamedParameterK=null,BooleanNamedParameter=null,BooleanNamedParameterK=null,NameDeclarationNamedParameterL=null,NameDeclarationNamedParameter=null,NameReferenceNamedParameter=null,NameReferenceNamedParameterK=null,TokenNamedParameterK=null,TokenNamedParameter=null,ExpressionCore=null,UnnamedExpressionCore=null,NameAndTypeDeclarationCore=null,LiteralCore=null,StringOrCompoundStringLiteralCore=null,JsonValueCore=null,PrimaryExpressionCore=null,FunctionCallOrPathCore=null,ForkPipeOperatorCore=null,ForkPipeExpressionCore=null,PartitionPipeOperatorCore=null,PartitionPipeExpressionCore=null,LetStatementCore=null,QueryParametersStatementCore=null,UnnamedExpression,NameAndTypeDeclaration,IdentifierTypeExpression,ParamType,ParenthesizedExpression,ToScalarExpression,ToTableExpression,InitialPipeElementExpression,PipeExpression,FunctionBodyStatement,FunctionBodyStatementList,FunctionDeclaration,OptionValueClause,SetOptionStatement;this.Expression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.Expression,function(){return ExpressionCore}).WithTag$1("<expression>");UnnamedExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.Expression,function(){return UnnamedExpressionCore}).WithTag$1("<expression>");NameAndTypeDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.NameAndTypeDeclaration,function(){return NameAndTypeDeclarationCore}).WithTag$1("<name-and-type>");this.Literal=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.Expression,function(){return LiteralCore}).WithTag$1("<literal>");var StringOrCompoundStringLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.Expression,function(){return StringOrCompoundStringLiteralCore}).WithTag$1("<string-literal>"),JsonValue=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.Expression,function(){return JsonValueCore}).WithTag$1("<json-value>"),PrimaryExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.Expression,function(){return PrimaryExpressionCore}).WithTag$1("<primary-expression>"),FunctionCallOrPath=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.Expression,function(){return FunctionCallOrPathCore}).WithTag$1("<function-call-or-path>"),ForkPipeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.QueryOperator,function(){return ForkPipeOperatorCore}).WithTag$1("<fork-pipe-operator>"),ForkPipeExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.Expression,function(){return ForkPipeExpressionCore}).WithTag$1("<fork-pipe-expression>"),PartitionPipeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.QueryOperator,function(){return PartitionPipeOperatorCore}).WithTag$1("<partition-pipe-operator>"),PartitionPipeExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.Expression,function(){return PartitionPipeExpressionCore}).WithTag$1("<partition-pipe-expression>"),LetStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.Statement,function(){return LetStatementCore}).WithTag$1("<let>"),QueryParametersStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Forward(Bridge.global.Kusto.Language.Syntax.Statement,function(){return QueryParametersStatementCore}).WithTag$1("<query-parameters>"),ScanIdentifierName=Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),ScanKeywordAsIdentifier=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$1(function(t){return Kusto.Language.Syntax.SyntaxFacts.GetCategory(t.Kind)===Kusto.Language.Syntax.SyntaxCategory.Keyword&&Kusto.Language.Syntax.SyntaxFacts.CanBeIdentifier(t.Kind)}).WithTag("<keyword>"),KeywordAsIdentifier=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,function(t){return Kusto.Language.Syntax.SyntaxFacts.GetCategory(t.Kind)===Kusto.Language.Syntax.SyntaxCategory.Keyword&&Kusto.Language.Syntax.SyntaxFacts.CanBeIdentifier(t.Kind)},function(t){return Kusto.Language.Syntax.SyntaxToken.From(t)}).WithTag$1("<keyword>");this.IdentifierName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Name,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),KeywordAsIdentifier]),function(token){return Bridge.cast(new Kusto.Language.Syntax.TokenName(token),Kusto.Language.Syntax.Name)});this.BrackettedName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Name,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),StringOrCompoundStringLiteral,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(open,name,close){return Bridge.cast(new Kusto.Language.Syntax.BrackettedName(open,name,close),Kusto.Language.Syntax.Name)});this.BracedName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Name,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),KeywordAsIdentifier]),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(open,name,close){return Bridge.cast(new Kusto.Language.Syntax.BracedName(open,name,close),Kusto.Language.Syntax.Name)});var IdentifierNameDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),function(id){return new Kusto.Language.Syntax.NameDeclaration.$ctor1(id)}).WithTag$1("<identifer>"),IdentifierNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),function(id){return Bridge.cast(new Kusto.Language.Syntax.NameReference.$ctor2(id),Kusto.Language.Syntax.Expression)}).WithTag$1("<identifer>"),ClientParameterReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$1(function(t){return t.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken&&t.TriviaWidth===0}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$1(function(t){return t.Kind===Kusto.Language.Syntax.SyntaxKind.CloseBraceToken&&t.TriviaWidth===0})]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken),function(open,name,close){return Bridge.cast(new Kusto.Language.Syntax.NameReference.ctor(new Kusto.Language.Syntax.BracedName(open,name,close),Kusto.Language.Symbols.SymbolMatch.None),Kusto.Language.Syntax.Expression)})).WithTag$1("<client-parameter>"),ScanBrackettedName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).OneOrMore(Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken))]);this.BrackettedNameDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,StringOrCompoundStringLiteral,Kusto.Language.Parsing.QueryGrammar.MissingStringLiteral),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(openBracket,name,closeBracket){return new Kusto.Language.Syntax.NameDeclaration.ctor(new Kusto.Language.Syntax.BrackettedName(openBracket,name,closeBracket))});var BrackettedNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,StringOrCompoundStringLiteral,Kusto.Language.Parsing.QueryGrammar.MissingStringLiteral),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(openBracket,name,closeBracket){return Bridge.cast(new Kusto.Language.Syntax.NameReference.$ctor1(new Kusto.Language.Syntax.BrackettedName(openBracket,name,closeBracket)),Kusto.Language.Syntax.Expression)}),KeywordNameDeclaration=Kusto.Language.Parsing.QueryGrammar.AsIdentifierNameDeclaration(KeywordAsIdentifier).WithTag$1("<keyword>"),KeywordNameReference=Kusto.Language.Parsing.QueryGrammar.AsIdentifierNameReference(KeywordAsIdentifier).WithTag$1("<keyword>"),NameTokenLiteral=Kusto.Language.Parsing.QueryGrammar.AsTokenLiteral(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),KeywordAsIdentifier])),ScanSimpleName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([ScanIdentifierName,ScanBrackettedName,ScanKeywordAsIdentifier]);this.SimpleNameDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NameDeclaration,[IdentifierNameDeclaration,this.BrackettedNameDeclaration,KeywordNameDeclaration]).WithTag$1("<name>");this.SimpleNameDeclarationExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.Expression,this.SimpleNameDeclaration,function(nd){return Bridge.cast(nd,Kusto.Language.Syntax.Expression)});this.SimpleNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[IdentifierNameReference,BrackettedNameReference,KeywordNameReference,ClientParameterReference]).WithTag$1("<name>");IdentifierTypeExpression=Kusto.Language.Parsing.QueryGrammar.AsPrimitiveTypeExpression(Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken));ParamType=Kusto.Language.Parsing.QueryGrammar.AsPrimitiveTypeExpression(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.BoolKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.BooleanKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DateKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DateTimeKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DecimalKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DoubleKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DynamicKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.GuidKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IntKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.Int64Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.Int8Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LongKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.RealKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.StringKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.TimeKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.TimespanKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.UniqueIdKeyword).Hide$1()]));this.ParamTypeExtended=Kusto.Language.Parsing.QueryGrammar.AsPrimitiveTypeExpression(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.BoolKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.BooleanKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DateKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DateTimeKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DecimalKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DoubleKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DynamicKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.FloatKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.GuidKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IntKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.Int16Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.Int32Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.Int64Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.Int8Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LongKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.RealKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DecimalKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.SingleKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.StringKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.TimeKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.TimespanKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.UIntKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.UInt16Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.UInt32Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.UInt64Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.UInt8Keyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ULongKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.UniqueIdKeyword).Hide$1()]));var ScanSchemaTypeStart=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([ScanSimpleName,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ColonToken),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken)]),StarExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AsteriskToken).Hide$1(),function(star){return Bridge.cast(new Kusto.Language.Syntax.StarExpression(star),Kusto.Language.Syntax.Expression)}),SchemaAsteriskType=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SchemaTypeExpression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),StarExpression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,star,closeParen){return new Kusto.Language.Syntax.SchemaTypeExpression(openParen,new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))(star)]),closeParen)}),SchemaMultipartType=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SchemaTypeExpression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.NameAndTypeDeclaration,Bridge.global.Kusto.Language.Syntax.Expression,NameAndTypeDeclaration,function(nat){return Bridge.cast(nat,Kusto.Language.Syntax.Expression)}),Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingNameAndTypeDeclarationNode,!0,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,columns,closeParen){return new Kusto.Language.Syntax.SchemaTypeExpression(openParen,columns,closeParen)}),SchemaType=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SchemaTypeExpression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.SchemaTypeExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AsteriskToken)]),SchemaAsteriskType),SchemaMultipartType]);NameAndTypeDeclarationCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NameAndTypeDeclaration,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.TypeExpression,Bridge.global.Kusto.Language.Syntax.NameAndTypeDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ColonToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.TypeExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.TypeExpression,[ParamType,IdentifierTypeExpression]),Kusto.Language.Parsing.QueryGrammar.MissingType),function(colon,type){return new Kusto.Language.Syntax.NameAndTypeDeclaration(Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameDeclarationNode.Clone$1(),Kusto.Language.Syntax.NameDeclaration),colon,type)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.NameAndTypeDeclaration,ScanSchemaTypeStart,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SchemaTypeExpression,Bridge.global.Kusto.Language.Syntax.NameAndTypeDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ColonToken),SchemaType,function(name,colon,type){return new Kusto.Language.Syntax.NameAndTypeDeclaration(name,colon,type)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.TypeExpression,Bridge.global.Kusto.Language.Syntax.NameAndTypeDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.ColonToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.TypeExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.TypeExpression,[ParamType,IdentifierTypeExpression]),Kusto.Language.Parsing.QueryGrammar.MissingType),function(name,colon,type){return new Kusto.Language.Syntax.NameAndTypeDeclaration(name,colon,type)})]);var BooleanLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralExpression,token),Kusto.Language.Syntax.Expression)}),BooleanLiteralWithCompletion=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.Token$3("true"),Kusto.Language.Parsing.SyntaxParsers.Token$3("false")]),BooleanLiteral),BooleanLiteral]),LongLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LongLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.LongLiteralExpression,token),Kusto.Language.Syntax.Expression)}),RealLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.RealLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression,token),Kusto.Language.Syntax.Expression)}),DecimalLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DecimalLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.DecimalLiteralExpression,token),Kusto.Language.Syntax.Expression)}),IntLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IntLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.IntLiteralExpression,token),Kusto.Language.Syntax.Expression)}),GuidLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression,token),Kusto.Language.Syntax.Expression)}),DateTimeLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralExpression,token),Kusto.Language.Syntax.Expression)}),TimespanLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.TimespanLiteralExpression,token),Kusto.Language.Syntax.Expression)});this.StringLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,token),Kusto.Language.Syntax.Expression)}).WithTag$1("<string>");var TypeofElement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.NameAndTypeDeclaration,Bridge.global.Kusto.Language.Syntax.Expression,NameAndTypeDeclaration,function(nat){return Bridge.cast(nat,Kusto.Language.Syntax.Expression)}),StarExpression]),ScanTypeOfScalar=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([ParamType,this.ParamTypeExtended.Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)])])]),TypeofLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.Expression,ScanTypeOfScalar,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.TypeExpression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.TypeExpression,[ParamType,this.ParamTypeExtended.Hide$1(),IdentifierTypeExpression.Hide$1()]),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(keyword,openParen,type,closeParen){return Bridge.cast(new Kusto.Language.Syntax.TypeOfLiteralExpression(keyword,openParen,new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).ctor)([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression))(type)]),closeParen),Kusto.Language.Syntax.Expression)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,TypeofElement,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingTypeNode,!0,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(keyword,openParen,list,closeParen){return Bridge.cast(new Kusto.Language.Syntax.TypeOfLiteralExpression(keyword,openParen,list,closeParen),Kusto.Language.Syntax.Expression)})]);StringOrCompoundStringLiteralCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).OneOrMore$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),function(list){return System.Array.getCount(list,Kusto.Language.Syntax.SyntaxToken)===1?Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,System.Array.getItem(list,0,Kusto.Language.Syntax.SyntaxToken)),Kusto.Language.Syntax.Expression):new Kusto.Language.Syntax.CompoundStringLiteralExpression(new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken).$ctor1)(list))});LiteralCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[StringOrCompoundStringLiteral,BooleanLiteral,LongLiteral,RealLiteral,DecimalLiteral,IntLiteral,GuidLiteral,DateTimeLiteral,TimespanLiteral,TypeofLiteral,ClientParameterReference]);var KeywordTokenLiteral=Kusto.Language.Parsing.QueryGrammar.AsTokenLiteral(KeywordAsIdentifier).WithTag$1("<keyword>"),NullLiteralExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token$3("null"),function(token){return Bridge.cast(new Kusto.Language.Syntax.LiteralExpression(Kusto.Language.Syntax.SyntaxKind.NullLiteralExpression,token),Kusto.Language.Syntax.Expression)}),JsonPair=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.JsonPair,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.JsonPair,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.ColonToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,JsonValue,Kusto.Language.Parsing.QueryGrammar.MissingJsonValue),function(name,colon,value){return new Kusto.Language.Syntax.JsonPair(name,colon,value)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.JsonPair,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ColonToken).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,JsonValue,Kusto.Language.Parsing.QueryGrammar.MissingJsonValue),function(colonToken,value){return new Kusto.Language.Syntax.JsonPair(Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken,Kusto.Language.DiagnosticFacts.GetMissingString()),colonToken,value)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.JsonPair,JsonValue.Hide$1(),function(value){return new Kusto.Language.Syntax.JsonPair(Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken,Kusto.Language.DiagnosticFacts.GetMissingString()),Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.ColonToken),value)})]).WithTag$1("<json-pair>"),JsonObject=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.JsonPair)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.JsonPair,JsonPair,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingJsonPairNode,!1,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken),function(openBrace,list,closeBrace){return Bridge.cast(new Kusto.Language.Syntax.JsonObjectExpression(openBrace,list,closeBrace),Kusto.Language.Syntax.Expression)}).WithTag$1("<json-object>"),JsonArray=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,JsonValue,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingJsonValueNode,!1,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(openBracket,values,closeBracket){return Bridge.cast(new Kusto.Language.Syntax.JsonArrayExpression(openBracket,values,closeBracket),Kusto.Language.Syntax.Expression)}).WithTag$1("<json-array>"),DynamicLiteral=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DynamicKeyword,Kusto.Language.Editor.CompletionKind.ScalarPrefix),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[NullLiteralExpression,JsonValue]),Kusto.Language.Parsing.QueryGrammar.MissingJsonValue),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(dynamicKeyword,openParen,value,closeParen){return Bridge.cast(new Kusto.Language.Syntax.DynamicExpression(dynamicKeyword,openParen,value,closeParen),Kusto.Language.Syntax.Expression)}).WithTag$1("<dynamic>"),JsonNumber=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.MinusToken).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[LongLiteral,RealLiteral]),function(unaryOp,value){return Bridge.cast(new Kusto.Language.Syntax.PrefixUnaryExpression(Kusto.Language.Syntax.SyntaxKind.UnaryMinusExpression,unaryOp,value),Kusto.Language.Syntax.Expression)}),LongLiteral,RealLiteral]);JsonValueCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[StringOrCompoundStringLiteral,JsonNumber,TimespanLiteral,BooleanLiteral,DateTimeLiteral,GuidLiteral,DecimalLiteral,DynamicLiteral,NullLiteralExpression,JsonObject,JsonArray,ClientParameterReference]);ParenthesizedExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,expression,closeParen){return Bridge.cast(new Kusto.Language.Syntax.ParenthesizedExpression(openParen,expression,closeParen),Kusto.Language.Syntax.Expression)});this.ConstantExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[this.Literal,DynamicLiteral]).WithTag$1("<constant>");var NumericConstantExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[LongLiteral,IntLiteral,RealLiteral,DateTimeLiteral,TimespanLiteral]).WithTag$1("<numeric-constant>"),ScanRenameName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([ScanIdentifierName,ScanKeywordAsIdentifier,ScanBrackettedName]),ScanRenameList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([ScanRenameName,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CommaToken))])),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CloseParenToken))]),RenameName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NameDeclaration,[this.SimpleNameDeclaration,KeywordNameDeclaration]).WithTag$1("<name>"),RenameList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameDeclaration)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.RenameList,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.NameDeclaration,RenameName,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingNameDeclarationNode,!0,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,list,closeParen){return new Kusto.Language.Syntax.RenameList(openParen,list,closeParen)}),NamedExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([RenameName,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualToken)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,RenameName,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(name,equals,expr){return Bridge.cast(new Kusto.Language.Syntax.SimpleNamedExpression(name,equals,expr),Kusto.Language.Syntax.Expression)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([ScanRenameList,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualToken)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.RenameList,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,RenameList,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(list,equals,expr){return Bridge.cast(new Kusto.Language.Syntax.CompoundNamedExpression(list,equals,expr),Kusto.Language.Syntax.Expression)})),UnnamedExpression]).WithTag$1("<expression>"),Argument=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AsteriskToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CommaToken)])]),StarExpression),NamedExpression]),FunctionArgumentList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.ExpressionList,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,Argument,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!1,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,list,closeParen){return new Kusto.Language.Syntax.ExpressionList(openParen,list,closeParen)}),knownFunctionNames=System.Linq.Enumerable.from(Kusto.Language.Functions.All).select(function(f){return f.Name}).concat(System.Linq.Enumerable.from(Kusto.Language.Aggregates.All).select(function(f){return f.Name})).ToArray(System.String),ScanKnownFunctionNames=Kusto.Language.Parsing.SyntaxParsers.Token$2(knownFunctionNames).Hide$1(),KnownFunctionNameReference=Kusto.Language.Parsing.QueryGrammar.AsIdentifierNameReference(Kusto.Language.Parsing.SyntaxParsers.Token$2(knownFunctionNames).Hide$1()),ScanFunctionCall=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([ScanIdentifierName,ScanBrackettedName,ScanKnownFunctionNames]),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken)]),FunctionCallNames=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[this.SimpleNameReference,KnownFunctionNameReference]),FunctionCall=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.ExpressionList,Bridge.global.Kusto.Language.Syntax.Expression,FunctionCallNames,FunctionArgumentList,function(name,$arguments){return Bridge.cast(new Kusto.Language.Syntax.FunctionCallExpression(Bridge.cast(name,Kusto.Language.Syntax.NameReference),$arguments),Kusto.Language.Syntax.Expression)}).WithTag$1("<FunctionCall>"),DotCompositeFunctionCall=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,FunctionCall,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.Expression,ScanFunctionCall,FunctionCall),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(left,op,right),Kusto.Language.Syntax.Expression)})}),AtTokenSelector=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AtToken),function(token){return Bridge.cast(new Kusto.Language.Syntax.AtExpression(token),Kusto.Language.Syntax.Expression)}),BarePathElementSelector=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[AtTokenSelector,IdentifierNameReference,KeywordNameReference,ClientParameterReference]),ScanWildcard=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$1(function(t){return t.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||Kusto.Language.Syntax.SyntaxFacts.GetCategory(t.Kind)===Kusto.Language.Syntax.SyntaxCategory.Keyword}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$1(function(t){return t.Kind===Kusto.Language.Syntax.SyntaxKind.AsteriskToken&&t.Trivia.length===0})]),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AsteriskToken)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$1(function(t){return(t.Kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken||t.Kind===Kusto.Language.Syntax.SyntaxKind.LongLiteralToken||t.Kind===Kusto.Language.Syntax.SyntaxKind.AsteriskToken||Kusto.Language.Syntax.SyntaxFacts.GetCategory(t.Kind)===Kusto.Language.Syntax.SyntaxCategory.Keyword)&&t.Trivia.length===0}))]),WildcardedNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Convert$3(Bridge.global.Kusto.Language.Syntax.Expression,ScanWildcard.Hide(),function(list){return Bridge.cast(new Kusto.Language.Syntax.NameReference.$ctor1(new Kusto.Language.Syntax.WildcardedName(Kusto.Language.Syntax.SyntaxToken.Identifier(System.Array.getItem(list,0,Kusto.Language.Parsing.LexicalToken).Trivia,System.String.concat(Bridge.toArray(System.Linq.Enumerable.from(list).select(function(t){return t.Text})))))),Kusto.Language.Syntax.Expression)}).WithTag$1("<wildcard>"),Conditioned=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.QuestionToken),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(question,openParen,expr,closeParen){return Bridge.cast(new Kusto.Language.Syntax.ConditionedExpression(question,openParen,expr,closeParen),Kusto.Language.Syntax.Expression)}).WithTag$1("<conditioned>"),InvocationExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.MinusToken).Hide$1(),FunctionCallOrPath,function(op,expr){return Bridge.cast(new Kusto.Language.Syntax.PrefixUnaryExpression(Kusto.Language.Syntax.SyntaxKind.UnaryMinusExpression,op,expr),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.PlusToken).Hide$1(),FunctionCallOrPath,function(op,expr){return Bridge.cast(new Kusto.Language.Syntax.PrefixUnaryExpression(Kusto.Language.Syntax.SyntaxKind.UnaryPlusExpression,op,expr),Kusto.Language.Syntax.Expression)}),FunctionCallOrPath]),BrackettedPathElementSelector=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[WildcardedNameReference,Conditioned,InvocationExpression]).Hide$1(),Kusto.Language.Parsing.QueryGrammar.MissingNameReference),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(openBracket,expr,closeBracket){return Bridge.cast(new Kusto.Language.Syntax.BrackettedExpression(openBracket,expr,closeBracket),Kusto.Language.Syntax.Expression)}),PathElementSelector=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[BarePathElementSelector,BrackettedPathElementSelector]),BrackettedEntityNamePathElementSelector=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[WildcardedNameReference,this.StringLiteral]),Kusto.Language.Parsing.QueryGrammar.MissingNameReference),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(openBracket,expr,closeBracket){return Bridge.cast(new Kusto.Language.Syntax.BrackettedExpression(openBracket,expr,closeBracket),Kusto.Language.Syntax.Expression)}),EntityPathExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,PathElementSelector,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$2(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,PathElementSelector,Kusto.Language.Parsing.QueryGrammar.MissingNameReference),function(left,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(left,dot,selector),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,BrackettedPathElementSelector,function(left,right){return Bridge.cast(new Kusto.Language.Syntax.ElementExpression(left,right),Kusto.Language.Syntax.Expression)})])}),EntityReferenceExpression=EntityPathExpression.WithTag$1("<entity>"),ScanWildcardedEntityReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([ScanWildcard,ScanFunctionCall]),SimpleOrWildcardedEntityReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[WildcardedNameReference,this.SimpleNameReference]).WithTag$1("<simple-or-wildcarded-entity>"),WildcardedEntityReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[WildcardedNameReference,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.Expression,ScanFunctionCall,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Bridge.global.Kusto.Language.Syntax.Expression,DotCompositeFunctionCall,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[WildcardedNameReference,BarePathElementSelector,BrackettedEntityNamePathElementSelector]),Kusto.Language.Parsing.QueryGrammar.MissingNameReference),function(path,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(path,dot,selector),Kusto.Language.Syntax.Expression)})}))]).WithTag$1("<wildcarded-entity>");TokenNamedParameter=Bridge.fn.bind(this,function(keyword,tokenValues){return tokenValues!=null?Kusto.Language.Parsing.QueryGrammar.NamedParameter$3(keyword,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.QueryGrammar.AsTokenLiteral(Kusto.Language.Parsing.SyntaxParsers.Token$2(tokenValues)),Kusto.Language.Parsing.QueryGrammar.AsTokenLiteral(Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)).Hide$1(),this.ConstantExpression.Hide$1()]),Kusto.Language.Parsing.QueryGrammar.MissingTokenLiteral(tokenValues)):Kusto.Language.Parsing.QueryGrammar.NamedParameter$3(keyword,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.QueryGrammar.AsTokenLiteral(Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),this.ConstantExpression.Hide$1()]),Kusto.Language.Parsing.QueryGrammar.MissingTokenLiteral$1(["token"]))});ToScalarExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.NamedParameter,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ToScalarKeyword,Kusto.Language.Editor.CompletionKind.ScalarPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,TokenNamedParameter("kind",Kusto.Language.KustoFacts.ToScalarKinds).Hide$1()),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(name,kind,openParen,expression,closeParen){return Bridge.cast(new Kusto.Language.Syntax.ToScalarExpression(name,kind,openParen,expression,closeParen),Kusto.Language.Syntax.Expression)});ToTableExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.NamedParameter,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ToTableKeyword,Kusto.Language.Editor.CompletionKind.TabularPrefix).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,TokenNamedParameter("kind",Kusto.Language.KustoFacts.ToTableKinds).Hide$1()),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(name,kind,openParen,expression,closeParen){return Bridge.cast(new Kusto.Language.Syntax.ToTableExpression(name,kind,openParen,expression,closeParen),Kusto.Language.Syntax.Expression)});FunctionCallOrPathCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[ToTableExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[ToScalarExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.Expression,ScanFunctionCall,DotCompositeFunctionCall),PrimaryExpression]),function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$2(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,PathElementSelector,Kusto.Language.Parsing.QueryGrammar.MissingNameReference),function(left,dot,selector){return Bridge.cast(new Kusto.Language.Syntax.PathExpression(left,dot,selector),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,BrackettedPathElementSelector,function(left,right){return Bridge.cast(new Kusto.Language.Syntax.ElementExpression(left,right),Kusto.Language.Syntax.Expression)})])})]);var RequiredFunctionCallOrPath=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,FunctionCallOrPath,Kusto.Language.Parsing.QueryGrammar.MissingExpression),UnaryPlusOrMinus=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.PlusToken).Hide$1(),RequiredFunctionCallOrPath,function(op,expr){return Bridge.cast(new Kusto.Language.Syntax.PrefixUnaryExpression(Kusto.Language.Syntax.SyntaxKind.UnaryPlusExpression,op,expr),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.MinusToken).Hide$1(),RequiredFunctionCallOrPath,function(op,expr){return Bridge.cast(new Kusto.Language.Syntax.PrefixUnaryExpression(Kusto.Language.Syntax.SyntaxKind.UnaryMinusExpression,op,expr),Kusto.Language.Syntax.Expression)}),FunctionCallOrPath]),RequiredUnaryPlusOrMinus=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnaryPlusOrMinus,Kusto.Language.Parsing.QueryGrammar.MissingExpression),StringOperatorTokens=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,System.Linq.Enumerable.from(Kusto.Language.Parsing.QueryGrammar.StringOperatorMap.getKeys()).select(function(k){return Kusto.Language.Parsing.QueryGrammar.IsTokenVisible(k)?Kusto.Language.Parsing.SyntaxParsers.Token(k,Kusto.Language.Editor.CompletionKind.ScalarInfix,2,(Kusto.Language.Syntax.SyntaxFacts.GetText(k)||"")+' "|"'):Kusto.Language.Parsing.SyntaxParsers.Token(k).Hide$1()}).ToArray(Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken))),StringOperation=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AsteriskToken).Hide$1(),StringOperatorTokens,RequiredUnaryPlusOrMinus,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Parsing.QueryGrammar.StringOperatorMap.get(op.Kind),new Kusto.Language.Syntax.StarExpression(left),op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Bridge.global.Kusto.Language.Syntax.Expression,UnaryPlusOrMinus,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,StringOperatorTokens,RequiredUnaryPlusOrMinus,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Parsing.QueryGrammar.StringOperatorMap.get(op.Kind),left,op,right),Kusto.Language.Syntax.Expression)})})]),RequiredStringOperation=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,StringOperation,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Multiplicative=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,StringOperation,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$2(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AsteriskToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredStringOperation,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.MultiplyExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.SlashToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredStringOperation,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.DivideExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.PercentToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredStringOperation,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.ModuloExpression,left,op,right),Kusto.Language.Syntax.Expression)})])}),RequiredMultiplicative=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,Multiplicative,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Additive=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,Multiplicative,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$2(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.PlusToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredMultiplicative,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.AddExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.MinusToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredMultiplicative,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.SubtractExpression,left,op,right),Kusto.Language.Syntax.Expression)})])}),RequiredAdditive=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,Additive,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Relational=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,Additive,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$2(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LessThanToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredAdditive,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.LessThanExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredAdditive,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.GreaterThanToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredAdditive,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.GreaterThanExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredAdditive,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualExpression,left,op,right),Kusto.Language.Syntax.Expression)})])}),RequiredRelational=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,Relational,Kusto.Language.Parsing.QueryGrammar.MissingExpression),ExpressionCouple=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.ExpressionCouple,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,FunctionCallOrPath,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.DotDotToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,FunctionCallOrPath,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,first,dotDot,second,closeParen){return new Kusto.Language.Syntax.ExpressionCouple(openParen,first,dotDot,second,closeParen)}),InOperatorExpressionList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.ExpressionList,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,list,closeParen){return new Kusto.Language.Syntax.ExpressionList(openParen,list,closeParen)}),Equality=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AsteriskToken).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualEqualToken),Relational,function(asterisk,equal,expression){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.EqualExpression,new Kusto.Language.Syntax.StarExpression(asterisk),equal,expression),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Bridge.global.Kusto.Language.Syntax.Expression,Relational,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$2(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualEqualToken,Kusto.Language.Editor.CompletionKind.ScalarInfix,Kusto.Language.Editor.CompletionPriority.Top),RequiredRelational,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.EqualExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.BangEqualToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredRelational,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.NotEqualExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LessThanGreaterThanToken,Kusto.Language.Editor.CompletionKind.ScalarInfix).Hide$1(),RequiredRelational,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.NotEqualExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.ExpressionList,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.InKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix,2,(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.InKeyword)||"")+" (|)"),InOperatorExpressionList,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.InExpression(Kusto.Language.Syntax.SyntaxKind.InExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.ExpressionList,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.InCsKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix,2,(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.InCsKeyword)||"")+" (|)"),InOperatorExpressionList,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.InExpression(Kusto.Language.Syntax.SyntaxKind.InCsExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.ExpressionList,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.NotInKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix,2,(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.NotInKeyword)||"")+" (|)"),InOperatorExpressionList,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.InExpression(Kusto.Language.Syntax.SyntaxKind.NotInExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.ExpressionList,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.NotInCsKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix,2,(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.NotInCsKeyword)||"")+" (|)"),InOperatorExpressionList,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.InExpression(Kusto.Language.Syntax.SyntaxKind.NotInCsExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.ExpressionList,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.HasAnyKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix,2,(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.HasAnyKeyword)||"")+" (|)"),InOperatorExpressionList,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.HasAnyExpression(Kusto.Language.Syntax.SyntaxKind.HasAnyKeyword,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.ExpressionCouple,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.BetweenKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix,2,(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.BetweenKeyword)||"")+" (|)"),ExpressionCouple,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BetweenExpression(Kusto.Language.Syntax.SyntaxKind.BetweenExpression,left,op,right),Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.ExpressionCouple,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.NotBetweenKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix,2,(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.NotBetweenKeyword)||"")+" (|)"),ExpressionCouple,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BetweenExpression(Kusto.Language.Syntax.SyntaxKind.NotBetweenExpression,left,op,right),Kusto.Language.Syntax.Expression)})])})]),LogicalAnd=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,Equality,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AndKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,Equality,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.AndExpression,left,op,right),Kusto.Language.Syntax.Expression)})}),LogicalOr=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,LogicalAnd,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OrKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,LogicalAnd,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.OrExpression,left,op,right),Kusto.Language.Syntax.Expression)})}),QueryOperatorParameter=Kusto.Language.Parsing.QueryGrammar.NamedParameter(Kusto.Language.Parsing.SyntaxParsers.Token$2(Kusto.Language.Parsing.QueryGrammar.KnownQueryOperatorParameterNames).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.QueryGrammar.AsTokenLiteral(Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),BooleanLiteral,NumericConstantExpression,StringOrCompoundStringLiteral])).Hide$1();BooleanNamedParameter=Bridge.fn.bind(this,function(keyword){return Kusto.Language.Parsing.QueryGrammar.NamedParameter$3(keyword,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[BooleanLiteralWithCompletion,this.SimpleNameReference,this.ConstantExpression.Hide$1()]),Kusto.Language.Parsing.QueryGrammar.MissingBooleanLiteral)});var ConsumeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ConsumeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[BooleanNamedParameter("decodeblocks"),QueryOperatorParameter])),function(consume,parameters){return Bridge.cast(new Kusto.Language.Syntax.ConsumeOperator(consume,parameters),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<consume>"),CountAsIdentifierClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.CountAsIdentifierClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AsKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),function(asKeyword,identifier){return new Kusto.Language.Syntax.CountAsIdentifierClause(asKeyword,identifier)}),CountOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.CountAsIdentifierClause,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CountKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.CountAsIdentifierClause,CountAsIdentifierClause),function(countKeyword,asIdentifier){return Bridge.cast(new Kusto.Language.Syntax.CountOperator(countKeyword,asIdentifier),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<count>"),ExecuteAndCacheOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ExecuteAndCacheKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),function(keyword){return Bridge.cast(new Kusto.Language.Syntax.ExecuteAndCacheOperator(keyword),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<execute-and-cache>"),ExtendOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ExtendKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),function(keyword,list){return Bridge.cast(new Kusto.Language.Syntax.ExtendOperator(keyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<extend>"),FacetWithClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.FacetWithClause,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.FacetWithClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.WithKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,ForkPipeExpression,Kusto.Language.Parsing.QueryGrammar.MissingQueryOperatorExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(withKeyword,openParen,expr,closeParen){return Bridge.cast(new Kusto.Language.Syntax.FacetWithExpressionClause(withKeyword,openParen,expr,closeParen),Kusto.Language.Syntax.FacetWithClause)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.QueryOperator,Bridge.global.Kusto.Language.Syntax.FacetWithClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.WithKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.QueryOperator,ForkPipeOperator,Kusto.Language.Parsing.QueryGrammar.MissingQueryOperator),function(withKeyword,op){return Bridge.cast(new Kusto.Language.Syntax.FacetWithOperatorClause(withKeyword,op),Kusto.Language.Syntax.FacetWithClause)})]),FacetOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.FacetWithClause,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.FacetKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,EntityReferenceExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingNameReferenceNode,!0,!1),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.FacetWithClause,FacetWithClause),function(facetKeyword,byKeyword,list,withClause){return Bridge.cast(new Kusto.Language.Syntax.FacetOperator(facetKeyword,byKeyword,list,withClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<facet>"),FilterOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.WhereKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Top),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.FilterKeyword).Hide$1()]),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,QueryOperatorParameter),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(keyword,parameters,condition){return Bridge.cast(new Kusto.Language.Syntax.FilterOperator(keyword,parameters,condition),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<filter>"),GetSchemaOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.GetSchemaKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),function(keyword){return Bridge.cast(new Kusto.Language.Syntax.GetSchemaOperator(keyword),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<get-schema>"),FindOperand=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[WildcardedEntityReference,BrackettedEntityNamePathElementSelector,BarePathElementSelector]),FindInClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.FindInClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.InKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,FindOperand,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(inKeyword,openParen,exprs,closeParen){return new Kusto.Language.Syntax.FindInClause(inKeyword,openParen,exprs,closeParen)}),ColumnNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[IdentifierNameReference,KeywordNameReference,BrackettedNameReference,ClientParameterReference]).WithTag$1("<column>"),TypedColumnNameReference=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Bridge.global.Kusto.Language.Syntax.Expression,ColumnNameReference,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.TypeExpression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ColonToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.TypeExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.TypeExpression,[this.ParamTypeExtended,IdentifierTypeExpression]),Kusto.Language.Parsing.QueryGrammar.MissingType),function(name,colon,type){return Bridge.cast(new Kusto.Language.Syntax.TypedColumnReference(Bridge.cast(name,Kusto.Language.Syntax.NameReference),colon,type),Kusto.Language.Syntax.Expression)})})),PackExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.PackKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.AsteriskToken,Kusto.Language.Editor.CompletionKind.Syntax),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(pack,openParen,asterisk,closeParen){return Bridge.cast(new Kusto.Language.Syntax.PackExpression(pack,openParen,asterisk,closeParen),Kusto.Language.Syntax.Expression)}),FindProjectColumn=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[PackExpression,StarExpression,TypedColumnNameReference]),FindProjectClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.FindProjectClause,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.FindProjectClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ProjectKeyword),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,FindProjectColumn,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),function(token,list){return new Kusto.Language.Syntax.FindProjectClause(token,list)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.FindProjectClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ProjectSmartKeyword),function(token){return new Kusto.Language.Syntax.FindProjectClause(token,Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty())})]),FindProjectAwayClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.FindProjectClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind._ProjectAwayKeyword),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,FindProjectColumn,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),function(token,list){return new Kusto.Language.Syntax.FindProjectClause(token,list)});NameDeclarationNamedParameter=Bridge.fn.bind(this,function(keyword,expressionHint){return Kusto.Language.Parsing.QueryGrammar.NamedParameter$3(keyword,this.SimpleNameDeclarationExpression,Kusto.Language.Parsing.QueryGrammar.MissingNameDeclarationExpression,expressionHint)});DataScopeClause=function(ckind){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.DataScopeClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DataScopeKeyword,ckind).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.SyntaxParsers.RequiredToken$2(Kusto.Language.KustoFacts.DataScopeValues),function(dataScopeKeyword,equalToken,valueToken){return new Kusto.Language.Syntax.DataScopeClause(dataScopeKeyword,equalToken,valueToken)})};var FindOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$7(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.DataScopeClause,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.FindInClause,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.FindProjectClause,Bridge.global.Kusto.Language.Syntax.FindProjectClause,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.FindKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.DataScopeClause,DataScopeClause(Kusto.Language.Editor.CompletionKind.Syntax)),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[NameDeclarationNamedParameter(Kusto.Language.KustoFacts.FindWithSourceProperty,0),QueryOperatorParameter])),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.FindInClause,FindInClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.WhereKeyword)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.FindProjectClause,FindProjectClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.FindProjectClause,FindProjectAwayClause).Hide$1(),function(findKeyword,dataScope,parameters,inClause,whereKeyword,condition,project,projectAway){return Bridge.cast(new Kusto.Language.Syntax.FindOperator(findKeyword,dataScope,parameters,inClause,whereKeyword||(parameters.ChildCount>0||inClause!=null?Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(Kusto.Language.Syntax.SyntaxKind.WhereKeyword):null),condition,project,projectAway),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<find>"),SearchPredicate=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[UnnamedExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Bridge.global.Kusto.Language.Syntax.Expression,StarExpression,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AndKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.AndExpression,left,op,right),Kusto.Language.Syntax.Expression)})})]),SearchOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.DataScopeClause,Bridge.global.Kusto.Language.Syntax.FindInClause,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.SearchKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[TokenNamedParameter("kind",Kusto.Language.KustoFacts.SearchKinds),QueryOperatorParameter])),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.DataScopeClause,DataScopeClause(Kusto.Language.Editor.CompletionKind.Syntax)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.FindInClause,FindInClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,SearchPredicate,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(keyword,parameters,dataScope,inClause,predicate){return Bridge.cast(new Kusto.Language.Syntax.SearchOperator(keyword,parameters,dataScope,inClause,predicate),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<search>"),NameEqualsClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.NameEqualsClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.NameEqualsClause,this.SimpleNameDeclaration,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),function(name,equalsToken){return new Kusto.Language.Syntax.NameEqualsClause(name,equalsToken)})),ForkExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.NameEqualsClause,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.ForkExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.NameEqualsClause,NameEqualsClause),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,ForkPipeExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(nameClause,openParen,expr,closeParen){return new Kusto.Language.Syntax.ForkExpression(nameClause,openParen,expr,closeParen)}),ForkOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.ForkExpression),Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ForkKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.ForkExpression,ForkExpression,Kusto.Language.Parsing.QueryGrammar.MissingForkExpressionNode,!0),function(forkKeyword,list){return Bridge.cast(new Kusto.Language.Syntax.ForkOperator(forkKeyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<fork>"),PartitionQueryExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.PartitionExpression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken),function(openParen,expr,closeParen){return new Kusto.Language.Syntax.PartitionExpression(openParen,expr,closeParen)}),PartitionSubqueryExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.PartitionExpression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,PartitionPipeExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,expr,closeParen){return new Kusto.Language.Syntax.PartitionExpression(openParen,expr,closeParen)});TokenNamedParameterK=Bridge.fn.bind(this,function(keyword,tokenValues){return tokenValues!=null?Kusto.Language.Parsing.QueryGrammar.NamedParameter$2(keyword,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.QueryGrammar.AsTokenLiteral(Kusto.Language.Parsing.SyntaxParsers.Token$2(tokenValues)),Kusto.Language.Parsing.QueryGrammar.AsTokenLiteral(Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)).Hide$1(),this.ConstantExpression.Hide$1()]),Kusto.Language.Parsing.QueryGrammar.MissingTokenLiteral(tokenValues)):Kusto.Language.Parsing.QueryGrammar.NamedParameter$2(keyword,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.QueryGrammar.AsTokenLiteral(Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),this.ConstantExpression.Hide$1()]),Kusto.Language.Parsing.QueryGrammar.MissingTokenLiteral$1(["token"]))});BooleanNamedParameterK=Bridge.fn.bind(this,function(keyword){return Kusto.Language.Parsing.QueryGrammar.NamedParameter$2(keyword,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[BooleanLiteralWithCompletion,this.SimpleNameReference,this.ConstantExpression.Hide$1()]),Kusto.Language.Parsing.QueryGrammar.MissingBooleanLiteral)});var PartitionOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.PartitionExpression,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.PartitionKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[TokenNamedParameterK(Kusto.Language.Syntax.SyntaxKind.HintDotSpreadKeyword,Kusto.Language.KustoFacts.JoinHintRemotes),TokenNamedParameterK(Kusto.Language.Syntax.SyntaxKind.HintDotConcurrencyKeyword,Kusto.Language.KustoFacts.JoinHintRemotes),BooleanNamedParameterK(Kusto.Language.Syntax.SyntaxKind.HintDotMaterializedKeyword),QueryOperatorParameter])),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,EntityReferenceExpression,Kusto.Language.Parsing.QueryGrammar.MissingNameReference),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.PartitionExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.PartitionExpression,[PartitionSubqueryExpression,PartitionQueryExpression]),Kusto.Language.Parsing.QueryGrammar.MissingPartitionSubqueryExpression),function(partitionKeyword,parameters,byKeyword,byExpression,operand){return Bridge.cast(new Kusto.Language.Syntax.PartitionOperator(partitionKeyword,parameters,byKeyword,byExpression,operand),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<partition>"),JoinEqualityExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Bridge.global.Kusto.Language.Syntax.Expression,FunctionCallOrPath,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualEqualToken,Kusto.Language.Editor.CompletionKind.ScalarInfix),RequiredFunctionCallOrPath,function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.EqualExpression,left,op,right),Kusto.Language.Syntax.Expression)})}),JoinAndExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,JoinEqualityExpression,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AndKeyword,Kusto.Language.Editor.CompletionKind.ScalarInfix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,JoinEqualityExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.BinaryExpression(Kusto.Language.Syntax.SyntaxKind.AndExpression,left,op,right),Kusto.Language.Syntax.Expression)})}),JoinOnExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Best$1(Bridge.global.Kusto.Language.Syntax.Expression,[JoinAndExpression,UnnamedExpression.Hide$1()]),JoinOnClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.JoinConditionClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OnKeyword),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,JoinOnExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),function(onKeyword,list){return Bridge.cast(new Kusto.Language.Syntax.JoinOnClause(onKeyword,list),Kusto.Language.Syntax.JoinConditionClause)}),JoinWhereClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.JoinConditionClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.WhereKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(keyword,predicate){return Bridge.cast(new Kusto.Language.Syntax.JoinWhereClause(keyword,predicate),Kusto.Language.Syntax.JoinConditionClause)});NameReferenceNamedParameterK=Bridge.fn.bind(this,function(keyword,expressionHint){return Kusto.Language.Parsing.QueryGrammar.NamedParameter$2(keyword,this.SimpleNameReference,Kusto.Language.Parsing.QueryGrammar.MissingNameReference,expressionHint)});NumericNamedParameterK=Bridge.fn.bind(this,function(keyword){return Kusto.Language.Parsing.QueryGrammar.NamedParameter$2(keyword,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[NumericConstantExpression,this.SimpleNameReference,this.ConstantExpression.Hide$1()]),Kusto.Language.Parsing.QueryGrammar.MissingLongLiteral)});var JoinOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.JoinConditionClause,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.JoinKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[TokenNamedParameterK(Kusto.Language.Syntax.SyntaxKind.KindKeyword,Kusto.Language.KustoFacts.JoinKinds),TokenNamedParameterK(Kusto.Language.Syntax.SyntaxKind.HintDotRemoteKeyword,Kusto.Language.KustoFacts.JoinHintRemotes),NameReferenceNamedParameterK(Kusto.Language.Syntax.SyntaxKind.HintDotShuffleKeyKeyword,Kusto.Language.Editor.CompletionHint.Column),TokenNamedParameterK(Kusto.Language.Syntax.SyntaxKind.HintDotStrategyKeyword,Kusto.Language.KustoFacts.JoinHintStrategies),NumericNamedParameterK(Kusto.Language.Syntax.SyntaxKind.HintDotNumPartitions),QueryOperatorParameter])),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.JoinConditionClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.JoinConditionClause,[JoinOnClause,JoinWhereClause.Hide$1()])),function(joinKeyword,parameters,expr,condition){return Bridge.cast(new Kusto.Language.Syntax.JoinOperator(joinKeyword,parameters,expr,condition),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<join>"),LookupOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.JoinConditionClause,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LookupKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,TokenNamedParameterK(Kusto.Language.Syntax.SyntaxKind.KindKeyword,Kusto.Language.KustoFacts.JoinKinds)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.JoinConditionClause,JoinOnClause,Kusto.Language.Parsing.QueryGrammar.MissingJoinOnClause),function(LookupKeyword,parameters,expr,onClause){return Bridge.cast(new Kusto.Language.Syntax.LookupOperator(LookupKeyword,parameters,expr,onClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<lookup>"),MakeSeriesOnClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.MakeSeriesOnClause,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OnKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(keyword,expr){return new Kusto.Language.Syntax.MakeSeriesOnClause(keyword,expr)}),MakeSeriesInRangeClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.MakeSeriesRangeClause,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.InKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.RangeKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(inKeyword,rangeKeyword,openParen,list,closeParen){return Bridge.cast(new Kusto.Language.Syntax.MakeSeriesInRangeClause(inKeyword,rangeKeyword,new Kusto.Language.Syntax.ExpressionList(openParen,list,closeParen)),Kusto.Language.Syntax.MakeSeriesRangeClause)}),MakeSeriesFromToStepClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$5(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.MakeSeriesRangeClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.FromKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.ToKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.StepKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(FromToken,fromEx,ToToken,toEx,stepToken,stepEx){return Bridge.cast(new Kusto.Language.Syntax.MakeSeriesFromToStepClause(FromToken,fromEx,ToToken,toEx,stepToken,stepEx),Kusto.Language.Syntax.MakeSeriesRangeClause)}),MakeSeriesByClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.MakeSeriesByClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),function(keyword,list){return new Kusto.Language.Syntax.MakeSeriesByClause(keyword,list)}),DefaultExpressionClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.DefaultExpressionClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DefaultKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(defaultKeyword,equalToken,expr){return new Kusto.Language.Syntax.DefaultExpressionClause(defaultKeyword,equalToken,expr)}),MakeSeriesExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.DefaultExpressionClause,Bridge.global.Kusto.Language.Syntax.MakeSeriesExpression,NamedExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.DefaultExpressionClause,DefaultExpressionClause),function(agg,defexp){return new Kusto.Language.Syntax.MakeSeriesExpression(agg,defexp)}),MakeSeriesOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$5(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MakeSeriesExpression)),Bridge.global.Kusto.Language.Syntax.MakeSeriesOnClause,Bridge.global.Kusto.Language.Syntax.MakeSeriesRangeClause,Bridge.global.Kusto.Language.Syntax.MakeSeriesByClause,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.MakeSeriesKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,QueryOperatorParameter),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.MakeSeriesExpression,MakeSeriesExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingMakeSeriesExpressionNode,!0,!1),MakeSeriesOnClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.MakeSeriesRangeClause,[MakeSeriesFromToStepClause,MakeSeriesInRangeClause]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.MakeSeriesByClause,MakeSeriesByClause),function(keyword,parameters,aggregates,onClause,rangeClause,byClause){return Bridge.cast(new Kusto.Language.Syntax.MakeSeriesOperator(keyword,parameters,aggregates,onClause,rangeClause,byClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<make-series>"),ToTypeOfClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.ToTypeOfClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ToKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,TypeofLiteral,Kusto.Language.Parsing.QueryGrammar.MissingTypeOfLiteral),function(toKeyword,typeOfLiteral){return new Kusto.Language.Syntax.ToTypeOfClause(toKeyword,Bridge.cast(typeOfLiteral,Kusto.Language.Syntax.TypeOfLiteralExpression))}),MvExpandExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.MvExpandExpression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.MvExpandExpression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ToKeyword).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.ToTypeOfClause,Bridge.global.Kusto.Language.Syntax.MvExpandExpression,ToTypeOfClause,function(clause){return new Kusto.Language.Syntax.MvExpandExpression(Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode.Clone$1(),Kusto.Language.Syntax.Expression),clause)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.ToTypeOfClause,Bridge.global.Kusto.Language.Syntax.MvExpandExpression,NamedExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.ToTypeOfClause,ToTypeOfClause),function(expr,toTypeOfClause){return new Kusto.Language.Syntax.MvExpandExpression(expr,toTypeOfClause)})]),MvExpandExpressionList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ToKeyword).Hide$1(),TypeofLiteral,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Fails(Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CommaToken))]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.ToTypeOfClause,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),ToTypeOfClause,function(clause){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)).ctor)(System.Array.init([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression))(new Kusto.Language.Syntax.MvExpandExpression(null,clause))],Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)))})),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.MvExpandExpression,MvExpandExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingMvExpandExpressionNode,!0,!1)]),MvExpandRowLimitClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.MvExpandRowLimitClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LimitKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(keyword,expr){return new Kusto.Language.Syntax.MvExpandRowLimitClause(keyword,expr)}),MvExpandParameters=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[TokenNamedParameter(Kusto.Language.KustoFacts.MvExpandBagExpansionProperty,Kusto.Language.KustoFacts.MvExpandBagExpansions),NameDeclarationNamedParameter(Kusto.Language.KustoFacts.MvExpandWithItemIndexProperty,0),QueryOperatorParameter]),MvExpandOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),Bridge.global.Kusto.Language.Syntax.MvExpandRowLimitClause,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.MvExpandKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.MvDashExpandKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix)]),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,MvExpandParameters).Hide$1(),MvExpandExpressionList,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.MvExpandRowLimitClause,MvExpandRowLimitClause),function(keyword,parameters,list,rowLimit){return Bridge.cast(new Kusto.Language.Syntax.MvExpandOperator(keyword,parameters,list,rowLimit),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<mvexpand>"),MvApplyExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.MvApplyExpression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.MvApplyExpression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ToKeyword).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.ToTypeOfClause,Bridge.global.Kusto.Language.Syntax.MvApplyExpression,ToTypeOfClause,function(clause){return new Kusto.Language.Syntax.MvApplyExpression(Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode.Clone$1(),Kusto.Language.Syntax.Expression),clause)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.ToTypeOfClause,Bridge.global.Kusto.Language.Syntax.MvApplyExpression,NamedExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.ToTypeOfClause,ToTypeOfClause),function(expr,toTypeOfClause){return new Kusto.Language.Syntax.MvApplyExpression(expr,toTypeOfClause)})]),MvApplyExpressionList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ToKeyword).Hide$1(),TypeofLiteral,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Fails(Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CommaToken))]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.ToTypeOfClause,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),ToTypeOfClause,function(clause){return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)).ctor)(System.Array.init([new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression))(new Kusto.Language.Syntax.MvApplyExpression(null,clause))],Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)))})),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.MvApplyExpression,MvApplyExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingMvApplyExpressionNode,!0,!1)]),MvApplyRowLimitClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.MvApplyRowLimitClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LimitKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(keyword,expr){return new Kusto.Language.Syntax.MvApplyRowLimitClause(keyword,expr)}),MvApplyContextIdClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.MvApplyContextIdClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(keyword,expr){return new Kusto.Language.Syntax.MvApplyContextIdClause(keyword,expr)}),MvApplyParameters=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[NameDeclarationNamedParameter(Kusto.Language.KustoFacts.MvApplyWithItemIndexProperty,0),QueryOperatorParameter]),MvApplySubqueryExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.MvApplySubqueryExpression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,PartitionPipeExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,expr,closeParen){return new Kusto.Language.Syntax.MvApplySubqueryExpression(openParen,expr,closeParen)}),MvApplyOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$6(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),Bridge.global.Kusto.Language.Syntax.MvApplyRowLimitClause,Bridge.global.Kusto.Language.Syntax.MvApplyContextIdClause,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.MvApplySubqueryExpression,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.MvApplyKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.MvDashApplyKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix)]),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,MvApplyParameters).Hide$1(),MvApplyExpressionList,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.MvApplyRowLimitClause,MvApplyRowLimitClause),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.MvApplyContextIdClause,MvApplyContextIdClause).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OnKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.MvApplySubqueryExpression,MvApplySubqueryExpression,Kusto.Language.Parsing.QueryGrammar.MissingMvApplySubqueryExpression),function(keyword,parameters,list,rowLimit,contextId,onKeyword,subquery){return Bridge.cast(new Kusto.Language.Syntax.MvApplyOperator(keyword,parameters,list,rowLimit,contextId,onKeyword,subquery),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<mvapply>"),EvaluateOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EvaluateKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[TokenNamedParameterK(Kusto.Language.Syntax.SyntaxKind.HintDotDistributionKeyword,Kusto.Language.KustoFacts.DistributionHintStrategies),QueryOperatorParameter])),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,FunctionCall,Kusto.Language.Parsing.QueryGrammar.MissingFunctionCallExpression),function(keyword,parameters,expr){return Bridge.cast(new Kusto.Language.Syntax.EvaluateOperator(keyword,parameters,Bridge.cast(expr,Kusto.Language.Syntax.FunctionCallExpression)),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<evaluate>"),ParseParameter=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[TokenNamedParameterK(Kusto.Language.Syntax.SyntaxKind.KindKeyword,Kusto.Language.KustoFacts.ParseKinds),TokenNamedParameterK(Kusto.Language.Syntax.SyntaxKind.FlagsKeyword,void 0),QueryOperatorParameter]),ParseParameters=Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,ParseParameter),NameAndOptionalTypeDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Bridge.global.Kusto.Language.Syntax.Expression,this.SimpleNameDeclarationExpression,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.TypeExpression,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ColonToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.TypeExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.TypeExpression,[this.ParamTypeExtended,IdentifierTypeExpression]),Kusto.Language.Parsing.QueryGrammar.MissingType),function(name,colon,type){return Bridge.cast(new Kusto.Language.Syntax.NameAndTypeDeclaration(Bridge.cast(name,Kusto.Language.Syntax.NameDeclaration),colon,type),Kusto.Language.Syntax.Expression)})})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.TypeExpression,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ColonToken).Hide$1(),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.TypeExpression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.TypeExpression,[this.ParamTypeExtended,IdentifierTypeExpression]),Kusto.Language.Parsing.QueryGrammar.MissingType),function(colon,type){return Bridge.cast(new Kusto.Language.Syntax.NameAndTypeDeclaration(Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameDeclarationNode.Clone$1(),Kusto.Language.Syntax.NameDeclaration),colon,type),Kusto.Language.Syntax.Expression)})]),ParseWithExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[StarExpression,StringOrCompoundStringLiteral,NameAndOptionalTypeDeclaration]),ParseOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ParseKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),ParseParameters,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.WithKeyword),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.SyntaxNode,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxNode,ParseWithExpression,function(e){return Bridge.cast(e,Kusto.Language.Syntax.SyntaxNode)})),function(parseKeyword,parameters,expr,withKeyword,expressions){return Bridge.cast(new Kusto.Language.Syntax.ParseOperator(parseKeyword,parameters,expr,withKeyword,expressions),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<parse>"),ProjectOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ProjectKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),function(keyword,list){return Bridge.cast(new Kusto.Language.Syntax.ProjectOperator(keyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<project>"),ProjectAwayOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ProjectAwayKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,SimpleOrWildcardedEntityReference,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),function(keyword,list){return Bridge.cast(new Kusto.Language.Syntax.ProjectAwayOperator(keyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<project-away>"),ProjectRenameOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ProjectRenameKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),function(keyword,list){return Bridge.cast(new Kusto.Language.Syntax.ProjectRenameOperator(keyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<project-rename>"),SampleOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.SampleKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,QueryOperatorParameter),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(sampleKeyword,parameters,expression){return Bridge.cast(new Kusto.Language.Syntax.SampleOperator(sampleKeyword,parameters,expression),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<sample>"),SampleDistinctOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.SampleDistinctKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,QueryOperatorParameter),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OfKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(keyword,parameters,expr,ofKeyword,ofExpr){return Bridge.cast(new Kusto.Language.Syntax.SampleDistinctOperator(keyword,parameters,expr,ofKeyword,ofExpr),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<sample-distinct>");StringNamedParameterK=Bridge.fn.bind(this,function(keyword){return Kusto.Language.Parsing.QueryGrammar.NamedParameter$1(Kusto.Language.Parsing.SyntaxParsers.Token(keyword,void 0,2,System.String.format('{0}="|"',[Kusto.Language.Syntax.SyntaxFacts.GetText(keyword)])),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[StringOrCompoundStringLiteral,this.SimpleNameReference,this.ConstantExpression.Hide$1()]),Kusto.Language.Parsing.QueryGrammar.MissingStringLiteral)});var ReduceByWithParameter=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[NumericNamedParameterK(Kusto.Language.Syntax.SyntaxKind.ThresholdKeyword),StringNamedParameterK(Kusto.Language.Syntax.SyntaxKind.CharactersKeyword),QueryOperatorParameter]),ReduceByWithClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),Bridge.global.Kusto.Language.Syntax.ReduceByWithClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.WithKeyword),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,ReduceByWithParameter,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingNamedParameterNode),function(keyword,list){return new Kusto.Language.Syntax.ReduceByWithClause(keyword,list)}),ReduceByOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.ReduceByWithClause,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ReduceKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[TokenNamedParameterK(Kusto.Language.Syntax.SyntaxKind.KindKeyword,Kusto.Language.KustoFacts.ReduceByKinds),QueryOperatorParameter])),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.ReduceByWithClause,ReduceByWithClause),function(reduceKeyword,parameters,byKeyword,expr,withClause){return Bridge.cast(new Kusto.Language.Syntax.ReduceByOperator(reduceKeyword,parameters,byKeyword,expr,withClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<reduce-by>"),SummarizeByClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.SummarizeByClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.BinKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualToken)])),NamedExpression),Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),function(byKeyword,expressions){return new Kusto.Language.Syntax.SummarizeByClause(byKeyword,expressions)}).WithTag$1("<summarize-by>"),SummarizeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.SummarizeByClause,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.SummarizeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[NameReferenceNamedParameterK(Kusto.Language.Syntax.SyntaxKind.HintDotShuffleKeyKeyword,Kusto.Language.Editor.CompletionHint.Column),NumericNamedParameterK(Kusto.Language.Syntax.SyntaxKind.HintDotNumPartitions),QueryOperatorParameter])),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!1,!1),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SummarizeByClause,SummarizeByClause),function(summarizeKeyword,parameters,aggregates,byClause){return Bridge.cast(new Kusto.Language.Syntax.SummarizeOperator(summarizeKeyword,parameters,aggregates,byClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<summarize>"),DistinctOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DistinctKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[StarExpression,UnnamedExpression]),Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),function(keyword,list){return Bridge.cast(new Kusto.Language.Syntax.DistinctOperator(keyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<distinct>"),TakeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LimitKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.TakeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix)]),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,QueryOperatorParameter),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Examples(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.KustoFacts.LimitExamples),Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(keyword,parameters,expression){return Bridge.cast(new Kusto.Language.Syntax.TakeOperator(keyword,parameters,expression),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<take>"),MissingFirstOrLastToken=Kusto.Language.Syntax.SyntaxToken.Missing$1("",Kusto.Language.Syntax.SyntaxKind.FirstKeyword,System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingFirstOrLast()],Kusto.Language.Diagnostic)),OrderingNullsClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.OrderingNullsClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.NullsKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.FirstKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LastKeyword)]),function(){return MissingFirstOrLastToken.Clone$1()}),function(keyword,firstOrLast){return new Kusto.Language.Syntax.OrderingNullsClause(keyword,firstOrLast)}),OrderingClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.OrderingNullsClause,Bridge.global.Kusto.Language.Syntax.OrderingClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(System.Array.init([Kusto.Language.Syntax.SyntaxKind.AscKeyword,Kusto.Language.Syntax.SyntaxKind.DescKeyword],Kusto.Language.Syntax.SyntaxKind))),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.OrderingNullsClause,OrderingNullsClause),function(ascOrDesc,nullsClause){return new Kusto.Language.Syntax.OrderingClause(ascOrDesc,nullsClause)}),OrderingNoNullClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.OrderingClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(System.Array.init([Kusto.Language.Syntax.SyntaxKind.AscKeyword,Kusto.Language.Syntax.SyntaxKind.DescKeyword],Kusto.Language.Syntax.SyntaxKind))),function(ascOrDesc){return new Kusto.Language.Syntax.OrderingClause(ascOrDesc,null)}),SortExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.OrderingClause,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.OrderingClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AscKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DescKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.NullsKeyword)]),OrderingClause),function(left,right){return Bridge.cast(new Kusto.Language.Syntax.OrderedExpression(left,right),Kusto.Language.Syntax.Expression)})}),SortOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OrderKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.SortKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High)]),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,SortExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),function(keyword,byKeyword,list){return Bridge.cast(new Kusto.Language.Syntax.SortOperator(keyword,byKeyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<sort>"),ReorderExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Bridge.global.Kusto.Language.Syntax.Expression,SimpleOrWildcardedEntityReference,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.OrderingClause,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.OrderingClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AscKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DescKeyword)]),OrderingNoNullClause),function(left,right){return Bridge.cast(new Kusto.Language.Syntax.OrderedExpression(left,right),Kusto.Language.Syntax.Expression)})}),ProjectReorderOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ProjectReorderKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,ReorderExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),function(keyword,list){return Bridge.cast(new Kusto.Language.Syntax.ProjectReorderOperator(keyword,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<project-reorder>"),TopHittersByClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.TopHittersByClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(keyword,expression){return new Kusto.Language.Syntax.TopHittersByClause(keyword,expression)}),TopHittersOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.TopHittersByClause,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.TopHittersKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Examples(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.KustoFacts.TopExamples),Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OfKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.TopHittersByClause,TopHittersByClause),function(keyword,expr,ofKeyword,ofExpr,byClause){return Bridge.cast(new Kusto.Language.Syntax.TopHittersOperator(keyword,expr,ofKeyword,ofExpr,byClause),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<top-hitters>"),TopOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.TopKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[BooleanNamedParameterK(Kusto.Language.Syntax.SyntaxKind.HintDotProgressiveTopKeyword)])),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Examples(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.KustoFacts.TopExamples),Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,SortExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(keyword,parameters,expr,byKeyword,byExpr){return Bridge.cast(new Kusto.Language.Syntax.TopOperator(keyword,parameters,expr,byKeyword,byExpr),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<top>"),TopNestedWithOthersClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.TopNestedWithOthersClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.WithKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OthersKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),this.ConstantExpression,function(withKeyword,othersKeyword,equals,expression){return new Kusto.Language.Syntax.TopNestedWithOthersClause(withKeyword,othersKeyword,equals,expression)}),TopNestedByExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.OrderingClause,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.OrderingClause,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AscKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DescKeyword),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.NullsKeyword)]),OrderingClause),function(expr,orderingClause){return Bridge.cast(new Kusto.Language.Syntax.OrderedExpression(expr,orderingClause),Kusto.Language.Syntax.Expression)})}),TopNestedClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$6(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.TopNestedWithOthersClause,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.TopNestedClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.TopNestedKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OfKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.TopNestedWithOthersClause,TopNestedWithOthersClause),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.ByKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,TopNestedByExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(keyword,expr,ofKeyword,ofExpr,withOthersClause,byKeyword,byExpr){return new Kusto.Language.Syntax.TopNestedClause(keyword,expr,ofKeyword,ofExpr,withOthersClause,byKeyword,byExpr)}),MissingTopNestedClauseNode=new Kusto.Language.Syntax.TopNestedClause(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.TopNestedKeyword),null,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OfKeyword),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),null,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.ByKeyword),new Kusto.Language.Syntax.NameReference.$ctor2(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingClause()],Kusto.Language.Diagnostic)),TopNestedOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.TopNestedKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.TopNestedClause)),Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.TopNestedClause,TopNestedClause,Kusto.Language.Syntax.SyntaxKind.CommaToken,MissingTopNestedClauseNode,!0,!1),function(list){return Bridge.cast(new Kusto.Language.Syntax.TopNestedOperator(list),Kusto.Language.Syntax.QueryOperator)})).WithTag$1("<top-nested>"),UnionExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[ParenthesizedExpression,WildcardedEntityReference,BrackettedEntityNamePathElementSelector,BarePathElementSelector]);NameDeclarationNamedParameterL=function(keywords,expressionHint){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,System.Linq.Enumerable.from(keywords).select(function(keyword){return NameDeclarationNamedParameter(keyword,expressionHint)}).ToArray(Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.NamedParameter)))};var UnionOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.UnionKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[TokenNamedParameterK(Kusto.Language.Syntax.SyntaxKind.KindKeyword,Kusto.Language.KustoFacts.UnionKinds),NameDeclarationNamedParameterL(Kusto.Language.KustoFacts.UnionWithSourceProperties,0),BooleanNamedParameterK(Kusto.Language.Syntax.SyntaxKind.IsFuzzyKeyword),QueryOperatorParameter])),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,UnionExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),function(keyword,parameters,list){return Bridge.cast(new Kusto.Language.Syntax.UnionOperator(keyword,parameters,list),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<union>"),AsOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AsKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,QueryOperatorParameter),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.MissingNameDeclaration),function(keyword,parameters,name){return Bridge.cast(new Kusto.Language.Syntax.AsOperator(keyword,parameters,name),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<as>"),SerializeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.SerializeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,QueryOperatorParameter),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!1,!1),function(keyword,parameters,exprs){return Bridge.cast(new Kusto.Language.Syntax.SerializeOperator(keyword,parameters,exprs),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<serialize>"),RangeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.RangeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Fails(Kusto.Language.Parsing.SyntaxParsers.Token$3("("))]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$7(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.RangeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.MissingNameDeclaration),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.FromKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.ToKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.StepKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(rangeToken,name,FromToken,fromEx,ToToken,toEx,stepToken,stepEx){return Bridge.cast(new Kusto.Language.Syntax.RangeOperator(rangeToken,name,FromToken,fromEx,ToToken,toEx,stepToken,stepEx),Kusto.Language.Syntax.QueryOperator)})).WithTag$1("<range>"),InvokeOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.InvokeKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.Low),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,DotCompositeFunctionCall,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(keyword,$function){return Bridge.cast(new Kusto.Language.Syntax.InvokeOperator(keyword,$function),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<invoke>"),RenderNameListName=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.NameDeclaration,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Not(Kusto.Language.Parsing.SyntaxParsers.Token$2(Kusto.Language.KustoFacts.ChartProperties)),this.SimpleNameDeclaration),RenderNameList=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameDeclaration)),Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Produce(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameDeclaration)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Sequence([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxElement,RenderNameListName,function(n){return Bridge.cast(n,Kusto.Language.Syntax.SyntaxElement)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ZeroOrMore(Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Sequence([Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CommaToken),function(t){return Bridge.cast(t,Kusto.Language.Syntax.SyntaxElement)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxElement,RenderNameListName,function(l){return Bridge.cast(l,Kusto.Language.Syntax.SyntaxElement)})]))]),function(elements){return Kusto.Language.Parsing.SyntaxParsers.MakeSeparatedList$1(Bridge.global.Kusto.Language.Syntax.NameDeclaration,elements)}),function(list){return Bridge.cast(new Kusto.Language.Syntax.RenderNameList(list),Kusto.Language.Syntax.Expression)});NameReferenceNamedParameter=Bridge.fn.bind(this,function(keyword,expressionHint){return Kusto.Language.Parsing.QueryGrammar.NamedParameter$3(keyword,this.SimpleNameReference,Kusto.Language.Parsing.QueryGrammar.MissingNameReference,expressionHint)});NumericNamedParameter=Bridge.fn.bind(this,function(keyword){return Kusto.Language.Parsing.QueryGrammar.NamedParameter$3(keyword,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[NumericConstantExpression,this.SimpleNameReference,this.ConstantExpression.Hide$1()]),Kusto.Language.Parsing.QueryGrammar.MissingLongLiteral)});StringNamedParameter=Bridge.fn.bind(this,function(keyword){return Kusto.Language.Parsing.QueryGrammar.NamedParameter$1(Kusto.Language.Parsing.SyntaxParsers.Token$3(keyword,void 0,2,System.String.format('{0}="|"',[keyword])),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[StringOrCompoundStringLiteral,this.SimpleNameReference,this.ConstantExpression.Hide$1()]),Kusto.Language.Parsing.QueryGrammar.MissingStringLiteral)});var RenderProperty=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,[StringNamedParameter("title"),NameReferenceNamedParameter("xcolumn",Kusto.Language.Editor.CompletionHint.Column),Kusto.Language.Parsing.QueryGrammar.NamedParameter$3("series",RenderNameList,void 0,Kusto.Language.Editor.CompletionHint.Column),Kusto.Language.Parsing.QueryGrammar.NamedParameter$3("ycolumns",RenderNameList,void 0,Kusto.Language.Editor.CompletionHint.Column),Kusto.Language.Parsing.QueryGrammar.NamedParameter(Kusto.Language.Parsing.SyntaxParsers.Token$3("anomalycolumns"),RenderNameList,Kusto.Language.Editor.CompletionHint.Column),TokenNamedParameter("kind",Kusto.Language.KustoFacts.ChartKinds),StringNamedParameter("xtitle"),StringNamedParameter("ytitle"),TokenNamedParameter("xaxis",Kusto.Language.KustoFacts.ChartAxis),TokenNamedParameter("yaxis",Kusto.Language.KustoFacts.ChartAxis),TokenNamedParameter("legend",Kusto.Language.KustoFacts.ChartLegends),TokenNamedParameter("ysplit",Kusto.Language.KustoFacts.ChartYSplit),BooleanNamedParameter("accumulate"),NumericNamedParameter("ymin"),NumericNamedParameter("ymax"),Kusto.Language.Parsing.QueryGrammar.NamedParameter(Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,this.ConstantExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression)).Hide$1()]),RenderWithClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.RenderWithClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.WithKeyword).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,RenderProperty,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingNamedParameterNode,!0,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(withKeyword,openParen,properties,closeParen){return new Kusto.Language.Syntax.RenderWithClause(withKeyword,openParen,properties,closeParen)}),RenderChartType=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,System.Linq.Enumerable.from(Kusto.Language.KustoFacts.ChartTypes).select(function(c){return System.Linq.Enumerable.from(Kusto.Language.KustoFacts.HiddenChartTypes).contains(c)?Kusto.Language.Parsing.SyntaxParsers.Token$3(c).Hide$1():Kusto.Language.Parsing.SyntaxParsers.Token$3(c,Kusto.Language.Editor.CompletionKind.RenderChart)}).ToArray(Kusto.Language.Parsing.Parser$2(Kusto.Language.Parsing.LexicalToken,Kusto.Language.Syntax.SyntaxToken))),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)]),RenderOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.RenderWithClause,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.RenderKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix,Kusto.Language.Editor.CompletionPriority.High),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.SyntaxToken,RenderChartType,function(){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$2(Kusto.Language.KustoFacts.ChartTypes)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.RenderWithClause,RenderWithClause),function(keyword,chart,withClause){return Bridge.cast(new Kusto.Language.Syntax.RenderOperator(keyword,chart,withClause,null),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<render>"),PrintOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.PrintKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,NamedExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),function(keyword,exprs){return Bridge.cast(new Kusto.Language.Syntax.PrintOperator(keyword,exprs),Kusto.Language.Syntax.QueryOperator)}).WithTag$1("<print>"),PrePipeQueryOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.QueryOperator,[FindOperator,SearchOperator,UnionOperator,RangeOperator,PrintOperator]),BadQueryOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.QueryOperator,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken),function(id){return Bridge.cast(new Kusto.Language.Syntax.BadQueryOperator(id,System.Array.init([Kusto.Language.DiagnosticFacts.GetQueryOperatorExpected()],Kusto.Language.Diagnostic)),Kusto.Language.Syntax.QueryOperator)}),PostPipeQueryOperator=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.QueryOperator,[ConsumeOperator,CountOperator,ExecuteAndCacheOperator,ExtendOperator,FacetOperator,FilterOperator,GetSchemaOperator,JoinOperator,ForkOperator,LookupOperator,MakeSeriesOperator,MvApplyOperator,MvExpandOperator,EvaluateOperator,ParseOperator,PartitionOperator,ProjectOperator,SampleOperator,SampleDistinctOperator,ProjectAwayOperator,ProjectRenameOperator,ProjectReorderOperator,ReduceByOperator,SummarizeOperator,DistinctOperator,TakeOperator,SortOperator,TopHittersOperator,TopOperator,TopNestedOperator,UnionOperator,RenderOperator,AsOperator,SerializeOperator,InvokeOperator]);ForkPipeOperatorCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.QueryOperator,[CountOperator,ExtendOperator,FilterOperator,ParseOperator,TakeOperator,TopNestedOperator,ProjectOperator,ProjectAwayOperator,ProjectRenameOperator,ProjectReorderOperator,SummarizeOperator,DistinctOperator,TopHittersOperator,TopOperator,SortOperator,MvExpandOperator,MvApplyOperator,ReduceByOperator,SampleOperator,SampleDistinctOperator,AsOperator,InvokeOperator,ExecuteAndCacheOperator]);ForkPipeExpressionCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.QueryOperator,Bridge.global.Kusto.Language.Syntax.Expression,ForkPipeOperator,function(o){return Bridge.cast(o,Kusto.Language.Syntax.Expression)}),function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.QueryOperator,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.BarToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.QueryOperator,ForkPipeOperator,Kusto.Language.Parsing.QueryGrammar.MissingQueryOperator),function(left,pipeToken,right){return Bridge.cast(new Kusto.Language.Syntax.PipeExpression(left,pipeToken,right),Kusto.Language.Syntax.Expression)})});PartitionPipeOperatorCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.QueryOperator,[CountOperator,ExtendOperator,FilterOperator,ParseOperator,TakeOperator,TopNestedOperator,ProjectOperator,ProjectAwayOperator,ProjectRenameOperator,ProjectReorderOperator,SummarizeOperator,DistinctOperator,TopHittersOperator,TopOperator,SortOperator,MvExpandOperator,MvApplyOperator,ReduceByOperator,SampleOperator,SampleDistinctOperator,AsOperator,InvokeOperator,ExecuteAndCacheOperator]);PartitionPipeExpressionCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.QueryOperator,Bridge.global.Kusto.Language.Syntax.Expression,PartitionPipeOperator,function(o){return Bridge.cast(o,Kusto.Language.Syntax.Expression)}),function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.QueryOperator,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.BarToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.QueryOperator,PartitionPipeOperator,Kusto.Language.Parsing.QueryGrammar.MissingQueryOperator),function(left,pipeToken,right){return Bridge.cast(new Kusto.Language.Syntax.PipeExpression(left,pipeToken,right),Kusto.Language.Syntax.Expression)})});InitialPipeElementExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.QueryOperator,Bridge.global.Kusto.Language.Syntax.Expression,PrePipeQueryOperator,function(o){return Bridge.cast(o,Kusto.Language.Syntax.Expression)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.QueryOperator,Bridge.global.Kusto.Language.Syntax.Expression,PostPipeQueryOperator,function(o){return Bridge.cast(o,Kusto.Language.Syntax.Expression)}).Hide$1(),UnnamedExpression]);this.FollowingPipeElementExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.QueryOperator,[PostPipeQueryOperator,PrePipeQueryOperator.Hide$1(),BadQueryOperator.Hide$1()]);PipeExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyZeroOrMore(Bridge.global.Kusto.Language.Syntax.Expression,InitialPipeElementExpression,Bridge.fn.bind(this,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$11(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.QueryOperator,Bridge.global.Kusto.Language.Syntax.Expression,_left,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.BarToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.QueryOperator,this.FollowingPipeElementExpression,Kusto.Language.Parsing.QueryGrammar.MissingQueryOperator),function(left,op,right){return Bridge.cast(new Kusto.Language.Syntax.PipeExpression(left,op,right),Kusto.Language.Syntax.Expression)})}));UnnamedExpressionCore=LogicalOr;ExpressionCore=PipeExpression;var AliasStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AliasKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.DatabaseKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.MissingNameDeclaration),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(aliasKeyword,databaseKeyword,name,equalToken,expression){return Bridge.cast(new Kusto.Language.Syntax.AliasStatement(aliasKeyword,databaseKeyword,name,equalToken,expression),Kusto.Language.Syntax.Statement)}).WithTag$1("<alias>"),MaterializeExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.MaterializeKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,PipeExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(keyword,openParen,expr,closeParen){return Bridge.cast(new Kusto.Language.Syntax.MaterializeExpression(keyword,openParen,expr,closeParen),Kusto.Language.Syntax.Expression)}),DefaultValueDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.DefaultValueDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[this.ConstantExpression,NameTokenLiteral]),Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(equalToken,value){return new Kusto.Language.Syntax.DefaultValueDeclaration(equalToken,value)}),FunctionParameter=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.NameAndTypeDeclaration,Bridge.global.Kusto.Language.Syntax.DefaultValueDeclaration,Bridge.global.Kusto.Language.Syntax.FunctionParameter,NameAndTypeDeclaration,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.DefaultValueDeclaration,DefaultValueDeclaration),function(nameAndType,defaultValue){return new Kusto.Language.Syntax.FunctionParameter(nameAndType,defaultValue)});this.FunctionParameters=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.FunctionParameters,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.FunctionParameter,FunctionParameter,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingFunctionParameterNode,!1,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(openParen,parameters,closeParen){return new Kusto.Language.Syntax.FunctionParameters(openParen,parameters,closeParen)});FunctionBodyStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement),[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.Statement,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement),LetStatement,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),function(statement,semicolon){return new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))(statement,semicolon)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.Statement,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement),QueryParametersStatement,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),function(statement,semicolon){return new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))(statement,semicolon)})]);FunctionBodyStatementList=Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement),FunctionBodyStatement,Kusto.Language.Parsing.QueryGrammar.MissingStatementElementNode,!1).WithTag$1("<statement-list>");this.FunctionBody=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.FunctionBody,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),FunctionBodyStatementList,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.Expression,this.Expression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.SemicolonToken)),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken),function(openBrace,statements,expr,semicolon,closeBrace){return new Kusto.Language.Syntax.FunctionBody(openBrace,statements,expr,semicolon,closeBrace)});FunctionDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.FunctionParameters,Bridge.global.Kusto.Language.Syntax.FunctionBody,Bridge.global.Kusto.Language.Syntax.FunctionDeclaration,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ViewKeyword)),this.FunctionParameters,this.FunctionBody,function(view,parameters,body){return new Kusto.Language.Syntax.FunctionDeclaration(view,parameters,body)}).WithTag$1("<function-declaration>");LetStatementCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Statement,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LetKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),ScanSimpleName,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ViewKeyword)),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Or([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.AsteriskToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([ScanSimpleName,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ColonToken)])])]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.FunctionDeclaration,Bridge.global.Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LetKeyword),this.SimpleNameDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualToken),FunctionDeclaration,function(letKeyword,name,equal,expression){return Bridge.cast(new Kusto.Language.Syntax.LetStatement(letKeyword,name,equal,expression),Kusto.Language.Syntax.Statement)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).And([Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LetKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),ScanSimpleName,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.MaterializeKeyword)]),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LetKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.MissingNameDeclaration),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualToken),MaterializeExpression,function(keyword,name,equal,expr){return Bridge.cast(new Kusto.Language.Syntax.LetStatement(keyword,name,equal,expr),Kusto.Language.Syntax.Statement)})),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.LetKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.MissingNameDeclaration),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(letKeyword,name,equalToken,expression){return Bridge.cast(new Kusto.Language.Syntax.LetStatement(letKeyword,name,equalToken,expression),Kusto.Language.Syntax.Statement)})]);OptionValueClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.OptionValueClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,UnnamedExpression,Kusto.Language.Parsing.QueryGrammar.MissingExpression),function(equal,expr){return new Kusto.Language.Syntax.OptionValueClause(equal,expr)});SetOptionStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.OptionValueClause,Bridge.global.Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.SetKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.OptionValueClause,OptionValueClause),function(keyword,name,value){return Bridge.cast(new Kusto.Language.Syntax.SetOptionStatement(keyword,name,value),Kusto.Language.Syntax.Statement)}).WithTag$1("<set-option>");QueryParametersStatementCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DeclareKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.QueryParametersKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.FunctionParameter,FunctionParameter,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingFunctionParameterNode,!0,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(declareKeyword,queryParametersKeyword,open,list,close){return Bridge.cast(new Kusto.Language.Syntax.QueryParametersStatement(declareKeyword,queryParametersKeyword,open,list,close),Kusto.Language.Syntax.Statement)});var Restriction=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.Expression,ScanWildcardedEntityReference,WildcardedEntityReference),this.SimpleNameReference]),RestrictStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$5(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.RestrictKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.AccessKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.ToKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,Restriction,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(restrictKeyword,accessKeyword,toKeyword,openParen,list,closeParen){return Bridge.cast(new Kusto.Language.Syntax.RestrictStatement(restrictKeyword,accessKeyword,toKeyword,openParen,list,closeParen),Kusto.Language.Syntax.Statement)}).WithTag$1("<restrict>"),PatternPathValue=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.PatternPathValue,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DotToken),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,this.StringLiteral,Kusto.Language.Parsing.QueryGrammar.MissingStringLiteral),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(dot,openBracket,value,closeBracket){return new Kusto.Language.Syntax.PatternPathValue(dot,openBracket,value,closeBracket)}),PatternMatchStatementElement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$1(Bridge.global.Kusto.Language.Syntax.Statement,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement),LetStatement,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),function(statement,semicolon){return new(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement))(statement,semicolon)}),PatternMatchBody=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.FunctionBody,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement),PatternMatchStatementElement,Kusto.Language.Parsing.QueryGrammar.MissingStatementElementNode,!1),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.Expression,this.Expression),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.SemicolonToken)),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken),function(open,statements,expression,semi,close){return new Kusto.Language.Syntax.FunctionBody(open,statements,expression,semi,close)}),PatternMatchValue=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[this.StringLiteral,UnnamedExpression.Hide$1()]),PatternMatch=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$6(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.PatternPathValue,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.FunctionBody,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.PatternMatch,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,PatternMatchValue,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingStringLiteralNode,!0,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.PatternPathValue,PatternPathValue),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),PatternMatchBody,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),function(openParen,exprs,closeParen,path,equalToken,body,semicolon){return new Kusto.Language.Syntax.PatternMatch(new Kusto.Language.Syntax.ExpressionList(openParen,exprs,closeParen),path,equalToken,body,semicolon)}),PatternPathParameter=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.NameAndTypeDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.PatternPathParameter,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.NameAndTypeDeclaration,NameAndTypeDeclaration,function(){return Bridge.cast(Kusto.Language.Parsing.QueryGrammar.MissingNameAndTypeDeclarationNode.Clone$1(),Kusto.Language.Syntax.NameAndTypeDeclaration)}),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(openBracket,parameter,closeBracket){return new Kusto.Language.Syntax.PatternPathParameter(openBracket,parameter,closeBracket)}),MissingPatternMatch=new Kusto.Language.Syntax.PatternMatch(new Kusto.Language.Syntax.ExpressionList(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)).Empty(),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseParenToken)),null,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.EqualToken),new Kusto.Language.Syntax.FunctionBody(Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)).Empty(),null,null,Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken)),Kusto.Language.Syntax.SyntaxToken.Missing(Kusto.Language.Syntax.SyntaxKind.SemicolonToken),System.Array.init([Kusto.Language.DiagnosticFacts.GetMissingPatternMatch()],Kusto.Language.Diagnostic)),PatternDeclaration=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$7(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.PatternPathParameter,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.PatternMatch),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.PatternDeclaration,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.NameAndTypeDeclaration,NameAndTypeDeclaration,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingNameAndTypeDeclarationNode,!1,!1),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.PatternPathParameter,PatternPathParameter),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.PatternMatch,PatternMatch,MissingPatternMatch,!0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken),function(equal,openParen,parameters,closeParen,pathParameter,openBrace,patterns,closeBrace){return new Kusto.Language.Syntax.PatternDeclaration(equal,openParen,parameters,closeParen,pathParameter,openBrace,patterns,closeBrace)}),PatternStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.PatternDeclaration,Bridge.global.Kusto.Language.Syntax.Statement,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DeclareKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix).Hide$1(),Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.PatternKeyword),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.NameDeclaration,this.SimpleNameDeclaration,Kusto.Language.Parsing.QueryGrammar.MissingNameDeclaration),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.PatternDeclaration,PatternDeclaration),function(declareKeyword,patternKeyword,name,pattern){return Bridge.cast(new Kusto.Language.Syntax.PatternStatement(declareKeyword,patternKeyword,name,pattern),Kusto.Language.Syntax.Statement)}).WithTag$1("<pattern-statement>"),QueryStatement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.Statement,this.Expression,function(expr){return Bridge.cast(new Kusto.Language.Syntax.ExpressionStatement(expr),Kusto.Language.Syntax.Statement)}),PrimaryPathSelector=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).ApplyOptional(Bridge.global.Kusto.Language.Syntax.Expression,PathElementSelector,function(_left){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$10(Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.DataScopeClause,Bridge.global.Kusto.Language.Syntax.Expression,_left,DataScopeClause(Kusto.Language.Editor.CompletionKind.TabularSuffix),function(path,clause){return Bridge.cast(new Kusto.Language.Syntax.DataScopeExpression(path,clause),Kusto.Language.Syntax.Expression)})}),DataTableExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$4(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SchemaTypeExpression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.DataTableKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),SchemaMultipartType,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,this.ConstantExpression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!1,!0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),function(keyword,schema,openBracket,values,closeBracket){return Bridge.cast(new Kusto.Language.Syntax.DataTableExpression(keyword,schema,openBracket,values,closeBracket),Kusto.Language.Syntax.Expression)}),ExternalDataWithClauseNamedParameter=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.NameDeclaration,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.Expression,Bridge.global.Kusto.Language.Syntax.NamedParameter,this.SimpleNameDeclaration,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.EqualToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[this.Literal,Kusto.Language.Parsing.QueryGrammar.AsTokenLiteral(Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.IdentifierToken)),KeywordTokenLiteral]),Kusto.Language.Parsing.QueryGrammar.MissingValue),function(name,equalToken,value){return new Kusto.Language.Syntax.NamedParameter(name,equalToken,value)}),ExternalDataWithClause=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.ExternalDataWithClause,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.WithKeyword),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenParenToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.NamedParameter,ExternalDataWithClauseNamedParameter,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingNamedParameterNode),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseParenToken),function(keyword,openParen,list,closeParen){return new Kusto.Language.Syntax.ExternalDataWithClause(keyword,openParen,list,closeParen)}),ExternalDataExpression=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$6(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),Bridge.global.Kusto.Language.Syntax.SchemaTypeExpression,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.ExternalDataWithClause,Bridge.global.Kusto.Language.Syntax.Expression,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.ExternalDataKeyword,Kusto.Language.Editor.CompletionKind.QueryPrefix),Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.NamedParameter,QueryOperatorParameter),SchemaMultipartType,Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken),Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Expression,this.Expression,Kusto.Language.Syntax.SyntaxKind.CommaToken,Kusto.Language.Parsing.QueryGrammar.MissingExpressionNode,!0,!0),Kusto.Language.Parsing.SyntaxParsers.RequiredToken(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.ExternalDataWithClause,ExternalDataWithClause),function(keyword,parameters,schema,openBracket,name,closeBracket,withClause){return Bridge.cast(new Kusto.Language.Syntax.ExternalDataExpression(keyword,parameters,schema,openBracket,name,closeBracket,withClause),Kusto.Language.Syntax.Expression)});PrimaryExpressionCore=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Expression,[this.ConstantExpression,ParenthesizedExpression,DataTableExpression,ExternalDataExpression,PrimaryPathSelector]);this.Statement=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).First$1(Bridge.global.Kusto.Language.Syntax.Statement,[AliasStatement,LetStatement,SetOptionStatement,QueryParametersStatement,RestrictStatement,PatternStatement,QueryStatement]).WithTag$1("<statement>");this.StatementList=Kusto.Language.Parsing.SyntaxParsers.SeparatedList$1(Bridge.global.Kusto.Language.Syntax.Statement,this.Statement,Kusto.Language.Syntax.SyntaxKind.SemicolonToken,Kusto.Language.Parsing.QueryGrammar.MissingStatementNode,!1,!0);this.SkippedTokens=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).If$1(Bridge.global.Kusto.Language.Syntax.SkippedTokens,Kusto.Language.Parsing.SyntaxParsers.AnyTokenButEnd,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),Bridge.global.Kusto.Language.Syntax.SkippedTokens,Kusto.Language.Parsing.SyntaxParsers.List(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.AnyTokenButEnd),function(tokens){return new Kusto.Language.Syntax.SkippedTokens(tokens)})).WithTag$1("<skipped-tokens>");this.QueryBlock=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule$2(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),Bridge.global.Kusto.Language.Syntax.SkippedTokens,Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.QueryBlock,this.StatementList,Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SkippedTokens,this.SkippedTokens),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Optional$1(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token(Kusto.Language.Syntax.SyntaxKind.EndOfTextToken)),function(statements,skipped,end){return new Kusto.Language.Syntax.QueryBlock(statements,skipped,end)})}}});Bridge.define("Kusto.Language.Parsing.RightParser$2",function(TInput,TOutput){return{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput))}}},props:{Parser:null},ctors:{$ctor1:function(parser){this.$initialize();this.Parser=parser},ctor:function(){this.$initialize()}},methods:{WithTag:function(tag){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(this.Parser.WithTag$1(tag))},WithAnnotations:function(annotations){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(this.Parser.WithAnnotations$1(annotations))},WithIsHidden:function(isHidden){return new(Kusto.Language.Parsing.RightParser$2(TInput,TOutput).$ctor1)(this.Parser.WithIsHidden$1(isHidden))},Hide:function(){return this.WithIsHidden(!0)},getHashCode:function(){return Bridge.addHash([3678084921,this.Parser])},equals:function(o){return Bridge.is(o,Kusto.Language.Parsing.RightParser$2(TInput,TOutput))?Bridge.equals(this.Parser,o.Parser):!1},$clone:function(){return this}}}});Bridge.define("Kusto.Language.Parsing.SafeParser",{statics:{methods:{ParseSafe:function(TInput,parser,source,inputStart,output,outputStart){var ssp=Kusto.Language.Parsing.SafeParser.StackSafeParser$1(TInput).pool.AllocateFromPool();try{return ssp.Initialize(source,output),ssp.Parse(parser,inputStart,outputStart)}finally{Kusto.Language.Parsing.SafeParser.StackSafeParser$1(TInput).pool.ReturnToPool(ssp)}}}}});Bridge.define("Kusto.Language.Parsing.SafeScanner",{statics:{methods:{ScanSafe:function(TInput,parser,source,start){var sss=Kusto.Language.Parsing.SafeScanner.StackSafeScanner$1(TInput).pool.AllocateFromPool();try{return sss.Initialize(source),sss.Scan(parser,start)}finally{Kusto.Language.Parsing.SafeScanner.StackSafeScanner$1(TInput).pool.ReturnToPool(sss)}}}}});Bridge.define("Kusto.Language.Parsing.SafeSearcher",{statics:{methods:{SearchSafe:function(TInput,parser,source,start,prevWasMissing,action){var sss=Kusto.Language.Parsing.SafeSearcher.StackSafeSearcher$1(TInput).pool.AllocateFromPool();try{return sss.Initialize(source,action),sss.Search(parser,start,prevWasMissing)}finally{Kusto.Language.Parsing.SafeSearcher.StackSafeSearcher$1(TInput).pool.ReturnToPool(sss)}}}}});Bridge.define("Kusto.Language.Parsing.ScannerExtensions",{statics:{fields:{s_sourcePool:null},ctors:{init:function(){this.s_sourcePool=new(Kusto.Language.Utils.ObjectPool$1(Kusto.Language.Parsing.ScannerExtensions.ReuseableTextSource))(function(){return new Kusto.Language.Parsing.ScannerExtensions.ReuseableTextSource},function(source){source.Clear()})}},methods:{Matches:function(scanner,text){return Kusto.Language.Parsing.ScannerExtensions.Matches$1(scanner,text,0,text.length)},Matches$1:function(scanner,text,offset,length){var source=Kusto.Language.Parsing.ScannerExtensions.s_sourcePool.AllocateFromPool(),len;try{return source.Init(text),len=scanner.Scan(source,0),len===length}finally{Kusto.Language.Parsing.ScannerExtensions.s_sourcePool.ReturnToPool(source)}}}}});Bridge.define("Kusto.Language.Parsing.SearchResult",{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new Kusto.Language.Parsing.SearchResult}}},fields:{Length:0,Missing:!1},ctors:{$ctor1:function(length,missing){this.$initialize();this.Length=length;this.Missing=missing},ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([5572150057,this.Length,this.Missing])},equals:function(o){return Bridge.is(o,Kusto.Language.Parsing.SearchResult)?Bridge.equals(this.Length,o.Length)&&Bridge.equals(this.Missing,o.Missing):!1},$clone:function(to){var s=to||new Kusto.Language.Parsing.SearchResult;return s.Length=this.Length,s.Missing=this.Missing,s}}});Bridge.define("Kusto.Language.Parsing.SyntaxParsers",{statics:{fields:{AnyToken:null,AnyTokenButEnd:null},ctors:{init:function(){this.AnyToken=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,function(){return!0},function(t){return Kusto.Language.Syntax.SyntaxToken.From(t)}).WithTag$1("<any>");this.AnyTokenButEnd=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,function(t){return t.Kind!==Kusto.Language.Syntax.SyntaxKind.EndOfTextToken},function(t){return Kusto.Language.Syntax.SyntaxToken.From(t)}).WithTag$1("<any!end>")}},methods:{CreateMissingToken:function(kind,diagnostic){diagnostic===void 0&&(diagnostic=null);var dx=diagnostic||(kind===Kusto.Language.Syntax.SyntaxKind.IdentifierToken?Kusto.Language.DiagnosticFacts.GetMissingName():Kusto.Language.DiagnosticFacts.GetTokenExpected([kind]));return Kusto.Language.Syntax.SyntaxToken.Missing$1("",kind,System.Array.init([dx],Kusto.Language.Diagnostic))},CreateMissingToken$1:function(kinds){return Kusto.Language.Syntax.SyntaxToken.Missing$1("",System.Array.getItem(kinds,0,Kusto.Language.Syntax.SyntaxKind),System.Array.init([Kusto.Language.DiagnosticFacts.GetTokenExpected$1(kinds)],Kusto.Language.Diagnostic))},CreateMissingToken$3:function(text,diagnostic){diagnostic===void 0&&(diagnostic=null);var kind={v:new Kusto.Language.Syntax.SyntaxKind};return Kusto.Language.Syntax.SyntaxFacts.TryGetKind(text,kind)||(kind.v=Kusto.Language.Syntax.SyntaxKind.IdentifierToken),Kusto.Language.Syntax.SyntaxToken.Missing$1("",kind.v,System.Array.init([diagnostic||Kusto.Language.DiagnosticFacts.GetTokenExpected$3(System.Array.init([text],System.String))],Kusto.Language.Diagnostic))},CreateMissingToken$2:function(texts){return Kusto.Language.Syntax.SyntaxToken.Missing$1("",Kusto.Language.Syntax.SyntaxKind.IdentifierToken,System.Array.init([Kusto.Language.DiagnosticFacts.GetTokenExpected$2(texts)],Kusto.Language.Diagnostic))},GetDefaultTag$1:function(text){var kind={v:new Kusto.Language.Syntax.SyntaxKind};return Kusto.Language.Syntax.SyntaxFacts.TryGetKind(text,kind)?Kusto.Language.Parsing.SyntaxParsers.GetDefaultTag(kind.v):text},GetDefaultTag:function(kind){var $t;return Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)===Kusto.Language.Syntax.SyntaxCategory.Punctuation?System.String.format("'{0}'",[Kusto.Language.Syntax.SyntaxFacts.GetText(kind)]):($t=Kusto.Language.Syntax.SyntaxFacts.GetText(kind),$t!=null?$t:System.Enum.toString(Kusto.Language.Syntax.SyntaxKind,kind).toLowerCase())},Token:function(kind,ckind,priority,ctext){ckind===void 0&&(ckind=null);priority===void 0&&(priority=2);ctext===void 0&&(ctext=null);var rule=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,function(t){return t.Kind===kind},function(lt){return Kusto.Language.Syntax.SyntaxToken.From(lt)}).WithTag$1(Kusto.Language.Parsing.SyntaxParsers.GetDefaultTag(kind)),item=Kusto.Language.Parsing.SyntaxParsers.GetDefaultCompletionItem(kind,ckind,priority,ctext);return item!=null&&(rule=rule.WithAnnotations$1(System.Array.init([item],Kusto.Language.Editor.CompletionItem))),rule},Token$1:function(kinds,ckind,priority){ckind===void 0&&(ckind=null);priority===void 0&&(priority=2);var set=new(System.Collections.Generic.HashSet$1(Kusto.Language.Syntax.SyntaxKind).$ctor1)(kinds),rule=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,function(t){return set.contains(t.Kind)},function(lt){return Kusto.Language.Syntax.SyntaxToken.From(lt)}).WithTag$1(Bridge.toArray(System.Linq.Enumerable.from(kinds).select(function(k){return Kusto.Language.Parsing.SyntaxParsers.GetDefaultTag(k)})).join(" | ")),items=System.Linq.Enumerable.from(Kusto.Language.Parsing.SyntaxParsers.GetCompletionItems(set,ckind,priority)).toList(Bridge.global.Kusto.Language.Editor.CompletionItem);return items.Count>0&&(rule=rule.WithAnnotations$1(items)),rule},Token$3:function(text,ckind,priority,ctext){ckind===void 0&&(ckind=null);priority===void 0&&(priority=2);ctext===void 0&&(ctext=null);var rule=Kusto.Language.Parsing.SyntaxParsers.MatchText(text).WithTag$1(Kusto.Language.Parsing.SyntaxParsers.GetDefaultTag$1(text)),item=Kusto.Language.Parsing.SyntaxParsers.GetDefaultCompletionItem$2(text,ckind,priority,ctext);return item!=null&&(rule=rule.WithAnnotations$1(System.Array.init([item],Kusto.Language.Editor.CompletionItem))),rule},Token$2:function(texts,ckind,priority){ckind===void 0&&(ckind=null);priority===void 0&&(priority=2);var set=new(System.Collections.Generic.HashSet$1(System.String).$ctor1)(texts),rule=Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$3(Bridge.global.Kusto.Language.Syntax.SyntaxToken,function(t){return set.contains(t.Text)},function(lt){return Kusto.Language.Syntax.SyntaxToken.From(lt)}).WithTag$1(Bridge.toArray(System.Linq.Enumerable.from(texts).select(function(t){return Kusto.Language.Parsing.SyntaxParsers.GetDefaultTag$1(t)})).join(" | ")),items=System.Linq.Enumerable.from(Kusto.Language.Parsing.SyntaxParsers.GetCompletionItems$1(texts,ckind,priority)).toList(Bridge.global.Kusto.Language.Editor.CompletionItem);return items.Count>0&&(rule=rule.WithAnnotations$1(items)),rule},WithCompletion:function(TElement,parser,item){return parser.WithAnnotations$1(System.Linq.Enumerable.from(parser.Annotations).concat(System.Array.init([item],System.Object)))},WithCompletionHint:function(TElement,parser,hint){return parser.WithAnnotations$1(System.Linq.Enumerable.from(parser.Annotations).concat(System.Array.init([Bridge.box(hint,Kusto.Language.Editor.CompletionHint,System.Enum.toStringFn(Kusto.Language.Editor.CompletionHint))],System.Object)))},MatchesText:function(source,start,text){for(var $t,textOffset=0,i=0,token;!source.IsEnd(start+i|0);i=i+1|0){if(token=source.Peek(start+i|0),i>0&&token.Trivia.length>0)break;if(token.Text.length>(text.length-textOffset|0))break;if(($t=token.Text.length,System.String.compare(token.Text.substr(0,$t),text.substr(textOffset,$t)))!==0)break;if(textOffset=textOffset+token.Text.length|0,textOffset===text.length)return i+1|0}return-(i+1|0)|0},ProduceSyntaxToken:function(source,start,length,text){return length===1?Kusto.Language.Syntax.SyntaxToken.From(source.Peek(start)):Kusto.Language.Syntax.SyntaxToken.Identifier(source.Peek(start).Trivia,text)},MatchText:function(text){return Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Match$2(Bridge.global.Kusto.Language.Syntax.SyntaxToken,function(source,start){return Kusto.Language.Parsing.SyntaxParsers.MatchesText(source,start,text)},function(source,start,length){return Kusto.Language.Parsing.SyntaxParsers.ProduceSyntaxToken(source,start,length,text)})},RequiredToken:function(kind,ckind,priority,ctext){return ckind===void 0&&(ckind=null),priority===void 0&&(priority=2),ctext===void 0&&(ctext=null),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token(kind,ckind,priority,ctext),function(){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(kind)})},RequiredToken$1:function(kinds,ckind,priority){return ckind===void 0&&(ckind=null),priority===void 0&&(priority=2),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$1(kinds,ckind,priority),function(){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$1(kinds)})},RequiredToken$3:function(text,ckind,priority,ctext){return ckind===void 0&&(ckind=null),priority===void 0&&(priority=2),ctext===void 0&&(ctext=null),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$3(text,ckind,priority,ctext),function(){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$3(text)})},RequiredToken$2:function(texts,ckind,priority){return ckind===void 0&&(ckind=null),priority===void 0&&(priority=2),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Required(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Kusto.Language.Parsing.SyntaxParsers.Token$2(texts,ckind,priority),function(){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken$2(texts)})},GetDefaultCompletionItem:function(kind,ckind,priority,ctext){var $t,$t1,$t2,text;if(ctext===void 0&&(ctext=null),text=Kusto.Language.Syntax.SyntaxFacts.GetText(kind),System.String.isNullOrWhiteSpace(text))return null;switch(Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)){case Kusto.Language.Syntax.SyntaxCategory.Keyword:return Kusto.Language.Parsing.SyntaxParsers.GetDefaultCompletionItem$1(text,($t=ckind,$t!=null?$t:Kusto.Language.Editor.CompletionKind.Keyword),priority,ctext);case Kusto.Language.Syntax.SyntaxCategory.Operator:return Kusto.Language.Parsing.SyntaxParsers.GetDefaultCompletionItem$1(text,($t1=ckind,$t1!=null?$t1:Kusto.Language.Editor.CompletionKind.ScalarInfix),priority,ctext);case Kusto.Language.Syntax.SyntaxCategory.Punctuation:return Kusto.Language.Parsing.SyntaxParsers.GetDefaultCompletionItem$1(text,($t2=ckind,$t2!=null?$t2:Kusto.Language.Editor.CompletionKind.Punctuation),priority,ctext);default:return null}},GetDefaultCompletionItem$2:function(text,ckind,priority,ctext){var $t;return ctext===void 0&&(ctext=null),Kusto.Language.Parsing.SyntaxParsers.GetDefaultCompletionItem$1(text,($t=ckind,$t!=null?$t:Kusto.Language.Editor.CompletionKind.Syntax),priority,ctext)},GetDefaultCompletionItem$1:function(text,ckind,priority,ctext){var $t,afterText,editText,cursor;return(ctext===void 0&&(ctext=null),System.String.startsWith(text,"_"))?null:(afterText=null,editText=($t=ctext,$t!=null?$t:text),ctext!=null&&(cursor=System.String.indexOf(ctext,String.fromCharCode(124)),cursor>=0&&(afterText=ctext.substr(cursor+1|0),editText=ctext.substr(0,cursor))),new Kusto.Language.Editor.CompletionItem(ckind,text,editText,afterText,void 0,priority))},GetCompletionItems:function(kinds,ckind,priority){return System.Linq.Enumerable.from(kinds).select(function(k){return Kusto.Language.Parsing.SyntaxParsers.GetDefaultCompletionItem(k,ckind,priority)}).where(function(i){return i!=null})},GetCompletionItems$1:function(texts,ckind,priority){return System.Linq.Enumerable.from(texts).select(function(t){return Kusto.Language.Parsing.SyntaxParsers.GetDefaultCompletionItem$2(t,ckind,priority)}).where(function(i){return i!=null})},List:function(TElement,elementParser,missingElement,oneOrMore){return missingElement===void 0&&(missingElement=Bridge.getDefaultValue(TElement)),oneOrMore===void 0&&(oneOrMore=!1),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).List(TElement,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(TElement),elementParser,Bridge.staticEquals(missingElement,null)?null:function(){return Bridge.cast(missingElement.Clone(),TElement)},oneOrMore,function(elements){return new(Kusto.Language.Syntax.SyntaxList$1(TElement).ctor)(System.Linq.Enumerable.from(elements).ToArray())})},SeparatedList$1:function(TElement,primaryElementParser,separatorKind,missingElement,oneOrMore,allowTrailingSeparator){return oneOrMore===void 0&&(oneOrMore=!1),allowTrailingSeparator===void 0&&(allowTrailingSeparator=!1),Kusto.Language.Parsing.SyntaxParsers.SeparatedList(TElement,primaryElementParser,primaryElementParser.WithTag$1("..."),separatorKind,missingElement,oneOrMore,allowTrailingSeparator)},SeparatedList:function(TElement,primaryElementParser,secondaryElementParser,separatorKind,missingElement,oneOrMore,allowTrailingSeparator){return oneOrMore===void 0&&(oneOrMore=!1),allowTrailingSeparator===void 0&&(allowTrailingSeparator=!1),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).SeparatedList(Bridge.global.Kusto.Language.Syntax.SyntaxElement,Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(TElement)),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(TElement,Bridge.global.Kusto.Language.Syntax.SyntaxElement,primaryElementParser,function(e){return Bridge.cast(e,Kusto.Language.Syntax.SyntaxElement)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(TElement,Bridge.global.Kusto.Language.Syntax.SyntaxElement,secondaryElementParser,function(e){return Bridge.cast(e,Kusto.Language.Syntax.SyntaxElement)}),Kusto.Language.Parsing.Parsers$1(Kusto.Language.Parsing.LexicalToken).Rule(Bridge.global.Kusto.Language.Syntax.SyntaxToken,Bridge.global.Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.SyntaxParsers.Token(separatorKind),function(e){return Bridge.cast(e,Kusto.Language.Syntax.SyntaxElement)}),function(){return missingElement.Clone()},function(){return Kusto.Language.Parsing.SyntaxParsers.CreateMissingToken(separatorKind)},oneOrMore,allowTrailingSeparator,function(elements){return Kusto.Language.Parsing.SyntaxParsers.MakeSeparatedList$1(TElement,elements)})},MakeSeparatedList:function(TElement,elements){return elements===void 0&&(elements=[]),Kusto.Language.Parsing.SyntaxParsers.MakeSeparatedList$1(TElement,Bridge.cast(elements,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Syntax.SyntaxElement)))},MakeSeparatedList$1:function(TElement,elements){var separatedElements,i,element,separator;if(elements==null)return Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(TElement)).Empty();for(separatedElements=new(System.Collections.Generic.List$1(Kusto.Language.Syntax.SeparatedElement$1(TElement)).ctor),i=0;i<System.Array.getCount(elements,System.Object);i=i+2|0)element=Bridge.cast(System.Array.getItem(elements,i,System.Object),TElement),separator=i<(System.Array.getCount(elements,System.Object)-1|0)?Bridge.cast(System.Array.getItem(elements,i+1|0,System.Object),Kusto.Language.Syntax.SyntaxToken):null,separatedElements.add(new(Kusto.Language.Syntax.SeparatedElement$1(TElement))(element,separator));return new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(TElement)).$ctor1)(separatedElements)},ParseAll$1:function(TParser,parser,text,alwaysProduceEndToken){return alwaysProduceEndToken===void 0&&(alwaysProduceEndToken=!1),Kusto.Language.Parsing.SyntaxParsers.ParseAll(TParser,parser,Kusto.Language.Parsing.LexicalGrammar.GetTokens(text,alwaysProduceEndToken))},ParseAll:function(TParser){return new(Bridge.GeneratorEnumerable$1(TParser))(Bridge.fn.bind(this,function(TParser,parser,tokens){var $step=0,source,start,result,$async_e,$enumerator=new(Bridge.GeneratorEnumerator$1(TParser))(Bridge.fn.bind(this,function(){try{for(;;)switch($step){case 0:source=new(Kusto.Language.Parsing.ArraySource$1(Kusto.Language.Parsing.LexicalToken))(tokens);start=0;$step=1;continue;case 1:if(!source.IsEnd(start)){$step=2;continue}$step=4;continue;case 2:if(result=parser.Parse$1(source,start),result.Length<=0){$step=4;continue}return $enumerator.current=result.Value,$step=3,!0;case 3:start=start+result.Length|0;$step=1;continue;case 4:default:return!1}}catch($async_e1){$async_e=System.Exception.create($async_e1);throw $async_e;}}));return $enumerator},arguments))},ParseFirst:function(TParser,parser,text,alwaysProduceEOF){return alwaysProduceEOF===void 0&&(alwaysProduceEOF=!1),Kusto.Language.Parsing.SyntaxParsers.ParseFirst$1(TParser,parser,Kusto.Language.Parsing.LexicalGrammar.GetTokens(text,alwaysProduceEOF))},ParseFirst$1:function(TParser,parser,tokens){var source=new(Kusto.Language.Parsing.ArraySource$1(Kusto.Language.Parsing.LexicalToken))(tokens),result=parser.Parse$1(source,0);return result.Value},Examples:function(TParser,parser,values){return parser.WithAnnotations$1(System.Linq.Enumerable.from(values).select(function(v){return new Kusto.Language.Editor.CompletionItem(Kusto.Language.Editor.CompletionKind.Literal,v)}))},Examples$1:function(TParser,parser,values){return values===void 0&&(values=[]),Kusto.Language.Parsing.SyntaxParsers.Examples(TParser,parser,Bridge.cast(values,System.Collections.Generic.IReadOnlyList$1(System.String)))}}}});Bridge.define("Kusto.Language.Parsing.TextFacts",{statics:{methods:{IsWhitespace:function(ch){switch(ch){case 9:case 32:case 13:case 10:case 12:case 160:case 5760:case 6158:case 8192:case 8193:case 8194:case 8195:case 8196:case 8197:case 8198:case 8199:case 8200:case 8201:case 8202:case 8203:case 8239:case 8287:case 12288:case 65279:return!0;default:return!1}},IsLineBreakStart:function(ch){switch(ch){case 13:case 10:case 8232:case 8233:return!0;default:return!1}},GetLineBreakLength:function(text,position){if(position<text.length){var ch=text.charCodeAt(position);switch(ch){case 13:return(position+1|0)<text.length&&text.charCodeAt(position+1|0)===10?2:1;case 10:case 8232:case 8233:return 1}}return 0},HasLineBreaks:function(text){var $t,c;$t=Bridge.getEnumerator(text);try{while($t.moveNext())if(c=$t.Current,Kusto.Language.Parsing.TextFacts.IsLineBreakStart(c))return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!1},GetNextLineBreakStart:function(text,start){for(var i=start;i<text.length;i=i+1|0)if(Kusto.Language.Parsing.TextFacts.IsLineBreakStart(text.charCodeAt(i)))return i;return-1},GetNextLineStart:function(text,start){var nextStart=Kusto.Language.Parsing.TextFacts.GetNextLineBreakStart(text,start);return nextStart>=0?nextStart+Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,nextStart)|0:nextStart},IsLetter:function(ch){return ch>=97&&ch<=122||ch>=65&&ch<=90},IsDigit:function(ch){return ch>=48&&ch<=57},IsHexDigit:function(ch){return ch>=48&&ch<=57||ch>=97&&ch<=102||ch>=65&&ch<=70},GetLineStarts:function(text,lineStarts){var lineStart,i,n,lb;for(lineStarts.add(0),lineStart=0,i=0,n=text.length;i<n;)lb=Kusto.Language.Parsing.TextFacts.GetLineBreakLength(text,i),lb>0?(i=i+lb|0,lineStart=i,lineStarts.add(lineStart)):i=i+1|0},TryGetLineAndOffset:function(text,position,lineStarts,line,lineOffset){return(line.v=lineStarts.BinarySearch(position),line.v=line.v>=0?line.v:~line.v-1|0,line.v<0||line.v>=lineStarts.Count)?(line.v=0,lineOffset.v=0,!1):(lineOffset.v=(position-lineStarts.getItem(line.v)|0)+1|0,line.v=line.v+1|0,!0)},TrimEnd:function(text){return Kusto.Language.Parsing.TextFacts.TrimEnd$1(text,0,text.length)},TrimEnd$1:function(text,start,length){for(var ln=length-1|0;ln>=0;ln=ln-1|0)if(!Kusto.Language.Parsing.TextFacts.IsWhitespace(text.charCodeAt(start+ln|0)))return ln+1|0;return 0}}}});Bridge.define("Kusto.Language.PlugIns",{statics:{fields:{ActiveUseCounts:null,ActivityCountsMetrics:null,ActivityEngagement:null,ActivityMetrics:null,AutoClusterColumns:null,AutoCluster:null,BagUnpack:null,BasketColumns:null,Basket:null,CosmosdbSqlRequest:null,DCountIntersect:null,DiffPatternsColumns:null,DiffPatterns:null,EstimateRowsCount:null,ExecuteShowCommand:null,ExecuteQuery:null,ExternalDatatable:null,FunnelSequence:null,FunnelSequenceCompletion:null,HttpRequestColumns:null,HttpRequest:null,HttpRequestPost:null,Identity:null,IdentityV3:null,NarrowColumns:null,Narrow:null,Pivot:null,Preview:null,CSharp:null,Python:null,R:null,RollingPercentile:null,SessionCount:null,SlidingWindowCounts:null,SqlRequest:null},props:{All:null},ctors:{init:function(){this.ActiveUseCounts=new Kusto.Language.Symbols.FunctionSymbol.ctor("active_users_count",function(table,args,signature){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,signature,"TimelineColumn",args),Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,signature,"Dimension",args),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount",Kusto.Language.Symbols.ScalarTypes.Long)),new Kusto.Language.Symbols.TableSymbol.$ctor2(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("LookbackWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Period",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("ActivePeriods",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Step",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]);this.ActivityCountsMetrics=new Kusto.Language.Symbols.FunctionSymbol.ctor("activity_counts_metrics",function(table,args,signature){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,signature,"TimelineColumn",args),Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,signature,"Dimension",args),cols.add(new Kusto.Language.Symbols.ColumnSymbol("count",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("new_dcount",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("aggregated_dcount",Kusto.Language.Symbols.ScalarTypes.Long)),new Kusto.Language.Symbols.TableSymbol.$ctor2(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Step",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]);this.ActivityEngagement=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("activity_engagement",[new Kusto.Language.Symbols.Signature.ctor(function(table,args,signature){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,signature,"TimelineColumn",args),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_activities_inner",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_activities_outer",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("activity_ratio",Kusto.Language.Symbols.ScalarTypes.Real)),new Kusto.Language.Symbols.TableSymbol.$ctor2(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("InnerActivityWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("OuterActivityWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant)]),new Kusto.Language.Symbols.Signature.ctor(function(table,args,signature){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,signature,"TimelineColumn",args),Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,signature,"Dimension",args),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_activities_inner",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_activities_outer",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("activity_ratio",Kusto.Language.Symbols.ScalarTypes.Real)),new Kusto.Language.Symbols.TableSymbol.$ctor2(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("InnerActivityWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("OuterActivityWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)])]);this.ActivityMetrics=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("activity_metrics",[new Kusto.Language.Symbols.Signature.ctor(function(table,args,signature){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,signature,"TimelineColumn",args),Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,signature,"Dimension",args),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_values",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_newvalues",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("retention_rate",Kusto.Language.Symbols.ScalarTypes.Real)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("churn_rate",Kusto.Language.Symbols.ScalarTypes.Real)),new Kusto.Language.Symbols.TableSymbol.$ctor2(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Step",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]),new Kusto.Language.Symbols.Signature.ctor(function(table,args,signature){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,signature,"TimelineColumn",args),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_values",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount_newvalues",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("retention_rate",Kusto.Language.Symbols.ScalarTypes.Real)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("churn_rate",Kusto.Language.Symbols.ScalarTypes.Real)),new Kusto.Language.Symbols.TableSymbol.$ctor2(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0)])]);this.AutoClusterColumns=System.Array.init([new Kusto.Language.Symbols.ColumnSymbol("SegmentId",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Count",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Percent",Kusto.Language.Symbols.ScalarTypes.Real)],Kusto.Language.Symbols.ColumnSymbol);this.AutoCluster=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("autocluster",function(table){return table.WithColumns$1(System.Linq.Enumerable.from(Kusto.Language.PlugIns.AutoClusterColumns).concat(table.Columns))},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor3("SizeWeight",Kusto.Language.Symbols.ScalarTypes.Real,0,void 0,void 0,!1,"~",0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("WeightColumn",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,"~",0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("NumSeeds",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,"~",0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("CustomWildcard",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]);this.BagUnpack=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("bag_unpack",function(table,args){return table.WithColumns$1(System.Linq.Enumerable.from(table.Columns).where(function(c){return System.Array.getCount(args,Kusto.Language.Syntax.Expression)===0||!Bridge.referenceEquals(c,System.Array.getItem(args,0,Kusto.Language.Syntax.Expression).ReferencedSymbol)})).Open()},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor3("column",Kusto.Language.Symbols.ScalarTypes.Dynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.$ctor3("column_prefix",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.LiteralNotEmpty,void 0,void 0,!1,void 0,0,1,void 0)]);this.BasketColumns=System.Array.init([new Kusto.Language.Symbols.ColumnSymbol("SegmentId",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Count",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Percent",Kusto.Language.Symbols.ScalarTypes.Real)],Kusto.Language.Symbols.ColumnSymbol);this.Basket=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("basket",function(table){return table.WithColumns$1(System.Linq.Enumerable.from(Kusto.Language.PlugIns.BasketColumns).concat(table.Columns))},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor3("Threshold",Kusto.Language.Symbols.ScalarTypes.Real,0,void 0,void 0,!1,"~",0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("WeightColumn",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,"~",0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("MaxDimensions",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,"~",0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("CustomWildcard",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]);this.CosmosdbSqlRequest=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("cosmosdb_sql_request",function(){return(new Kusto.Language.Symbols.TableSymbol.ctor).Open()},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("endpoint",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("authorization_string",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("database_name",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("collection_name",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("sql_query",Kusto.Language.Symbols.ScalarTypes.String)]);this.DCountIntersect=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("dcount_intersect",function(table,args){return table.AddColumns$1(System.Linq.Enumerable.from(args).select(function(a,i){return new Kusto.Language.Symbols.ColumnSymbol("s"+i,Kusto.Language.Symbols.ScalarTypes.Long)}))},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor3("hll",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,2,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]);this.DiffPatternsColumns=System.Array.init([new Kusto.Language.Symbols.ColumnSymbol("SegmentId",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("CountA",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("CountB",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("PercentA",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("PercentB",Kusto.Language.Symbols.ScalarTypes.Real),new Kusto.Language.Symbols.ColumnSymbol("PercentDiffAB",Kusto.Language.Symbols.ScalarTypes.Real)],Kusto.Language.Symbols.ColumnSymbol);this.DiffPatterns=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("diffpatterns",function(table){return table.WithColumns$1(System.Linq.Enumerable.from(Kusto.Language.PlugIns.DiffPatternsColumns).concat(table.Columns))},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("SplitColumn",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.$ctor2("SplitValueA",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("SplitValueB",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.ctor("WeightColumn",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,"~",0,1,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("Threshold",Kusto.Language.Symbols.ScalarTypes.Real,0,void 0,void 0,!1,"~",0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("MaxDimensions",Kusto.Language.Symbols.ParameterTypeKind.Integer,0,void 0,void 0,!1,"~",0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("CustomWildcard",Kusto.Language.Symbols.ParameterTypeKind.Scalar,0,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]);this.EstimateRowsCount=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("estimate_rows_count",[new Kusto.Language.Symbols.Signature.$ctor2(function(){return new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("EstimatedRowsCount",Kusto.Language.Symbols.ScalarTypes.Long)])},Kusto.Language.Symbols.Tabularity.Tabular)]);this.ExecuteShowCommand=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("execute_show_command",function(){return(new Kusto.Language.Symbols.TableSymbol.ctor).Open()},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("connection_string",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("command",Kusto.Language.Symbols.ScalarTypes.String)]);this.ExecuteQuery=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("execute_query",function(){return(new Kusto.Language.Symbols.TableSymbol.ctor).Open()},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("connection_string",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("query",Kusto.Language.Symbols.ScalarTypes.String)]);this.ExternalDatatable=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("external_datatable",[new Kusto.Language.Symbols.Signature.$ctor2(function(){return(new Kusto.Language.Symbols.TableSymbol.ctor).Open()},Kusto.Language.Symbols.Tabularity.Tabular)]);this.FunnelSequence=new Kusto.Language.Symbols.FunctionSymbol.ctor("funnel_sequence",function(table,args,signature){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,signature,"TimelineColumn",args),Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,signature,"StateColumn",args,"prev"),Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,signature,"StateColumn",args,"next"),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("samples",Kusto.Language.Symbols.ScalarTypes.Dynamic)),new Kusto.Language.Symbols.TableSymbol.$ctor2(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("MaxWindowSizeBetweenSteps",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Step",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("StateColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.$ctor3("Sequence",Kusto.Language.Symbols.ScalarTypes.Dynamic,Kusto.Language.Symbols.ArgumentKind.Constant)]);this.FunnelSequenceCompletion=new Kusto.Language.Symbols.FunctionSymbol.ctor("funnel_sequence_completion",function(table,args,signature){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,signature,"TimelineColumn",args),Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,signature,"StateColumn",args,void 0,Kusto.Language.Symbols.ScalarTypes.String),cols.add(new Kusto.Language.Symbols.ColumnSymbol("Period",Kusto.Language.Symbols.ScalarTypes.TimeSpan)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("dcount",Kusto.Language.Symbols.ScalarTypes.Long)),new Kusto.Language.Symbols.TableSymbol.$ctor2(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Step",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("StateColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.$ctor3("Sequence",Kusto.Language.Symbols.ScalarTypes.Dynamic,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor3("MaxSequenceWindows",Kusto.Language.Symbols.ScalarTypes.Dynamic,Kusto.Language.Symbols.ArgumentKind.Constant)]);this.HttpRequestColumns=System.Array.init([new Kusto.Language.Symbols.ColumnSymbol("ResponseHeaders",Kusto.Language.Symbols.ScalarTypes.Dynamic),new Kusto.Language.Symbols.ColumnSymbol("ResponseBody",Kusto.Language.Symbols.ScalarTypes.Dynamic)],Kusto.Language.Symbols.ColumnSymbol);this.HttpRequest=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("http_request",new Kusto.Language.Symbols.TableSymbol.$ctor2(Kusto.Language.PlugIns.HttpRequestColumns),[new Kusto.Language.Symbols.Parameter.$ctor3("Uri",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor3("RequestHeaders",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("Options",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,0,1,void 0)]);this.HttpRequestPost=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("http_request_post",new Kusto.Language.Symbols.TableSymbol.$ctor2(Kusto.Language.PlugIns.HttpRequestColumns),[new Kusto.Language.Symbols.Parameter.$ctor3("Uri",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor3("RequestHeaders",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("Options",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.$ctor3("Content",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant,void 0,void 0,!1,void 0,0,1,void 0)]);this.Identity=new Kusto.Language.Symbols.FunctionSymbol.$ctor6("identity",[new Kusto.Language.Symbols.Signature.$ctor2(function(table){return table},Kusto.Language.Symbols.Tabularity.Tabular)]);this.IdentityV3=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("identity_v3",function(table){return table},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor3("mode",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.$ctor3("exceptionText",Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ArgumentKind.Constant)]);this.NarrowColumns=System.Array.init([new Kusto.Language.Symbols.ColumnSymbol("Row",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Column",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Value",Kusto.Language.Symbols.ScalarTypes.String)],Kusto.Language.Symbols.ColumnSymbol);this.Narrow=new Kusto.Language.Symbols.FunctionSymbol.$ctor7("narrow",new Kusto.Language.Symbols.TableSymbol.$ctor2(Kusto.Language.PlugIns.NarrowColumns));this.Pivot=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("pivot",function(table,args){var pivotColumn=System.Array.getCount(args,Kusto.Language.Syntax.Expression)>0?Bridge.as(System.Array.getItem(args,0,Kusto.Language.Syntax.Expression).ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol):null,fc,aggregateColumn=System.Array.getCount(args,Kusto.Language.Syntax.Expression)>1&&(fc=Bridge.as(System.Array.getItem(args,1,Kusto.Language.Syntax.Expression),Kusto.Language.Syntax.FunctionCallExpression))!=null&&fc.ArgumentList.Expressions.Count>0?Bridge.as(fc.ArgumentList.Expressions.getItem$1(0).Element$1.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol):null,columns=System.Linq.Enumerable.from(args).skip(2).select(function(a){return Bridge.as(a.ReferencedSymbol,Kusto.Language.Symbols.ColumnSymbol)}).where(function(c){return c!=null}).toList(Kusto.Language.Symbols.ColumnSymbol);return columns.Count===0&&columns.AddRange(System.Linq.Enumerable.from(table.Columns).where(function(c){return!Bridge.referenceEquals(c,pivotColumn)&&!Bridge.referenceEquals(c,aggregateColumn)})),new Kusto.Language.Symbols.TableSymbol.$ctor2(columns).Open()},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("pivotColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("aggregateFunction",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Aggregate,void 0,void 0,!1,void 0,0,1,void 0),new Kusto.Language.Symbols.Parameter.ctor("columnName",Kusto.Language.Symbols.ParameterTypeKind.Scalar,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]);this.Preview=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("preview",function(table){return new Kusto.Language.Symbols.GroupSymbol.ctor([table,new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Count",Kusto.Language.Symbols.ScalarTypes.Long)])])},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("NumberOfRows",Kusto.Language.Symbols.ParameterTypeKind.Integer)]);this.CSharp=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("csharp",function(){return(new Kusto.Language.Symbols.TableSymbol.ctor).Open()},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("OutputSchema",Kusto.Language.Symbols.ScalarTypes.Type),new Kusto.Language.Symbols.Parameter.$ctor2("Script",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("ScriptParameters",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,0,1,void 0)]);this.Python=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("python",function(){return(new Kusto.Language.Symbols.TableSymbol.ctor).Open()},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("OutputSchema",Kusto.Language.Symbols.ScalarTypes.Type),new Kusto.Language.Symbols.Parameter.$ctor2("Script",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("ScriptParameters",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,0,1,void 0)]);this.R=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("r",function(){return(new Kusto.Language.Symbols.TableSymbol.ctor).Open()},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("OutputSchema",Kusto.Language.Symbols.ScalarTypes.Type),new Kusto.Language.Symbols.Parameter.$ctor2("Script",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor3("ScriptParameters",Kusto.Language.Symbols.ScalarTypes.Dynamic,0,void 0,void 0,!1,void 0,0,1,void 0)]);this.RollingPercentile=new Kusto.Language.Symbols.FunctionSymbol.ctor("rolling_percentile",function(table,args,signature){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7,cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,signature,"IndexColumn",args);Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,signature,"Dimension",args);var binsPerWindow=($t=($t1=Kusto.Language.FunctionHelpers.GetArgument(args,signature,"BinsPerWindow"))!=null&&($t2=$t1.LiteralValue)!=null?Bridge.toString($t2):null,$t!=null?$t:"0"),percentile=($t3=($t4=Kusto.Language.FunctionHelpers.GetArgument(args,signature,"Percentile"))!=null&&($t5=$t4.LiteralValue)!=null?Bridge.toString($t5):null,$t3!=null?$t3:"0"),valueColumn=Bridge.as(($t6=Kusto.Language.FunctionHelpers.GetArgument(args,signature,"ValueColumn"))!=null?$t6.ReferencedSymbol:null,Kusto.Language.Symbols.ColumnSymbol);return cols.add(new Kusto.Language.Symbols.ColumnSymbol(System.String.format("rolling_{0}_percentile_{1}_{2}",binsPerWindow,($t7=valueColumn!=null?valueColumn.Name:null,$t7!=null?$t7:"value"),percentile),(valueColumn!=null?valueColumn.Type:null)||Kusto.Language.Symbols.ScalarTypes.Long)),new Kusto.Language.Symbols.TableSymbol.$ctor2(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("ValueColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Percentile",Kusto.Language.Symbols.ParameterTypeKind.Number,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("IndexColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("BinSize",Kusto.Language.Symbols.ParameterTypeKind.Summable),new Kusto.Language.Symbols.Parameter.ctor("BinsPerWindow",Kusto.Language.Symbols.ParameterTypeKind.Integer,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]);this.SessionCount=new Kusto.Language.Symbols.FunctionSymbol.ctor("session_count",function(table,args,signature){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,signature,"TimelineColumn",args),Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,signature,"Dimension",args),cols.add(new Kusto.Language.Symbols.ColumnSymbol("count_sessions",Kusto.Language.Symbols.ScalarTypes.Long)),new Kusto.Language.Symbols.TableSymbol.$ctor2(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Bin",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("LookBackWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]);this.SlidingWindowCounts=new Kusto.Language.Symbols.FunctionSymbol.ctor("sliding_window_counts",function(table,args,signature){var cols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor);return Kusto.Language.FunctionHelpers.AddReferencedColumn(cols,signature,"TimelineColumn",args),Kusto.Language.FunctionHelpers.AddReferencedColumns(cols,signature,"Dimension",args),cols.add(new Kusto.Language.Symbols.ColumnSymbol("Count",Kusto.Language.Symbols.ScalarTypes.Long)),cols.add(new Kusto.Language.Symbols.ColumnSymbol("Dcount",Kusto.Language.Symbols.ScalarTypes.Long)),new Kusto.Language.Symbols.TableSymbol.$ctor2(cols)},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.ctor("IdColumn",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("TimelineColumn",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Column),new Kusto.Language.Symbols.Parameter.ctor("Start",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("End",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("LookBackWindow",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Step",Kusto.Language.Symbols.ParameterTypeKind.Summable,Kusto.Language.Symbols.ArgumentKind.Constant),new Kusto.Language.Symbols.Parameter.ctor("Dimension",Kusto.Language.Symbols.ParameterTypeKind.NotDynamic,Kusto.Language.Symbols.ArgumentKind.Column,void 0,void 0,!1,void 0,0,Kusto.Language.FunctionHelpers.MaxRepeat,void 0)]);this.SqlRequest=new Kusto.Language.Symbols.FunctionSymbol.$ctor2("sql_request",function(){return(new Kusto.Language.Symbols.TableSymbol.ctor).Open()},Kusto.Language.Symbols.Tabularity.Tabular,[new Kusto.Language.Symbols.Parameter.$ctor2("ConnectionString",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.Parameter.$ctor2("SqlQuery",Kusto.Language.Symbols.ScalarTypes.String)]);this.All=System.Array.init([Kusto.Language.PlugIns.ActiveUseCounts,Kusto.Language.PlugIns.ActivityCountsMetrics,Kusto.Language.PlugIns.ActivityEngagement,Kusto.Language.PlugIns.ActivityMetrics,Kusto.Language.PlugIns.AutoCluster,Kusto.Language.PlugIns.BagUnpack,Kusto.Language.PlugIns.Basket,Kusto.Language.PlugIns.CosmosdbSqlRequest,Kusto.Language.PlugIns.DCountIntersect,Kusto.Language.PlugIns.DiffPatterns,Kusto.Language.PlugIns.EstimateRowsCount,Kusto.Language.PlugIns.ExecuteShowCommand,Kusto.Language.PlugIns.ExecuteQuery,Kusto.Language.PlugIns.ExternalDatatable,Kusto.Language.PlugIns.FunnelSequence,Kusto.Language.PlugIns.FunnelSequenceCompletion,Kusto.Language.PlugIns.HttpRequest,Kusto.Language.PlugIns.HttpRequestPost,Kusto.Language.PlugIns.Identity,Kusto.Language.PlugIns.IdentityV3,Kusto.Language.PlugIns.Narrow,Kusto.Language.PlugIns.Pivot,Kusto.Language.PlugIns.Preview,Kusto.Language.PlugIns.Python,Kusto.Language.PlugIns.R,Kusto.Language.PlugIns.RollingPercentile,Kusto.Language.PlugIns.SessionCount,Kusto.Language.PlugIns.SlidingWindowCounts,Kusto.Language.PlugIns.SqlRequest],Kusto.Language.Symbols.FunctionSymbol)}}}});Bridge.define("Kusto.Language.Symbols.ArgumentKind",{$kind:"enum",statics:{fields:{Expression:0,Star:1,Aggregate:2,Column:3,Literal:4,LiteralNotEmpty:5,Constant:6}}});Bridge.define("Kusto.Language.Symbols.Symbol",{statics:{methods:{GetExpressionResultType:function(symbol){var $t,c,v,p,g,resultSymbols,m,rs;do{if(Bridge.is(symbol,Kusto.Language.Symbols.ColumnSymbol))return c=Bridge.cast(symbol,Kusto.Language.Symbols.ColumnSymbol),c.Type;if(Bridge.is(symbol,Kusto.Language.Symbols.VariableSymbol))return v=Bridge.cast(symbol,Kusto.Language.Symbols.VariableSymbol),v.Type;if(Bridge.is(symbol,Kusto.Language.Symbols.ParameterSymbol))return p=Bridge.cast(symbol,Kusto.Language.Symbols.ParameterSymbol),p.Type;if(Bridge.is(symbol,Kusto.Language.Symbols.GroupSymbol)){g=Bridge.cast(symbol,Kusto.Language.Symbols.GroupSymbol);resultSymbols=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Symbol).ctor);$t=Bridge.getEnumerator(g.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())m=$t.Current,rs=Kusto.Language.Symbols.Symbol.GetExpressionResultType(m),rs!=null&&resultSymbols.add(rs)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return resultSymbols.Count===1?Bridge.as(resultSymbols.getItem(0),Kusto.Language.Symbols.TypeSymbol):resultSymbols.Count>1?new Kusto.Language.Symbols.GroupSymbol.$ctor1(resultSymbols):null}return Bridge.is(symbol,Kusto.Language.Symbols.TypeSymbol)?Bridge.cast(symbol,Kusto.Language.Symbols.TypeSymbol):null}while(0)}}},fields:{_display:null},props:{Name:null,IsHidden:{get:function(){return System.String.startsWith(this.Name,"__")}},IsError:{get:function(){return!1}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Unknown}},IsScalar:{get:function(){switch(this.Tabularity){case Kusto.Language.Symbols.Tabularity.Scalar:case Kusto.Language.Symbols.Tabularity.Unknown:return!0;default:return!1}}},IsTabular:{get:function(){switch(this.Tabularity){case Kusto.Language.Symbols.Tabularity.Tabular:case Kusto.Language.Symbols.Tabularity.Unknown:return!0;default:return!1}}},Display:{get:function(){return this._display==null&&(this._display=this.GetDisplay()),this._display}},Members:{get:function(){return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.Symbol).Instance}}},ctors:{ctor:function(name){var $t;this.$initialize();this.Name=($t=name,$t!=null?$t:"")}},methods:{GetDisplay:function(){return this.Name},GetMembers$1:function(name,match,symbols,ignoreCase){var $t,symbol;ignoreCase===void 0&&(ignoreCase=!1);$t=Bridge.getEnumerator(this.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())symbol=$t.Current,Kusto.Language.Symbols.SymbolMatchExtensions.Matches$1(symbol,name,match,ignoreCase)&&symbols.add(symbol)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},GetMembers:function(match,symbols,ignoreCase){ignoreCase===void 0&&(ignoreCase=!1);this.GetMembers$1(null,match,symbols,ignoreCase)},GetFirstMember:function(name,match,ignoreCase){var $t,symbol;match===void 0&&(match=255);ignoreCase===void 0&&(ignoreCase=!1);$t=Bridge.getEnumerator(this.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())if(symbol=$t.Current,Kusto.Language.Symbols.SymbolMatchExtensions.Matches$1(symbol,name,match,ignoreCase))return symbol}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return null}}});Bridge.define("Kusto.Language.Symbols.CombineKind",{$kind:"enum",statics:{fields:{UnifySameNameAndType:0,UnifySameName:1,UniqueNames:2}}});Bridge.define("Kusto.Language.Symbols.FunctionBodyFacts",{$kind:"enum",statics:{fields:{None:0,Cluster:1,Database:2,Table:4,VariableReturn:16}},$flags:!0});Bridge.define("Kusto.Language.Symbols.OperatorKind",{$kind:"enum",statics:{fields:{None:0,UnaryMinus:1,UnaryPlus:2,Add:3,Subtract:4,Multiply:5,Divide:6,Modulo:7,EqualTilde:8,BangTilde:9,Has:10,HasCs:11,NotHas:12,NotHasCs:13,HasPrefix:14,HasPrefixCs:15,NotHasPrefix:16,NotHasPrefixCs:17,HasSuffix:18,HasSuffixCs:19,NotHasSuffix:20,NotHasSuffixCs:21,Like:22,LikeCs:23,NotLike:24,NotLikeCs:25,Contains:26,ContainsCs:27,NotContains:28,NotContainsCs:29,StartsWith:30,StartsWithCs:31,NotStartsWith:32,NotStartsWithCs:33,EndsWith:34,EndsWithCs:35,NotEndsWith:36,NotEndsWithCs:37,MatchRegex:38,Search:39,LessThan:40,LessThanOrEqual:41,GreaterThan:42,GreaterThanOrEqual:43,Equal:44,NotEqual:45,And:46,Or:47,In:48,InCs:49,NotIn:50,NotInCs:51,Between:52,NotBetween:53,HasAny:54}}});Bridge.define("Kusto.Language.Symbols.Parameter",{statics:{fields:{NoValues:null,NoExamples:null},ctors:{init:function(){this.NoValues=Kusto.Language.Utils.EmptyReadOnlyList$1(System.Object).Instance;this.NoExamples=Kusto.Language.Utils.EmptyReadOnlyList$1(System.String).Instance}},methods:{From:function(parameter,isOptional,defaultValue){return isOptional===void 0&&(isOptional=!1),defaultValue===void 0&&(defaultValue=null),new Kusto.Language.Symbols.Parameter.$ctor3(parameter.Name,parameter.Type,0,void 0,void 0,!1,void 0,isOptional?0:1,1,defaultValue)}}},props:{Name:null,TypeKind:0,DeclaredTypes:null,ArgumentKind:0,MinOccurring:0,MaxOccurring:0,IsOptional:{get:function(){return this.MinOccurring===0}},IsRepeatable:{get:function(){return this.MaxOccurring>1}},Values:null,Examples:null,IsCaseSensitive:!1,DefaultValueIndicator:null,DefaultValue:null,TypeDependsOnArguments:{get:function(){return this.TypeKind!==Kusto.Language.Symbols.ParameterTypeKind.Declared||System.Array.getItem(this.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol).IsTabular}},Tabularity:{get:function(){switch(this.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Declared:return System.Array.getItem(this.DeclaredTypes,0,Kusto.Language.Symbols.TypeSymbol).Tabularity;case Kusto.Language.Symbols.ParameterTypeKind.Tabular:case Kusto.Language.Symbols.ParameterTypeKind.SingleColumnTable:case Kusto.Language.Symbols.ParameterTypeKind.Database:case Kusto.Language.Symbols.ParameterTypeKind.Cluster:return Kusto.Language.Symbols.Tabularity.Tabular;default:return Kusto.Language.Symbols.Tabularity.Scalar}}},IsScalar:{get:function(){return this.Tabularity===Kusto.Language.Symbols.Tabularity.Scalar}},IsTabular:{get:function(){return this.Tabularity===Kusto.Language.Symbols.Tabularity.Tabular}},TypeDisplay:{get:function(){switch(this.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Declared:return Bridge.toArray(System.Linq.Enumerable.from(this.DeclaredTypes).select(function(t){return t.Display})).join("|");default:return"<"+(System.Enum.toString(Kusto.Language.Symbols.ParameterTypeKind,this.TypeKind)||"")+">"}}},Display:{get:function(){return System.String.format("{0}: {1}",this.Name,this.TypeDisplay)}}},ctors:{$ctor1:function(name,typeKind,types,argumentKind,values,examples,isCaseSensitive,defaultValueIndicator,minOccurring,maxOccurring,defaultValue){if(this.$initialize(),typeKind===Kusto.Language.Symbols.ParameterTypeKind.Declared)if(types==null)throw new System.ArgumentNullException.$ctor1("types");else if(types.length===0)throw new System.ArgumentException.$ctor3("Must have at least one declared type.","types");this.Name=name;this.TypeKind=typeKind;this.DeclaredTypes=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.TypeSymbol,types);this.ArgumentKind=argumentKind;this.Values=values!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(System.Object,values):Kusto.Language.Symbols.Parameter.NoValues;this.Examples=examples!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(System.String,examples):Kusto.Language.Symbols.Parameter.NoExamples;this.IsCaseSensitive=isCaseSensitive;this.MinOccurring=defaultValue!=null?0:minOccurring;this.MaxOccurring=defaultValue!=null?1:maxOccurring;this.DefaultValueIndicator=defaultValueIndicator;this.DefaultValue=defaultValue},ctor:function(name,typeKind,argumentKind,values,examples,isCaseSensitive,defaultValueIndicator,minOccurring,maxOccurring,defaultValue){argumentKind===void 0&&(argumentKind=0);values===void 0&&(values=null);examples===void 0&&(examples=null);isCaseSensitive===void 0&&(isCaseSensitive=!1);defaultValueIndicator===void 0&&(defaultValueIndicator=null);minOccurring===void 0&&(minOccurring=1);maxOccurring===void 0&&(maxOccurring=1);defaultValue===void 0&&(defaultValue=null);Kusto.Language.Symbols.Parameter.$ctor1.call(this,name,typeKind,null,argumentKind,values,examples,isCaseSensitive,defaultValueIndicator,minOccurring,maxOccurring,defaultValue)},$ctor3:function(name,type,argumentKind,values,examples,isCaseSensitive,defaultValueIndicator,minOccurring,maxOccurring,defaultValue){argumentKind===void 0&&(argumentKind=0);values===void 0&&(values=null);examples===void 0&&(examples=null);isCaseSensitive===void 0&&(isCaseSensitive=!1);defaultValueIndicator===void 0&&(defaultValueIndicator=null);minOccurring===void 0&&(minOccurring=1);maxOccurring===void 0&&(maxOccurring=1);defaultValue===void 0&&(defaultValue=null);Kusto.Language.Symbols.Parameter.$ctor1.call(this,name,Kusto.Language.Symbols.ParameterTypeKind.Declared,System.Array.init([type],Kusto.Language.Symbols.TypeSymbol),argumentKind,values,examples,isCaseSensitive,defaultValueIndicator,minOccurring,maxOccurring,defaultValue)},$ctor4:function(name,types,argumentKind,values,examples,isCaseSensitive,defaultValueIndicator,minOccurring,maxOccurring,defaultValue){argumentKind===void 0&&(argumentKind=0);values===void 0&&(values=null);examples===void 0&&(examples=null);isCaseSensitive===void 0&&(isCaseSensitive=!1);defaultValueIndicator===void 0&&(defaultValueIndicator=null);minOccurring===void 0&&(minOccurring=1);maxOccurring===void 0&&(maxOccurring=1);defaultValue===void 0&&(defaultValue=null);Kusto.Language.Symbols.Parameter.$ctor1.call(this,name,Kusto.Language.Symbols.ParameterTypeKind.Declared,types,argumentKind,values,examples,isCaseSensitive,defaultValueIndicator,minOccurring,maxOccurring,defaultValue)},$ctor2:function(name,type){Kusto.Language.Symbols.Parameter.$ctor1.call(this,name,Kusto.Language.Symbols.ParameterTypeKind.Declared,System.Array.init([type],Kusto.Language.Symbols.TypeSymbol),Kusto.Language.Symbols.ArgumentKind.Expression,null,null,!1,null,1,1,null)}}});Bridge.define("Kusto.Language.Symbols.ParameterTypeKind",{$kind:"enum",statics:{fields:{Declared:0,Scalar:1,Tabular:2,SingleColumnTable:3,Database:4,Cluster:5,Integer:6,RealOrDecimal:7,StringOrDynamic:8,Number:9,Summable:10,NotRealOrBool:11,NotDynamic:12,NotBool:13,Parameter0:14,Parameter1:15,Parameter2:16,CommonScalar:17,CommonNumber:18,CommonSummable:19,CommonScalarOrDynamic:20,IntegerOrDynamic:21}}});Bridge.define("Kusto.Language.Symbols.PatternSignature",{props:{ArgumentValues:null,PathValue:null,Body:null,Declaration:null},ctors:{$ctor2:function(argumentValues,pathValue,body,declaration){this.$initialize();this.ArgumentValues=argumentValues;this.PathValue=pathValue;this.Body=body;this.Declaration=declaration},$ctor1:function(argumentValues,pathValue,body){Kusto.Language.Symbols.PatternSignature.$ctor2.call(this,argumentValues,pathValue,body,null)},ctor:function(argumentValues,pathValue,declaration){Kusto.Language.Symbols.PatternSignature.$ctor2.call(this,argumentValues,pathValue,null,declaration)}}});Bridge.define("Kusto.Language.Symbols.ResultNameKind",{$kind:"enum",statics:{fields:{None:0,NameAndFirstArgument:1,NameAndOnlyArgument:2,PrefixAndFirstArgument:3,PrefixAndOnlyArgument:4,FirstArgumentValueIfColumn:5,PrefixOnly:6,FirstArgument:7,OnlyArgument:8,Default:0},ctors:{init:function(){this.Default=Kusto.Language.Symbols.ResultNameKind.None}}}});Bridge.define("Kusto.Language.Symbols.ReturnTypeKind",{$kind:"enum",statics:{fields:{Declared:0,Computed:1,Custom:2,Parameter0:3,Parameter1:4,Parameter2:5,ParameterN:6,ParameterNLiteral:7,Parameter0Promoted:8,Parameter0Cluster:9,Parameter0Database:10,Parameter0Table:11,Common:12,Widest:13}}});Bridge.define("Kusto.Language.Symbols.ScalarFlags",{$kind:"enum",statics:{fields:{None:0,Integer:1,Numeric:2,Interval:4,Summable:8}},$flags:!0});Bridge.define("Kusto.Language.Symbols.ScalarTypes",{statics:{fields:{Bool:null,Int:null,Long:null,Real:null,Decimal:null,DateTime:null,TimeSpan:null,Guid:null,Type:null,Dynamic:null,String:null,s_types:null,s_typeMap:null},ctors:{init:function(){this.Bool=new Kusto.Language.Symbols.ScalarSymbol("bool");this.Int=new Kusto.Language.Symbols.ScalarSymbol("int",System.Array.init(["int32","uint","uint32","int8","uint8","int16","uint16"],System.String),15);this.Long=new Kusto.Language.Symbols.ScalarSymbol("long",System.Array.init(["int64","ulong","uint64"],System.String),15,System.Array.init([Kusto.Language.Symbols.ScalarTypes.Int],Kusto.Language.Symbols.ScalarSymbol));this.Real=new Kusto.Language.Symbols.ScalarSymbol("real",System.Array.init(["double","float"],System.String),14,System.Array.init([Kusto.Language.Symbols.ScalarTypes.Int,Kusto.Language.Symbols.ScalarTypes.Long],Kusto.Language.Symbols.ScalarSymbol));this.Decimal=new Kusto.Language.Symbols.ScalarSymbol("decimal",null,14,System.Array.init([Kusto.Language.Symbols.ScalarTypes.Int,Kusto.Language.Symbols.ScalarTypes.Long,Kusto.Language.Symbols.ScalarTypes.Real],Kusto.Language.Symbols.ScalarSymbol));this.DateTime=new Kusto.Language.Symbols.ScalarSymbol("datetime",null,12);this.TimeSpan=new Kusto.Language.Symbols.ScalarSymbol("timespan",null,12);this.Guid=new Kusto.Language.Symbols.ScalarSymbol("guid",System.Array.init(["uuid","uniqueid"],System.String));this.Type=new Kusto.Language.Symbols.ScalarSymbol("type");this.Dynamic=new Kusto.Language.Symbols.ScalarSymbol("dynamic",null,Kusto.Language.Symbols.ScalarFlags.Interval);this.String=new Kusto.Language.Symbols.ScalarSymbol("string",void 0,0,System.Array.init([Kusto.Language.Symbols.ScalarTypes.Dynamic],Kusto.Language.Symbols.ScalarSymbol));this.s_types=System.Array.init([Kusto.Language.Symbols.ScalarTypes.Bool,Kusto.Language.Symbols.ScalarTypes.Int,Kusto.Language.Symbols.ScalarTypes.Long,Kusto.Language.Symbols.ScalarTypes.Real,Kusto.Language.Symbols.ScalarTypes.Decimal,Kusto.Language.Symbols.ScalarTypes.String,Kusto.Language.Symbols.ScalarTypes.DateTime,Kusto.Language.Symbols.ScalarTypes.TimeSpan,Kusto.Language.Symbols.ScalarTypes.Guid,Kusto.Language.Symbols.ScalarTypes.Type,Kusto.Language.Symbols.ScalarTypes.Dynamic],Kusto.Language.Symbols.ScalarSymbol);this.s_typeMap=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ScalarSymbol))},ctor:function(){var $t,$t1,type,alias;$t=Bridge.getEnumerator(Kusto.Language.Symbols.ScalarTypes.s_types,Kusto.Language.Symbols.ScalarSymbol);try{while($t.moveNext()){type=$t.Current;Kusto.Language.Symbols.ScalarTypes.s_typeMap.add(type.Name,type);$t1=Bridge.getEnumerator(type.Aliases,System.String);try{while($t1.moveNext())alias=$t1.Current,Kusto.Language.Symbols.ScalarTypes.s_typeMap.add(alias,type)}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}},methods:{GetSymbol:function(typeName){var type={};return Kusto.Language.Symbols.ScalarTypes.s_typeMap.tryGetValue(typeName,type),type.v}}}});Bridge.define("Kusto.Language.Symbols.Signature",{fields:{_firstRepeatableParameter:0,_lastRepeatableParameter:0,_returnType:null,_body:null,_tabularity:0,_display:null},props:{Symbol:null,ReturnKind:0,Parameters:null,MinArgumentCount:0,MaxArgumentCount:0,Declaration:null,CustomReturnType:null,IsHidden:!1,HasRepeatableParameters:{get:function(){return this._firstRepeatableParameter>=0}},ReturnTypeDependsOnArguments:!1,Body:{get:function(){return this._body==null&&this.Declaration!=null&&(this._body=this.Declaration.Body.ToString(Kusto.Language.Syntax.IncludeTrivia.Interior)),this._body}},DeclaredReturnType:{get:function(){return this.ReturnKind===Kusto.Language.Symbols.ReturnTypeKind.Declared?this._returnType:null}},Tabularity:{get:function(){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7;if(this._tabularity===Kusto.Language.Symbols.Tabularity.Unknown)switch(this.ReturnKind){case Kusto.Language.Symbols.ReturnTypeKind.Declared:return this._returnType.Tabularity;case Kusto.Language.Symbols.ReturnTypeKind.Computed:return Kusto.Language.Symbols.Tabularity.Unknown;case Kusto.Language.Symbols.ReturnTypeKind.Parameter0:return $t=($t1=this.GetParameter$1(0,System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)))!=null?$t1.Tabularity:null,$t!=null?$t:Kusto.Language.Symbols.Tabularity.Unknown;case Kusto.Language.Symbols.ReturnTypeKind.Parameter1:return $t2=($t3=this.GetParameter$1(1,System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)))!=null?$t3.Tabularity:null,$t2!=null?$t2:Kusto.Language.Symbols.Tabularity.Unknown;case Kusto.Language.Symbols.ReturnTypeKind.Parameter2:return $t4=($t5=this.GetParameter$1(2,System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)))!=null?$t5.Tabularity:null,$t4!=null?$t4:Kusto.Language.Symbols.Tabularity.Unknown;case Kusto.Language.Symbols.ReturnTypeKind.ParameterN:return $t6=($t7=this.GetParameter$1(System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)-1|0,System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)))!=null?$t7.Tabularity:null,$t6!=null?$t6:Kusto.Language.Symbols.Tabularity.Unknown;case Kusto.Language.Symbols.ReturnTypeKind.Custom:return Kusto.Language.Symbols.Tabularity.Unknown;case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Table:case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Database:case Kusto.Language.Symbols.ReturnTypeKind.Parameter0Cluster:return Kusto.Language.Symbols.Tabularity.Tabular;default:return Kusto.Language.Symbols.Tabularity.Scalar}return this._tabularity}},IsScalar:{get:function(){switch(this.Tabularity){case Kusto.Language.Symbols.Tabularity.Scalar:case Kusto.Language.Symbols.Tabularity.Unknown:return!0;default:return!1}}},IsTabular:{get:function(){switch(this.Tabularity){case Kusto.Language.Symbols.Tabularity.Tabular:case Kusto.Language.Symbols.Tabularity.Unknown:return!0;default:return!1}}},ReturnTypeDisplay:{get:function(){switch(this.ReturnKind){case Kusto.Language.Symbols.ReturnTypeKind.Declared:return this._returnType.Display;default:return"<"+(System.Enum.toString(Kusto.Language.Symbols.ReturnTypeKind,this.ReturnKind)||"")+">"}}},Display:{get:function(){return this._display==null&&(this._display=this.GetDisplay()),this._display}},FunctionBodyFacts:null,NonVariableComputedReturnType:null,HasVariableReturnType:{get:function(){return this.FunctionBodyFacts!=null&&System.Nullable.neq(System.Nullable.band(this.FunctionBodyFacts,Kusto.Language.Symbols.FunctionBodyFacts.VariableReturn),0)}},HasClusterCall:{get:function(){return this.FunctionBodyFacts!=null&&System.Nullable.neq(System.Nullable.band(this.FunctionBodyFacts,Kusto.Language.Symbols.FunctionBodyFacts.Cluster),0)}},HasDatabaseCall:{get:function(){return this.FunctionBodyFacts!=null&&System.Nullable.neq(System.Nullable.band(this.FunctionBodyFacts,Kusto.Language.Symbols.FunctionBodyFacts.Database),0)}}},ctors:{$ctor5:function(returnKind,returnType,body,declaration,customReturnType,tabularity,parameters,isHidden){var minArgumentCount,maxArgumentCount,i,n,p;if(isHidden===void 0&&(isHidden=!1),this.$initialize(),returnKind===Kusto.Language.Symbols.ReturnTypeKind.Declared&&returnType==null)throw new System.ArgumentNullException.$ctor1("returnType");if(returnKind===Kusto.Language.Symbols.ReturnTypeKind.Computed&&!!!(body!=null|declaration!=null))throw new System.ArgumentNullException.$ctor1("body");if(returnKind===Kusto.Language.Symbols.ReturnTypeKind.Custom&&Bridge.staticEquals(customReturnType,null))throw new System.ArgumentNullException.$ctor1("customReturnType");for(this.ReturnKind=returnKind,this._returnType=returnType,this._body=body,this.Declaration=declaration,this.CustomReturnType=customReturnType,this._tabularity=tabularity,this.Parameters=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.Parameter,parameters),this.IsHidden=isHidden,returnKind===Kusto.Language.Symbols.ReturnTypeKind.Computed&&returnType!=null&&tabularity===Kusto.Language.Symbols.Tabularity.Unknown&&(this._tabularity=returnType.Tabularity),this.ReturnTypeDependsOnArguments=returnKind!==Kusto.Language.Symbols.ReturnTypeKind.Declared&&System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)>0&&System.Linq.Enumerable.from(this.Parameters).any(function(p){return p.TypeDependsOnArguments}),this._firstRepeatableParameter=-1,this._lastRepeatableParameter=-1,minArgumentCount=0,maxArgumentCount=0,i=0,n=Bridge.Int.sxb(System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)&255);i<n;i=Bridge.Int.sxb(i+1&255))p=System.Array.getItem(parameters,i,Kusto.Language.Symbols.Parameter),p.IsRepeatable&&(this._firstRepeatableParameter===-1&&(this._firstRepeatableParameter=i),this._lastRepeatableParameter=i),minArgumentCount=minArgumentCount+p.MinOccurring|0,maxArgumentCount=maxArgumentCount+p.MaxOccurring|0;this.MinArgumentCount=minArgumentCount;this.MaxArgumentCount=maxArgumentCount},$ctor6:function(returnKind,parameters){Kusto.Language.Symbols.Signature.$ctor5.call(this,returnKind,null,null,null,null,Kusto.Language.Symbols.Tabularity.Unknown,parameters)},$ctor4:function(returnKind,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.Signature.$ctor5.call(this,returnKind,null,null,null,null,Kusto.Language.Symbols.Tabularity.Unknown,parameters)},$ctor8:function(returnType,parameters){if(Kusto.Language.Symbols.Signature.$ctor5.call(this,Kusto.Language.Symbols.ReturnTypeKind.Declared,returnType,null,null,null,Kusto.Language.Symbols.Tabularity.Unknown,parameters),returnType==null)throw new System.ArgumentNullException.$ctor1("returnType");},$ctor7:function(returnType,parameters){if(parameters===void 0&&(parameters=[]),Kusto.Language.Symbols.Signature.$ctor5.call(this,Kusto.Language.Symbols.ReturnTypeKind.Declared,returnType,null,null,null,Kusto.Language.Symbols.Tabularity.Unknown,parameters),returnType==null)throw new System.ArgumentNullException.$ctor1("returnType");},$ctor1:function(customReturnType,tabularity,parameters){if(Kusto.Language.Symbols.Signature.$ctor5.call(this,Kusto.Language.Symbols.ReturnTypeKind.Custom,null,null,null,customReturnType,tabularity,parameters),Bridge.staticEquals(customReturnType,null))throw new System.ArgumentNullException.$ctor1("customReturnType");},ctor:function(customReturnType,tabularity,parameters){if(parameters===void 0&&(parameters=[]),Kusto.Language.Symbols.Signature.$ctor5.call(this,Kusto.Language.Symbols.ReturnTypeKind.Custom,null,null,null,customReturnType,tabularity,parameters),Bridge.staticEquals(customReturnType,null))throw new System.ArgumentNullException.$ctor1("customReturnType");},$ctor3:function(customReturnType,tabularity,parameters){Kusto.Language.Symbols.Signature.$ctor1.call(this,function(table,args){return customReturnType(table,args)},tabularity,parameters)},$ctor2:function(customReturnType,tabularity,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.Signature.ctor.call(this,function(table,args){return customReturnType(table,args)},tabularity,parameters)},$ctor12:function(body,tabularity,parameters){Kusto.Language.Symbols.Signature.$ctor5.call(this,Kusto.Language.Symbols.ReturnTypeKind.Computed,null,body,null,null,tabularity,parameters)},$ctor11:function(body,tabularity,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.Signature.$ctor5.call(this,Kusto.Language.Symbols.ReturnTypeKind.Computed,null,body,null,null,tabularity,parameters)},$ctor10:function(declaration,parameters){var $t;Kusto.Language.Symbols.Signature.$ctor5.call(this,Kusto.Language.Symbols.ReturnTypeKind.Computed,($t=declaration.Body.Expression)!=null?$t.ResultType:null,null,declaration,null,Kusto.Language.Symbols.Tabularity.Unknown,parameters)},$ctor9:function(declaration,parameters){parameters===void 0&&(parameters=[]);var $t;Kusto.Language.Symbols.Signature.$ctor5.call(this,Kusto.Language.Symbols.ReturnTypeKind.Computed,($t=declaration.Body.Expression)!=null?$t.ResultType:null,null,declaration,null,Kusto.Language.Symbols.Tabularity.Unknown,parameters)}},methods:{Hide:function(){return new Kusto.Language.Symbols.Signature.$ctor5(this.ReturnKind,this._returnType,this._body,this.Declaration,this.CustomReturnType,this._tabularity,this.Parameters,!0)},GetParameter$1:function(argumentIndex,argumentCount){var iAfterRepeatableParam,nRepeatable,iparam;return this.HasRepeatableParameters?argumentIndex<this._firstRepeatableParameter?System.Array.getItem(this.Parameters,argumentIndex,Kusto.Language.Symbols.Parameter):argumentIndex>this._lastRepeatableParameter&&this._lastRepeatableParameter<(System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)-1|0)&&(argumentCount-argumentIndex|0)<(System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)-this._lastRepeatableParameter|0)?(iAfterRepeatableParam=System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)-(argumentCount-argumentIndex|0)|0,System.Array.getItem(this.Parameters,iAfterRepeatableParam,Kusto.Language.Symbols.Parameter)):(nRepeatable=(this._lastRepeatableParameter-this._firstRepeatableParameter|0)+1|0,iparam=(argumentIndex-this._firstRepeatableParameter|0)%nRepeatable+this._firstRepeatableParameter|0,System.Array.getItem(this.Parameters,iparam,Kusto.Language.Symbols.Parameter)):argumentIndex<System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)?System.Array.getItem(this.Parameters,argumentIndex,Kusto.Language.Symbols.Parameter):null},GetParameter$2:function(name){var $t,p;$t=Bridge.getEnumerator(this.Parameters,Kusto.Language.Symbols.Parameter);try{while($t.moveNext())if(p=$t.Current,Bridge.referenceEquals(p.Name,name))return p}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return null},GetParameter:function(argument,argumentIndex,argumentCount){var n;return(n=Bridge.as(argument,Kusto.Language.Syntax.SimpleNamedExpression))!=null?this.GetParameter$2(n.Name.SimpleName):this.GetParameter$1(argumentIndex,argumentCount)},GetPossibleParameters:function(argumentIndex,argumentCount,possible){var nRepeatable,iRepeatableParam,remainder,iAfterParam;if(this.HasRepeatableParameters){if(argumentIndex<this._firstRepeatableParameter)possible.add(System.Array.getItem(this.Parameters,argumentIndex,Kusto.Language.Symbols.Parameter));else if(nRepeatable=(this._lastRepeatableParameter-this._firstRepeatableParameter|0)+1|0,iRepeatableParam=(argumentIndex-this._firstRepeatableParameter|0)%nRepeatable+this._firstRepeatableParameter|0,possible.add(System.Array.getItem(this.Parameters,iRepeatableParam,Kusto.Language.Symbols.Parameter)),argumentIndex>this._lastRepeatableParameter&&this._lastRepeatableParameter<(System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)-1|0))for(remainder=(argumentIndex-this._firstRepeatableParameter|0)%nRepeatable,iAfterParam=this._lastRepeatableParameter+remainder|0;iAfterParam<System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter);iAfterParam=iAfterParam+nRepeatable|0)possible.add(System.Array.getItem(this.Parameters,iAfterParam,Kusto.Language.Symbols.Parameter))}else argumentIndex<System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)&&possible.add(System.Array.getItem(this.Parameters,argumentIndex,Kusto.Language.Symbols.Parameter))},GetArgumentIndex:function(parameter,$arguments){for(var arg,p,i=0;i<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression);i=i+1|0)if(arg=System.Array.getItem($arguments,i,Kusto.Language.Syntax.Expression),p=this.GetParameter(arg,i,System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)),Bridge.referenceEquals(p,parameter))return i;return-1},GetArgumentRange:function(parameter,$arguments,start,length){var i,p;if(start.v=this.GetArgumentIndex(parameter,$arguments),start.v>=0){for(length.v=1,i=start.v+1|0;i<System.Array.getCount($arguments,Kusto.Language.Syntax.Expression);i=i+1|0,length.v=length.v+1|0)if(p=this.GetParameter$1(i,System.Array.getCount($arguments,Kusto.Language.Syntax.Expression)),!Bridge.referenceEquals(p,parameter))break}else length.v=0},IsValidArgumentCount:function(argumentCount){if(argumentCount<this.MinArgumentCount||argumentCount>this.MaxArgumentCount)return!1;if(this.HasRepeatableParameters){var nVariable=(this._lastRepeatableParameter-this._firstRepeatableParameter|0)+1|0;return(argumentCount-System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter)|0)%nVariable==0}return!0},GetDisplay:function(){for(var p,builder=new System.Text.StringBuilder,i=0;i<System.Array.getCount(this.Parameters,Kusto.Language.Symbols.Parameter);i=i+1|0)p=System.Array.getItem(this.Parameters,i,Kusto.Language.Symbols.Parameter),i>0&&builder.append(", "),p.IsOptional?(builder.append("["),builder.append(p.Display),builder.append("]")):builder.append(p.Display);return this.HasRepeatableParameters&&builder.append(", ..."),System.String.format("{0}({1}) => {2}",this.Symbol.Name,builder.toString(),this.ReturnTypeDisplay)},ComputeTabularity:function(globals){if(this.ReturnKind===Kusto.Language.Symbols.ReturnTypeKind.Custom&&this._tabularity===Kusto.Language.Symbols.Tabularity.Unknown){var type=Kusto.Language.Binding.Binder.GetComputedReturnType(this,globals);this._tabularity===Kusto.Language.Symbols.Tabularity.Unknown&&type!=null&&(type.IsTabular?this._tabularity=Kusto.Language.Symbols.Tabularity.Tabular:type.IsScalar&&(this._tabularity=Kusto.Language.Symbols.Tabularity.Scalar))}}}});Bridge.define("Kusto.Language.Symbols.SymbolKind",{$kind:"enum",statics:{fields:{None:0,Scalar:1,Variable:2,Function:3,Parameter:4,Pattern:5,Tuple:6,Column:7,Table:8,Database:9,Cluster:10,Operator:11,Group:12,Void:13,Error:14,Command:15}}});Bridge.define("Kusto.Language.Symbols.SymbolMatch",{$kind:"enum",statics:{fields:{None:0,Column:1,Table:2,Function:4,Local:8,Database:16,Cluster:32,Scalar:64,Tabular:128,Any:255,Default:207}},$flags:!0});Bridge.define("Kusto.Language.Symbols.SymbolMatchExtensions",{statics:{methods:{Matches$1:function(symbol,name,match,ignoreCase){if(ignoreCase===void 0&&(ignoreCase=!1),name!=null)if(ignoreCase){if(System.String.compare(symbol.Name,name,ignoreCase)!==0)return!1}else{var sn=symbol.Name;if(name.length===0||sn.length===0||name.charCodeAt(0)!==sn.charCodeAt(0)||System.String.compare(sn,name)!==0)return!1}return(match&Kusto.Language.Symbols.SymbolMatch.Column)!=0&&symbol.Kind===Kusto.Language.Symbols.SymbolKind.Column?!0:(match&Kusto.Language.Symbols.SymbolMatch.Table)!=0&&symbol.Kind===Kusto.Language.Symbols.SymbolKind.Table?!0:(match&Kusto.Language.Symbols.SymbolMatch.Database)!=0&&symbol.Kind===Kusto.Language.Symbols.SymbolKind.Database?!0:(match&Kusto.Language.Symbols.SymbolMatch.Cluster)!=0&&symbol.Kind===Kusto.Language.Symbols.SymbolKind.Cluster?!0:(match&Kusto.Language.Symbols.SymbolMatch.Scalar)!=0&&(match&Kusto.Language.Symbols.SymbolMatch.Tabular)==0&&!symbol.IsScalar?!1:(match&Kusto.Language.Symbols.SymbolMatch.Tabular)!=0&&(match&Kusto.Language.Symbols.SymbolMatch.Scalar)==0&&!symbol.IsTabular?!1:(match&Kusto.Language.Symbols.SymbolMatch.Function)!=0&&(symbol.Kind===Kusto.Language.Symbols.SymbolKind.Function||symbol.Kind===Kusto.Language.Symbols.SymbolKind.Pattern)?!0:(match&Kusto.Language.Symbols.SymbolMatch.Local)!=0&&(symbol.Kind===Kusto.Language.Symbols.SymbolKind.Variable||symbol.Kind===Kusto.Language.Symbols.SymbolKind.Parameter)?!0:!1},Matches:function(symbol,match){return Kusto.Language.Symbols.SymbolMatchExtensions.Matches$1(symbol,null,match)}}}});Bridge.define("Kusto.Language.Symbols.TableSymbol.TableState",{$kind:"nested enum",statics:{fields:{None:0,Serialized:1,Sorted:2,Open:4}},$flags:!0,$utype:System.UInt16});Bridge.define("Kusto.Language.Symbols.Tabularity",{$kind:"enum",statics:{fields:{None:0,Scalar:1,Tabular:2,Unknown:3}}});Bridge.define("Kusto.Language.Syntax.SyntaxElement",{statics:{methods:{GatherDiagnostics:function(element,diagnostics,include,cancellationToken){var $t,$t1,node,i,n,child,expr,expansion,originalCount;cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);cancellationToken.ThrowIfCancellationRequested();var includeSyntax=(include&Kusto.Language.Syntax.DiagnosticsInclude.Syntactic)!=0,includeSemantic=(include&Kusto.Language.Syntax.DiagnosticsInclude.Semantic)!=0,includeExpansion=(include&Kusto.Language.Syntax.DiagnosticsInclude.Expansion)!=0;if(element.HasSyntaxDiagnostics&&includeSyntax&&diagnostics.AddRange(System.Linq.Enumerable.from(element.SyntaxDiagnostics).select(function(d){return d.HasLocation?d:Kusto.Language.Syntax.SyntaxElement.SetLocation(d,element)})),includeSemantic&&(node=Bridge.as(element,Kusto.Language.Syntax.SyntaxNode))!=null&&System.Array.getCount(node.SemanticDiagnostics,Kusto.Language.Diagnostic)>0&&diagnostics.AddRange(node.SemanticDiagnostics),includeSemantic||includeSyntax&&element.ContainsSyntaxDiagnostics)for(i=0,n=element.ChildCount;i<n;i=i+1|0)child=element.GetChild(i),child!=null&&Kusto.Language.Syntax.SyntaxElement.GatherDiagnostics(child,diagnostics,include,cancellationToken);if(includeExpansion&&(expr=Bridge.as(element,Kusto.Language.Syntax.Expression))!=null&&(expansion=expr.GetExpansion())!=null&&(originalCount=diagnostics.Count,Kusto.Language.Syntax.SyntaxElement.GatherDiagnostics(expansion,diagnostics,include,cancellationToken),diagnostics.Count>originalCount)){var name=($t=($t1=expr.ReferencedSymbol)!=null?$t1.Name:null,$t!=null?$t:"<unknown>"),fc,location=(fc=Bridge.as(expr,Kusto.Language.Syntax.FunctionCallExpression))!=null?fc.Name:expr,errors=diagnostics.getItem(originalCount).Message,dx=Kusto.Language.DiagnosticFacts.GetErrorInExpansion(name,errors).WithLocation(location);Kusto.Language.Utils.ListExtensions.SetCount(Bridge.global.Kusto.Language.Diagnostic,diagnostics,originalCount);diagnostics.add(dx)}},SetLocation:function(d,location){var token,next;return location.Width===0&&(token=Bridge.as(location,Kusto.Language.Syntax.SyntaxToken))!=null&&(next=token.GetNextToken(),next!=null&&(next.TextStart-token.End|0)<2&&!Kusto.Language.Parsing.TextFacts.HasLineBreaks(next.Trivia)&&(location=next)),d.WithLocation(location)},GetDescendants:function(TElement,element,predicate,list){for(var child,ce,cn,i=0;i<element.ChildCount;i=i+1|0)child=element.GetChild(i),child!=null&&((ce=Bridge.as(child,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(ce))&&(list==null&&(list=new(System.Collections.Generic.List$1(TElement).ctor)),list.add(ce)),(cn=Bridge.as(child,Kusto.Language.Syntax.SyntaxNode))!=null&&(list=Kusto.Language.Syntax.SyntaxElement.GetDescendants(TElement,child,predicate,list)));return list},Overlaps:function(startA,endA,startB,endB){return Math.max(startA,startB)<Math.min(endA,endB)}}},fields:{parent:null,flags:0},props:{DebugText:{get:function(){return this.ToString(Kusto.Language.Syntax.IncludeTrivia.Minimal)}},ContainsSyntaxDiagnostics:{get:function(){return Bridge.Int.sxs(this.flags&Kusto.Language.Syntax.SyntaxElement.Flags.ContainsDiagnostics&65535)!==0}},HasSyntaxDiagnostics:{get:function(){return this.ContainsSyntaxDiagnostics&&System.Array.getCount(this.SyntaxDiagnostics,Kusto.Language.Diagnostic)>0}},SyntaxDiagnostics:{get:function(){var $t;return(($t=this.GetExtendedData(!1))!=null?$t.SyntaxDiagnostics:null)||Kusto.Language.Diagnostic.NoDiagnostics}},IsToken:{get:function(){return!1}},IsMissing:{get:function(){return this.Width===0&&this.ContainsSyntaxDiagnostics}},Parent:{get:function(){var node=Bridge.as(this.parent,Kusto.Language.Syntax.SyntaxNode),data;return node!=null?node:(data=Bridge.as(this.parent,Kusto.Language.Syntax.SyntaxElement.ExtendedData),data!=null)?data.Parent:null},set:function(value){Kusto.Language.Utils.Interlocked.CompareExchange(System.Object,Bridge.ref(this,"parent"),value,null);var data=Bridge.as(this.parent,Kusto.Language.Syntax.SyntaxElement.ExtendedData);data!=null&&Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.Kusto.Language.Syntax.SyntaxNode,Bridge.ref(data,"Parent"),value,null)}},Root:{get:function(){for(var element=this,parent=element.Parent;parent!=null;)element=parent,parent=element.Parent;return element}},IndexInParent:0,Depth:{get:function(){for(var depth=0,element=this;element.Parent!=null;element=element.Parent)depth=depth+1|0;return depth}},NameInParent:{get:function(){return this.Parent!=null?this.Parent.GetName(this.Parent.GetChildIndex(this)):""}},TriviaStart:{get:function(){return this.Parent==null?this.OffsetInParent:this.Parent.TriviaStart+this.OffsetInParent|0}},TriviaWidth:{get:function(){var $t,$t1;return $t=($t1=this.GetFirstToken())!=null?$t1.TriviaWidth:null,$t!=null?$t:0}},TextStart:{get:function(){return this.TriviaStart+this.TriviaWidth|0}},End:{get:function(){return this.TriviaStart+this.FullWidth|0}},Width:{get:function(){return this.FullWidth-this.TriviaWidth|0}},OffsetInParent:0},ctors:{ctor:function(diagnostics){this.$initialize();this.SetDiagnostics(diagnostics)}},methods:{GetContainedDiagnostics:function(include,cancellationToken){include===void 0&&(include=3);cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var list=new(System.Collections.Generic.List$1(Kusto.Language.Diagnostic).ctor);return Kusto.Language.Syntax.SyntaxElement.GatherDiagnostics(this,list,include,cancellationToken),list.AsReadOnly()},Init:function(){for(var child,offset=0,i=0;i<this.ChildCount;i=i+1|0)child=this.GetChild(i),child!=null&&(child.OffsetInParent=offset,child.IndexInParent=Bridge.Int.sxs(i&65535),offset=offset+child.FullWidth|0)},Attach:function(TElement,element,optional){if(optional===void 0&&(optional=!1),element!=null){if(element.Parent!=null)throw new System.InvalidOperationException.$ctor1("The syntax element already has a parent.");element.Parent=Bridge.cast(this,Kusto.Language.Syntax.SyntaxNode);this.flags|=Bridge.Int.sxs(element.flags&65535)}else if(!optional)throw new System.ArgumentNullException.$ctor1("The element is not optional");return element},GetContainedSyntaxDiagnostics:function(){if(this.ContainsSyntaxDiagnostics){var diagnostics=new(System.Collections.Generic.List$1(Kusto.Language.Diagnostic).ctor);return Kusto.Language.Syntax.SyntaxElement.GatherDiagnostics(this,diagnostics,Kusto.Language.Syntax.DiagnosticsInclude.Syntactic),diagnostics.AsReadOnly()}return Kusto.Language.Diagnostic.NoDiagnostics},SetDiagnostics:function(diagnostics){diagnostics!=null&&System.Array.getCount(diagnostics,Kusto.Language.Diagnostic)>0&&(this.GetExtendedData(!0).SyntaxDiagnostics=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Diagnostic,diagnostics),this.flags|=Bridge.Int.sxs(Kusto.Language.Syntax.SyntaxElement.Flags.ContainsDiagnostics&65535))},WithDiagnostics:function(diagnostics){var clone=this.Clone();return clone.SetDiagnostics(System.Linq.Enumerable.from(diagnostics).toList(Bridge.global.Kusto.Language.Diagnostic).AsReadOnly()),clone},WithAdditionalDiagnostics$1:function(diagnostics){return this.WithDiagnostics(System.Linq.Enumerable.from(this.SyntaxDiagnostics).concat(diagnostics))},WithAdditionalDiagnostics:function(diagnostics){return diagnostics===void 0&&(diagnostics=[]),this.WithDiagnostics(System.Linq.Enumerable.from(this.SyntaxDiagnostics).concat(diagnostics))},GetExtendedData:function(create){var $t,data=Bridge.as(this.parent,Kusto.Language.Syntax.SyntaxElement.ExtendedData);return data==null&&create&&(data=($t=new Kusto.Language.Syntax.SyntaxElement.ExtendedData,$t.Parent=Bridge.as(this.parent,Kusto.Language.Syntax.SyntaxNode),$t),Kusto.Language.Utils.Interlocked.CompareExchange(System.Object,Bridge.ref(this,"parent"),data,this.parent),data=Bridge.as(this.parent,Kusto.Language.Syntax.SyntaxElement.ExtendedData)),data},GetChild:function(){return function(){throw new System.IndexOutOfRangeException.ctor;}()},IsOptional:function(){return!1},GetName:function(){return""},GetCompletionHint:function(index){return this.GetCompletionHintCore(index)},GetCompletionHintCore:function(){return Kusto.Language.Editor.CompletionHint.Inherit},HasMissingChildren:function(){var n,child;if(this.ContainsSyntaxDiagnostics)for(n=this.ChildCount-1|0;n>=0;n=n-1|0)if(child=this.GetChild(n),child!=null&&(child.IsMissing||child.HasMissingChildren()))return!0;return!1},GetChildIndex:function(child){for(var i=0,n=this.ChildCount;i<n;i=i+1|0)if(Bridge.referenceEquals(this.GetChild(i),child))return i;return-1},IsAncestorOf:function(element){while(element!=null){if(Bridge.referenceEquals(element.Parent,this))return!0;element=element.Parent}return!1},GetFirstAncestor:function(TElement,predicate){var elem,e;for(predicate===void 0&&(predicate=null),elem=this.Parent;elem!=null;elem=elem.Parent)if((e=Bridge.as(elem,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(e)))return e;return null},GetFirstAncestorOrSelf:function(TElement,predicate){var elem,e;for(predicate===void 0&&(predicate=null),elem=this;elem!=null;elem=elem.Parent)if((e=Bridge.as(elem,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(e)))return e;return null},GetAncestors:function(TElement,predicate){var list,elem,e;for(predicate===void 0&&(predicate=null),list=null,elem=this.Parent;elem!=null;elem=elem.Parent)(e=Bridge.as(elem,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(e))&&(list==null&&(list=new(System.Collections.Generic.List$1(TElement).ctor)),list.add(e));return list!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(TElement,list):Kusto.Language.Utils.EmptyReadOnlyList$1(TElement).Instance},GetAncestorsOrSelf:function(TElement,predicate){var list,elem,e;for(predicate===void 0&&(predicate=null),list=null,elem=this;elem!=null;elem=elem.Parent)(e=Bridge.as(elem,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(e))&&(list==null&&(list=new(System.Collections.Generic.List$1(TElement).ctor)),list.add(e));return list!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(TElement,list):Kusto.Language.Utils.EmptyReadOnlyList$1(TElement).Instance},GetFirstDescendant:function(TElement,predicate){var i,child,ce,cn,result;for(predicate===void 0&&(predicate=null),i=0;i<this.ChildCount;i=i+1|0)if(child=this.GetChild(i),child!=null){if((ce=Bridge.as(child,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(ce)))return ce;if((cn=Bridge.as(child,Kusto.Language.Syntax.SyntaxNode))!=null&&(result=child.GetFirstDescendant(TElement,predicate),result!=null))return result}return null},GetFirstDescendantOrSelf:function(TElement,predicate){predicate===void 0&&(predicate=null);var te;return(te=Bridge.as(this,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(te))?te:this.GetFirstDescendant(TElement,predicate)},GetDescendants:function(TElement,predicate){predicate===void 0&&(predicate=null);var list=Kusto.Language.Syntax.SyntaxElement.GetDescendants(TElement,this,predicate,null);return list!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(TElement,list):Kusto.Language.Utils.EmptyReadOnlyList$1(TElement).Instance},GetDescendantsOrSelf:function(TElement,predicate){predicate===void 0&&(predicate=null);var list=null,te;return(te=Bridge.as(this,TElement))!=null&&(Bridge.staticEquals(predicate,null)||predicate(te))&&(list=function(_o1){return _o1.add(te),_o1}(new(System.Collections.Generic.List$1(TElement).ctor))),list=Kusto.Language.Syntax.SyntaxElement.GetDescendants(TElement,this,predicate,list),list!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(TElement,list):Kusto.Language.Utils.EmptyReadOnlyList$1(TElement).Instance},GetTokens:function(includeZeroWidthTokens){includeZeroWidthTokens===void 0&&(includeZeroWidthTokens=!1);var tokens=new(System.Collections.Generic.List$1(Kusto.Language.Syntax.SyntaxToken).ctor);return this.WalkTokens(this.TriviaStart,this.End,function(t){(t.FullWidth>0||includeZeroWidthTokens)&&tokens.add(t)}),Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Syntax.SyntaxToken,tokens)},WalkTokens:function(start,end,action){for(var child,i=0,n=this.ChildCount;i<n;i=i+1|0)child=this.GetChild(i),child!=null&&Kusto.Language.Syntax.SyntaxElement.Overlaps(start,end,child.TriviaStart,child.End)&&(child.IsToken?action(Bridge.cast(child,Kusto.Language.Syntax.SyntaxToken)):child.WalkTokens(start,end,action))},WalkElements:function(action){for(var child,i=0,n=this.ChildCount;i<n;i=i+1|0)child=this.GetChild(i),child!=null&&child.WalkElements(action);action(this)},GetNextSibling:function(includeZeroWidthElements){var i,sibling;if(includeZeroWidthElements===void 0&&(includeZeroWidthElements=!1),this.Parent!=null)for(i=this.IndexInParent+1|0;i<this.Parent.ChildCount;i=i+1|0)if(sibling=this.Parent.GetChild(i),sibling!=null&&(includeZeroWidthElements||sibling.FullWidth>0))return sibling;return null},GetPreviousSibling:function(includeZeroWidthElements){var i,sibling;if(includeZeroWidthElements===void 0&&(includeZeroWidthElements=!1),this.Parent!=null)for(i=this.IndexInParent-1|0;i>=0;i=i-1|0)if(sibling=this.Parent.GetChild(i),sibling!=null&&(includeZeroWidthElements||sibling.FullWidth>0))return sibling;return null},GetFirstToken:function(includeZeroWidthTokens){var i,n,child,first;for(includeZeroWidthTokens===void 0&&(includeZeroWidthTokens=!1),i=0,n=this.ChildCount;i<n;i=i+1|0)if(child=this.GetChild(i),child!=null)if(child.IsToken){if(includeZeroWidthTokens||child.FullWidth>0)return Bridge.cast(child,Kusto.Language.Syntax.SyntaxToken)}else if(first=child.GetFirstToken(includeZeroWidthTokens),first!=null)return first;return null},GetLastToken:function(includeZeroWidthTokens){var i,child,first;for(includeZeroWidthTokens===void 0&&(includeZeroWidthTokens=!1),i=this.ChildCount-1|0;i>=0;i=i-1|0)if(child=this.GetChild(i),child!=null)if(child.IsToken){if(includeZeroWidthTokens||child.FullWidth>0)return Bridge.cast(child,Kusto.Language.Syntax.SyntaxToken)}else if(first=child.GetLastToken(includeZeroWidthTokens),first!=null)return first;return null},GetTokenAt:function(position){var $step=0,element,i,n,child,$asyncBody=Bridge.fn.bind(this,function(){for(;;){$step=System.Array.min([0,1,2,3,4,5,6,9,11],$step);switch($step){case 0:if(element=this,this.IsToken){if(this.TriviaStart<=position&&position<this.End)return Bridge.cast(this,Kusto.Language.Syntax.SyntaxToken)}else element=this.Root;if(position>=element.FullWidth)return element.GetLastToken(!0);case 1:if(element!=null&&element.ChildCount>0){$step=2;continue}$step=11;continue;case 2:i=0;n=element.ChildCount;$step=3;continue;case 3:if(i<n){$step=4;continue}$step=10;continue;case 4:if(child=element.GetChild(i),child!=null){$step=5;continue}$step=8;continue;case 5:if(child.TriviaStart<=position&&position<child.End){$step=6;continue}$step=7;continue;case 6:if(child.IsToken)return Bridge.cast(child,Kusto.Language.Syntax.SyntaxToken);element=child;$step=1;continue;case 9:i=i+1|0;$step=3;continue;case 11:return null;default:return}}},arguments);return $asyncBody()},GetNodeAt:function(position,length){for(var token=this.GetTokenAt(position),parent=token.Parent;parent!=null&&(parent.End<(position+length|0)||!Bridge.hasValue(parent));)parent=parent.Parent;return parent},ComputeFullWidth:function(){for(var child,width=0,i=0;i<this.ChildCount;i=i+1|0)child=this.GetChild(i),child!=null&&(width=width+child.FullWidth|0);return width},Clone:function(){return this.CloneCore()},toString:function(){return this.ToString(Kusto.Language.Syntax.IncludeTrivia.All)},ToString:function(includeTrivia){var builder=new System.Text.StringBuilder;return this.Write(builder,includeTrivia,this.TriviaStart),builder.toString()},Write:function(builder,includeTrivia,initialTriviaStart){for(var child,i=0,n=this.ChildCount;i<n;i=i+1|0)child=this.GetChild(i),child!=null&&child.Write(builder,includeTrivia,initialTriviaStart)}}});Bridge.define("Kusto.Language.Syntax.CustomElementDescriptor",{statics:{fields:{Default:null},ctors:{init:function(){this.Default=new Kusto.Language.Syntax.CustomElementDescriptor.$ctor1("",Kusto.Language.Editor.CompletionHint.None,!1)}}},props:{Name:null,IsOptional:!1,CompletionHint:0},ctors:{$ctor1:function(name,hint,isOptional){isOptional===void 0&&(isOptional=!1);var $t;this.$initialize();this.Name=($t=name,$t!=null?$t:"");this.IsOptional=isOptional;this.CompletionHint=hint},ctor:function(hint,isOptional){isOptional===void 0&&(isOptional=!1);Kusto.Language.Syntax.CustomElementDescriptor.$ctor1.call(this,"",hint,isOptional)}},methods:{WithName:function(name){return Bridge.referenceEquals(this.Name,name)?this:new Kusto.Language.Syntax.CustomElementDescriptor.$ctor1(name,this.CompletionHint,this.IsOptional)},WithHint:function(hint){return this.CompletionHint===hint?this:new Kusto.Language.Syntax.CustomElementDescriptor.$ctor1(this.Name,hint,this.IsOptional)},WithIsOptional:function(isOptional){return this.IsOptional===isOptional?this:new Kusto.Language.Syntax.CustomElementDescriptor.$ctor1(this.Name,this.CompletionHint,this.IsOptional)}}});Bridge.define("Kusto.Language.Syntax.DiagnosticsInclude",{$kind:"enum",statics:{fields:{Syntactic:1,Semantic:2,Expansion:4}},$flags:!0});Bridge.define("Kusto.Language.Syntax.IncludeTrivia",{$kind:"enum",statics:{fields:{All:0,Interior:1,Minimal:2}}});Bridge.define("Kusto.Language.Syntax.SyntaxCategory",{$kind:"enum",statics:{fields:{None:0,Keyword:1,Identifier:2,Punctuation:3,Operator:4,Literal:5,List:6,Node:7,Other:8}}});Bridge.define("Kusto.Language.Syntax.SyntaxElement.ExtendedData",{$kind:"nested class",fields:{Parent:null,SyntaxDiagnostics:null,SemanticInfo:null}});Bridge.define("Kusto.Language.Syntax.SyntaxElement.Flags",{$kind:"nested enum",statics:{fields:{ContainsDiagnostics:1}},$flags:!0,$utype:System.Int16});Bridge.define("Kusto.Language.Syntax.SyntaxFacts",{statics:{fields:{kindToDataMap:null,textToKindMap:null},props:{Keywords:{get:function(){return System.Linq.Enumerable.from(Kusto.Language.Syntax.SyntaxFacts.GetKinds(Kusto.Language.Syntax.SyntaxCategory.Keyword)).select(Kusto.Language.Syntax.SyntaxFacts.GetText)}},Punctuation:{get:function(){return System.Linq.Enumerable.from(Kusto.Language.Syntax.SyntaxFacts.GetKinds(Kusto.Language.Syntax.SyntaxCategory.Punctuation)).select(Kusto.Language.Syntax.SyntaxFacts.GetText)}},Operators:{get:function(){return System.Linq.Enumerable.from(Kusto.Language.Syntax.SyntaxFacts.GetKinds(Kusto.Language.Syntax.SyntaxCategory.Operator)).select(Kusto.Language.Syntax.SyntaxFacts.GetText)}}},ctors:{ctor:function(){var data=function(_o1){return _o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.None,"",Kusto.Language.Syntax.SyntaxCategory.None)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AccessKeyword,"access",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AccountsKeyword,"accounts",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AccumulateKeyword,"accumulate")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AddKeyword,"add",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AdminKeyword,"admin",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AdminsKeyword,"admins",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AliasKeyword,"alias")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AllKeyword,"all",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AlterKeyword,"alter",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AlterMergeKeyword,"alter-merge",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AndKeyword,"and",1,Kusto.Language.Symbols.OperatorKind.And,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AppendKeyword,"append",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AsKeyword,"as")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AscKeyword,"asc")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AsyncKeyword,"async",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AttachKeyword,"attach",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BagExpansionKeyword,"bagexpansion")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BasicAuthKeyword,"basicauth",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BetweenKeyword,"between",1,Kusto.Language.Symbols.OperatorKind.Between,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BinKeyword,"bin",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BinLegacyKeyword,"bin_legacy")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ByKeyword,"by")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CacheKeyword,"cache",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CachingKeyword,"caching",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CachingPolicyKeyword,"cachingpolicy")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CalloutKeyword,"callout")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CancelKeyword,"cancel")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CapacityKeyword,"capacity",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CharactersKeyword,"characters")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ClusterKeyword,"cluster",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ColumnKeyword,"column",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ColumnsKeyword,"columns",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ColumnDocStringsKeyword,"column-docstrings")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CommandsKeyword,"commands",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CommandsAndQueriesKeyword,"commands-and-queries",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CommPoolsKeyword,"commpools",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CompletedKeyword,"completed",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CompressedKeyword,"compressed",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ConsumeKeyword,"consume")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ContainsKeyword,"contains",1,Kusto.Language.Symbols.OperatorKind.Contains,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ContainsCsKeyword,"containscs",1,Kusto.Language.Symbols.OperatorKind.ContainsCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.Contains_CsKeyword,"contains_cs",1,Kusto.Language.Symbols.OperatorKind.ContainsCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ContinuousExport,"continuous-export")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ContinuousExports,"continuous-exports")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CountKeyword,"count")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CrashKeyword,"crash",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CreateKeyword,"create",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CreatedOnKeyword,"createdon",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CreateOrAlterKeyword,"create-or-alter")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CreateMergeKeyword,"create-merge")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CrossClusterKeyword,"__crossCluster")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CrossDbKeyword,"__crossDB")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CslKeyword,"csl",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CslSchemaKeyword,"cslschema",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CsvKeyword,"csv",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DataKeyword,"data",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DatabaseKeyword,"database",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DatabaseCreatorsKeyword,"databasecreators",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DatabasesKeyword,"databases",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DataScopeKeyword,"datascope")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DataTableKeyword,"datatable")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DeclareKeyword,"declare")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DecryptionCertificateThumbPrintKeyword,"decryption-certificate-thumbprint",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DefaultKeyword,"default",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DefineKeyword,"define",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DeleteKeyword,"delete",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DescKeyword,"desc")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DetachKeyword,"detach",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DetailsKeyword,"details",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DiagnosticsKeyword,"diagnostics",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DisableKeyword,"disable",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DistinctKeyword,"distinct")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DocStringKeyword,"docstring",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DropKeyword,"drop",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DropPretendKeyword,"drop-pretend",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DupNextFailedIngestKeyword,"dup-next-failed-ingest",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DupNextIngestKeyword,"dup-next-ingest",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EarliestKeyword,"earliest")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EchoKeyword,"echo",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EffectiveKeyword,"effective",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EnableKeyword,"enable",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EncodingKeyword,"encoding",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EncodingPolicyKeyword,"encodingpolicy",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EndsWithKeyword,"endswith",1,Kusto.Language.Symbols.OperatorKind.EndsWith,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EndsWithCsKeyword,"endswith_cs",1,Kusto.Language.Symbols.OperatorKind.EndsWithCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EntityKeyword,"entity",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EphemeralKeyword,"ephemeral",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EvaluateKeyword,"evaluate",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExceptKeyword,"except",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExecuteKeyword,"execute",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExecuteAndCacheKeyword,"__executeAndCache")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExpandOutputKeyword,"expandoutput")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExportKeyword,"export",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExtendKeyword,"extend")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExtentKeyword,"extent",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExtentContainersKeyword,"extentcontainers",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExtentsKeyword,"extents",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExtentsMergeKeyword,"extentsmerge",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExternalKeyword,"external")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExternalDataKeyword,"externaldata")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FabricKeyword,"fabric",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FabricCacheKeyword,"fabriccache",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FabricClocksKeyword,"fabricclocks",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FabricLocksKeyword,"fabriclocks",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FacetKeyword,"facet",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FailuresKeyword,"failures",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FilterKeyword,"filter")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FindKeyword,"find")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FirstKeyword,"first")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FlagsKeyword,"flags")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FolderKeyword,"folder",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ForceKeyword,"force",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ForkKeyword,"fork",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FreshnessKeyword,"freshness",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FromKeyword,"from",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FunctionKeyword,"function",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FunctionsKeyword,"functions",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GetSchemaKeyword,"getschema")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GroupsKeyword,"groups",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HardDeleteKeyword,"harddelete",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasKeyword,"has",1,Kusto.Language.Symbols.OperatorKind.Has,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasCsKeyword,"has_cs",1,Kusto.Language.Symbols.OperatorKind.HasCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HashKeyword,"hash",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasPrefixKeyword,"hasprefix",1,Kusto.Language.Symbols.OperatorKind.HasPrefix,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasPrefixCsKeyword,"hasprefix_cs",1,Kusto.Language.Symbols.OperatorKind.HasPrefixCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasSuffixKeyword,"hassuffix",1,Kusto.Language.Symbols.OperatorKind.HasSuffix,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasSuffixCsKeyword,"hassuffix_cs",1,Kusto.Language.Symbols.OperatorKind.HasSuffixCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotConcurrencyKeyword,"hint.concurrency")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotDistributionKeyword,"hint.distribution")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotMaterializedKeyword,"hint.materialized")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotNumPartitions,"hint.num_partitions")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotProgressiveTopKeyword,"hint.progressive_top")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotShuffleKeyKeyword,"hint.shufflekey")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotSpreadKeyword,"hint.spread")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotRemoteKeyword,"hint.remote")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HintDotStrategyKeyword,"hint.strategy")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HotCacheKeyword,"hotcache",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HotKeyword,"hot",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HotDataKeyword,"hotdata",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HotIndexKeyword,"hotindex",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HoursKeyword,"hours",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IdKeyword,"id",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IfLaterThanKeyword,"if_later_than",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IfExistsKeyword,"ifexists",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IfNotExistsKeyword,"ifnotexists",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InKeyword,"in",1,Kusto.Language.Symbols.OperatorKind.In,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InCsKeyword,"in~",1,Kusto.Language.Symbols.OperatorKind.InCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasAnyKeyword,"has_any",1,Kusto.Language.Symbols.OperatorKind.HasAny,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IngestKeyword,"ingest",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IngestionKeyword,"ingestion",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IngestionsKeyword,"ingestions",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IngestionTimeKeyword,"ingestiontime",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IngestorsKeyword,"ingestors",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InlineKeyword,"inline",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IntoKeyword,"into",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InvokeKeyword,"invoke")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IsFuzzyKeyword,"isfuzzy",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind._IsFuzzyKeyword,"__isFuzzy")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JoinKeyword,"join")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JournalKeyword,"journal")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JsonKeyword,"json",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.KeysKeyword,"keys",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.KindKeyword,"kind",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LastKeyword,"last")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LatestKeyword,"latest")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LetKeyword,"let")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LikeKeyword,"like",1,Kusto.Language.Symbols.OperatorKind.Like,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LikeCsKeyword,"likecs",1,Kusto.Language.Symbols.OperatorKind.LikeCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LimitKeyword,"limit")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LoadKeyword,"load",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LocalKeyword,"local",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LookupKeyword,"lookup",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesKeyword,"make-series")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MappingKeyword,"mapping",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MappingsKeyword,"mappings",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MatchesRegexKeyword,"matches regex",1,Kusto.Language.Symbols.OperatorKind.MatchRegex,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MaterializeKeyword,"materialize")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MdmKeyword,"mdm")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MemoryKeyword,"memory",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MergeKeyword,"merge",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MetadataKeyword,"metadata",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MissingKeyword,"missing")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MonitoringKeyword,"monitoring",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MoveKeyword,"move",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvDashApplyKeyword,"mv-apply")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvApplyKeyword,"mvapply")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvDashExpandKeyword,"mv-expand")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvExpandKeyword,"mvexpand")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NanKeyword,"nan",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NoneKeyword,"none",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotBetweenKeyword,"!between",1,Kusto.Language.Symbols.OperatorKind.NotBetween,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotContainsKeyword,"notcontains",1,Kusto.Language.Symbols.OperatorKind.NotContains,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotContainsCsKeyword,"notcontainscs",1,Kusto.Language.Symbols.OperatorKind.NotContainsCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotBangContainsKeyword,"!contains",1,Kusto.Language.Symbols.OperatorKind.NotContains,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotBangContainsCsKeyword,"!contains_cs",1,Kusto.Language.Symbols.OperatorKind.NotContainsCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotEndsWithKeyword,"!endswith",1,Kusto.Language.Symbols.OperatorKind.NotEndsWith,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotEndsWithCsKeyword,"!endswith_cs",1,Kusto.Language.Symbols.OperatorKind.NotEndsWithCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasKeyword,"!has",1,Kusto.Language.Symbols.OperatorKind.NotHas,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasCsKeyword,"!has_cs",1,Kusto.Language.Symbols.OperatorKind.NotHasCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasPrefixKeyword,"!hasprefix",1,Kusto.Language.Symbols.OperatorKind.NotHasPrefix,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasPrefixCsKeyword,"!hasprefix_cs",1,Kusto.Language.Symbols.OperatorKind.NotHasPrefixCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasSuffixKeyword,"!hassuffix",1,Kusto.Language.Symbols.OperatorKind.NotHasSuffix,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasSuffixCsKeyword,"!hassuffix_cs",1,Kusto.Language.Symbols.OperatorKind.NotHasSuffixCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotInKeyword,"!in",1,Kusto.Language.Symbols.OperatorKind.NotIn,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotInCsKeyword,"!in~",1,Kusto.Language.Symbols.OperatorKind.NotInCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotLikeKeyword,"notlike",1,Kusto.Language.Symbols.OperatorKind.NotLike,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotLikeCsKeyword,"notlikecs",1,Kusto.Language.Symbols.OperatorKind.NotLikeCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotStartsWithKeyword,"!startswith",1,Kusto.Language.Symbols.OperatorKind.NotStartsWith,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotStartsWithCsKeyword,"!startswith_cs",1,Kusto.Language.Symbols.OperatorKind.NotStartsWithCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NullKeyword,"null",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NullsKeyword,"nulls",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OfKeyword,"of")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OlderKeyword,"older",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OnKeyword,"on")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OperationsKeyword,"operations",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OrKeyword,"or",1,Kusto.Language.Symbols.OperatorKind.Or,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OrderKeyword,"order")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OthersKeyword,"others",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PackKeyword,"pack",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PackedColumnKeyword,"__packedColumn")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ParseKeyword,"parse")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PartitionKeyword,"partition",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PasswordKeyword,"password",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PatternKeyword,"pattern",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PersistKeyword,"persist",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PluginKeyword,"plugin",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PluginsKeyword,"plugins",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PoliciesKeyword,"policies",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PolicyKeyword,"policy",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PretendKeyword,"pretend",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PrettyNameKeyword,"prettyname",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PrincipalKeyword,"principal",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PrincipalsKeyword,"principals",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PrintKeyword,"print")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectKeyword,"project")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectAwayKeyword,"project-away")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind._ProjectAwayKeyword,"__projectAway")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectRenameKeyword,"project-rename")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectReorderKeyword,"project-reorder")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectSmartKeyword,"project-smart")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PurgeKeyword,"purge",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PurgeCleanupKeyword,"purge-cleanup")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QueriesKeyword,"queries",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QueryKeyword,"query",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QueryExecutionKeyword,"queryexecution",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QueryParametersKeyword,"query_parameters",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QueryPlanKeyword,"queryplan",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QueryThrottlingKeyword,"querythrottling",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QuickKeyword,"quick",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RangeKeyword,"range",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ReadOnlyKeyword,"readonly",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ReadWriteKeyword,"readwrite",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RebalanceKeyword,"rebalance")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RebalancePretendKeyword,"rebalance-pretend")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RebuildKeyword,"rebuild",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RecycleKeyword,"recycle",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ReduceKeyword,"reduce",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RegexKeyword,"regex")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RelaxedKeyword,"relaxed")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RenameKeyword,"rename",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RenderKeyword,"render",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ReplaceKeyword,"replace",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ResetKeyword,"reset")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RestrictKeyword,"restrict")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RetentionKeyword,"retention",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RolesKeyword,"roles",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RowOrderKeyword,"roworder",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RowOrderPolicyKeyword,"roworderpolicy",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RowStoreKeyword,"rowstore")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RowStorePolicyKeyword,"rowstorepolicy")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RowStoresKeyword,"rowstores")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RunningKeyword,"running",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RunKeyword,"run")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SandboxKeyword,"sandbox")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SandboxesKeyword,"sandboxes")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SampleKeyword,"sample")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SampleDistinctKeyword,"sample-distinct")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SaveKeyword,"save",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SchemaKeyword,"schema",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ScriptKeyword,"script",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SealKeyword,"seal")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SearchKeyword,"search")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SerializeKeyword,"serialize")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SetKeyword,"set")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SetOrAppendKeyword,"set-or-append",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SetOrReplaceKeyword,"set-or-replace",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ShardingKeyword,"sharding")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ShowKeyword,"show",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SimpleKeyword,"simple")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StartsWithKeyword,"startswith",1,Kusto.Language.Symbols.OperatorKind.StartsWith,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StartsWithCsKeyword,"startswith_cs",1,Kusto.Language.Symbols.OperatorKind.StartsWithCs,!1,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SoftDeleteKeyword,"softdelete")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SortKeyword,"sort")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SourceColumnIndexKeyword,"__sourceColumnIndex")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SqlKeyword,"sql")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StateKeyword,"state",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StepKeyword,"step",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StorageKeyword,"storage",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StreamKeyword,"stream",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SummarizeKeyword,"summarize")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TableKeyword,"table",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TablePurgeKeyword,"tablepurge")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TablesKeyword,"tables",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TagsKeyword,"tags",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TakeKeyword,"take")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TempStorageKeyword,"tempstorage",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ThresholdKeyword,"threshold",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ThrowKeyword,"throw")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TimeoutKeyword,"timemout")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TitleKeyword,"title")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ToKeyword,"to")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopKeyword,"top")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopHittersKeyword,"top-hitters")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopNestedKeyword,"top-nested")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ToScalarKeyword,"toscalar")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ToTableKeyword,"totable")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TraceKeyword,"trace",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TraceResultsKeyword,"traceresults",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TsvKeyword,"tsv",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TypeKeyword,"type",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TypeOfKeyword,"typeof",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UndoKeyword,"undo",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UnionKeyword,"union")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UpdateKeyword,"udpate",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UserKeyword,"user",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UsersKeyword,"users",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.VerboseKeyword,"verbose")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.VersionKeyword,"version",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ViewKeyword,"view",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ViewersKeyword,"viewers")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.VolatileKeyword,"volatile",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WarmKeyword,"warm",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WarmingKeyword,"warming",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WhatIfKeyword,"whatif",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WhereKeyword,"where")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WithKeyword,"with")),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WriteAheadLogKeyword,"writeaheadlog",1,0,!0,!1)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BoolKeyword,"bool",1,0,!0,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BooleanKeyword,"boolean",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ByteKeyword,"byte",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CharKeyword,"char",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DateKeyword,"date",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DateTimeKeyword,"datetime",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DoubleKeyword,"double",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DynamicKeyword,"dynamic",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FloatKeyword,"float",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GuidKeyword,"guid",1,0,!0,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IntKeyword,"int",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.Int16Keyword,"int16",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.Int32Keyword,"int32",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.Int64Keyword,"int64",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.Int8Keyword,"int8",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LongKeyword,"long",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RealKeyword,"real",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DecimalKeyword,"decimal",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SingleKeyword,"single",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StringKeyword,"string",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TimeKeyword,"time",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TimespanKeyword,"timespan",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UIntKeyword,"uint",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UInt16Keyword,"uint16",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UInt32Keyword,"uint32",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UInt64Keyword,"uint64",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UInt8Keyword,"uint8",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ULongKeyword,"ulong",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UniqueIdKeyword,"uniqueid",1,0,!1,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UuidKeyword,"uuid",1,0,!0,!0)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OpenParenToken,"(",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CloseParenToken,")",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OpenBracketToken,"[",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CloseBracketToken,"]",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OpenBraceToken,"{",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CloseBraceToken,"}",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BarToken,"|",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LessThanBarToken,"<|",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PlusToken,"+",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.Add)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MinusToken,"-",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.Subtract)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AsteriskToken,"*",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.Multiply)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SlashToken,"/",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.Divide)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PercentToken,"%",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.Modulo)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DotToken,".",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DotDotToken,"..",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BangToken,"!",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LessThanToken,"<",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.LessThan)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualToken,"<=",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.LessThanOrEqual)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GreaterThanToken,">",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.GreaterThan)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualToken,">=",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.GreaterThanOrEqual)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EqualToken,"=",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EqualEqualToken,"==",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.Equal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BangEqualToken,"!=",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.NotEqual)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LessThanGreaterThanToken,"<>",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.NotEqual)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ColonToken,":",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SemicolonToken,";",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CommaToken,",",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EqualTildeToken,"=~",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.EqualTilde)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BangTildeToken,"!~",Kusto.Language.Syntax.SyntaxCategory.Operator,Kusto.Language.Symbols.OperatorKind.BangTilde)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AtToken,"@",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QuestionToken,"?",Kusto.Language.Syntax.SyntaxCategory.Punctuation)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StringLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LongLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IntLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RealLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DecimalLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken,"",Kusto.Language.Syntax.SyntaxCategory.Literal)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IdentifierToken,"",Kusto.Language.Syntax.SyntaxCategory.Identifier)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EndOfTextToken,"",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DirectiveToken,"",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BadToken,"",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.List,"",Kusto.Language.Syntax.SyntaxCategory.List)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SeparatedElement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExpressionList,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExpressionCouple,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RenameList,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CustomNode,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TokenName,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BrackettedName,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BracedName,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.WildcardedName,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NameDeclaration,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NameReference,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ParenthesizedExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PathExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ElementExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SimpleNamedExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CompoundNamedExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FunctionCallExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ToScalarExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ToTableExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BrackettedExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ConditionedExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RangeOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PipeExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NamedParameter,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DataScopeExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DataTableExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExternalDataExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExternalDataWithClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExternalDataUriList,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.IntLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BooleanLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LongLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DecimalLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TimespanLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TypeOfLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CompoundStringLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NullLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StarExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AtExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UnaryPlusExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UnaryMinusExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AddExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SubtractExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MultiplyExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DivideExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ModuloExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LessThanExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LessThanOrEqualExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GreaterThanExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GreaterThanOrEqualExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EqualExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotEqualExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AndExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OrExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasAnyExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotInExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotInCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BetweenExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotBetweenExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EqualTildeExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BangTildeExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasPrefixExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasPrefixCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasPrefixExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasPrefixCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasSuffixExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.HasSuffixCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasSuffixExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotHasSuffixCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LikeExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LikeCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotLikeExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotLikeCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ContainsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ContainsCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotContainsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotContainsCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StartsWithExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.StartsWithCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotStartsWithExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotStartsWithCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EndsWithExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EndsWithCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotEndsWithExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NotEndsWithCsExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MatchesRegexExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SearchExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JsonObjectExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JsonPair,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JsonArrayExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DynamicExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TypedColumnReference,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PackExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NameAndTypeDeclaration,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PrimitiveTypeExpression,"",Kusto.Language.Syntax.SyntaxCategory.None)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SchemaTypeExpression,"",Kusto.Language.Syntax.SyntaxCategory.None)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ToTypeOfClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DataScopeClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.NameEqualsClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DefaultExpressionClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BadQueryOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AsOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ConsumeOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CountOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CountAsIdentifierClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DistinctOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExecuteAndCacheOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExtendOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FacetOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FacetWithOperatorClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FacetWithExpressionClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FilterOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FindOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FindInClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FindProjectClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ForkOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ForkExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.GetSchemaOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InvokeOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LookupOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JoinOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JoinOnClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.JoinWhereClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesOnClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesInRangeClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesFromToStepClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MakeSeriesByClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvApplyOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvApplyExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvApplyRowLimitClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvApplyContextIdClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvApplySubqueryExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvExpandOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvExpandExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MvExpandRowLimitClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PartitionOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PartitionExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ParseOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.EvaluateOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PrintOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectAwayOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectRenameOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ProjectReorderOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ReduceByOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ReduceByWithClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RenderOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RenderWithClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RenderNameList,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SampleOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SampleDistinctOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SearchOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SerializeOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SummarizeOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SummarizeByClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SortOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OrderedExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OrderingClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OrderingNullsClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TakeOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopHittersOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopHittersByClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopNestedOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopNestedClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.TopNestedWithOthersClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UnionOperator,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.AliasStatement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.ExpressionStatement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FunctionDeclaration,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FunctionParameters,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FunctionParameter,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DefaultValueDeclaration,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.FunctionBody,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.LetStatement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.MaterializeExpression,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PatternStatement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PatternPathParameter,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PatternDeclaration,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PatternMatch,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.PatternPathValue,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.RestrictStatement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SetOptionStatement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.OptionValueClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QueryParametersStatement,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CommandWithValueClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CommandWithPropertyListClause,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.BadCommand,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.UnknownCommand,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CustomCommand,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.QueryBlock,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.CommandBlock,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.DirectiveBlock,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.SkippedTokens,"",Kusto.Language.Syntax.SyntaxCategory.Node)),_o1.add(new Kusto.Language.Syntax.SyntaxFacts.SyntaxData(Kusto.Language.Syntax.SyntaxKind.InputTextToken,"",Kusto.Language.Syntax.SyntaxCategory.Other)),_o1}(new(System.Collections.Generic.List$1(Kusto.Language.Syntax.SyntaxFacts.SyntaxData).ctor)),count,i,d;for(data.Sort$2(function(d1,d2){return System.String.compare(d1.Text,d2.Text)}),count=System.Enum.getValues(Kusto.Language.Syntax.SyntaxKind).length,Kusto.Language.Syntax.SyntaxFacts.kindToDataMap=System.Array.init(count,null,Kusto.Language.Syntax.SyntaxFacts.SyntaxData),Kusto.Language.Syntax.SyntaxFacts.textToKindMap=new(Kusto.Language.Utils.TextKeyedDictionary$1(Kusto.Language.Syntax.SyntaxKind)),i=0;i<data.Count;i=i+1|0)d=data.getItem(i),Kusto.Language.Syntax.SyntaxFacts.kindToDataMap[System.Array.index(d.Kind,Kusto.Language.Syntax.SyntaxFacts.kindToDataMap)]=d,d.Text!=null&&Kusto.Language.Syntax.SyntaxFacts.textToKindMap.GetOrAddValue(d.Text,d.Kind)}},methods:{GetText:function(kind){return Kusto.Language.Syntax.SyntaxFacts.kindToDataMap[System.Array.index(kind,Kusto.Language.Syntax.SyntaxFacts.kindToDataMap)].Text},GetCategory:function(kind){return Kusto.Language.Syntax.SyntaxFacts.kindToDataMap[System.Array.index(kind,Kusto.Language.Syntax.SyntaxFacts.kindToDataMap)].Category},IsKeyword:function(kind){return Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)===Kusto.Language.Syntax.SyntaxCategory.Keyword},IsPunctuation:function(kind){return Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)===Kusto.Language.Syntax.SyntaxCategory.Punctuation},IsOperator:function(kind){return Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)===Kusto.Language.Syntax.SyntaxCategory.Operator},IsLiteral:function(kind){return Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)===Kusto.Language.Syntax.SyntaxCategory.Literal},IsType:function(kind){return Kusto.Language.Syntax.SyntaxFacts.kindToDataMap[System.Array.index(kind,Kusto.Language.Syntax.SyntaxFacts.kindToDataMap)].IsType},GetOperatorKind:function(kind){return Kusto.Language.Syntax.SyntaxFacts.kindToDataMap[System.Array.index(kind,Kusto.Language.Syntax.SyntaxFacts.kindToDataMap)].OperatorKind},TryGetKind:function(text,kind){return Kusto.Language.Syntax.SyntaxFacts.TryGetKind$1(text,0,text.length,kind)},TryGetKind$1:function(text,offset,length,kind){return Kusto.Language.Syntax.SyntaxFacts.textToKindMap.TryGetValue(text,offset,length,kind)},GetKinds:function(){return new(Bridge.GeneratorEnumerable$1(Kusto.Language.Syntax.SyntaxKind))(Bridge.fn.bind(this,function(category){var $step=0,$t,datum,$async_e,$enumerator=new(Bridge.GeneratorEnumerator$1(Kusto.Language.Syntax.SyntaxKind))(Bridge.fn.bind(this,function(){try{for(;;)switch($step){case 0:$t=Bridge.getEnumerator(Kusto.Language.Syntax.SyntaxFacts.kindToDataMap);$step=1;continue;case 1:if($t.moveNext()){datum=$t.Current;$step=2;continue}$step=6;continue;case 2:if(datum.Category===category){$step=3;continue}$step=5;continue;case 3:return $enumerator.current=datum.Kind,$step=4,!0;case 4:$step=5;continue;case 5:$step=1;continue;case 6:default:return!1}}catch($async_e1){$async_e=System.Exception.create($async_e1);throw $async_e;}}));return $enumerator},arguments))},GetKindsWithFixedText:function(){return new(Bridge.GeneratorEnumerable$1(Kusto.Language.Syntax.SyntaxKind))(Bridge.fn.bind(this,function(){var $step=0,$t,datum,$async_e,$enumerator=new(Bridge.GeneratorEnumerator$1(Kusto.Language.Syntax.SyntaxKind))(Bridge.fn.bind(this,function(){try{for(;;)switch($step){case 0:$t=Bridge.getEnumerator(Kusto.Language.Syntax.SyntaxFacts.kindToDataMap);$step=1;continue;case 1:if($t.moveNext()){datum=$t.Current;$step=2;continue}$step=6;continue;case 2:if(datum.Text.length>0){$step=3;continue}$step=5;continue;case 3:return $enumerator.current=datum.Kind,$step=4,!0;case 4:$step=5;continue;case 5:$step=1;continue;case 6:default:return!1}}catch($async_e1){$async_e=System.Exception.create($async_e1);throw $async_e;}}));return $enumerator}))},CanBeIdentifier:function(kind){return Kusto.Language.Syntax.SyntaxFacts.kindToDataMap[System.Array.index(kind,Kusto.Language.Syntax.SyntaxFacts.kindToDataMap)].CanBeIdentifier}}}});Bridge.define("Kusto.Language.Syntax.SyntaxFacts.SyntaxData",{$kind:"nested class",props:{Kind:0,Text:null,Category:0,OperatorKind:0,CanBeIdentifier:!1,IsType:!1},ctors:{ctor:function(kind,text,category,opKind,canBeIdentifier,isType){category===void 0&&(category=1);opKind===void 0&&(opKind=0);canBeIdentifier===void 0&&(canBeIdentifier=!1);isType===void 0&&(isType=!1);this.$initialize();this.Kind=kind;this.Text=text;this.Category=category;this.OperatorKind=opKind;this.CanBeIdentifier=canBeIdentifier;this.IsType=isType}}});Bridge.define("Kusto.Language.Syntax.SyntaxKind",{$kind:"enum",statics:{fields:{None:0,AccessKeyword:1,AccountsKeyword:2,AccumulateKeyword:3,AddKeyword:4,AdminKeyword:5,AdminsKeyword:6,AliasKeyword:7,AllKeyword:8,AlterKeyword:9,AlterMergeKeyword:10,AndKeyword:11,AppendKeyword:12,AsKeyword:13,AscKeyword:14,AsyncKeyword:15,AttachKeyword:16,BagExpansionKeyword:17,BasicAuthKeyword:18,BetweenKeyword:19,BinKeyword:20,BinLegacyKeyword:21,ByKeyword:22,CacheKeyword:23,CachingKeyword:24,CachingPolicyKeyword:25,CalloutKeyword:26,CancelKeyword:27,CapacityKeyword:28,CharactersKeyword:29,ClusterKeyword:30,ColumnKeyword:31,ColumnsKeyword:32,ColumnDocStringsKeyword:33,CommandsKeyword:34,CommandsAndQueriesKeyword:35,CommPoolsKeyword:36,CompletedKeyword:37,CompressedKeyword:38,ConsumeKeyword:39,ContainsKeyword:40,ContainsCsKeyword:41,Contains_CsKeyword:42,ContinuousExport:43,ContinuousExports:44,CountKeyword:45,CrashKeyword:46,CreateKeyword:47,CreateOrAlterKeyword:48,CreatedOnKeyword:49,CreateMergeKeyword:50,CrossDbKeyword:51,CrossClusterKeyword:52,CslKeyword:53,CslSchemaKeyword:54,CsvKeyword:55,DataKeyword:56,DatabaseKeyword:57,DatabaseCreatorsKeyword:58,DatabasesKeyword:59,DataScopeKeyword:60,DataTableKeyword:61,DeclareKeyword:62,DecryptionCertificateThumbPrintKeyword:63,DefaultKeyword:64,DefineKeyword:65,DeleteKeyword:66,DescKeyword:67,DetachKeyword:68,DetailsKeyword:69,DiagnosticsKeyword:70,DisableKeyword:71,DistinctKeyword:72,DocStringKeyword:73,DropKeyword:74,DropPretendKeyword:75,DupNextFailedIngestKeyword:76,DupNextIngestKeyword:77,EarliestKeyword:78,EchoKeyword:79,EffectiveKeyword:80,EnableKeyword:81,EncodingKeyword:82,EncodingPolicyKeyword:83,EndsWithKeyword:84,EndsWithCsKeyword:85,EntityKeyword:86,EphemeralKeyword:87,EvaluateKeyword:88,ExceptKeyword:89,ExecuteKeyword:90,ExecuteAndCacheKeyword:91,ExpandOutputKeyword:92,ExportKeyword:93,ExtendKeyword:94,ExtentKeyword:95,ExtentContainersKeyword:96,ExtentsKeyword:97,ExtentsMergeKeyword:98,ExternalKeyword:99,ExternalDataKeyword:100,FabricKeyword:101,FabricCacheKeyword:102,FabricClocksKeyword:103,FabricLocksKeyword:104,FacetKeyword:105,FailuresKeyword:106,FilterKeyword:107,FindKeyword:108,FirstKeyword:109,FlagsKeyword:110,FolderKeyword:111,ForceKeyword:112,ForkKeyword:113,FreshnessKeyword:114,FromKeyword:115,FunctionKeyword:116,FunctionsKeyword:117,GetSchemaKeyword:118,GroupsKeyword:119,HardDeleteKeyword:120,HasKeyword:121,HasAnyKeyword:122,HasCsKeyword:123,HashKeyword:124,HasPrefixKeyword:125,HasPrefixCsKeyword:126,HasSuffixKeyword:127,HasSuffixCsKeyword:128,HintDotConcurrencyKeyword:129,HintDotDistributionKeyword:130,HintDotMaterializedKeyword:131,HintDotNumPartitions:132,HintDotShuffleKeyKeyword:133,HintDotSpreadKeyword:134,HintDotRemoteKeyword:135,HintDotStrategyKeyword:136,HintDotProgressiveTopKeyword:137,HotCacheKeyword:138,HotKeyword:139,HotDataKeyword:140,HotIndexKeyword:141,HoursKeyword:142,IdKeyword:143,IfLaterThanKeyword:144,IfExistsKeyword:145,IfNotExistsKeyword:146,InKeyword:147,InCsKeyword:148,IngestKeyword:149,IngestionKeyword:150,IngestionsKeyword:151,IngestionTimeKeyword:152,IngestorsKeyword:153,InlineKeyword:154,IsFuzzyKeyword:155,_IsFuzzyKeyword:156,IntoKeyword:157,InvokeKeyword:158,JoinKeyword:159,JournalKeyword:160,JsonKeyword:161,KeysKeyword:162,KindKeyword:163,LastKeyword:164,LatestKeyword:165,LetKeyword:166,LikeKeyword:167,LikeCsKeyword:168,LimitKeyword:169,LoadKeyword:170,LocalKeyword:171,LookupKeyword:172,MakeSeriesKeyword:173,MappingKeyword:174,MappingsKeyword:175,MatchesRegexKeyword:176,MaterializeKeyword:177,MdmKeyword:178,MemoryKeyword:179,MergeKeyword:180,MetadataKeyword:181,MissingKeyword:182,MonitoringKeyword:183,MoveKeyword:184,MvApplyKeyword:185,MvDashApplyKeyword:186,MvDashExpandKeyword:187,MvExpandKeyword:188,NanKeyword:189,NoneKeyword:190,NotBetweenKeyword:191,NotContainsKeyword:192,NotContainsCsKeyword:193,NotBangContainsKeyword:194,NotBangContainsCsKeyword:195,NotEndsWithKeyword:196,NotEndsWithCsKeyword:197,NotHasKeyword:198,NotHasCsKeyword:199,NotHasPrefixKeyword:200,NotHasPrefixCsKeyword:201,NotHasSuffixKeyword:202,NotHasSuffixCsKeyword:203,NotInKeyword:204,NotInCsKeyword:205,NotLikeKeyword:206,NotLikeCsKeyword:207,NotStartsWithKeyword:208,NotStartsWithCsKeyword:209,NullKeyword:210,NullsKeyword:211,OfKeyword:212,OnKeyword:213,OlderKeyword:214,OperationsKeyword:215,OrKeyword:216,OrderKeyword:217,OthersKeyword:218,PackKeyword:219,PackedColumnKeyword:220,ParseKeyword:221,PartitionKeyword:222,PasswordKeyword:223,PatternKeyword:224,PersistKeyword:225,PluginKeyword:226,PluginsKeyword:227,PoliciesKeyword:228,PolicyKeyword:229,PretendKeyword:230,PrettyNameKeyword:231,PrincipalKeyword:232,PrincipalsKeyword:233,PrintKeyword:234,ProjectKeyword:235,ProjectAwayKeyword:236,_ProjectAwayKeyword:237,ProjectRenameKeyword:238,ProjectReorderKeyword:239,ProjectSmartKeyword:240,PurgeKeyword:241,PurgeCleanupKeyword:242,QueriesKeyword:243,QueryKeyword:244,QueryParametersKeyword:245,QueryExecutionKeyword:246,QueryPlanKeyword:247,QueryThrottlingKeyword:248,QuickKeyword:249,RangeKeyword:250,ReadOnlyKeyword:251,ReadWriteKeyword:252,RebalanceKeyword:253,RebalancePretendKeyword:254,RebuildKeyword:255,RecycleKeyword:256,ReduceKeyword:257,RegexKeyword:258,RelaxedKeyword:259,RenameKeyword:260,RenderKeyword:261,ReplaceKeyword:262,ResetKeyword:263,RestrictKeyword:264,RetentionKeyword:265,RolesKeyword:266,RowOrderKeyword:267,RowOrderPolicyKeyword:268,RowStoreKeyword:269,RowStorePolicyKeyword:270,RowStoresKeyword:271,RunKeyword:272,RunningKeyword:273,SampleKeyword:274,SampleDistinctKeyword:275,SandboxKeyword:276,SandboxesKeyword:277,SaveKeyword:278,SchemaKeyword:279,ScriptKeyword:280,SealKeyword:281,SearchKeyword:282,SerializeKeyword:283,SetKeyword:284,SetOrAppendKeyword:285,SetOrReplaceKeyword:286,ShardingKeyword:287,ShowKeyword:288,SimpleKeyword:289,SoftDeleteKeyword:290,SortKeyword:291,SourceColumnIndexKeyword:292,SqlKeyword:293,StartsWithKeyword:294,StartsWithCsKeyword:295,StateKeyword:296,StepKeyword:297,StreamKeyword:298,SummarizeKeyword:299,StorageKeyword:300,TableKeyword:301,TablePurgeKeyword:302,TablesKeyword:303,TagsKeyword:304,TakeKeyword:305,TempStorageKeyword:306,ThresholdKeyword:307,ThrowKeyword:308,TimeoutKeyword:309,TitleKeyword:310,ToKeyword:311,TopKeyword:312,TopHittersKeyword:313,TopNestedKeyword:314,ToScalarKeyword:315,ToTableKeyword:316,TraceKeyword:317,TraceResultsKeyword:318,TsvKeyword:319,TypeKeyword:320,TypeOfKeyword:321,UndoKeyword:322,UnionKeyword:323,UpdateKeyword:324,UserKeyword:325,UsersKeyword:326,UuidKeyword:327,VerboseKeyword:328,VersionKeyword:329,ViewKeyword:330,ViewersKeyword:331,VolatileKeyword:332,WarmKeyword:333,WarmingKeyword:334,WhatIfKeyword:335,WhereKeyword:336,WithKeyword:337,WriteAheadLogKeyword:338,BoolKeyword:339,BooleanKeyword:340,Int8Keyword:341,CharKeyword:342,UInt8Keyword:343,ByteKeyword:344,Int16Keyword:345,UInt16Keyword:346,IntKeyword:347,Int32Keyword:348,UIntKeyword:349,UInt32Keyword:350,LongKeyword:351,Int64Keyword:352,ULongKeyword:353,UInt64Keyword:354,SingleKeyword:355,FloatKeyword:356,RealKeyword:357,DecimalKeyword:358,DoubleKeyword:359,StringKeyword:360,TimeKeyword:361,TimespanKeyword:362,DateKeyword:363,DateTimeKeyword:364,GuidKeyword:365,UniqueIdKeyword:366,DynamicKeyword:367,OpenParenToken:368,CloseParenToken:369,OpenBracketToken:370,CloseBracketToken:371,OpenBraceToken:372,CloseBraceToken:373,BarToken:374,LessThanBarToken:375,PlusToken:376,MinusToken:377,AsteriskToken:378,SlashToken:379,PercentToken:380,DotToken:381,DotDotToken:382,BangToken:383,LessThanToken:384,LessThanOrEqualToken:385,GreaterThanToken:386,GreaterThanOrEqualToken:387,EqualToken:388,EqualEqualToken:389,BangEqualToken:390,LessThanGreaterThanToken:391,ColonToken:392,SemicolonToken:393,CommaToken:394,EqualTildeToken:395,BangTildeToken:396,AtToken:397,QuestionToken:398,BooleanLiteralToken:399,IntLiteralToken:400,LongLiteralToken:401,RealLiteralToken:402,DecimalLiteralToken:403,DateTimeLiteralToken:404,TimespanLiteralToken:405,GuidLiteralToken:406,StringLiteralToken:407,IdentifierToken:408,DirectiveToken:409,EndOfTextToken:410,BadToken:411,List:412,SeparatedElement:413,ExpressionList:414,ExpressionCouple:415,RenameList:416,CustomNode:417,BooleanLiteralExpression:418,IntLiteralExpression:419,LongLiteralExpression:420,RealLiteralExpression:421,DecimalLiteralExpression:422,DateTimeLiteralExpression:423,TimespanLiteralExpression:424,GuidLiteralExpression:425,StringLiteralExpression:426,NullLiteralExpression:427,TokenLiteralExpression:428,CompoundStringLiteralExpression:429,TypeOfLiteralExpression:430,DynamicExpression:431,JsonObjectExpression:432,JsonPair:433,JsonArrayExpression:434,TokenName:435,BrackettedName:436,BracedName:437,WildcardedName:438,NameDeclaration:439,NameReference:440,ParenthesizedExpression:441,PathExpression:442,ElementExpression:443,SimpleNamedExpression:444,CompoundNamedExpression:445,FunctionCallExpression:446,ToScalarExpression:447,ToTableExpression:448,BrackettedExpression:449,ConditionedExpression:450,PipeExpression:451,NamedParameter:452,DataScopeExpression:453,DataTableExpression:454,ExternalDataExpression:455,ExternalDataWithClause:456,ExternalDataUriList:457,StarExpression:458,AtExpression:459,UnaryPlusExpression:460,UnaryMinusExpression:461,AddExpression:462,SubtractExpression:463,MultiplyExpression:464,DivideExpression:465,ModuloExpression:466,LessThanExpression:467,LessThanOrEqualExpression:468,GreaterThanExpression:469,GreaterThanOrEqualExpression:470,EqualExpression:471,NotEqualExpression:472,AndExpression:473,OrExpression:474,InExpression:475,InCsExpression:476,NotInExpression:477,NotInCsExpression:478,BetweenExpression:479,NotBetweenExpression:480,EqualTildeExpression:481,BangTildeExpression:482,HasExpression:483,HasCsExpression:484,NotHasExpression:485,NotHasCsExpression:486,HasPrefixExpression:487,HasPrefixCsExpression:488,NotHasPrefixExpression:489,NotHasPrefixCsExpression:490,HasSuffixExpression:491,HasSuffixCsExpression:492,NotHasSuffixExpression:493,NotHasSuffixCsExpression:494,LikeExpression:495,LikeCsExpression:496,NotLikeExpression:497,NotLikeCsExpression:498,ContainsExpression:499,ContainsCsExpression:500,NotContainsExpression:501,NotContainsCsExpression:502,StartsWithExpression:503,StartsWithCsExpression:504,NotStartsWithExpression:505,NotStartsWithCsExpression:506,EndsWithExpression:507,EndsWithCsExpression:508,NotEndsWithExpression:509,NotEndsWithCsExpression:510,MatchesRegexExpression:511,SearchExpression:512,HasAnyExpression:513,TypedColumnReference:514,PackExpression:515,NameAndTypeDeclaration:516,PrimitiveTypeExpression:517,SchemaTypeExpression:518,NameEqualsClause:519,DefaultExpressionClause:520,ToTypeOfClause:521,BadQueryOperator:522,AsOperator:523,ConsumeOperator:524,CountOperator:525,CountAsIdentifierClause:526,DistinctOperator:527,ExecuteAndCacheOperator:528,ExtendOperator:529,FacetOperator:530,FacetWithOperatorClause:531,FacetWithExpressionClause:532,FilterOperator:533,FindOperator:534,DataScopeClause:535,FindInClause:536,FindProjectClause:537,GetSchemaOperator:538,InvokeOperator:539,LookupOperator:540,JoinOperator:541,JoinOnClause:542,JoinWhereClause:543,SearchOperator:544,ForkOperator:545,ForkExpression:546,MakeSeriesOperator:547,MakeSeriesExpression:548,MakeSeriesOnClause:549,MakeSeriesInRangeClause:550,MakeSeriesFromToStepClause:551,MakeSeriesByClause:552,MvApplyOperator:553,MvApplyExpression:554,MvApplyRowLimitClause:555,MvApplyContextIdClause:556,MvApplySubqueryExpression:557,MvExpandOperator:558,MvExpandExpression:559,MvExpandRowLimitClause:560,PartitionExpression:561,PartitionOperator:562,ParseOperator:563,EvaluateOperator:564,ProjectOperator:565,ProjectAwayOperator:566,ProjectRenameOperator:567,ProjectReorderOperator:568,RangeOperator:569,ReduceByOperator:570,ReduceByWithClause:571,RenderOperator:572,RenderWithClause:573,RenderNameList:574,SampleOperator:575,SampleDistinctOperator:576,SerializeOperator:577,SortOperator:578,OrderedExpression:579,OrderingClause:580,OrderingNullsClause:581,SummarizeOperator:582,SummarizeByClause:583,TakeOperator:584,TopHittersOperator:585,TopHittersByClause:586,TopOperator:587,TopNestedOperator:588,TopNestedClause:589,TopNestedWithOthersClause:590,UnionOperator:591,PrintOperator:592,AliasStatement:593,ExpressionStatement:594,FunctionDeclaration:595,FunctionParameters:596,FunctionParameter:597,DefaultValueDeclaration:598,FunctionBody:599,LetStatement:600,MaterializeExpression:601,RestrictStatement:602,SetOptionStatement:603,OptionValueClause:604,PatternStatement:605,PatternDeclaration:606,PatternPathParameter:607,PatternMatch:608,PatternPathValue:609,QueryParametersStatement:610,CommandWithValueClause:611,CommandWithPropertyListClause:612,BadCommand:613,UnknownCommand:614,CustomCommand:615,QueryBlock:616,CommandBlock:617,DirectiveBlock:618,SkippedTokens:619,InputTextToken:620}}});Bridge.define("Kusto.Language.Utils.CancellationToken",{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new Kusto.Language.Utils.CancellationToken}}},ctors:{ctor:function(){this.$initialize()}},methods:{ThrowIfCancellationRequested:function(){},$clone:function(){return this}}});Bridge.define("Kusto.Language.Utils.ConvertHelper",{statics:{methods:{ChangeType:function(value,sample){if(Bridge.is(sample,System.String))return System.Convert.toString(value);if(Bridge.is(sample,System.Int32))return Bridge.box(System.Convert.toInt32(value),System.Int32);if(Bridge.is(sample,System.Int64))return System.Convert.toInt64(value);if(Bridge.is(sample,System.Single))return Bridge.box(System.Convert.toSingle(value),System.Single,System.Single.format,System.Single.getHashCode);if(Bridge.is(sample,System.Double))return Bridge.box(System.Convert.toDouble(value),System.Double,System.Double.format,System.Double.getHashCode);if(Bridge.is(sample,System.DateTime))return Bridge.box(System.Convert.toDateTime(value),System.DateTime,System.DateTime.format);if(Bridge.is(sample,System.Decimal))return System.Convert.toDecimal(value);if(Bridge.is(sample,System.Boolean))return Bridge.box(System.Convert.toBoolean(value),System.Boolean,System.Boolean.toString);if(Bridge.is(sample,System.Int16))return Bridge.box(System.Convert.toInt16(value),System.Int16);if(Bridge.is(sample,System.Byte))return Bridge.box(System.Convert.toByte(value),System.Byte);if(Bridge.is(sample,System.SByte))return Bridge.box(System.Convert.toSByte(value),System.SByte);throw new System.InvalidOperationException.$ctor1("Undefined type conversion.");}}}});Bridge.define("Kusto.Language.Utils.EmptyReadOnlyList$1",function(T){return{statics:{fields:{Instance:null},ctors:{init:function(){this.Instance=(new(System.Collections.Generic.List$1(T).ctor)).AsReadOnly()}}}}});Bridge.define("Kusto.Language.Utils.Ensure",{statics:{methods:{IsTrue:function(value,message){var $t;if(message===void 0&&(message=null),!value)throw new System.InvalidOperationException.$ctor1(($t=message,$t!=null?$t:"Expected true"));},AreEqual:function(T,expected,actual,message){var $t;if(message===void 0&&(message=null),!Bridge.equals(expected,actual))throw new System.InvalidOperationException.$ctor1(($t=message,$t!=null?$t:System.String.format("Expected: {0} actual: {1}",expected,actual)));},NotNull:function(value,message){var $t;if(message===void 0&&(message=null),value==null)throw new System.InvalidOperationException.$ctor1(($t=message,$t!=null?$t:"Expected not null"));},IsNull:function(value,message){var $t;if(message===void 0&&(message=null),value!=null)throw new System.InvalidOperationException.$ctor1(($t=message,$t!=null?$t:"Expected null"));},ArgumentNotNull:function(value,paramName){if(value==null)throw new System.ArgumentNullException.$ctor1(paramName);},ElementsNotNull:function(T,list,listName){for(var i=0;i<System.Array.getCount(list,T);i=i+1|0)if(System.Array.getItem(list,i,T)==null)throw new System.InvalidOperationException.$ctor1(System.String.format("{0}[{1}] is null",listName,Bridge.box(i,System.Int32)));}}}});Bridge.define("Kusto.Language.Utils.Interlocked",{statics:{methods:{CompareExchange:function(T,value,newValue,comparand){if(Bridge.referenceEquals(value.v,comparand)){var original=value.v;return value.v=newValue,original}return value.v},Exchange:function(T,value,newValue){var original=value.v;return value.v=newValue,original}}}});Bridge.define("Kusto.Language.Utils.ListExtensions",{statics:{methods:{ToReadOnly:function(T,list){if(list==null)return Kusto.Language.Utils.EmptyReadOnlyList$1(T).Instance;var readOnlyCollection=Bridge.as(list,System.Collections.ObjectModel.ReadOnlyCollection$1(T));return readOnlyCollection!=null?readOnlyCollection:System.Linq.Enumerable.from(list).toList(T).AsReadOnly()},BinarySearch:function(T,array,comparer){for(var left=0,right=System.Array.getCount(array,T)-1|0,mid,c;left<=right;){if(mid=Bridge.Int.div(left+right|0,2)|0,c=comparer(System.Array.getItem(array,mid,T)),c===0)return mid;c>0?right=mid-1|0:left=mid+1|0}return-1},Contains:function(T,list,item){for(var c,i=0,n=System.Array.getCount(list,T);i<n;i=i+1|0)if(c=System.Array.getItem(list,i,T),Bridge.referenceEquals(c,item))return!0;return!1},RemoveAll:function(T,list,selector){for(var i=list.Count-1|0;i>=0;i=i-1|0)selector(list.getItem(i))&&list.removeAt(i)},SetCount:function(T,list,count){list.Count>count&&list.RemoveRange(count,list.Count-count|0)},Join:function(items,separator,finalSeparator){var builder,i,n;for(finalSeparator===void 0&&(finalSeparator=null),builder=new System.Text.StringBuilder,i=0,n=System.Array.getCount(items,System.String);i<n;i=i+1|0)i>0&&builder.append(i<(n-1|0)?separator:finalSeparator),builder.append(System.Array.getItem(items,i,System.String));return builder.toString()},IsEquivalentTo:function(K,V,a,b){var $t,kvp,bValue;if(Bridge.referenceEquals(a,b))return!0;if(a==null||b==null||System.Array.getCount(a,System.Collections.Generic.KeyValuePair$2(K,V))!==System.Array.getCount(b,System.Collections.Generic.KeyValuePair$2(K,V)))return!1;$t=Bridge.getEnumerator(a,System.Collections.Generic.KeyValuePair$2(K,V));try{while($t.moveNext())if((kvp=$t.Current,bValue={},!b["System$Collections$Generic$IReadOnlyDictionary$2$"+Bridge.getTypeAlias(K)+"$"+Bridge.getTypeAlias(V)+"$tryGetValue"](kvp.key,bValue))||kvp.value!=null&&bValue.v!=null&&!Bridge.equalsT(kvp.value,bValue.v,V))return!1}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!0}}}});Bridge.define("Kusto.Language.Utils.ObjectPool$1",function(T){return{fields:{creator:null,resetter:null,items:null},ctors:{ctor:function(creator,resetter,size){size===void 0&&(size=10);this.$initialize();this.creator=creator;this.resetter=resetter;this.items=System.Array.init(size,function(){return Bridge.getDefaultValue(T)},T)}},methods:{AllocateFromPool:function(){for(var item,i=0;i<this.items.length;i=i+1|0)if(this.items[System.Array.index(i,this.items)]!=null&&(item=Kusto.Language.Utils.Interlocked.Exchange(T,Bridge.ref(this.items,i),null),item!=null))return item;return this.creator()},ReturnToPool:function(item){var i,result;for(this.resetter(item),i=0;i<this.items.length;i=i+1|0)if(this.items[System.Array.index(i,this.items)]==null&&(result=Kusto.Language.Utils.Interlocked.CompareExchange(T,Bridge.ref(this.items,i),item,null),result==null))break}}}});Bridge.define("Kusto.Language.Utils.Optional$1",function(T){return{$kind:"struct",statics:{methods:{op_Implicit:function(value){return new(Kusto.Language.Utils.Optional$1(T).$ctor1)(value)},getDefaultValue:function(){return new(Kusto.Language.Utils.Optional$1(T))}}},props:{Value:Bridge.getDefaultValue(T),HasValue:!1},ctors:{$ctor1:function(value){this.$initialize();this.Value=value;this.HasValue=!0},ctor:function(){this.$initialize()}},methods:{getHashCode:function(){return Bridge.addHash([3587563198,this.Value,this.HasValue])},equals:function(o){return Bridge.is(o,Kusto.Language.Utils.Optional$1(T))?Bridge.equals(this.Value,o.Value)&&Bridge.equals(this.HasValue,o.HasValue):!1},$clone:function(){return this}}}});Bridge.define("Kusto.Language.Utils.ReadOnlyListComparer$1",function(T){return{inherits:[System.Collections.Generic.IEqualityComparer$1(System.Collections.Generic.IReadOnlyList$1(T))],statics:{fields:{Default:null},ctors:{init:function(){this.Default=new(Kusto.Language.Utils.ReadOnlyListComparer$1(T))(System.Collections.Generic.EqualityComparer$1(T).def)}}},fields:{comparer:null},alias:["equals2",["System$Collections$Generic$IEqualityComparer$1$System$Collections$Generic$IReadOnlyList$1$"+Bridge.getTypeAlias(T)+"$equals2","System$Collections$Generic$IEqualityComparer$1$equals2"],"getHashCode2",["System$Collections$Generic$IEqualityComparer$1$System$Collections$Generic$IReadOnlyList$1$"+Bridge.getTypeAlias(T)+"$getHashCode2","System$Collections$Generic$IEqualityComparer$1$getHashCode2"]],ctors:{ctor:function(comparer){this.$initialize();this.comparer=comparer||function(){throw new System.ArgumentNullException.$ctor1("comparer");}()}},methods:{equals2:function(x,y){if(Bridge.referenceEquals(x,y))return!0;if(x==null||y==null||System.Array.getCount(x,T)!==System.Array.getCount(y,T))return!1;for(var i=0;i<System.Array.getCount(x,T);i=i+1|0)if(!this.comparer[Bridge.geti(this.comparer,"System$Collections$Generic$IEqualityComparer$1$"+Bridge.getTypeAlias(T)+"$equals2","System$Collections$Generic$IEqualityComparer$1$equals2")](System.Array.getItem(x,i,T),System.Array.getItem(y,i,T)))return!1;return!0},getHashCode2:function(list){var $t,hc,table;if(list==null)return 0;if(System.Array.getCount(list,T)===1)return Bridge.getHashCode(System.Array.getItem(list,0,T));hc=0;$t=Bridge.getEnumerator(list,T);try{while($t.moveNext())table=$t.Current,hc=hc+Bridge.getHashCode(table)|0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return hc}}}});Bridge.define("Kusto.Language.Utils.TextKeyedDictionary$1",function(TValue){return{inherits:[System.Collections.Generic.IEnumerable$1(TValue)],fields:{map:null},alias:["GetEnumerator",["System$Collections$Generic$IEnumerable$1$"+Bridge.getTypeAlias(TValue)+"$GetEnumerator","System$Collections$Generic$IEnumerable$1$GetEnumerator"]],ctors:{init:function(){this.map=new(System.Collections.Generic.Dictionary$2(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue),TValue))},ctor:function(){this.$initialize()}},methods:{TryGetValue:function(text,start,length,value){var key=new(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).$ctor2)(text,start,length);return this.map.tryGetValue(key,value)},GetOrAddValue:function(text,newValue){return this.GetOrAddValue$2(text,0,text.length,newValue)},GetOrAddValue$2:function(text,start,length,newValue){var value={},key=new(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).$ctor2)(text,start,length);return this.map.tryGetValue(key,value)||(value.v=newValue,this.map.add(key,value.v)),value.v},GetOrAddValue$1:function(text,evaluator){return this.GetOrAddValue$3(text,0,text.length,evaluator)},GetOrAddValue$3:function(text,start,length,evaluator){var value={},key=new(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).$ctor2)(text,start,length);return this.map.tryGetValue(key,value)||(value.v=evaluator(text,start,length),this.map.add(key,value.v)),value.v},ContainsKey:function(text){return this.ContainsKey$1(text,0,text.length)},ContainsKey$1:function(text,start,length){return start<0||length<1||(start+length|0)>text.length?!1:this.map.containsKey(new(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).$ctor2)(text,start,length))},GetEnumerator:function(){return Bridge.getEnumerator(this.map.getValues(),TValue)},System$Collections$IEnumerable$GetEnumerator:function(){return this.GetEnumerator()}}}});Bridge.define("Kusto.Language.Utils.TextKeyedDictionary$1.Key",function(TValue){return{inherits:function(){return[System.IEquatable$1(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue))]},$kind:"nested struct",statics:{fields:{FnvOffsetBias:0,FnvPrime:0},ctors:{init:function(){this.FnvOffsetBias=-2128831035;this.FnvPrime=16777619}},methods:{GetFNVHashCode:function(text,start,length){for(var hashCode=Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).FnvOffsetBias,end=start+length|0,i=start;i<end;i=i+1|0)hashCode=Bridge.Int.mul(hashCode^text.charCodeAt(i),Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).FnvPrime);return hashCode},getDefaultValue:function(){return new(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue))}}},fields:{text:null,start:0,length:0,hash:0},alias:["equalsT","System$IEquatable$1$Kusto$Language$Utils$TextKeyedDictionary$1$Key$"+Bridge.getTypeAlias(TValue)+"$equalsT"],ctors:{$ctor1:function(text){Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).$ctor2.call(this,text,0,text.length)},$ctor2:function(text,start,length){this.$initialize();this.text=text;this.start=start;this.length=length;this.hash=Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue).GetFNVHashCode(text,start,length)},ctor:function(){this.$initialize()}},methods:{equalsT:function(other){if(this.hash!==other.hash||this.length!==other.length)return!1;for(var i=0;i<this.length;i=i+1|0)if(this.text.charCodeAt(this.start+i|0)!==other.text.charCodeAt(other.start+i|0))return!1;return!0},getHashCode:function(){return this.hash},$clone:function(to){var s=to||new(Kusto.Language.Utils.TextKeyedDictionary$1.Key(TValue));return s.text=this.text,s.start=this.start,s.length=this.length,s.hash=this.hash,s}}}});Bridge.define("Kusto.Language.Utils.TextKeyedDictionaryExtensions",{statics:{methods:{ToTextKeyedDictionary:function(TSource,TValue,source,keySelector,valueSelector){var $t,tkd=new(Kusto.Language.Utils.TextKeyedDictionary$1(TValue)),item;$t=Bridge.getEnumerator(source,TSource);try{while($t.moveNext())item=$t.Current,tkd.GetOrAddValue(keySelector(item),valueSelector(item))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return tkd}}}});Bridge.define("Kusto.Language.Utils.UniqueNameTable",{fields:{nameMap:null},ctors:{init:function(){this.nameMap=new(System.Collections.Generic.Dictionary$2(System.String,System.Int32))},ctor:function(){this.$initialize()}},methods:{AddNames:function(names){var $t,name;$t=Bridge.getEnumerator(names,System.String);try{while($t.moveNext())name=$t.Current,this.AddName(name)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},AddName:function(name){System.String.isNullOrEmpty(name)||this.nameMap.containsKey(name)||this.nameMap.add(name,0)},GetOrAddName:function(name,baseName){var $t,lastUsedSuffix,suffix,newName;if(baseName===void 0&&(baseName=null),lastUsedSuffix={},this.nameMap.tryGetValue(name,lastUsedSuffix)){for(suffix=lastUsedSuffix.v+1|0;suffix<2147483647;suffix=suffix+1|0)if(newName=(($t=baseName,$t!=null?$t:name)||"")+suffix,!this.nameMap.containsKey(newName))return this.nameMap.set(name,suffix),this.nameMap.add(newName,0),newName}else this.nameMap.add(name,0);return name},Clear:function(){this.nameMap.clear()}}});Bridge.define("Kusto.Language.Analyzer.RuleEngine",{inherits:[Kusto.Language.Analyzer.IRuleEngine],statics:{methods:{Create:function(rules){var engine=new Kusto.Language.Analyzer.RuleEngine;return engine.Rules=rules,engine}}},props:{Rules:null},alias:["Analyze","Kusto$Language$Analyzer$IRuleEngine$Analyze"],methods:{Analyze:function(code){var $t,outcomes=new(System.Collections.Generic.List$1(Kusto.Language.Analyzer.RuleOutcome).ctor),rule;$t=Bridge.getEnumerator(this.Rules,Kusto.Language.Analyzer.IRule);try{while($t.moveNext())rule=$t.Current,outcomes.AddRange(rule.Kusto$Language$Analyzer$IRule$Analyze(code))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return outcomes}}});Bridge.define("Kusto.Language.Analyzer.Rules.AvoidUsingContainsRule",{inherits:[Kusto.Language.Analyzer.IRule],props:{Name:{get:function(){return"Avoid using 'contains'"}},Description:{get:function(){return"Detects expressions that use 'contains' operator"}}},alias:["Name","Kusto$Language$Analyzer$IRule$Name","Description","Kusto$Language$Analyzer$IRule$Description","Analyze","Kusto$Language$Analyzer$IRule$Analyze"],methods:{Analyze:function(code){var $t,outcomes=new(System.Collections.Generic.List$1(Kusto.Language.Analyzer.RuleOutcome).ctor),node,ruleOutcome;$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.BinaryExpression),Kusto.Language.Syntax.BinaryExpression);try{while($t.moveNext())node=$t.Current,(node.Kind===Kusto.Language.Syntax.SyntaxKind.ContainsExpression||node.Kind===Kusto.Language.Syntax.SyntaxKind.NotContainsExpression||node.Kind===Kusto.Language.Syntax.SyntaxKind.ContainsCsExpression||node.Kind===Kusto.Language.Syntax.SyntaxKind.NotContainsCsExpression)&&(ruleOutcome=new Kusto.Language.Analyzer.RuleOutcome(this.Name,10,(System.String.format("Avoid using 'contains' operator as it has high compute price.",null)||"")+"\n"+(System.String.format("Use 'has' operator in cases when full term match is desired.",null)||""),node.toString(),Kusto.Language.Analyzer.Severity.Suggestion,Kusto.Language.Analyzer.Category.Performance,node.TextStart),outcomes.add(ruleOutcome))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return outcomes}}});Bridge.define("Kusto.Language.Analyzer.Rules.AvoidUsingShortStringComparisonRule",{inherits:[Kusto.Language.Analyzer.IRule],props:{Name:{get:function(){return"Avoid short strings comparison"}},Description:{get:function(){return"Avoid using short strings (less than 4 characters) for string comparison operations"}}},alias:["Name","Kusto$Language$Analyzer$IRule$Name","Description","Kusto$Language$Analyzer$IRule$Description","Analyze","Kusto$Language$Analyzer$IRule$Analyze"],methods:{Analyze:function(code){var $t,$t1,$t2,outcomes=new(System.Collections.Generic.List$1(Kusto.Language.Analyzer.RuleOutcome).ctor),node,constValue,ruleOutcome;$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.BinaryExpression),Kusto.Language.Syntax.BinaryExpression);try{while($t.moveNext())if((node=$t.Current,node.Right.IsConstant||node.Left.IsConstant)&&(node.Kind===Kusto.Language.Syntax.SyntaxKind.EqualExpression||node.Kind===Kusto.Language.Syntax.SyntaxKind.HasExpression||node.Kind===Kusto.Language.Syntax.SyntaxKind.NotEqualExpression||node.Kind===Kusto.Language.Syntax.SyntaxKind.NotHasExpression||node.Kind===Kusto.Language.Syntax.SyntaxKind.StartsWithExpression||node.Kind===Kusto.Language.Syntax.SyntaxKind.NotStartsWithExpression)){if(constValue=null,node.Right.IsConstant&&Bridge.referenceEquals(node.Right.ResultType.Name,"string")?constValue=($t1=node.Right.ConstantValue)!=null?Bridge.toString($t1):null:node.Left.IsConstant&&Bridge.referenceEquals(node.Left.ResultType.Name,"string")&&(constValue=($t2=node.Left.ConstantValue)!=null?Bridge.toString($t2):null),System.String.isNullOrEmpty(constValue))continue;constValue.length<4&&(ruleOutcome=new Kusto.Language.Analyzer.RuleOutcome(this.Name,10,this.Description,node.toString(),Kusto.Language.Analyzer.Severity.Suggestion,Kusto.Language.Analyzer.Category.Performance,node.TextStart),outcomes.add(ruleOutcome))}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return outcomes}}});Bridge.define("Kusto.Language.Analyzer.Rules.NullAggregationDetector",{inherits:[Kusto.Language.Analyzer.IRule],props:{Name:{get:function(){return"Null Aggregation"}},Description:{get:function(){return"Detects expressions in aggregation context that may result in null"}}},alias:["Name","Kusto$Language$Analyzer$IRule$Name","Description","Kusto$Language$Analyzer$IRule$Description","Analyze","Kusto$Language$Analyzer$IRule$Analyze"],methods:{Analyze:function(code){var $t,outcomes=new(System.Collections.Generic.List$1(Kusto.Language.Analyzer.RuleOutcome).ctor);$t=Bridge.getEnumerator(code.Syntax.GetDescendants(Kusto.Language.Syntax.SummarizeOperator),Kusto.Language.Syntax.SummarizeOperator);try{while($t.moveNext()){var node=$t.Current,invocations=this.GetProblematicInvocations(node),results=System.Linq.Enumerable.from(invocations).select(Bridge.fn.bind(this,function(inv){return this.GetOutcomeRule(inv)}));outcomes.AddRange(results)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return outcomes},GetOutcomeRule:function(fc){var binaryExpression=Bridge.as(fc.ArgumentList.Expressions.getItem$1(0).Element$1,Kusto.Language.Syntax.BinaryExpression),left=binaryExpression.Left.toString(),right=binaryExpression.Right.toString(),op=binaryExpression.Operator.toString();return new Kusto.Language.Analyzer.RuleOutcome(this.Name,5,(System.String.format("If any of the columns referenced in '{0}' contains nulls, significant values might not be included due to scalar arithmetic null propagation rules.",[fc.toString()])||"")+"\n"+(System.String.format("Consider rewriting it as 'sum({0}) {1} sum({2})'.",left,op,right)||""),fc.toString(),Kusto.Language.Analyzer.Severity.Warning,Kusto.Language.Analyzer.Category.Correctness,fc.TextStart)},GetProblematicInvocations:function(node){var op,sumCalls,exprs;return((op=Bridge.as(node,Kusto.Language.Syntax.SummarizeOperator))!=null)?(sumCalls=op.Aggregates.GetDescendants(Kusto.Language.Syntax.FunctionCallExpression,function(fc){return System.String.equals(fc.Name.SimpleName,"sum",4)}),exprs=System.Linq.Enumerable.from(sumCalls).where(function(fc){var b;(b=Bridge.as(fc.ArgumentList.Expressions.getItem$1(0).Element$1,Kusto.Language.Syntax.BinaryExpression))!=null&&(b.Kind===Kusto.Language.Syntax.SyntaxKind.AddExpression||b.Kind===Kusto.Language.Syntax.SyntaxKind.SubtractExpression)}).toList(Kusto.Language.Syntax.FunctionCallExpression),exprs):System.Linq.Enumerable.empty()}}});Bridge.define("Kusto.Language.Syntax.DefaultSyntaxVisitor",{inherits:[Kusto.Language.Syntax.SyntaxVisitor],methods:{VisitDirectiveBlock:function(node){this.DefaultVisit(node)},VisitSkippedTokens:function(node){this.DefaultVisit(node)},VisitQueryBlock:function(node){this.DefaultVisit(node)},VisitTypeOfLiteralExpression:function(node){this.DefaultVisit(node)},VisitBadQueryOperator:function(node){this.DefaultVisit(node)},VisitCompoundStringLiteralExpression:function(node){this.DefaultVisit(node)},VisitTokenName:function(node){this.DefaultVisit(node)},VisitBrackettedName:function(node){this.DefaultVisit(node)},VisitBracedName:function(node){this.DefaultVisit(node)},VisitWildcardedName:function(node){this.DefaultVisit(node)},VisitNameDeclaration:function(node){this.DefaultVisit(node)},VisitNameReference:function(node){this.DefaultVisit(node)},VisitLiteralExpression:function(node){this.DefaultVisit(node)},VisitStarExpression:function(node){this.DefaultVisit(node)},VisitAtExpression:function(node){this.DefaultVisit(node)},VisitJsonPair:function(node){this.DefaultVisit(node)},VisitJsonObjectExpression:function(node){this.DefaultVisit(node)},VisitJsonArrayExpression:function(node){this.DefaultVisit(node)},VisitDynamicExpression:function(node){this.DefaultVisit(node)},VisitParenthesizedExpression:function(node){this.DefaultVisit(node)},VisitExpressionList:function(node){this.DefaultVisit(node)},VisitExpressionCouple:function(node){this.DefaultVisit(node)},VisitPrefixUnaryExpression:function(node){this.DefaultVisit(node)},VisitBinaryExpression:function(node){this.DefaultVisit(node)},VisitInExpression:function(node){this.DefaultVisit(node)},VisitHasAnyExpression:function(node){this.DefaultVisit(node)},VisitBetweenExpression:function(node){this.DefaultVisit(node)},VisitFunctionCallExpression:function(node){this.DefaultVisit(node)},VisitToScalarExpression:function(node){this.DefaultVisit(node)},VisitToTableExpression:function(node){this.DefaultVisit(node)},VisitSimpleNamedExpression:function(node){this.DefaultVisit(node)},VisitRenameList:function(node){this.DefaultVisit(node)},VisitCompoundNamedExpression:function(node){this.DefaultVisit(node)},VisitBrackettedExpression:function(node){this.DefaultVisit(node)},VisitConditionedExpression:function(node){this.DefaultVisit(node)},VisitPathExpression:function(node){this.DefaultVisit(node)},VisitElementExpression:function(node){this.DefaultVisit(node)},VisitPipeExpression:function(node){this.DefaultVisit(node)},VisitRangeOperator:function(node){this.DefaultVisit(node)},VisitNamedParameter:function(node){this.DefaultVisit(node)},VisitConsumeOperator:function(node){this.DefaultVisit(node)},VisitCountOperator:function(node){this.DefaultVisit(node)},VisitCountAsIdentifierClause:function(node){this.DefaultVisit(node)},VisitExecuteAndCacheOperator:function(node){this.DefaultVisit(node)},VisitExtendOperator:function(node){this.DefaultVisit(node)},VisitFacetOperator:function(node){this.DefaultVisit(node)},VisitFacetWithOperatorClause:function(node){this.DefaultVisit(node)},VisitFacetWithExpressionClause:function(node){this.DefaultVisit(node)},VisitFilterOperator:function(node){this.DefaultVisit(node)},VisitGetSchemaOperator:function(node){this.DefaultVisit(node)},VisitFindOperator:function(node){this.DefaultVisit(node)},VisitDataScopeClause:function(node){this.DefaultVisit(node)},VisitTypedColumnReference:function(node){this.DefaultVisit(node)},VisitFindInClause:function(node){this.DefaultVisit(node)},VisitFindProjectClause:function(node){this.DefaultVisit(node)},VisitPackExpression:function(node){this.DefaultVisit(node)},VisitNameAndTypeDeclaration:function(node){this.DefaultVisit(node)},VisitPrimitiveTypeExpression:function(node){this.DefaultVisit(node)},VisitSearchOperator:function(node){this.DefaultVisit(node)},VisitForkOperator:function(node){this.DefaultVisit(node)},VisitNameEqualsClause:function(node){this.DefaultVisit(node)},VisitForkExpression:function(node){this.DefaultVisit(node)},VisitMakeSeriesOperator:function(node){this.DefaultVisit(node)},VisitMakeSeriesExpression:function(node){this.DefaultVisit(node)},VisitDefaultExpressionClause:function(node){this.DefaultVisit(node)},VisitMakeSeriesOnClause:function(node){this.DefaultVisit(node)},VisitMakeSeriesInRangeClause:function(node){this.DefaultVisit(node)},VisitMakeSeriesFromToStepClause:function(node){this.DefaultVisit(node)},VisitMakeSeriesByClause:function(node){this.DefaultVisit(node)},VisitMvExpandOperator:function(node){this.DefaultVisit(node)},VisitMvExpandExpression:function(node){this.DefaultVisit(node)},VisitMvExpandRowLimitClause:function(node){this.DefaultVisit(node)},VisitMvApplyOperator:function(node){this.DefaultVisit(node)},VisitMvApplyExpression:function(node){this.DefaultVisit(node)},VisitMvApplyRowLimitClause:function(node){this.DefaultVisit(node)},VisitMvApplyContextIdClause:function(node){this.DefaultVisit(node)},VisitMvApplySubqueryExpression:function(node){this.DefaultVisit(node)},VisitToTypeOfClause:function(node){this.DefaultVisit(node)},VisitEvaluateOperator:function(node){this.DefaultVisit(node)},VisitParseOperator:function(node){this.DefaultVisit(node)},VisitPartitionOperator:function(node){this.DefaultVisit(node)},VisitPartitionExpression:function(node){this.DefaultVisit(node)},VisitProjectOperator:function(node){this.DefaultVisit(node)},VisitProjectAwayOperator:function(node){this.DefaultVisit(node)},VisitProjectRenameOperator:function(node){this.DefaultVisit(node)},VisitProjectReorderOperator:function(node){this.DefaultVisit(node)},VisitSampleOperator:function(node){this.DefaultVisit(node)},VisitSampleDistinctOperator:function(node){this.DefaultVisit(node)},VisitReduceByOperator:function(node){this.DefaultVisit(node)},VisitReduceByWithClause:function(node){this.DefaultVisit(node)},VisitSummarizeOperator:function(node){this.DefaultVisit(node)},VisitSummarizeByClause:function(node){this.DefaultVisit(node)},VisitDistinctOperator:function(node){this.DefaultVisit(node)},VisitTakeOperator:function(node){this.DefaultVisit(node)},VisitSortOperator:function(node){this.DefaultVisit(node)},VisitOrderedExpression:function(node){this.DefaultVisit(node)},VisitOrderingClause:function(node){this.DefaultVisit(node)},VisitOrderingNullsClause:function(node){this.DefaultVisit(node)},VisitTopHittersOperator:function(node){this.DefaultVisit(node)},VisitTopHittersByClause:function(node){this.DefaultVisit(node)},VisitTopOperator:function(node){this.DefaultVisit(node)},VisitTopNestedOperator:function(node){this.DefaultVisit(node)},VisitTopNestedClause:function(node){this.DefaultVisit(node)},VisitTopNestedWithOthersClause:function(node){this.DefaultVisit(node)},VisitUnionOperator:function(node){this.DefaultVisit(node)},VisitAsOperator:function(node){this.DefaultVisit(node)},VisitSerializeOperator:function(node){this.DefaultVisit(node)},VisitInvokeOperator:function(node){this.DefaultVisit(node)},VisitRenderOperator:function(node){this.DefaultVisit(node)},VisitRenderNameList:function(node){this.DefaultVisit(node)},VisitRenderWithClause:function(node){this.DefaultVisit(node)},VisitPrintOperator:function(node){this.DefaultVisit(node)},VisitAliasStatement:function(node){this.DefaultVisit(node)},VisitLetStatement:function(node){this.DefaultVisit(node)},VisitFunctionDeclaration:function(node){this.DefaultVisit(node)},VisitFunctionParameters:function(node){this.DefaultVisit(node)},VisitFunctionParameter:function(node){this.DefaultVisit(node)},VisitDefaultValueDeclaration:function(node){this.DefaultVisit(node)},VisitFunctionBody:function(node){this.DefaultVisit(node)},VisitSchemaTypeExpression:function(node){this.DefaultVisit(node)},VisitExpressionStatement:function(node){this.DefaultVisit(node)},VisitMaterializeExpression:function(node){this.DefaultVisit(node)},VisitSetOptionStatement:function(node){this.DefaultVisit(node)},VisitOptionValueClause:function(node){this.DefaultVisit(node)},VisitQueryParametersStatement:function(node){this.DefaultVisit(node)},VisitRestrictStatement:function(node){this.DefaultVisit(node)},VisitPatternStatement:function(node){this.DefaultVisit(node)},VisitPatternDeclaration:function(node){this.DefaultVisit(node)},VisitPatternPathParameter:function(node){this.DefaultVisit(node)},VisitPatternMatch:function(node){this.DefaultVisit(node)},VisitPatternPathValue:function(node){this.DefaultVisit(node)},VisitDataScopeExpression:function(node){this.DefaultVisit(node)},VisitDataTableExpression:function(node){this.DefaultVisit(node)},VisitExternalDataExpression:function(node){this.DefaultVisit(node)},VisitExternalDataWithClause:function(node){this.DefaultVisit(node)},VisitJoinOperator:function(node){this.DefaultVisit(node)},VisitLookupOperator:function(node){this.DefaultVisit(node)},VisitJoinOnClause:function(node){this.DefaultVisit(node)},VisitJoinWhereClause:function(node){this.DefaultVisit(node)},VisitCommandWithValueClause:function(node){this.DefaultVisit(node)},VisitCommandWithPropertyListClause:function(node){this.DefaultVisit(node)},VisitUnknownCommand:function(node){this.DefaultVisit(node)},VisitCustomCommand:function(node){this.DefaultVisit(node)},VisitBadCommand:function(node){this.DefaultVisit(node)},VisitCommandBlock:function(node){this.DefaultVisit(node)},VisitCustom:function(node){this.DefaultVisit(node)},VisitList:function(list){this.DefaultVisit(list)},VisitSeparatedElement:function(separatedElement){this.DefaultVisit(separatedElement)}}});Bridge.define("Kusto.Language.Syntax.SemanticInfo",{statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Syntax.SemanticInfo.$ctor3(null)}}},props:{ReferencedSymbol:null,ResultType:null,IsConstant:!1,Expander:null,Diagnostics:null},ctors:{$ctor1:function(referenced,result,diagnostics,isConstant,expander){diagnostics===void 0&&(diagnostics=null);isConstant===void 0&&(isConstant=!1);expander===void 0&&(expander=null);this.$initialize();this.ReferencedSymbol=referenced;this.ResultType=result;this.Diagnostics=diagnostics!=null?Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Diagnostic,diagnostics):Kusto.Language.Diagnostic.NoDiagnostics;this.IsConstant=isConstant;this.Expander=expander},$ctor3:function(result,diagnostics,isConstant,expander){diagnostics===void 0&&(diagnostics=null);isConstant===void 0&&(isConstant=!1);expander===void 0&&(expander=null);Kusto.Language.Syntax.SemanticInfo.$ctor1.call(this,null,result,diagnostics,isConstant,expander)},ctor:function(referenced,result,diagnostic){Kusto.Language.Syntax.SemanticInfo.$ctor1.call(this,referenced,result,diagnostic!=null?function(_o1){return _o1.add(diagnostic),_o1}(new(System.Collections.Generic.List$1(Kusto.Language.Diagnostic).ctor)).AsReadOnly():Kusto.Language.Diagnostic.NoDiagnostics)},$ctor2:function(result,diagnostic){Kusto.Language.Syntax.SemanticInfo.ctor.call(this,null,result,diagnostic)},$ctor4:function(diagnostics){Kusto.Language.Syntax.SemanticInfo.$ctor1.call(this,null,null,diagnostics)}},methods:{WithReferencedSymbol:function(symbol){return new Kusto.Language.Syntax.SemanticInfo.$ctor1(symbol,this.ResultType,this.Diagnostics,this.IsConstant,this.Expander)},WithResultType:function(type){return new Kusto.Language.Syntax.SemanticInfo.$ctor1(this.ReferencedSymbol,type,this.Diagnostics,this.IsConstant,this.Expander)},WithDiagnostics:function(diagnostics){return new Kusto.Language.Syntax.SemanticInfo.$ctor1(this.ReferencedSymbol,this.ResultType,diagnostics,this.IsConstant,this.Expander)},WithIsConstant:function(isConstant){return new Kusto.Language.Syntax.SemanticInfo.$ctor1(this.ReferencedSymbol,this.ResultType,this.Diagnostics,isConstant,this.Expander)},WithExpander:function(expander){return new Kusto.Language.Syntax.SemanticInfo.$ctor1(this.ReferencedSymbol,this.ResultType,this.Diagnostics,this.IsConstant,expander)}}});Bridge.define("Kusto.Language.Binding.CallSiteInfo.Comparer",{inherits:[System.Collections.Generic.IEqualityComparer$1(Kusto.Language.Binding.CallSiteInfo)],$kind:"nested class",statics:{fields:{Instance:null},ctors:{init:function(){this.Instance=new Kusto.Language.Binding.CallSiteInfo.Comparer}}},alias:["equals2",["System$Collections$Generic$IEqualityComparer$1$Kusto$Language$Binding$CallSiteInfo$equals2","System$Collections$Generic$IEqualityComparer$1$equals2"],"getHashCode2",["System$Collections$Generic$IEqualityComparer$1$Kusto$Language$Binding$CallSiteInfo$getHashCode2","System$Collections$Generic$IEqualityComparer$1$getHashCode2"]],methods:{equals2:function(x,y){var i,lx,ly;if(!Bridge.referenceEquals(x.Signature,y.Signature)||System.Array.getCount(x.Locals,Kusto.Language.Symbols.VariableSymbol)!==System.Array.getCount(y.Locals,Kusto.Language.Symbols.VariableSymbol))return!1;for(i=0;i<System.Array.getCount(x.Locals,Kusto.Language.Symbols.VariableSymbol);i=i+1|0)if(lx=System.Array.getItem(x.Locals,i,Kusto.Language.Symbols.VariableSymbol),ly=System.Array.getItem(y.Locals,i,Kusto.Language.Symbols.VariableSymbol),!Bridge.referenceEquals(lx.Name,ly.Name)||!Bridge.referenceEquals(lx.Type,ly.Type)||lx.IsConstant!==ly.IsConstant||!Bridge.equals(lx.ConstantValue,ly.ConstantValue))return!1;return!0},getHashCode2:function(obj){return Bridge.getHashCode(obj.Signature)}}});Bridge.define("Kusto.Language.Editor.SyntaxReference",{inherits:[Kusto.Language.Editor.TextRange],ctors:{ctor:function(start,length){this.$initialize();Kusto.Language.Editor.TextRange.ctor.call(this,start,length)}}});Bridge.define("Kusto.Language.Editor.CodeServiceFactory.AggregateCodeServiceFactory",{inherits:[Kusto.Language.Editor.CodeServiceFactory],$kind:"nested class",fields:{_factories:null},ctors:{ctor:function(factories){this.$initialize();Kusto.Language.Editor.CodeServiceFactory.ctor.call(this);this._factories=factories}},methods:{TryGetCodeService:function(text,service){var $t,factory;$t=Bridge.getEnumerator(this._factories,Kusto.Language.Editor.CodeServiceFactory);try{while($t.moveNext())if(factory=$t.Current,factory.TryGetCodeService(text,service))return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return service.v=null,!1},GetFactory:function(TFactory){return Bridge.cast(System.Linq.Enumerable.from(this._factories).firstOrDefault(function(f){return Bridge.is(f,TFactory)},null),TFactory)},WithFactory:function(factory){if(System.Linq.Enumerable.from(this._factories).contains(factory))return this;var list=new(System.Collections.Generic.List$1(Kusto.Language.Editor.CodeServiceFactory).$ctor1)(this._factories),index=list.FindIndex$2(function(f){return Bridge.referenceEquals(Bridge.getType(f),Bridge.getType(factory))});return index>=0?list.setItem(index,factory):list.add(factory),new Kusto.Language.Editor.CodeServiceFactory.AggregateCodeServiceFactory(Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Editor.CodeServiceFactory,list))}}});Bridge.define("Kusto.Language.Editor.CommonCodeService",{inherits:[Kusto.Language.Editor.CodeService],statics:{methods:{Add:function(classifications1,classifications2){var len,len1,len2;if(System.Array.getCount(classifications2,Kusto.Language.Editor.ClassifiedRange)===0)return classifications1;if(System.Array.getCount(classifications1,Kusto.Language.Editor.ClassifiedRange)===0)return classifications2;for(var list=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ClassifiedRange).$ctor2)(System.Array.getCount(classifications1,Kusto.Language.Editor.ClassifiedRange)+System.Array.getCount(classifications2,Kusto.Language.Editor.ClassifiedRange)|0),index1=0,index2=0,class1=null,class2=null;;)if(class1==null&&index1<System.Array.getCount(classifications1,Kusto.Language.Editor.ClassifiedRange)&&(class1=System.Array.getItem(classifications1,index1,Kusto.Language.Editor.ClassifiedRange)),class2==null&&index2<System.Array.getCount(classifications2,Kusto.Language.Editor.ClassifiedRange)&&(class2=System.Array.getItem(classifications2,index2,Kusto.Language.Editor.ClassifiedRange)),class1==null&&class2==null)break;else class1!=null&&class2==null?(list.add(class1),class1=null,index1=index1+1|0):class2!=null&&class1==null?(list.add(class2),class2=null,index2=index2+1|0):class1.End<class2.Start?(list.add(class1),class1=null,index1=index1+1|0):class2.End<class1.Start?(list.add(class2),class2=null,index2=index2+1|0):class1.Start>=class2.Start&&class1.End<=class2.End?(class1=null,index1=index1+1|0):class1.Start<class2.Start?(len=class2.Start-class1.Start|0,list.add(new Kusto.Language.Editor.ClassifiedRange(class1.Kind,class1.Start,len)),class1.Length>len?class1=new Kusto.Language.Editor.ClassifiedRange(class1.Kind,class1.Start+len|0,class1.Length-len|0):(class1=null,index1=index1+1|0)):class2.Start<class1.Start?(len1=class1.Start-class2.Start|0,list.add(new Kusto.Language.Editor.ClassifiedRange(class2.Kind,class2.Start,len1)),class2.Length>len1?class2=new Kusto.Language.Editor.ClassifiedRange(class2.Kind,class2.Start+len1|0,class2.Length-len1|0):(class2=null,index2=index2+1|0)):class1.End<=class2.End?(class1=null,index1=index1+1|0):(len2=class2.Length,list.add(class2),class2=null,index2=index2+1|0,class1=new Kusto.Language.Editor.ClassifiedRange(class1.Kind,class1.Start+len2|0,class1.Length-len2|0));return list}}},fields:{_text:null,_clientParameters:null},props:{Text:{get:function(){return this._text}}},ctors:{ctor:function(text){if(this.$initialize(),Kusto.Language.Editor.CodeService.ctor.call(this),text==null)throw new System.ArgumentNullException.$ctor1("text");this._text=text}},methods:{IsFeatureSupported:function(feature,position){return position===void 0&&(position=-1),!0},GetDiagnostics:function(){return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Diagnostic).Instance},GetClassifications:function(start,length){var classifications=System.Array.init([new Kusto.Language.Editor.ClassifiedRange(Kusto.Language.Editor.ClassificationKind.PlainText,start,length)],Kusto.Language.Editor.ClassifiedRange),clientParameterClassifications=this.GetClientParametersClassifications(),merged=Kusto.Language.Editor.CommonCodeService.Add(classifications,clientParameterClassifications);return new Kusto.Language.Editor.ClassificationInfo(merged)},GetClientParametersClassifications:function(){var $t,cps=this.GetClientParameters(),list,cp;if(System.Array.getCount(cps,Kusto.Language.Editor.ClientParameter)===0)return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.ClassifiedRange).Instance;list=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ClassifiedRange).ctor);$t=Bridge.getEnumerator(cps,Kusto.Language.Editor.ClientParameter);try{while($t.moveNext())cp=$t.Current,list.add(new Kusto.Language.Editor.ClassifiedRange(Kusto.Language.Editor.ClassificationKind.ClientParameter,cp.Start,cp.Length))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return list},GetOutlines:function(){var firstToken=Kusto.Language.Parsing.LexicalGrammar.GetFirstToken(this.Text);if(firstToken!=null&&firstToken.Text.length>0){var start=0,end=start+Kusto.Language.Parsing.TextFacts.TrimEnd(this.Text)|0,nextLineBreakStart=Kusto.Language.Parsing.TextFacts.GetNextLineBreakStart(this.Text,firstToken.TextStart),collapsedTextEnd=nextLineBreakStart>=0?nextLineBreakStart:this.Text.length,collapsedTextLength=Kusto.Language.Parsing.TextFacts.TrimEnd$1(this.Text,firstToken.TextStart,collapsedTextEnd-firstToken.TextStart|0),collapsedText=this.Text.substr(firstToken.TextStart,collapsedTextLength);return new Kusto.Language.Editor.OutlineInfo(System.Array.init([new Kusto.Language.Editor.OutlineRange(start,end-start|0,collapsedText)],Kusto.Language.Editor.OutlineRange))}return Kusto.Language.Editor.OutlineInfo.Empty},ShouldAutoComplete:function(){return!1},GetCompletionItems:function(){return Kusto.Language.Editor.CompletionInfo.Empty},GetQuickInfo:function(){return Kusto.Language.Editor.QuickInfo.Empty},GetElement:function(){return new Kusto.Language.Editor.TextRange(0,0)},GetRelatedElements:function(){return Kusto.Language.Editor.RelatedInfo.Empty},GetClusterReferences:function(){return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.ClusterReference).Instance},GetDatabaseReferences:function(){return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.DatabaseReference).Instance},GetMinimalText:function(){var list=new(Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken).ctor)(System.Linq.Enumerable.from(Kusto.Language.Parsing.LexicalGrammar.GetTokens(this.Text)).select(function(t){return Kusto.Language.Syntax.SyntaxToken.From(t)}).ToArray(Kusto.Language.Syntax.SyntaxToken));return list.ToString(Kusto.Language.Syntax.IncludeTrivia.Minimal)},GetFormattedText:function(options,cursorPosition){return new Kusto.Language.Editor.FormattedText(this.Text,cursorPosition)},GetClientParameters:function(){return this._clientParameters==null&&(this._clientParameters=this.GetClientParameters$1(this.Text,0)),this._clientParameters},GetClientParameters$1:function(blockText,offsetInScript){for(var src=null,list=null,start=0,openBrace,len;start<blockText.length;)if(openBrace=System.String.indexOf(blockText,"{",start),openBrace>=0)src==null&&(src=new Kusto.Language.Parsing.TextSource.ctor(blockText)),len=Kusto.Language.Parsing.LexicalGrammar.ClientParameter.Scan(src,openBrace),len>0?(list==null&&(list=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ClientParameter).ctor)),list.add(new Kusto.Language.Editor.ClientParameter(blockText.substr(openBrace+1|0,len-2|0),openBrace+offsetInScript|0,len)),start=openBrace+len|0):start=openBrace+1|0;else break;return list!=null?list.AsReadOnly():Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.ClientParameter).Instance}}});Bridge.define("Kusto.Language.Editor.KustoCodeServiceFactory",{inherits:[Kusto.Language.Editor.CodeServiceFactory],statics:{methods:{IsKusto:function(text){return!Kusto.Language.Editor.KustoCodeServiceFactory.IsSql(text)},IsSql:function(text){var firstToken=Kusto.Language.Editor.KustoCodeServiceFactory.GetFirstKustoToken(text);return System.String.compare(firstToken,"select",!0)===0},GetFirstKustoToken:function(text){var $t,firstToken=Kusto.Language.Parsing.LexicalGrammar.GetFirstToken(text);return $t=firstToken!=null?firstToken.Text:null,$t!=null?$t:""}}},props:{Globals:null},ctors:{ctor:function(globals){if(this.$initialize(),Kusto.Language.Editor.CodeServiceFactory.ctor.call(this),globals==null)throw new System.ArgumentNullException.$ctor1("globals");this.Globals=globals}},methods:{WithGlobals:function(globals){return Bridge.referenceEquals(this.Globals,globals)?this:new Kusto.Language.Editor.KustoCodeServiceFactory(globals)},TryGetCodeService:function(text,service){return Kusto.Language.Editor.KustoCodeServiceFactory.IsKusto(text)?(service.v=new Kusto.Language.Editor.KustoCodeService.$ctor1(text,this.Globals),!0):(service.v=null,!1)}}});Bridge.define("Kusto.Language.Editor.OffsetCodeService",{inherits:[Kusto.Language.Editor.CodeService],fields:{_service:null,_offset:0},props:{Kind:{get:function(){return this._service.Kind}},Text:{get:function(){return this._service.Text}}},ctors:{ctor:function(service,offset){this.$initialize();Kusto.Language.Editor.CodeService.ctor.call(this);this._service=service;this._offset=offset}},methods:{WithOffset:function(offset){return new Kusto.Language.Editor.OffsetCodeService(this._service,offset)},GetClassifications:function(start,length,waitForAnalysis,cancellationToken){var result=this._service.GetClassifications(start-this._offset|0,length,waitForAnalysis,cancellationToken);return System.Array.getCount(result.Classifications,Kusto.Language.Editor.ClassifiedRange)>0&&this._offset>0?new Kusto.Language.Editor.ClassificationInfo(System.Linq.Enumerable.from(result.Classifications).select(Bridge.fn.bind(this,function(cr){return new Kusto.Language.Editor.ClassifiedRange(cr.Kind,cr.Start+this._offset|0,cr.Length)}))):result},GetClientParameters:function(){var result=this._service.GetClientParameters();return System.Array.getCount(result,Kusto.Language.Editor.ClientParameter)>0&&this._offset>0?Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Editor.ClientParameter,System.Linq.Enumerable.from(result).select(Bridge.fn.bind(this,function(cp){return new Kusto.Language.Editor.ClientParameter(cp.Name,cp.Start+this._offset|0,cp.Length)}))):result},GetClusterReferences:function(cancellationToken){var result=this._service.GetClusterReferences(cancellationToken);return System.Array.getCount(result,Kusto.Language.Editor.ClusterReference)>0&&this._offset>0?Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Editor.ClusterReference,System.Linq.Enumerable.from(result).select(Bridge.fn.bind(this,function(cr){return new Kusto.Language.Editor.ClusterReference(cr.Cluster,cr.Start+this._offset|0,cr.Length)}))):result},GetCompletionItems:function(position,options,cancellationToken){var result=this._service.GetCompletionItems(position-this._offset|0,options,cancellationToken);return this._offset>0?new Kusto.Language.Editor.CompletionInfo(result.Items,result.EditStart+this._offset|0,result.EditLength):result},GetDatabaseReferences:function(cancellationToken){var result=this._service.GetDatabaseReferences(cancellationToken);return System.Array.getCount(result,Kusto.Language.Editor.DatabaseReference)>0&&this._offset>0?Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Editor.DatabaseReference,System.Linq.Enumerable.from(result).select(Bridge.fn.bind(this,function(dr){return new Kusto.Language.Editor.DatabaseReference(dr.Database,dr.Cluster,dr.Start+this._offset|0,dr.Length)}))):result},GetDiagnostics:function(waitForAnalysis,cancellationToken){var result=this._service.GetDiagnostics(waitForAnalysis,cancellationToken);return System.Array.getCount(result,Kusto.Language.Diagnostic)>0&&this._offset>0?Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Diagnostic,System.Linq.Enumerable.from(result).select(Bridge.fn.bind(this,function(dx){return dx.WithLocation$1(dx.Start+this._offset|0,dx.Length)}))):result},GetFormattedText:function(options,cursorPosition,cancellationToken){var result=this._service.GetFormattedText(options,cursorPosition-this._offset|0,cancellationToken);return this._offset>0?new Kusto.Language.Editor.FormattedText(result.Text,result.Position+this._offset|0):result},GetMinimalText:function(cancellationToken){return this._service.GetMinimalText(cancellationToken)},GetOutlines:function(cancellationToken){var result=this._service.GetOutlines(cancellationToken);return System.Array.getCount(result.Ranges,Kusto.Language.Editor.OutlineRange)>0&&this._offset>0?new Kusto.Language.Editor.OutlineInfo(Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Editor.OutlineRange,System.Linq.Enumerable.from(result.Ranges).select(Bridge.fn.bind(this,function(o){return new Kusto.Language.Editor.OutlineRange(o.Start+this._offset|0,o.Length,o.CollapsedText)})))):result},GetQuickInfo:function(position,cancellationToken){return this._service.GetQuickInfo(position-this._offset|0,cancellationToken)},GetElement:function(position){return this._service.GetElement(position)},GetRelatedElements:function(position,options,cancellationToken){var result=this._service.GetRelatedElements(position-this._offset|0,options,cancellationToken);return System.Array.getCount(result.Elements,Kusto.Language.Editor.RelatedElement)>0&&this._offset>0?new Kusto.Language.Editor.RelatedInfo(Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Editor.RelatedElement,System.Linq.Enumerable.from(result.Elements).select(Bridge.fn.bind(this,function(e){return new Kusto.Language.Editor.RelatedElement.$ctor1(e.Start+this._offset|0,e.Length,e.Kind,e.CursorLeft+this._offset|0,e.CursorRight+this._offset|0)}))),result.CurrentIndex):result},IsFeatureSupported:function(feature,position){return position===void 0&&(position=-1),this._service.IsFeatureSupported(feature,position!==-1?position-this._offset|0:position)},ShouldAutoComplete:function(position,key,cancellationToken){return this._service.ShouldAutoComplete(position-this._offset|0,key,cancellationToken)}}});Bridge.define("Kusto.Language.Editor.RelatedElement",{inherits:[Kusto.Language.Editor.TextRange],props:{Kind:0,CursorLeft:0,CursorRight:0},ctors:{$ctor1:function(start,length,kind,cursorLeft,cursorRight){this.$initialize();Kusto.Language.Editor.TextRange.ctor.call(this,start,length);this.Kind=kind;this.CursorLeft=cursorLeft;this.CursorRight=cursorRight},ctor:function(start,length,kind){Kusto.Language.Editor.RelatedElement.$ctor1.call(this,start,length,kind,start,start+length|0)}}});Bridge.define("Kusto.Language.Parsing.Parser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],methods:{WithTag$1:function(tag){return Bridge.cast(this.WithTag(tag),Kusto.Language.Parsing.Parser$2(TInput,TOutput))},WithAnnotations$1:function(annotations){return Bridge.cast(this.WithAnnotations(annotations),Kusto.Language.Parsing.Parser$2(TInput,TOutput))},WithIsHidden$1:function(isHidden){return Bridge.cast(this.WithIsHidden(isHidden),Kusto.Language.Parsing.Parser$2(TInput,TOutput))},Hide$1:function(){return this.WithIsHidden$1(!0)},Cast:function(TNewOutput){return Kusto.Language.Parsing.Parsers$1(TInput).Rule(TOutput,TNewOutput,this,function(o){return Bridge.cast(Bridge.unbox(o),TNewOutput)}).WithTag$1(this.Tag)}}}});Bridge.define("Kusto.Language.Parsing.ArraySource$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Source$1(TInput)],fields:{input:null,offset:0},ctors:{ctor:function(input){this.$initialize();Kusto.Language.Parsing.Source$1(TInput).ctor.call(this);this.input=input}},methods:{Peek:function(n){return(this.offset+n|0)<System.Array.getCount(this.input,TInput)?System.Array.getItem(this.input,n+this.offset|0,TInput):Bridge.getDefaultValue(TInput)},IsEnd:function(n){return n===void 0&&(n=0),(this.offset+n|0)>=System.Array.getCount(this.input,TInput)},Eat:function(n){this.offset=this.offset+n|0}}}});Bridge.define("Kusto.Language.Parsing.BestParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],fields:{_parsers:null},props:{Parsers:{get:function(){return this._parsers}}},ctors:{ctor:function(parsers){this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this._parsers=System.Linq.Enumerable.from(parsers).ToArray()}},methods:{Accept$1:function(visitor){visitor.VisitBest(this)},Accept:function(TResult,visitor){return visitor.VisitBest(this)},Clone:function(){return new(Kusto.Language.Parsing.BestParser$1(TInput))(this.Parsers)},Parse:function(source,inputStart,output,outputStart){for(var parser,length,minLength=-1,maxLength=-1,bestParser=-1,i=0;i<this._parsers.length;i=i+1|0)parser=this._parsers[System.Array.index(i,this._parsers)],length=parser.Scan(source,inputStart),length>maxLength?(maxLength=length,bestParser=i):length<minLength&&(minLength=length);return maxLength>=0&&this._parsers[System.Array.index(bestParser,this._parsers)].Parse(source,inputStart,output,outputStart),maxLength},Scan:function(source,start){var $t,max=-1,min=-1,parser,n;$t=Bridge.getEnumerator(this._parsers);try{while($t.moveNext())parser=$t.Current,n=parser.Scan(source,start),n>max?max=n:n<min&&(min=n)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return max>=0?max:min}}}});Bridge.define("Kusto.Language.Parsing.FailsParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],props:{Pattern:null},ctors:{ctor:function(pattern){this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this.Pattern=pattern}},methods:{Clone:function(){return new(Kusto.Language.Parsing.FailsParser$1(TInput))(this.Pattern)},Accept$1:function(visitor){visitor.VisitFails(this)},Accept:function(TResult,visitor){return visitor.VisitFails(this)},Parse:function(source,inputStart){return this.Scan(source,inputStart)},Scan:function(source,start){return source.IsEnd(start)?0:this.Pattern.Scan(source,start)>=0?-1:0}}}});Bridge.define("Kusto.Language.Parsing.FirstParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],fields:{_parsers:null},props:{Parsers:{get:function(){return this._parsers}}},ctors:{ctor:function(parsers){this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this._parsers=System.Linq.Enumerable.from(parsers).ToArray()}},methods:{Accept$1:function(visitor){visitor.VisitFirst(this)},Accept:function(TResult,visitor){return visitor.VisitFirst(this)},Clone:function(){return new(Kusto.Language.Parsing.FirstParser$1(TInput))(this.Parsers)},Parse:function(source,inputStart,output,outputCount){for(var parser,length,minLength=-1,i=0;i<this._parsers.length;i=i+1|0){if(parser=this._parsers[System.Array.index(i,this._parsers)],length=parser.Parse(source,inputStart,output,outputCount),length>=0)return length;length<minLength&&(minLength=length)}return minLength},Scan:function(source,start){var $t,minLength=-1,parser,n;$t=Bridge.getEnumerator(this._parsers);try{while($t.moveNext()){if(parser=$t.Current,n=parser.Scan(source,start),n>=0)return n;n<minLength&&(minLength=n)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return minLength}}}});Bridge.define("Kusto.Language.Parsing.GrammarBuilder.Builder$1",function(TInput){return{inherits:[Kusto.Language.Parsing.ParserVisitor$1(TInput)],$kind:"nested class",fields:{builder:null,separator:null,showRequired:!1},ctors:{ctor:function(showRequired){this.$initialize();Kusto.Language.Parsing.ParserVisitor$1(TInput).ctor.call(this);this.builder=new System.Text.StringBuilder;this.showRequired=showRequired}},methods:{toString:function(){return this.builder.toString()},Visit:function(parser){parser==null||parser.IsHidden||(System.String.isNullOrEmpty(parser.Tag)?parser.Accept$1(this):this.WriteTerm(parser.Tag))},WriteTerm:function(term){System.String.isNullOrEmpty(term)||this.builder.append(term)},WriteAlternation:function(parsers){this.WriteSeparated(" | ",parsers)},WriteSequence:function(parsers){this.WriteSeparated(" ",parsers)},WriteOptional:function(parser){this.WriteBracketted("[","]",parser)},WriteRequired:function(parser){var nested=new(Kusto.Language.Parsing.GrammarBuilder.Builder$1(TInput))(this.showRequired);nested.Visit(parser);nested.separator!=null?(this.builder.append("("),this.builder.append(nested.toString()),this.builder.append(")")):this.builder.append(nested.toString());this.builder.append("!")},WriteZeroOrMore:function(parser){this.WriteBracketted("{","}",parser)},WriteOneOrMore:function(parser){this.WriteBracketted("{","}+",parser)},WriteSeparated:function(separator,parsers){for(var parser,nestedBuilder,i1,grammarBuilder,builders=new(System.Collections.Generic.List$1(Kusto.Language.Parsing.GrammarBuilder.Builder$1(TInput)).ctor),i=0,n=System.Array.getCount(parsers,Kusto.Language.Parsing.Parser$1(TInput));i<n;i=i+1|0)parser=System.Array.getItem(parsers,i,Kusto.Language.Parsing.Parser$1(TInput)),parser.IsHidden||(nestedBuilder=new(Kusto.Language.Parsing.GrammarBuilder.Builder$1(TInput))(this.showRequired),nestedBuilder.Visit(parser),nestedBuilder.builder.getLength()>0&&builders.add(nestedBuilder));if(builders.Count>1)for(this.separator=separator,i1=0;i1<builders.Count;i1=i1+1|0)i1>0&&this.builder.append(separator),grammarBuilder=builders.getItem(i1),grammarBuilder.separator==null||Bridge.referenceEquals(grammarBuilder.separator,separator)?this.builder.append(grammarBuilder.builder.toString()):(this.builder.append("("),this.builder.append(grammarBuilder.builder.toString()),this.builder.append(")"));else builders.Count===1&&(this.builder=builders.getItem(0).builder,this.separator=builders.getItem(0).separator)},WriteBracketted:function(startBracket,endBracket,parser,action){var nestedBuilder,text;action===void 0&&(action=null);nestedBuilder=new(Kusto.Language.Parsing.GrammarBuilder.Builder$1(TInput))(this.showRequired);nestedBuilder.Visit(parser);text=nestedBuilder.toString();text.length>0&&(this.builder.append(startBracket),this.builder.append(text),this.builder.append(endBracket))},VisitApply:function(TLeft,TOutput,parser){switch(parser.ApplyKind){case Kusto.Language.Parsing.ApplyKind.ZeroOrMore:this.WriteSequence(System.Array.init([parser.LeftParser,Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrMore(parser.RightParser)],Kusto.Language.Parsing.Parser$1(TInput)));break;case Kusto.Language.Parsing.ApplyKind.ZeroOrOne:this.WriteSequence(System.Array.init([parser.LeftParser,Kusto.Language.Parsing.Parsers$1(TInput).ZeroOrOne(parser.RightParser)],Kusto.Language.Parsing.Parser$1(TInput)));break;default:this.WriteSequence(System.Array.init([parser.LeftParser,parser.RightParser],Kusto.Language.Parsing.Parser$1(TInput)))}},VisitBest$1:function(TOutput,parser){this.WriteAlternation(parser.Parsers)},VisitBest:function(parser){this.WriteAlternation(parser.Parsers)},VisitConvert:function(TOutput,parser){this.Visit(parser.Pattern)},VisitFails:function(parser){this.WriteBracketted("fails(",")",parser.Pattern)},VisitFirst$1:function(TOutput,parser){this.WriteAlternation(parser.Parsers)},VisitFirst:function(parser){this.WriteAlternation(parser.Parsers)},VisitForward:function(){this.WriteTerm("forward()")},VisitIf$1:function(TOutput,parser){this.Visit(parser.Parser)},VisitIf:function(parser){this.Visit(parser.Parser)},VisitMap:function(){this.WriteTerm("map()")},VisitMatch:function(){this.WriteTerm("match()")},VisitMatch$1:function(){this.WriteTerm("match()")},VisitNot:function(parser){this.WriteBracketted("not(",")",parser.Pattern)},VisitOneOrMore:function(parser){this.WriteOneOrMore(parser.Parser)},VisitOptional:function(TOutput,parser){this.WriteOptional(parser.Parser)},VisitProduce:function(TOutput,parser){this.Visit(parser.Parser)},VisitRequired:function(TOutput,parser){this.showRequired?this.WriteRequired(parser.Parser):this.Visit(parser.Parser)},VisitRule:function(TOutput,parser){this.WriteSequence(parser.Parsers)},VisitSequence:function(parser){this.WriteSequence(parser.Parsers)},VisitZeroOrMore:function(parser){parser.ZeroOrOne?this.WriteOptional(parser.Parser):this.WriteZeroOrMore(parser.Parser)}}}});Bridge.define("Kusto.Language.Parsing.IfParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],props:{Test:null,Parser:null},ctors:{ctor:function(test,parser){this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this.Test=test;this.Parser=parser}},methods:{Accept$1:function(visitor){visitor.VisitIf(this)},Accept:function(TResult,visitor){return visitor.VisitIf(this)},Clone:function(){return new(Kusto.Language.Parsing.IfParser$1(TInput))(this.Test,this.Parser)},Parse:function(source,inputStart,output,outputStart){var length=this.Test.Scan(source,inputStart);return length<0?length:this.Parser.Parse(source,inputStart,output,outputStart)},Scan:function(source,start){var length=this.Test.Scan(source,start);return length<0?length:this.Parser.Scan(source,start)}}}});Bridge.define("Kusto.Language.Parsing.LexicalToken",{inherits:[Kusto.Language.Parsing.IToken],props:{TriviaStart:0,FullWidth:0,Kind:0,Trivia:null,Text:null,Diagnostics:null,End:{get:function(){return this.TriviaStart+this.FullWidth|0}},TriviaWidth:{get:function(){return this.Trivia.length}},TextStart:{get:function(){return this.TriviaStart+this.Trivia.length|0}},Width:{get:function(){return this.Text.length}},DebugText:{get:function(){return this.Text.length>0?this.Text:Kusto.Language.Syntax.SyntaxFacts.GetText(this.Kind)}}},alias:["TriviaStart","Kusto$Language$Parsing$IToken$TriviaStart","FullWidth","Kusto$Language$Parsing$IToken$FullWidth","Kind","Kusto$Language$Parsing$IToken$Kind","Trivia","Kusto$Language$Parsing$IToken$Trivia","Text","Kusto$Language$Parsing$IToken$Text","TextStart","Kusto$Language$Parsing$IToken$TextStart","Width","Kusto$Language$Parsing$IToken$Width"],ctors:{ctor:function(start,kind,trivia,text,diagnostics){diagnostics===void 0&&(diagnostics=null);var $t,$t1;this.$initialize();this.TriviaStart=start;this.Kind=kind;this.Trivia=($t=trivia,$t!=null?$t:"");this.Text=($t1=text,$t1!=null?$t1:"");this.FullWidth=this.Trivia.length+this.Text.length|0;this.Diagnostics=diagnostics||Kusto.Language.Diagnostic.NoDiagnostics}}});Bridge.define("Kusto.Language.Parsing.MatchParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],props:{Consumer:null},ctors:{ctor:function(consumer){this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this.Consumer=consumer},$ctor1:function(predicate){Kusto.Language.Parsing.MatchParser$1(TInput).ctor.call(this,function(source,start){return!source.IsEnd(start)&&predicate(source.Peek(start))?1:-1})}},methods:{Clone:function(){return new(Kusto.Language.Parsing.MatchParser$1(TInput).ctor)(this.Consumer)},Accept$1:function(visitor){visitor.VisitMatch(this)},Accept:function(TResult,visitor){return visitor.VisitMatch(this)},Scan:function(source,start){return this.Consumer(source,start)},Parse:function(source,inputStart){return this.Scan(source,inputStart)}}}});Bridge.define("Kusto.Language.Parsing.NotParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],props:{Pattern:null},ctors:{ctor:function(parser){this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this.Pattern=parser}},methods:{Clone:function(){return new(Kusto.Language.Parsing.NotParser$1(TInput))(this.Pattern)},Accept$1:function(visitor){visitor.VisitNot(this)},Accept:function(TResult,visitor){return visitor.VisitNot(this)},Parse:function(source,inputStart){return this.Scan(source,inputStart)},Scan:function(source,start){return source.IsEnd(start)?-1:this.Pattern.Scan(source,start)>=0?-1:1}}}});Bridge.define("Kusto.Language.Parsing.OneOrMoreParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],props:{Parser:null},ctors:{ctor:function(parser){this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this.Parser=parser}},methods:{Accept$1:function(visitor){visitor.VisitOneOrMore(this)},Accept:function(TResult,visitor){return visitor.VisitOneOrMore(this)},Clone:function(){return new(Kusto.Language.Parsing.OneOrMoreParser$1(TInput))(this.Parser)},Parse:function(source,inputStart,output){var firstLen=this.Parser.Parse(source,inputStart,output,output.Count),length,len;if(firstLen<0)return firstLen;for(length=firstLen;;){if(len=this.Parser.Parse(source,inputStart+length|0,output,output.Count),len<=0)return length;length=length+len|0}},Scan:function(source,start){var n=this.Parser.Scan(source,start),len;if(n<0)return n;for(len=n;;){if(n=this.Parser.Scan(source,start+len|0),n<=0)break;len=len+n|0}return len}}}});Bridge.define("Kusto.Language.Parsing.SafeParser.StackSafeParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.ParserVisitor$2(TInput,Kusto.Language.Parsing.Parser$1(TInput))],$kind:"nested class",statics:{fields:{pool:null},ctors:{init:function(){this.pool=new(Kusto.Language.Utils.ObjectPool$1(Kusto.Language.Parsing.SafeParser.StackSafeParser$1(TInput)))(function(){return new(Kusto.Language.Parsing.SafeParser.StackSafeParser$1(TInput))},function(p){p.Clear()})}},methods:{Scan:function(parser,source,start){return Kusto.Language.Parsing.SafeScanner.ScanSafe(TInput,parser,source,start)}}},fields:{source:null,output:null,stack:null,stackPosition:0,state:null},ctors:{ctor:function(){this.$initialize();Kusto.Language.Parsing.ParserVisitor$2(TInput,Kusto.Language.Parsing.Parser$1(TInput)).ctor.call(this);this.stack=new(System.Collections.Generic.List$1(Kusto.Language.Parsing.SafeParser.StackSafeParser$1.ParseState(TInput)).ctor);this.stackPosition=-1}},methods:{Initialize:function(source,output){this.source=source;this.output=output},Clear:function(){this.source=null;this.output=null;this.state=null;this.stackPosition=-1},Push:function(parser,inputStart,outputStart){this.stackPosition=this.stackPosition+1|0;this.stackPosition===this.stack.Count&&this.stack.add(new(Kusto.Language.Parsing.SafeParser.StackSafeParser$1.ParseState(TInput)));this.state=this.stack.getItem(this.stackPosition);this.state.Init(parser,inputStart,outputStart,this.output.Count)},Pop:function(){this.stackPosition=this.stackPosition-1|0;this.stackPosition>=0&&(this.state=this.stack.getItem(this.stackPosition))},Parse:function(parser,inputStart,outputStart){var nextParser,result;for(this.Push(parser,inputStart,outputStart);;)if(nextParser=this.state.Parser.Accept(Bridge.global.Kusto.Language.Parsing.Parser$1(TInput),this),nextParser!=null)this.Push(nextParser,this.state.InputStart+this.state.InputLength|0,this.state.NextOutputStart);else{if(result=this.state.InputLength,this.stackPosition===0)return result;this.Pop();this.state.LastResult=result}},VisitApply:function(TLeft,TOutput,parser){return this.state.State===0?(this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,parser.LeftParser):this.state.State===1?this.state.LastResult<0?(this.state.InputLength=parser.ApplyKind===Kusto.Language.Parsing.ApplyKind.One?(-this.state.InputLength|0)+this.state.LastResult|0:this.state.LastResult,null):(this.state.InputLength=this.state.LastResult,this.state.State=2,this.state.NextOutputStart=this.state.OutputStart,parser.RightParser):this.state.LastResult>0&&(this.state.InputLength=this.state.InputLength+this.state.LastResult|0,parser.ApplyKind===Kusto.Language.Parsing.ApplyKind.ZeroOrMore)?parser.RightParser:null},VisitBest:function(parser){var i,p,length;if(this.state.State===0){var minLength=-1,maxLength=-1,bestParser=-1;for(i=0;i<System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput));i=i+1|0)p=System.Array.getItem(parser.Parsers,i,Kusto.Language.Parsing.Parser$1(TInput)),length=Kusto.Language.Parsing.SafeScanner.ScanSafe(TInput,p,this.source,this.state.InputStart),length>maxLength?(maxLength=length,bestParser=i):length<minLength&&(minLength=length);return maxLength>=0?(this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,System.Array.getItem(parser.Parsers,bestParser,Kusto.Language.Parsing.Parser$1(TInput))):(this.state.InputLength=-1,null)}return this.state.InputLength=this.state.LastResult,null},VisitBest$1:function(TOutput,parser){var i,p,length;if(this.state.State===0){var minLength=-1,maxLength=-1,bestParser=-1;for(i=0;i<System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$2(TInput,TOutput));i=i+1|0)p=System.Array.getItem(parser.Parsers,i,Kusto.Language.Parsing.Parser$2(TInput,TOutput)),length=Kusto.Language.Parsing.SafeScanner.ScanSafe(TInput,p,this.source,this.state.InputStart),length>maxLength?(maxLength=length,bestParser=i):length<minLength&&(minLength=length);return maxLength>=0?(this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,System.Array.getItem(parser.Parsers,bestParser,Kusto.Language.Parsing.Parser$2(TInput,TOutput))):(this.state.InputLength=-1,null)}return this.state.InputLength=this.state.LastResult,null},VisitConvert:function(TOutput,parser){return this.state.InputLength=parser.Parse(this.source,this.state.InputStart,this.output,this.output.Count),null},VisitFails:function(){throw new System.NotImplementedException.ctor;},VisitFirst$1:function(TOutput,parser){if(this.state.State===0)return this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,System.Array.getItem(parser.Parsers,0,Kusto.Language.Parsing.Parser$2(TInput,TOutput));if(this.state.LastResult<0){if(this.state.LastResult<this.state.BestFailedResult&&(this.state.BestFailedResult=this.state.LastResult),Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OriginalOutputCount),this.state.State<System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$2(TInput,TOutput))){var next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$2(TInput,TOutput));return this.state.State=this.state.State+1|0,this.state.NextOutputStart=this.state.OutputStart,next}return this.state.InputLength=this.state.BestFailedResult,null}return this.state.InputLength=this.state.LastResult,null},VisitFirst:function(parser){if(this.state.State===0)return this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,System.Array.getItem(parser.Parsers,0,Kusto.Language.Parsing.Parser$1(TInput));if(this.state.LastResult<0){if(this.state.LastResult<this.state.BestFailedResult&&(this.state.BestFailedResult=this.state.LastResult),Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OriginalOutputCount),this.state.State<System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput))){var next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput));return this.state.State=this.state.State+1|0,this.state.NextOutputStart=this.state.OutputStart,next}return this.state.InputLength=this.state.BestFailedResult,null}return this.state.InputLength=this.state.LastResult,null},VisitForward:function(TOutput,parser){return this.state.State===0?(this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,parser.DeferredParser()):(this.state.InputLength=this.state.LastResult,null)},VisitIf$1:function(TOutput,parser){if(this.state.State===0){var length=Kusto.Language.Parsing.SafeParser.StackSafeParser$1(TInput).Scan(parser.Test,this.source,this.state.InputStart);return length<0?(this.state.InputLength=length,null):(this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,parser.Parser)}return this.state.InputLength=this.state.LastResult,null},VisitIf:function(parser){if(this.state.State===0){var length=Kusto.Language.Parsing.SafeParser.StackSafeParser$1(TInput).Scan(parser.Test,this.source,this.state.InputStart);return length<0?(this.state.InputLength=length,null):(this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,parser.Parser)}return this.state.InputLength=this.state.LastResult,null},VisitMap:function(TOutput,parser){return this.state.InputLength=parser.Parse(this.source,this.state.InputStart,this.output,this.output.Count),null},VisitMatch:function(){throw new System.NotImplementedException.ctor;},VisitMatch$1:function(TOutput,parser){return this.state.InputLength=parser.Parse(this.source,this.state.InputStart,this.output,this.output.Count),null},VisitNot:function(){throw new System.NotImplementedException.ctor;},VisitOneOrMore:function(parser){return this.state.State===0?(this.state.State=1,this.state.NextOutputStart=this.output.Count,parser.Parser):this.state.State===1&&this.state.LastResult<0?(this.state.InputLength=this.state.LastResult,null):this.state.LastResult>0?(this.state.State=this.state.State+1|0,this.state.InputLength=this.state.InputLength+this.state.LastResult|0,this.state.NextOutputStart=this.output.Count,parser.Parser):null},VisitOptional:function(TOutput,parser){return this.state.State===0?(this.state.State=1,this.state.NextOutputStart=this.output.Count,parser.Parser):this.state.LastResult<0?(Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OriginalOutputCount),this.output.add(parser.Producer()),this.state.InputLength=0,null):(this.state.InputLength=this.state.LastResult,null)},VisitProduce:function(TOutput,parser){if(this.state.State===0)return this.state.State=1,this.state.NextOutputStart=this.state.OutputStart,parser.Parser;if(this.state.LastResult>=0){var value=parser.Producer(this.output,this.state.OutputStart);Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OutputStart);this.output.add(value)}else Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OriginalOutputCount);return this.state.InputLength=this.state.LastResult,null},VisitRequired:function(TOutput,parser){return this.state.State===0?(this.state.State=1,this.state.NextOutputStart=this.output.Count,parser.Parser):this.state.LastResult<0?(Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OriginalOutputCount),this.output.add(parser.Producer()),this.state.InputLength=0,null):(this.state.InputLength=this.state.LastResult,null)},VisitRule:function(TOutput,parser){var value,next;return this.state.LastResult<0?(this.state.InputLength=(-this.state.InputLength|0)+this.state.LastResult|0,Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OriginalOutputCount),null):(this.state.InputLength=this.state.InputLength+this.state.LastResult|0,this.state.State>=System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput))?(value=parser.ListProducer(this.output,this.state.OutputStart),Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OutputStart),this.output.add(value),null):(next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput)),this.state.State=this.state.State+1|0,this.state.NextOutputStart=this.output.Count,next))},VisitSequence:function(parser){if(this.state.LastResult<0)return this.state.InputLength=(-this.state.InputLength|0)+this.state.LastResult|0,Kusto.Language.Utils.ListExtensions.SetCount(System.Object,this.output,this.state.OriginalOutputCount),null;if(this.state.InputLength=this.state.InputLength+this.state.LastResult|0,this.state.State>=System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput)))return null;var next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput));return this.state.State=this.state.State+1|0,this.state.NextOutputStart=this.output.Count,next},VisitZeroOrMore:function(parser){return this.state.State===0||this.state.LastResult>0&&!parser.ZeroOrOne?(this.state.State=this.state.State+1|0,this.state.InputLength=this.state.InputLength+this.state.LastResult|0,this.state.NextOutputStart=this.output.Count,parser.Parser):null}}}});Bridge.define("Kusto.Language.Parsing.SafeParser.StackSafeParser$1.ParseState",function(){return{$kind:"nested class",fields:{InputLength:0,NextOutputStart:0,State:0,LastResult:0,BestFailedResult:0,BestSuccessResult:0},props:{Parser:null,InputStart:0,OutputStart:0,OriginalOutputCount:0},methods:{Init:function(parser,inputStart,outputStart,outputCount){this.Parser=parser;this.InputStart=inputStart;this.OutputStart=outputStart;this.OriginalOutputCount=outputCount;this.InputLength=0;this.State=0;this.LastResult=0;this.NextOutputStart=outputCount;this.BestFailedResult=0;this.BestSuccessResult=0}}}});Bridge.define("Kusto.Language.Parsing.SafeScanner.StackSafeScanner$1",function(TInput){return{inherits:[Kusto.Language.Parsing.ParserVisitor$2(TInput,Kusto.Language.Parsing.Parser$1(TInput))],$kind:"nested class",statics:{fields:{pool:null},ctors:{init:function(){this.pool=new(Kusto.Language.Utils.ObjectPool$1(Kusto.Language.Parsing.SafeScanner.StackSafeScanner$1(TInput)))(function(){return new(Kusto.Language.Parsing.SafeScanner.StackSafeScanner$1(TInput))},function(s){s.Clear()})}}},fields:{source:null,stack:null,stackPosition:0,state:null},ctors:{ctor:function(){this.$initialize();Kusto.Language.Parsing.ParserVisitor$2(TInput,Kusto.Language.Parsing.Parser$1(TInput)).ctor.call(this);this.stack=new(System.Collections.Generic.List$1(Kusto.Language.Parsing.SafeScanner.StackSafeScanner$1.ScanState(TInput)).ctor);this.stackPosition=-1}},methods:{Initialize:function(source){this.source=source},Clear:function(){this.source=null;this.state=null;this.stackPosition=-1},Push:function(parser,inputStart){this.stackPosition=this.stackPosition+1|0;this.stackPosition===this.stack.Count&&this.stack.add(new(Kusto.Language.Parsing.SafeScanner.StackSafeScanner$1.ScanState(TInput)));this.state=this.stack.getItem(this.stackPosition);this.state.Init(parser,inputStart)},Pop:function(){this.stackPosition=this.stackPosition-1|0;this.stackPosition>=0&&(this.state=this.stack.getItem(this.stackPosition))},Scan:function(parser,start){var nextParser,result;for(this.Push(parser,start);;)if(nextParser=this.state.Parser.Accept(Bridge.global.Kusto.Language.Parsing.Parser$1(TInput),this),nextParser!=null)this.Push(nextParser,this.state.InputStart+this.state.InputLength|0);else{if(result=this.state.InputLength,this.stackPosition===0)return result;this.Pop();this.state.LastResult=result}},VisitApply:function(TLeft,TOutput,parser){return this.state.State===0?(this.state.State=1,parser.LeftParser):this.state.State===1?this.state.LastResult<0?(this.state.InputLength=parser.ApplyKind===Kusto.Language.Parsing.ApplyKind.One?(-this.state.InputLength|0)+this.state.LastResult|0:this.state.LastResult,null):(this.state.InputLength=this.state.LastResult,this.state.State=2,parser.RightParser):this.state.LastResult>0&&(this.state.InputLength=this.state.InputLength+this.state.LastResult|0,parser.ApplyKind===Kusto.Language.Parsing.ApplyKind.ZeroOrMore)?parser.RightParser:null},VisitBest:function(parser){if(this.state.State===0)return this.state.BestFailedResult=-1,this.state.BestSuccessResult=-1,this.state.State=1,System.Array.getItem(parser.Parsers,0,Kusto.Language.Parsing.Parser$1(TInput));if(this.state.LastResult>this.state.BestSuccessResult?this.state.BestSuccessResult=this.state.LastResult:this.state.LastResult<this.state.BestFailedResult&&(this.state.BestFailedResult=this.state.LastResult),this.state.State>=System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput)))return this.state.BestSuccessResult>=0?(this.state.InputLength=this.state.BestSuccessResult,null):(this.state.InputLength=this.state.BestFailedResult,null);this.state.InputLength=0;var next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput));return this.state.State=this.state.State+1|0,next},VisitBest$1:function(TOutput,parser){if(this.state.State===0)return this.state.BestFailedResult=-1,this.state.BestSuccessResult=-1,this.state.State=1,System.Array.getItem(parser.Parsers,0,Kusto.Language.Parsing.Parser$2(TInput,TOutput));if(this.state.LastResult>this.state.BestSuccessResult?this.state.BestSuccessResult=this.state.LastResult:this.state.LastResult<this.state.BestFailedResult&&(this.state.BestFailedResult=this.state.LastResult),this.state.State>=System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$2(TInput,TOutput)))return this.state.BestSuccessResult>=0?(this.state.InputLength=this.state.BestSuccessResult,null):(this.state.InputLength=this.state.BestFailedResult,null);this.state.InputLength=0;var next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$2(TInput,TOutput));return this.state.State=this.state.State+1|0,next},VisitConvert:function(TOutput,parser){return this.state.InputLength=parser.Scan(this.source,this.state.InputStart),null},VisitFails:function(parser){return this.state.State===0?this.source.IsEnd(this.state.InputStart)?(this.state.InputLength=0,null):(this.state.State=this.state.State+1|0,parser.Pattern):(this.state.InputLength=this.state.LastResult>=0?-1:0,null)},VisitFirst$1:function(TOutput,parser){if(this.state.State===0)return this.state.State=1,System.Array.getItem(parser.Parsers,0,Kusto.Language.Parsing.Parser$2(TInput,TOutput));if(this.state.LastResult<0){if(this.state.LastResult<this.state.BestFailedResult&&(this.state.BestFailedResult=this.state.LastResult),this.state.State<System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$2(TInput,TOutput))){var next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$2(TInput,TOutput));return this.state.State=this.state.State+1|0,next}return this.state.InputLength=this.state.BestFailedResult,null}return this.state.InputLength=this.state.LastResult,null},VisitFirst:function(parser){if(this.state.State===0)return this.state.State=1,System.Array.getItem(parser.Parsers,0,Kusto.Language.Parsing.Parser$1(TInput));if(this.state.LastResult<0){if(this.state.LastResult<this.state.BestFailedResult&&(this.state.BestFailedResult=this.state.LastResult),this.state.State<System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput))){var next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput));return this.state.State=this.state.State+1|0,next}return this.state.InputLength=this.state.BestFailedResult,null}return this.state.InputLength=this.state.LastResult,null},VisitForward:function(TOutput,parser){return this.state.State===0?(this.state.State=1,parser.DeferredParser()):(this.state.InputLength=this.state.LastResult,null)},VisitIf$1:function(TOutput,parser){if(this.state.State===0){var length=parser.Test.Scan(this.source,this.state.InputStart);return length<0?(this.state.InputLength=length,null):(this.state.State=1,parser.Parser)}return this.state.InputLength=this.state.LastResult,null},VisitIf:function(parser){if(this.state.State===0){var length=parser.Test.Scan(this.source,this.state.InputStart);return length<0?(this.state.InputLength=length,null):(this.state.State=1,parser.Parser)}return this.state.InputLength=this.state.LastResult,null},VisitMap:function(TOutput,parser){return this.state.InputLength=parser.Scan(this.source,this.state.InputStart),null},VisitMatch:function(parser){return this.state.InputLength=parser.Scan(this.source,this.state.InputStart),null},VisitMatch$1:function(TOutput,parser){return this.state.InputLength=parser.Scan(this.source,this.state.InputStart),null},VisitNot:function(parser){return this.state.State===0?this.source.IsEnd(this.state.InputStart)?(this.state.InputLength=-1,null):(this.state.State=this.state.State+1|0,parser.Pattern):this.state.LastResult>=0?(this.state.InputLength=-1,null):(this.state.InputLength=1,null)},VisitOneOrMore:function(parser){return this.state.State===0?(this.state.State=1,parser.Parser):this.state.State===1&&this.state.LastResult<0?(this.state.InputLength=this.state.LastResult,null):this.state.LastResult>0?(this.state.State=this.state.State+1|0,this.state.InputLength=this.state.InputLength+this.state.LastResult|0,parser.Parser):null},VisitOptional:function(TOutput,parser){return this.state.State===0?(this.state.State=1,parser.Parser):this.state.LastResult<0?(this.state.InputLength=0,null):(this.state.InputLength=this.state.LastResult,null)},VisitProduce:function(TOutput,parser){return this.state.State===0?(this.state.State=1,parser.Parser):(this.state.InputLength=this.state.LastResult,null)},VisitRequired:function(TOutput,parser){return this.state.State===0?(this.state.State=1,parser.Parser):this.state.LastResult<0?(this.state.InputLength=0,null):(this.state.InputLength=this.state.LastResult,null)},VisitRule:function(TOutput,parser){if(this.state.LastResult<0)return this.state.InputLength=(-this.state.InputLength|0)+this.state.LastResult|0,null;if(this.state.InputLength=this.state.InputLength+this.state.LastResult|0,this.state.State>=System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput)))return null;var next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput));return this.state.State=this.state.State+1|0,next},VisitSequence:function(parser){if(this.state.LastResult<0)return this.state.InputLength=(-this.state.InputLength|0)+this.state.LastResult|0,null;if(this.state.InputLength=this.state.InputLength+this.state.LastResult|0,this.state.State>=System.Array.getCount(parser.Parsers,Kusto.Language.Parsing.Parser$1(TInput)))return null;var next=System.Array.getItem(parser.Parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput));return this.state.State=this.state.State+1|0,next},VisitZeroOrMore:function(parser){return this.state.State===0||this.state.LastResult>0&&!parser.ZeroOrOne?(this.state.State=this.state.State+1|0,this.state.InputLength=this.state.InputLength+this.state.LastResult|0,parser.Parser):null}}}});Bridge.define("Kusto.Language.Parsing.SafeScanner.StackSafeScanner$1.ScanState",function(){return{$kind:"nested class",fields:{InputLength:0,State:0,LastResult:0,BestFailedResult:0,BestSuccessResult:0},props:{Parser:null,InputStart:0},methods:{Init:function(parser,inputStart){this.Parser=parser;this.InputStart=inputStart;this.InputLength=0;this.State=0;this.LastResult=0;this.BestFailedResult=0;this.BestSuccessResult=0}}}});Bridge.define("Kusto.Language.Parsing.SafeSearcher.StackSafeSearcher$1",function(TInput){return{inherits:[Kusto.Language.Parsing.ParserVisitor$2(TInput,Kusto.Language.Parsing.Parser$1(TInput))],$kind:"nested class",statics:{fields:{pool:null},ctors:{init:function(){this.pool=new(Kusto.Language.Utils.ObjectPool$1(Kusto.Language.Parsing.SafeSearcher.StackSafeSearcher$1(TInput)))(function(){return new(Kusto.Language.Parsing.SafeSearcher.StackSafeSearcher$1(TInput))},function(s){s.Clear()})}}},fields:{source:null,action:null,stack:null,stackPosition:0,state:null,prevWasMissing:!1},ctors:{ctor:function(){this.$initialize();Kusto.Language.Parsing.ParserVisitor$2(TInput,Kusto.Language.Parsing.Parser$1(TInput)).ctor.call(this);this.stack=new(System.Collections.Generic.List$1(Kusto.Language.Parsing.SafeSearcher.StackSafeSearcher$1.SearchState(TInput)).ctor);this.stackPosition=-1}},methods:{Initialize:function(source,action){this.source=source;this.action=action},Clear:function(){this.source=null;this.state=null;this.stackPosition=-1},Push:function(parser,inputStart,prevWasMissing){this.stackPosition=this.stackPosition+1|0;this.stackPosition===this.stack.Count&&this.stack.add(new(Kusto.Language.Parsing.SafeSearcher.StackSafeSearcher$1.SearchState(TInput)));this.state=this.stack.getItem(this.stackPosition);this.state.Init(parser,inputStart,prevWasMissing)},Pop:function(){this.stackPosition=this.stackPosition-1|0;this.stackPosition>=0&&(this.state=this.stack.getItem(this.stackPosition))},Search:function(parser,start,initialPrevWasMissing){var nextParser,length;for(this.prevWasMissing=initialPrevWasMissing,this.Push(parser,start,initialPrevWasMissing),nextParser=null;;)if(this.state.Parser.IsHidden?(this.state.InputLength=Kusto.Language.Parsing.SafeScanner.ScanSafe(TInput,this.state.Parser,this.source,this.state.InputStart),nextParser=null):(this.state.State===0&&this.action(this.state.Parser,this.source,this.state.InputStart,this.prevWasMissing),nextParser=this.state.Parser.Accept(Bridge.global.Kusto.Language.Parsing.Parser$1(TInput),this)),nextParser!=null)this.Push(nextParser,this.state.InputStart+this.state.InputLength|0,this.prevWasMissing);else{if(length=this.state.InputLength,this.stackPosition===0)return new Kusto.Language.Parsing.SearchResult.$ctor1(length,this.prevWasMissing);this.Pop();this.state.LastResult=length}},VisitApply:function(TLeft,TOutput,parser){return this.state.State===0?(this.state.State=1,parser.LeftParser):this.state.State===1?this.state.LastResult<0?(this.state.InputLength=parser.ApplyKind===Kusto.Language.Parsing.ApplyKind.One?(-this.state.InputLength|0)+this.state.LastResult|0:this.state.LastResult,null):(this.state.InputLength=this.state.LastResult,this.state.State=2,parser.RightParser):this.state.LastResult>0&&(this.state.InputLength=this.state.InputLength+this.state.LastResult|0,parser.ApplyKind===Kusto.Language.Parsing.ApplyKind.ZeroOrMore)?parser.RightParser:null},VisitBest:function(parser){return this.NextBest(parser.Parsers)},VisitBest$1:function(TOutput,parser){return this.NextBest(parser.Parsers)},VisitConvert:function(TOutput,parser){return this.state.State===0?(this.state.State=this.state.State+1|0,parser.Pattern):(this.state.InputLength=this.state.LastResult,this.prevWasMissing=this.state.PrevWasMissing,null)},VisitFails:function(parser){var length=parser.Scan(this.source,this.state.InputStart);return this.state.InputLength=length,this.prevWasMissing=!1,null},VisitFirst$1:function(TOutput,parser){return this.NextBest(parser.Parsers)},VisitFirst:function(parser){return this.NextBest(parser.Parsers)},NextBest:function(parsers){if(this.state.State===0)return this.state.BestFailedResult=-1,this.state.BestFailedMissing=this.prevWasMissing,this.state.BestSuccessResult=-1,this.state.State=1,System.Array.getItem(parsers,0,Kusto.Language.Parsing.Parser$1(TInput));if(this.state.LastResult>this.state.BestSuccessResult?(this.state.BestSuccessResult=this.state.LastResult,this.state.BestSuccessMissing=this.prevWasMissing):this.state.LastResult<this.state.BestFailedResult&&(this.state.BestFailedResult=this.state.LastResult,this.state.BestFailedMissing=this.prevWasMissing),this.state.State>=System.Array.getCount(parsers,Kusto.Language.Parsing.Parser$1(TInput)))return this.state.BestSuccessResult>=0?(this.state.InputLength=this.state.BestSuccessResult,this.prevWasMissing=this.state.BestSuccessMissing,null):(this.state.InputLength=this.state.BestFailedResult,this.prevWasMissing=this.state.BestFailedMissing,null);this.state.InputLength=0;this.prevWasMissing=this.state.PrevWasMissing;var next=System.Array.getItem(parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput));return this.state.State=this.state.State+1|0,next},VisitForward:function(TOutput,parser){return this.state.State===0?(this.state.State=1,parser.DeferredParser()):(this.state.InputLength=this.state.LastResult,null)},VisitIf$1:function(TOutput,parser){return this.NextIf(parser.Test,parser.Parser)},VisitIf:function(parser){return this.NextIf(parser.Test,parser.Parser)},NextIf:function(test,parser){if(this.state.State===0)return this.state.State=this.state.State+1|0,test.Scan(this.source,this.state.InputStart)>=0?parser:test;var length=this.state.LastResult;return this.state.InputLength=length,length<0&&(this.prevWasMissing=this.state.PrevWasMissing),null},VisitMap:function(TOutput,parser){var length=parser.Scan(this.source,this.state.InputStart);return this.state.InputLength=length,this.prevWasMissing=length>=0,null},VisitMatch:function(parser){return this.state.InputLength=parser.Consumer(this.source,this.state.InputStart),this.state.InputLength>=0?(this.prevWasMissing=!1,null):null},VisitMatch$1:function(TOutput,parser){return this.state.InputLength=parser.Consumer(this.source,this.state.InputStart),this.state.InputLength>=0?(this.prevWasMissing=!1,null):null},VisitNot:function(parser){if(this.source.IsEnd(this.state.InputStart))return this.state.InputLength=0,this.prevWasMissing=!1,null;var len=parser.Pattern.Scan(this.source,this.state.InputStart);return len>=0?(this.state.InputLength=-1,this.prevWasMissing=!1,null):(this.state.InputLength=1,this.prevWasMissing=!1,null)},VisitOneOrMore:function(parser){return this.state.State===0?(this.state.State=1,parser.Parser):this.state.State===1&&this.state.LastResult<0?(this.state.InputLength=this.state.LastResult,null):this.state.LastResult>0?(this.state.State=this.state.State+1|0,this.state.InputLength=this.state.InputLength+this.state.LastResult|0,parser.Parser):null},VisitOptional:function(TOutput,parser){return this.state.State===0?(this.state.State=1,parser.Parser):this.state.LastResult<0?(this.state.InputLength=0,this.prevWasMissing=this.state.PrevWasMissing,null):(this.state.InputLength=this.state.LastResult,null)},VisitProduce:function(TOutput,parser){return this.state.State===0?(this.state.State=1,parser.Parser):(this.state.InputLength=this.state.LastResult,null)},VisitRequired:function(TOutput,parser){return this.state.State===0?(this.state.State=1,parser.Parser):this.state.LastResult<0?(this.state.InputLength=0,this.prevWasMissing=!0,null):(this.state.InputLength=this.state.LastResult,null)},VisitRule:function(TOutput,parser){return this.NextSequence(parser.Parsers)},VisitSequence:function(parser){return this.NextSequence(parser.Parsers)},NextSequence:function(parsers){if(this.state.LastResult<0)return this.state.InputLength=(-this.state.InputLength|0)+this.state.LastResult|0,null;if(this.state.InputLength=this.state.InputLength+this.state.LastResult|0,this.state.State>=System.Array.getCount(parsers,Kusto.Language.Parsing.Parser$1(TInput)))return null;var next=System.Array.getItem(parsers,this.state.State,Kusto.Language.Parsing.Parser$1(TInput));return this.state.State=this.state.State+1|0,next},VisitZeroOrMore:function(parser){return this.state.State===0||this.state.LastResult>0&&!parser.ZeroOrOne?(this.state.State=this.state.State+1|0,this.state.InputLength=this.state.InputLength+this.state.LastResult|0,parser.Parser):null}}}});Bridge.define("Kusto.Language.Parsing.SafeSearcher.StackSafeSearcher$1.SearchState",function(){return{$kind:"nested class",fields:{InputLength:0,State:0,LastResult:0,BestFailedResult:0,BestFailedMissing:!1,BestSuccessResult:0,BestSuccessMissing:!1},props:{Parser:null,InputStart:0,PrevWasMissing:!1},methods:{Init:function(parser,inputStart,prevWasMissing){this.Parser=parser;this.InputStart=inputStart;this.PrevWasMissing=prevWasMissing;this.InputLength=0;this.State=0;this.LastResult=0;this.BestFailedResult=0;this.BestFailedMissing=!1;this.BestSuccessResult=0;this.BestSuccessMissing=!1}}}});Bridge.define("Kusto.Language.Parsing.ScannerExtensions.ReuseableTextSource",{inherits:[Kusto.Language.Parsing.Source$1(System.Char)],$kind:"nested class",fields:{source:null,offset:0,end:0},ctors:{init:function(){this.source=""},ctor:function(){this.$initialize();Kusto.Language.Parsing.Source$1(System.Char).ctor.call(this)}},methods:{Init$1:function(source,offset,length){this.source=source;this.offset=offset;this.end=offset+length|0},Init:function(source){this.Init$1(source,0,source.length)},Clear:function(){this.source="";this.offset=0;this.end=0},Peek:function(n){return n===void 0&&(n=0),(this.offset+n|0)<this.end?this.source.charCodeAt(this.offset+n|0):0},IsEnd:function(n){return n===void 0&&(n=0),(this.offset+n|0)>=this.end},Eat:function(n){this.offset<this.end&&(this.offset=this.offset+n|0)}}});Bridge.define("Kusto.Language.Parsing.SequenceParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],fields:{_parsers:null},props:{Parsers:{get:function(){return this._parsers}}},ctors:{ctor:function(parsers){this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this._parsers=System.Linq.Enumerable.from(parsers).ToArray()}},methods:{Accept$1:function(visitor){visitor.VisitSequence(this)},Accept:function(TResult,visitor){return visitor.VisitSequence(this)},Clone:function(){return new(Kusto.Language.Parsing.SequenceParser$1(TInput))(this.Parsers)},Parse:function(source,inputStart,output){var $t,length=0,originalOutputCount=output.Count,parser,len;$t=Bridge.getEnumerator(this._parsers);try{while($t.moveNext()){if(parser=$t.Current,len=parser.Parse(source,inputStart+length|0,output,output.Count),len<0)return Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,originalOutputCount),(-length|0)+len|0;length=length+len|0}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return length},Scan:function(source,start){var $t,len=0,parser,n;$t=Bridge.getEnumerator(this._parsers);try{while($t.moveNext()){if(parser=$t.Current,n=parser.Scan(source,start+len|0),n<0)return n-len|0;len=len+n|0}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return len}}}});Bridge.define("Kusto.Language.Parsing.TextSource",{inherits:[Kusto.Language.Parsing.Source$1(System.Char)],fields:{source:null,offset:0,end:0,strings:null},props:{Position:{get:function(){return this.offset}}},ctors:{$ctor1:function(source,offset,length){this.$initialize();Kusto.Language.Parsing.Source$1(System.Char).ctor.call(this);this.source=source;this.offset=offset;this.end=offset+length|0},ctor:function(source){Kusto.Language.Parsing.TextSource.$ctor1.call(this,source,0,source.length)}},methods:{Peek:function(n){return n===void 0&&(n=0),(this.offset+n|0)<this.end?this.source.charCodeAt(this.offset+n|0):0},IsEnd:function(n){return n===void 0&&(n=0),(this.offset+n|0)>=this.end},Eat:function(n){this.offset<this.end&&(this.offset=this.offset+n|0)},PeekText:function(length){return this.PeekText$1(0,length)},PeekText$1:function(start,length){return this.strings==null&&(this.strings=new Kusto.Language.Utils.StringTable),this.strings.Add$1(this.source,this.offset+start|0,length)},Matches:function(start,text){var $t,offs=this.offset+start|0;return offs<this.source.length&&text.length>0&&this.source.charCodeAt(offs)===text.charCodeAt(0)&&($t=text.length,System.String.compare(this.source.substr(offs,$t),text.substr(0,$t)))===0},Matches$1:function(start,text,ignoreCase){var $t;return($t=text.length,System.String.compare(this.source.substr(this.offset+start|0,$t),text.substr(0,$t),ignoreCase))===0},EatText:function(length){var text=this.PeekText$1(0,length);return this.Eat(length),text}}});Bridge.define("Kusto.Language.Parsing.ZeroOrMoreParser$1",function(TInput){return{inherits:[Kusto.Language.Parsing.Parser$1(TInput)],props:{Parser:null,ZeroOrOne:!1,IsOptional:{get:function(){return!0}}},ctors:{ctor:function(parser,zeroOrOne){zeroOrOne===void 0&&(zeroOrOne=!1);this.$initialize();Kusto.Language.Parsing.Parser$1(TInput).ctor.call(this);this.Parser=parser;this.ZeroOrOne=zeroOrOne}},methods:{Accept$1:function(visitor){visitor.VisitZeroOrMore(this)},Accept:function(TResult,visitor){return visitor.VisitZeroOrMore(this)},Clone:function(){return new(Kusto.Language.Parsing.ZeroOrMoreParser$1(TInput))(this.Parser,this.ZeroOrOne)},Parse:function(source,inputStart,output){for(var length=0,len;;)if(len=this.Parser.Parse(source,inputStart+length|0,output,output.Count),len>0&&(length=length+len|0),len<=0||this.ZeroOrOne)return length},Scan:function(source,start){for(var len=0,n;;)if(n=this.Parser.Scan(source,start+len|0),n>0&&(len=len+n|0),n<=0||this.ZeroOrOne)break;return len}}}});Bridge.define("Kusto.Language.Symbols.TypeSymbol",{inherits:[Kusto.Language.Symbols.Symbol],ctors:{ctor:function(name){this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,name)}}});Bridge.define("Kusto.Language.Symbols.ColumnSymbol",{inherits:[Kusto.Language.Symbols.Symbol],statics:{methods:{Combine:function(kind,columnSets){var $t,result=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.ColumnSymbol).ctor),list;$t=Bridge.getEnumerator(columnSets,System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol));try{while($t.moveNext())list=$t.Current,result.AddRange(list)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}switch(kind){case Kusto.Language.Symbols.CombineKind.UnifySameNameAndType:Kusto.Language.Binding.Binder.UnifyColumnsWithSameNameAndType(result);break;case Kusto.Language.Symbols.CombineKind.UnifySameName:Kusto.Language.Binding.Binder.UnifyColumnsWithSameName(result);break;case Kusto.Language.Symbols.CombineKind.UniqueNames:Kusto.Language.Binding.Binder.MakeColumnNamesUnique(result)}return result},Combine$1:function(kind,columnSets){return columnSets===void 0&&(columnSets=[]),Kusto.Language.Symbols.ColumnSymbol.Combine(kind,Bridge.cast(columnSets,System.Collections.Generic.IEnumerable$1(System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Symbols.ColumnSymbol))))}}},props:{Type:null,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Column}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Scalar}}},ctors:{ctor:function(name,type){this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,name);this.Type=type||function(){throw new System.ArgumentNullException.$ctor1("type");}()}},methods:{WithName:function(name){return Bridge.referenceEquals(name,this.Name)?this:new Kusto.Language.Symbols.ColumnSymbol(name,this.Type)},WithType:function(type){return Bridge.referenceEquals(type,this.Type)?this:new Kusto.Language.Symbols.ColumnSymbol(this.Name,type)},GetDisplay:function(){return System.String.format("{0}: {1}",this.Name,this.Type.Display)}}});Bridge.define("Kusto.Language.Symbols.CommandSymbol",{inherits:[Kusto.Language.Symbols.Symbol],props:{Grammar:null,Type:null,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Command}}},ctors:{$ctor1:function(name,grammar,type){type===void 0&&(type=null);this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,name);this.Grammar=grammar;this.Type=type||Kusto.Language.Symbols.VoidSymbol.Instance},ctor:function(grammar,type){type===void 0&&(type=null);Kusto.Language.Symbols.CommandSymbol.$ctor1.call(this,grammar,grammar,type)}}});Bridge.define("Kusto.Language.Symbols.OperatorSymbol",{inherits:[Kusto.Language.Symbols.Symbol],props:{Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Operator}},OperatorKind:0,Result:null,Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Scalar}},Signatures:null},ctors:{$ctor2:function(kind,signatures){var $t,signature;this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,System.Enum.toString(Kusto.Language.Symbols.OperatorKind,kind));this.OperatorKind=kind;this.Signatures=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.Signature,signatures);$t=Bridge.getEnumerator(this.Signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())signature=$t.Current,signature.Symbol=this}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},ctor:function(kind,signatures){signatures===void 0&&(signatures=[]);Kusto.Language.Symbols.OperatorSymbol.$ctor2.call(this,kind,Bridge.cast(signatures,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Signature)))},$ctor1:function(kind,result){Kusto.Language.Symbols.OperatorSymbol.ctor.call(this,kind,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor7(result)],Kusto.Language.Symbols.Signature))}}});Bridge.define("Kusto.Language.Symbols.ParameterSymbol",{inherits:[Kusto.Language.Symbols.Symbol],props:{Type:null,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Parameter}},Tabularity:{get:function(){return this.Type.Tabularity}}},ctors:{ctor:function(name,type){this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,name);this.Type=type}},methods:{GetDisplay:function(){return System.String.format("{0}: {1}",this.Name,this.Type.Display)}}});Bridge.define("Kusto.Language.Symbols.VariableSymbol",{inherits:[Kusto.Language.Symbols.Symbol],props:{Type:null,IsConstant:!1,ConstantValue:null,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Variable}},Tabularity:{get:function(){return this.Type.Tabularity}}},ctors:{ctor:function(name,type,isConstant,constantValue){isConstant===void 0&&(isConstant=!1);constantValue===void 0&&(constantValue=null);this.$initialize();Kusto.Language.Symbols.Symbol.ctor.call(this,name);this.Type=type;this.IsConstant=isConstant;this.ConstantValue=constantValue}},methods:{GetDisplay:function(){return System.String.format("let {0}: {1}",this.Name,this.Type.Display)}}});Bridge.define("Kusto.Language.Syntax.SyntaxNode",{inherits:[Kusto.Language.Syntax.SyntaxElement],fields:{fullWidth:0},props:{ReferencedSymbol:{get:function(){var $t;return($t=this.GetSemanticInfo())!=null?$t.ReferencedSymbol:null}},SemanticDiagnostics:{get:function(){var $t;return(($t=this.GetSemanticInfo())!=null?$t.Diagnostics:null)||Kusto.Language.Diagnostic.NoDiagnostics}},IsBound:{get:function(){return this.GetSemanticInfo()!=null}},FullWidth:{get:function(){return this.fullWidth}}},ctors:{ctor:function(diagnostics){this.$initialize();Kusto.Language.Syntax.SyntaxElement.ctor.call(this,diagnostics)}},methods:{GetExpansion:function(){var $t,$t1;return($t=this.GetSemanticInfo())!=null&&!Bridge.staticEquals($t1=$t.Expander,null)?$t1():null},GetSemanticInfo:function(){var data=this.GetExtendedData(!1);return data!=null?data.SemanticInfo:null},Init:function(){Kusto.Language.Syntax.SyntaxElement.prototype.Init.call(this);this.fullWidth=this.ComputeFullWidth()},Clone$1:function(){return Bridge.cast(this.CloneCore(),Kusto.Language.Syntax.SyntaxNode)}}});Bridge.define("Kusto.Language.Syntax.DefaultSyntaxVisitor$1",function(TResult){return{inherits:[Kusto.Language.Syntax.SyntaxVisitor$1(TResult)],methods:{VisitDirectiveBlock:function(node){return this.DefaultVisit(node)},VisitSkippedTokens:function(node){return this.DefaultVisit(node)},VisitQueryBlock:function(node){return this.DefaultVisit(node)},VisitTypeOfLiteralExpression:function(node){return this.DefaultVisit(node)},VisitBadQueryOperator:function(node){return this.DefaultVisit(node)},VisitCompoundStringLiteralExpression:function(node){return this.DefaultVisit(node)},VisitTokenName:function(node){return this.DefaultVisit(node)},VisitBrackettedName:function(node){return this.DefaultVisit(node)},VisitBracedName:function(node){return this.DefaultVisit(node)},VisitWildcardedName:function(node){return this.DefaultVisit(node)},VisitNameDeclaration:function(node){return this.DefaultVisit(node)},VisitNameReference:function(node){return this.DefaultVisit(node)},VisitLiteralExpression:function(node){return this.DefaultVisit(node)},VisitStarExpression:function(node){return this.DefaultVisit(node)},VisitAtExpression:function(node){return this.DefaultVisit(node)},VisitJsonPair:function(node){return this.DefaultVisit(node)},VisitJsonObjectExpression:function(node){return this.DefaultVisit(node)},VisitJsonArrayExpression:function(node){return this.DefaultVisit(node)},VisitDynamicExpression:function(node){return this.DefaultVisit(node)},VisitParenthesizedExpression:function(node){return this.DefaultVisit(node)},VisitExpressionList:function(node){return this.DefaultVisit(node)},VisitExpressionCouple:function(node){return this.DefaultVisit(node)},VisitPrefixUnaryExpression:function(node){return this.DefaultVisit(node)},VisitBinaryExpression:function(node){return this.DefaultVisit(node)},VisitInExpression:function(node){return this.DefaultVisit(node)},VisitHasAnyExpression:function(node){return this.DefaultVisit(node)},VisitBetweenExpression:function(node){return this.DefaultVisit(node)},VisitFunctionCallExpression:function(node){return this.DefaultVisit(node)},VisitToScalarExpression:function(node){return this.DefaultVisit(node)},VisitToTableExpression:function(node){return this.DefaultVisit(node)},VisitSimpleNamedExpression:function(node){return this.DefaultVisit(node)},VisitRenameList:function(node){return this.DefaultVisit(node)},VisitCompoundNamedExpression:function(node){return this.DefaultVisit(node)},VisitBrackettedExpression:function(node){return this.DefaultVisit(node)},VisitConditionedExpression:function(node){return this.DefaultVisit(node)},VisitPathExpression:function(node){return this.DefaultVisit(node)},VisitElementExpression:function(node){return this.DefaultVisit(node)},VisitPipeExpression:function(node){return this.DefaultVisit(node)},VisitRangeOperator:function(node){return this.DefaultVisit(node)},VisitNamedParameter:function(node){return this.DefaultVisit(node)},VisitConsumeOperator:function(node){return this.DefaultVisit(node)},VisitCountOperator:function(node){return this.DefaultVisit(node)},VisitCountAsIdentifierClause:function(node){return this.DefaultVisit(node)},VisitExecuteAndCacheOperator:function(node){return this.DefaultVisit(node)},VisitExtendOperator:function(node){return this.DefaultVisit(node)},VisitFacetOperator:function(node){return this.DefaultVisit(node)},VisitFacetWithOperatorClause:function(node){return this.DefaultVisit(node)},VisitFacetWithExpressionClause:function(node){return this.DefaultVisit(node)},VisitFilterOperator:function(node){return this.DefaultVisit(node)},VisitGetSchemaOperator:function(node){return this.DefaultVisit(node)},VisitFindOperator:function(node){return this.DefaultVisit(node)},VisitDataScopeClause:function(node){return this.DefaultVisit(node)},VisitTypedColumnReference:function(node){return this.DefaultVisit(node)},VisitFindInClause:function(node){return this.DefaultVisit(node)},VisitFindProjectClause:function(node){return this.DefaultVisit(node)},VisitPackExpression:function(node){return this.DefaultVisit(node)},VisitNameAndTypeDeclaration:function(node){return this.DefaultVisit(node)},VisitPrimitiveTypeExpression:function(node){return this.DefaultVisit(node)},VisitSearchOperator:function(node){return this.DefaultVisit(node)},VisitForkOperator:function(node){return this.DefaultVisit(node)},VisitNameEqualsClause:function(node){return this.DefaultVisit(node)},VisitForkExpression:function(node){return this.DefaultVisit(node)},VisitMakeSeriesOperator:function(node){return this.DefaultVisit(node)},VisitMakeSeriesExpression:function(node){return this.DefaultVisit(node)},VisitDefaultExpressionClause:function(node){return this.DefaultVisit(node)},VisitMakeSeriesOnClause:function(node){return this.DefaultVisit(node)},VisitMakeSeriesInRangeClause:function(node){return this.DefaultVisit(node)},VisitMakeSeriesFromToStepClause:function(node){return this.DefaultVisit(node)},VisitMakeSeriesByClause:function(node){return this.DefaultVisit(node)},VisitMvExpandOperator:function(node){return this.DefaultVisit(node)},VisitMvExpandExpression:function(node){return this.DefaultVisit(node)},VisitMvExpandRowLimitClause:function(node){return this.DefaultVisit(node)},VisitMvApplyOperator:function(node){return this.DefaultVisit(node)},VisitMvApplyExpression:function(node){return this.DefaultVisit(node)},VisitMvApplyRowLimitClause:function(node){return this.DefaultVisit(node)},VisitMvApplyContextIdClause:function(node){return this.DefaultVisit(node)},VisitMvApplySubqueryExpression:function(node){return this.DefaultVisit(node)},VisitToTypeOfClause:function(node){return this.DefaultVisit(node)},VisitEvaluateOperator:function(node){return this.DefaultVisit(node)},VisitParseOperator:function(node){return this.DefaultVisit(node)},VisitPartitionOperator:function(node){return this.DefaultVisit(node)},VisitPartitionExpression:function(node){return this.DefaultVisit(node)},VisitProjectOperator:function(node){return this.DefaultVisit(node)},VisitProjectAwayOperator:function(node){return this.DefaultVisit(node)},VisitProjectRenameOperator:function(node){return this.DefaultVisit(node)},VisitProjectReorderOperator:function(node){return this.DefaultVisit(node)},VisitSampleOperator:function(node){return this.DefaultVisit(node)},VisitSampleDistinctOperator:function(node){return this.DefaultVisit(node)},VisitReduceByOperator:function(node){return this.DefaultVisit(node)},VisitReduceByWithClause:function(node){return this.DefaultVisit(node)},VisitSummarizeOperator:function(node){return this.DefaultVisit(node)},VisitSummarizeByClause:function(node){return this.DefaultVisit(node)},VisitDistinctOperator:function(node){return this.DefaultVisit(node)},VisitTakeOperator:function(node){return this.DefaultVisit(node)},VisitSortOperator:function(node){return this.DefaultVisit(node)},VisitOrderedExpression:function(node){return this.DefaultVisit(node)},VisitOrderingClause:function(node){return this.DefaultVisit(node)},VisitOrderingNullsClause:function(node){return this.DefaultVisit(node)},VisitTopHittersOperator:function(node){return this.DefaultVisit(node)},VisitTopHittersByClause:function(node){return this.DefaultVisit(node)},VisitTopOperator:function(node){return this.DefaultVisit(node)},VisitTopNestedOperator:function(node){return this.DefaultVisit(node)},VisitTopNestedClause:function(node){return this.DefaultVisit(node)},VisitTopNestedWithOthersClause:function(node){return this.DefaultVisit(node)},VisitUnionOperator:function(node){return this.DefaultVisit(node)},VisitAsOperator:function(node){return this.DefaultVisit(node)},VisitSerializeOperator:function(node){return this.DefaultVisit(node)},VisitInvokeOperator:function(node){return this.DefaultVisit(node)},VisitRenderOperator:function(node){return this.DefaultVisit(node)},VisitRenderNameList:function(node){return this.DefaultVisit(node)},VisitRenderWithClause:function(node){return this.DefaultVisit(node)},VisitPrintOperator:function(node){return this.DefaultVisit(node)},VisitAliasStatement:function(node){return this.DefaultVisit(node)},VisitLetStatement:function(node){return this.DefaultVisit(node)},VisitFunctionDeclaration:function(node){return this.DefaultVisit(node)},VisitFunctionParameters:function(node){return this.DefaultVisit(node)},VisitFunctionParameter:function(node){return this.DefaultVisit(node)},VisitDefaultValueDeclaration:function(node){return this.DefaultVisit(node)},VisitFunctionBody:function(node){return this.DefaultVisit(node)},VisitSchemaTypeExpression:function(node){return this.DefaultVisit(node)},VisitExpressionStatement:function(node){return this.DefaultVisit(node)},VisitMaterializeExpression:function(node){return this.DefaultVisit(node)},VisitSetOptionStatement:function(node){return this.DefaultVisit(node)},VisitOptionValueClause:function(node){return this.DefaultVisit(node)},VisitQueryParametersStatement:function(node){return this.DefaultVisit(node)},VisitRestrictStatement:function(node){return this.DefaultVisit(node)},VisitPatternStatement:function(node){return this.DefaultVisit(node)},VisitPatternDeclaration:function(node){return this.DefaultVisit(node)},VisitPatternPathParameter:function(node){return this.DefaultVisit(node)},VisitPatternMatch:function(node){return this.DefaultVisit(node)},VisitPatternPathValue:function(node){return this.DefaultVisit(node)},VisitDataScopeExpression:function(node){return this.DefaultVisit(node)},VisitDataTableExpression:function(node){return this.DefaultVisit(node)},VisitExternalDataExpression:function(node){return this.DefaultVisit(node)},VisitExternalDataWithClause:function(node){return this.DefaultVisit(node)},VisitJoinOperator:function(node){return this.DefaultVisit(node)},VisitLookupOperator:function(node){return this.DefaultVisit(node)},VisitJoinOnClause:function(node){return this.DefaultVisit(node)},VisitJoinWhereClause:function(node){return this.DefaultVisit(node)},VisitCommandWithValueClause:function(node){return this.DefaultVisit(node)},VisitCommandWithPropertyListClause:function(node){return this.DefaultVisit(node)},VisitUnknownCommand:function(node){return this.DefaultVisit(node)},VisitCustomCommand:function(node){return this.DefaultVisit(node)},VisitBadCommand:function(node){return this.DefaultVisit(node)},VisitCommandBlock:function(node){return this.DefaultVisit(node)},VisitCustom:function(node){return this.DefaultVisit(node)},VisitList:function(list){return this.DefaultVisit(list)},VisitSeparatedElement:function(separatedElement){return this.DefaultVisit(separatedElement)}}}});Bridge.define("Kusto.Language.Syntax.SyntaxToken",{inherits:[Kusto.Language.Syntax.SyntaxElement,Kusto.Language.Parsing.IToken],statics:{methods:{From:function(token,diagnostic){diagnostic===void 0&&(diagnostic=null);var dx=token.Diagnostics;diagnostic!=null&&(dx=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Diagnostic,System.Linq.Enumerable.from(dx).concat(System.Array.init([diagnostic],Kusto.Language.Diagnostic))));switch(Kusto.Language.Syntax.SyntaxFacts.GetCategory(token.Kind)){case Kusto.Language.Syntax.SyntaxCategory.Identifier:return Kusto.Language.Syntax.SyntaxToken.Identifier(token.Trivia,token.Text,dx);case Kusto.Language.Syntax.SyntaxCategory.Keyword:return Kusto.Language.Syntax.SyntaxToken.Keyword(token.Trivia,token.Kind,dx);case Kusto.Language.Syntax.SyntaxCategory.Literal:return Kusto.Language.Syntax.SyntaxToken.Literal(token.Trivia,token.Text,token.Kind,dx);case Kusto.Language.Syntax.SyntaxCategory.Punctuation:return Kusto.Language.Syntax.SyntaxToken.Punctuation(token.Trivia,token.Kind,dx);case Kusto.Language.Syntax.SyntaxCategory.Operator:return Kusto.Language.Syntax.SyntaxToken.Operator(token.Trivia,token.Kind,dx);case Kusto.Language.Syntax.SyntaxCategory.Other:default:return Kusto.Language.Syntax.SyntaxToken.Other(token.Trivia,token.Text,token.Kind,dx)}},Keyword:function(trivia,keyword,diagnostics){return diagnostics===void 0&&(diagnostics=null),Kusto.Language.Syntax.SyntaxToken.CheckCategory(keyword,Kusto.Language.Syntax.SyntaxCategory.Keyword),new Kusto.Language.Syntax.SyntaxToken.KindToken(trivia,keyword,diagnostics)},Identifier:function(trivia,text,diagnostics){return diagnostics===void 0&&(diagnostics=null),new Kusto.Language.Syntax.SyntaxToken.IdentifierToken(trivia,text,diagnostics)},Punctuation:function(trivia,kind,diagnostics){return diagnostics===void 0&&(diagnostics=null),Kusto.Language.Syntax.SyntaxToken.CheckCategory(kind,Kusto.Language.Syntax.SyntaxCategory.Punctuation),new Kusto.Language.Syntax.SyntaxToken.KindToken(trivia,kind,diagnostics)},Operator:function(trivia,kind,diagnostics){return diagnostics===void 0&&(diagnostics=null),Kusto.Language.Syntax.SyntaxToken.CheckCategory(kind,Kusto.Language.Syntax.SyntaxCategory.Operator),new Kusto.Language.Syntax.SyntaxToken.KindToken(trivia,kind,diagnostics)},Literal:function(trivia,text,kind,diagnostics){return diagnostics===void 0&&(diagnostics=null),Kusto.Language.Syntax.SyntaxToken.CheckCategory(kind,Kusto.Language.Syntax.SyntaxCategory.Literal),new Kusto.Language.Syntax.SyntaxToken.LiteralToken(trivia,text,kind,diagnostics)},Other:function(trivia,text,kind,diagnostics){return diagnostics===void 0&&(diagnostics=null),Kusto.Language.Syntax.SyntaxToken.CheckCategory(kind,Kusto.Language.Syntax.SyntaxCategory.Other),new Kusto.Language.Syntax.SyntaxToken.TextAndKindToken(trivia,text,kind,diagnostics)},Missing$1:function(trivia,kind,diagnostics){return new Kusto.Language.Syntax.SyntaxToken.MissingToken(trivia,kind,diagnostics)},Missing:function(kind,diagnostic){return diagnostic===void 0&&(diagnostic=null),new Kusto.Language.Syntax.SyntaxToken.MissingToken("",kind,diagnostic!=null?System.Array.init([diagnostic],Kusto.Language.Diagnostic):null)},CheckCategory:function(kind,category){if(Kusto.Language.Syntax.SyntaxFacts.GetCategory(kind)!==category)throw new System.ArgumentException.$ctor1(System.String.format("The kind {0} is not a {1}",Bridge.box(kind,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind)),System.Enum.toString(Kusto.Language.Syntax.SyntaxCategory,category).toLowerCase()));}}},props:{Value:{get:function(){return this.Text}},ValueText:{get:function(){return this.Text}},ChildCount:{get:function(){return 0}},TriviaWidth:{get:function(){return this.Trivia.length}},FullWidth:{get:function(){return this.Trivia.length+this.Text.length|0}},Width:{get:function(){return this.Text.length}},IsToken:{get:function(){return!0}},IsLiteral:{get:function(){return!1}},Prefix:{get:function(){return""}}},alias:["FullWidth","Kusto$Language$Parsing$IToken$FullWidth","Width","Kusto$Language$Parsing$IToken$Width","TriviaStart","Kusto$Language$Parsing$IToken$TriviaStart","TextStart","Kusto$Language$Parsing$IToken$TextStart","Kind","Kusto$Language$Parsing$IToken$Kind"],ctors:{ctor:function(diagnostics){this.$initialize();Kusto.Language.Syntax.SyntaxElement.ctor.call(this,diagnostics)}},methods:{Clone$1:function(){return Bridge.cast(this.CloneCore(),Kusto.Language.Syntax.SyntaxToken)},ToString:function(includeTrivia){if(System.String.isNullOrEmpty(this.Trivia))return this.Text;switch(includeTrivia){case Kusto.Language.Syntax.IncludeTrivia.All:return(this.Trivia||"")+(this.Text||"");default:return this.Text}},Write:function(builder,includeTrivia,initialTriviaStart){if(!System.String.isNullOrEmpty(this.Trivia))switch(includeTrivia){case Kusto.Language.Syntax.IncludeTrivia.All:builder.append(this.Trivia);break;case Kusto.Language.Syntax.IncludeTrivia.Interior:this.TriviaStart>initialTriviaStart&&builder.append(this.Trivia);break;case Kusto.Language.Syntax.IncludeTrivia.Minimal:this.TriviaStart>initialTriviaStart&&(System.String.contains(this.Trivia,"\n")?builder.append("\n"):builder.append(" "))}builder.append(this.Text)},GetNextToken:function(includeZeroWidthTokens){var node,sibling,first;for(includeZeroWidthTokens===void 0&&(includeZeroWidthTokens=!1),node=this;node!=null;node=node.Parent)if(sibling=node.GetNextSibling(),sibling!=null){if(sibling.IsToken)return Bridge.cast(sibling,Kusto.Language.Syntax.SyntaxToken);if(first=sibling.GetFirstToken(includeZeroWidthTokens),first!=null)return first}return null},GetPreviousToken:function(includeZeroWidthTokens){var node,sibling,last;for(includeZeroWidthTokens===void 0&&(includeZeroWidthTokens=!1),node=this;node!=null;node=node.Parent)if(sibling=node.GetPreviousSibling(),sibling!=null){if(sibling.IsToken)return Bridge.cast(sibling,Kusto.Language.Syntax.SyntaxToken);if(last=sibling.GetLastToken(includeZeroWidthTokens),last!=null)return last}return null}}});Bridge.define("Kusto.Language.Utils.StringTable",{inherits:[System.Collections.Generic.IEnumerable$1(System.String)],fields:{map:null},alias:["GetEnumerator",["System$Collections$Generic$IEnumerable$1$System$String$GetEnumerator","System$Collections$Generic$IEnumerable$1$GetEnumerator"]],ctors:{init:function(){this.map=new(Kusto.Language.Utils.TextKeyedDictionary$1(System.String))},ctor:function(){this.$initialize()}},methods:{Add:function(text){var result={};return this.map.TryGetValue(text,0,text.length,result)||(result.v=this.map.GetOrAddValue$3(text,0,text.length,function(_t,_s,_l){return _s>0||_l<_t.length?_t.substr(_s,_l):_t})),result.v},Add$2:function(strings){var $t,s;$t=Bridge.getEnumerator(strings,System.String);try{while($t.moveNext())s=$t.Current,this.Add(s)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}},Add$1:function(text,start,length){var result={};return this.map.TryGetValue(text,start,length,result)||(result.v=this.map.GetOrAddValue$3(text,start,length,function(_t,_s,_l){return _t.substr(_s,_l)})),result.v},Contains:function(text){return this.map.ContainsKey(text)},ContainsKey:function(text,start,length){return this.map.ContainsKey$1(text,start,length)},GetEnumerator:function(){return this.map.GetEnumerator()},System$Collections$IEnumerable$GetEnumerator:function(){return this.GetEnumerator()}}});Bridge.define("Kusto.Language.Binding.Binder.AsContextBuilder",{inherits:[Kusto.Language.Syntax.DefaultSyntaxVisitor],$kind:"nested class",fields:{_position:0,_binder:null},ctors:{ctor:function(position,binder){this.$initialize();Kusto.Language.Syntax.DefaultSyntaxVisitor.ctor.call(this);this._position=position;this._binder=binder}},methods:{DefaultVisit:function(node){var i,n,child;if(node!=null)for(i=0,n=node.ChildCount;i<n;i=i+1|0)child=Bridge.as(node.GetChild(i),Kusto.Language.Syntax.SyntaxNode),child!=null&&child.Accept$1(this)},VisitAsOperator:function(node){var name,type,declaration;Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitAsOperator.call(this,node);name=node.Name.SimpleName;type=node.ResultType;!System.String.isNullOrEmpty(name)&&this._position>node.End&&type!=null&&(declaration=new Kusto.Language.Symbols.VariableSymbol(node.Name.SimpleName,type),this._binder._localScope.AddDeclaration(declaration))},VisitFunctionBody:function(node){this._position>node.TextStart&&this._position<node.End&&Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitFunctionBody.call(this,node)},VisitCommandBlock:function(node){var command,commandResults;Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitCommandBlock.call(this,node);node.Statements.Count>0&&node.Statements.getItem$1(0).Separator!=null&&this._position>node.Statements.getItem$1(0).End&&(command=node.Statements.getItem$1(0).Element$1.GetFirstDescendant(Kusto.Language.Syntax.Command),command!=null&&(commandResults=new Kusto.Language.Symbols.VariableSymbol("$command_results",this._binder.GetResultTypeOrError(command)),this._binder._localScope.AddDeclaration(commandResults)))}}});Bridge.define("Kusto.Language.Binding.Binder.ContextBuilder",{inherits:[Kusto.Language.Syntax.DefaultSyntaxVisitor],$kind:"nested class",statics:{methods:{IsIncomplete:function(node){var $t,last=node.GetLastToken(!0);return $t=last!=null?last.IsMissing:null,$t!=null?$t:!1}}},fields:{_binder:null,_position:0,_asBuilder:null},ctors:{ctor:function(binder,position){this.$initialize();Kusto.Language.Syntax.DefaultSyntaxVisitor.ctor.call(this);this._binder=binder;this._position=position;this._asBuilder=new Kusto.Language.Binding.Binder.AsContextBuilder(position,this._binder)}},methods:{DefaultVisit:function(node){for(var parentNode,parent=node.Parent;parent!=null;parent=parent.Parent)if((parentNode=parent)!=null){parentNode.Accept$1(this);break}node.Parent==null&&node.Accept$1(this._asBuilder)},VisitPathExpression:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitPathExpression.call(this,node);this._position>=node.Selector.TriviaStart&&(this._binder._pathScope=node.Expression.ResultType)},VisitElementExpression:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitElementExpression.call(this,node);this._position>=node.Selector.TriviaStart&&(this._binder._pathScope=node.Expression.ResultType)},VisitParenthesizedExpression:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitParenthesizedExpression.call(this,node);this._binder._pathScope=null;this._binder._implicitArgumentType=null},VisitFunctionCallExpression:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitFunctionCallExpression.call(this,node);this._position>=node.ArgumentList.TextStart&&(this._binder._pathScope=null,this._binder._scopeKind=Kusto.Language.Binding.Binder.ScopeKind.Normal,this._binder._implicitArgumentType=null)},VisitPipeExpression:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitPipeExpression.call(this,node);this._position>=node.Operator.TriviaStart&&(this._binder._rowScope=Bridge.as(node.Expression.ResultType,Kusto.Language.Symbols.TableSymbol))},VisitEvaluateOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitEvaluateOperator.call(this,node);this._binder._scopeKind=Kusto.Language.Binding.Binder.ScopeKind.PlugIn},VisitSummarizeOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitSummarizeOperator.call(this,node);(node.ByClause==null||this._position<node.ByClause.TextStart)&&(this._binder._scopeKind=Kusto.Language.Binding.Binder.ScopeKind.Aggregate)},VisitList:function(list){var i,n,se,ls,qps,ps;if(Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitList.call(this,list),Bridge.referenceEquals(list.ElementType,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)))for(i=0,n=list.Count;i<n;i=i+1|0){if(se=Bridge.cast(list.getItem(i),Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),this._position<se.End||Kusto.Language.Binding.Binder.ContextBuilder.IsIncomplete(se))break;(ls=Bridge.as(se.Element$1,Kusto.Language.Syntax.LetStatement))!=null?this._binder.AddLetDeclarationToScope(this._binder._localScope,ls):(qps=Bridge.as(se.Element$1,Kusto.Language.Syntax.QueryParametersStatement))!=null?this._binder.AddDeclarationsToLocalScope(this._binder._localScope,qps.Parameters):(ps=Bridge.as(se.Element$1,Kusto.Language.Syntax.PatternStatement))!=null&&this._binder._localScope.AddDeclaration(this._binder.GetReferencedSymbol(ps.Name))}},VisitFunctionDeclaration:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitFunctionDeclaration.call(this,node);this._position>=node.Body.TextStart&&(this._position<node.Body.End||node.Body.CloseBrace.IsMissing&&this._position<=(node.Body.End+1|0))&&this._binder.AddDeclarationsToLocalScope(this._binder._localScope,node.Parameters.Parameters)},VisitPatternDeclaration:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitPatternDeclaration.call(this,node);this._position>node.Patterns.TextStart&&(this._binder.AddDeclarationsToLocalScope$1(this._binder._localScope,node.Parameters),node.PathParameter!=null&&this._binder.AddDeclarationToLocalScope(this._binder._localScope,node.PathParameter.Parameter))},VisitJoinOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitJoinOperator.call(this,node);node.ConditionClause==null||this._position<node.ConditionClause.TextStart?this._binder._rowScope=null:node.ConditionClause!=null&&this._position>=node.ConditionClause.TextStart&&(this._binder._rightRowScope=Bridge.as(node.Expression.ResultType,Kusto.Language.Symbols.TableSymbol))},VisitLookupOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitLookupOperator.call(this,node);this._position<node.LookupClause.TextStart?this._binder._rowScope=null:this._binder._rightRowScope=Bridge.as(node.Expression.ResultType,Kusto.Language.Symbols.TableSymbol)},VisitUnionOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitUnionOperator.call(this,node);this._binder._rowScope=null},VisitFindOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitFindOperator.call(this,node);(node.InClause==null||this._position>=node.InClause.End)&&(this._binder._rowScope=this._binder.GetFindColumnsTable(node))},VisitSearchOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitSearchOperator.call(this,node);this._position>=node.Condition.TextStart&&(this._binder._rowScope=this._binder.GetSearchColumnsTable(node));node.InClause!=null&&this._position>=node.InClause.TextStart&&(this._binder._rowScope=null)},VisitMvApplyOperator:function(node){if(Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitMvApplyOperator.call(this,node),this._position>=node.OnKeyword.TextStart){var info=new Kusto.Language.Binding.Binder.NodeBinder(this._binder).VisitMvApplyOperator(node);this._binder._rowScope=Bridge.as(info!=null?info.ResultType:null,Kusto.Language.Symbols.TableSymbol)}},VisitInvokeOperator:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitInvokeOperator.call(this,node);node.Function!=null&&!node.Function.IsMissing&&this._position>node.Function.TextStart&&(this._binder._rowScope=null)},VisitCustomCommand:function(node){var nearestTableRef=System.Linq.Enumerable.from(node.GetDescendants(Kusto.Language.Syntax.NameReference,function(nr){return Bridge.is(nr.ReferencedSymbol,Kusto.Language.Symbols.TableSymbol)})).where(Bridge.fn.bind(this,function(nr){return nr.End<=this._position})).lastOrDefault(null,null);nearestTableRef!=null&&(this._binder._rowScope=Bridge.cast(nearestTableRef.ReferencedSymbol,Kusto.Language.Symbols.TableSymbol))}}});Bridge.define("Kusto.Language.Binding.Binder.NodeBinder",{inherits:[Kusto.Language.Syntax.SyntaxVisitor$1(Kusto.Language.Syntax.SemanticInfo)],$kind:"nested class",statics:{fields:{toScalarKind:null,toTableKind:null,s_SummarizeParameters:null,s_ConsumeStatsSchema:null,s_ConsumeParameters:null,s_AsParameters:null,s_PartitionParameters:null,s_SearchParameters:null,s_FindParameters:null,s_UnionParameters:null,s_JoinParameters:null,s_MvExpandParameters:null,s_MvApplyParameters:null,s_ReduceColumns:null,s_ReduceQueryParameters:null,s_ReduceWithParameters:null,s_RenderKindProperty:null,s_RenderTitleProperty:null,s_RenderAccumulateProperty:null,s_RenderProperties:null,s_ParseParameters:null,s_GetSchemaSchema:null,s_GetSchemaInfo:null},ctors:{init:function(){this.toScalarKind=new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.KindKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.ToScalarKinds,!1);this.toTableKind=new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.KindKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.ToTableKinds,!1);this.s_SummarizeParameters=System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.HintDotShuffleKeyKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.Column,!0,void 0,!0),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.HintDotNumPartitions),Kusto.Language.Binding.Binder.QueryParameterKind.Integer,!0,void 0,!1)],Kusto.Language.Binding.Binder.QueryParameterInfo);this.s_ConsumeStatsSchema=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("Stats",Kusto.Language.Symbols.ScalarTypes.Dynamic)]);this.s_ConsumeParameters=System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3("decodeblocks",Kusto.Language.Binding.Binder.QueryParameterKind.BoolLiteral,!0,void 0,!1)],Kusto.Language.Binding.Binder.QueryParameterInfo);this.s_AsParameters=System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.HintDotMaterializedKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.BoolLiteral)],Kusto.Language.Binding.Binder.QueryParameterInfo);this.s_PartitionParameters=System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor5(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.HintDotConcurrencyKeyword),System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterValueInfo.$ctor1(Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.JoinHintRemotes),new Kusto.Language.Binding.Binder.QueryParameterValueInfo.$ctor1(Kusto.Language.Binding.Binder.QueryParameterKind.Number)],Kusto.Language.Binding.Binder.QueryParameterValueInfo)),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor5(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.HintDotSpreadKeyword),System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterValueInfo.$ctor1(Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.JoinHintRemotes),new Kusto.Language.Binding.Binder.QueryParameterValueInfo.$ctor1(Kusto.Language.Binding.Binder.QueryParameterKind.Number)],Kusto.Language.Binding.Binder.QueryParameterValueInfo)),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.HintDotMaterializedKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.BoolLiteral)],Kusto.Language.Binding.Binder.QueryParameterInfo);this.s_SearchParameters=System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.KindKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.SearchKinds,!1)],Kusto.Language.Binding.Binder.QueryParameterInfo);this.s_FindParameters=System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.KustoFacts.FindWithSourceProperty,Kusto.Language.Binding.Binder.QueryParameterKind.NameDeclaration)],Kusto.Language.Binding.Binder.QueryParameterInfo);this.s_UnionParameters=System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.KindKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.UnionKinds,!1),new Kusto.Language.Binding.Binder.QueryParameterInfo.ctor(System.Array.init(["withsource","with_source"],System.String),Kusto.Language.Binding.Binder.QueryParameterKind.NameDeclaration),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.IsFuzzyKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.BoolLiteral)],Kusto.Language.Binding.Binder.QueryParameterInfo);this.s_JoinParameters=System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.KindKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.JoinKinds,!1),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.HintDotRemoteKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.JoinHintRemotes,!1),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.HintDotShuffleKeyKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.Column,!0,void 0,!0),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.HintDotStrategyKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.JoinHintStrategies,!1),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.HintDotNumPartitions),Kusto.Language.Binding.Binder.QueryParameterKind.Integer,!0,void 0,!1)],Kusto.Language.Binding.Binder.QueryParameterInfo);this.s_MvExpandParameters=System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.KustoFacts.MvExpandBagExpansionProperty,Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.MvExpandBagExpansions,!1),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.KustoFacts.MvExpandWithItemIndexProperty,Kusto.Language.Binding.Binder.QueryParameterKind.NameDeclaration)],Kusto.Language.Binding.Binder.QueryParameterInfo);this.s_MvApplyParameters=System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.KustoFacts.MvApplyWithItemIndexProperty,Kusto.Language.Binding.Binder.QueryParameterKind.NameDeclaration)],Kusto.Language.Binding.Binder.QueryParameterInfo);this.s_ReduceColumns=System.Array.init([new Kusto.Language.Symbols.ColumnSymbol("Pattern",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("Count",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("Representative",Kusto.Language.Symbols.ScalarTypes.String)],Kusto.Language.Symbols.ColumnSymbol);this.s_ReduceQueryParameters=System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.KindKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,System.Array.init(["source"],System.String),!1)],Kusto.Language.Binding.Binder.QueryParameterInfo);this.s_ReduceWithParameters=System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.ThresholdKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.Number),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor4(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.CharactersKeyword),Kusto.Language.Symbols.ScalarTypes.String)],Kusto.Language.Binding.Binder.QueryParameterInfo);this.s_RenderKindProperty=new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.KindKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.ChartKinds,!1);this.s_RenderTitleProperty=new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor4(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.TitleKeyword),Kusto.Language.Symbols.ScalarTypes.String);this.s_RenderAccumulateProperty=new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.AccumulateKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.BoolLiteral);this.s_RenderProperties=System.Array.init([Kusto.Language.Binding.Binder.NodeBinder.s_RenderKindProperty,Kusto.Language.Binding.Binder.NodeBinder.s_RenderTitleProperty,Kusto.Language.Binding.Binder.NodeBinder.s_RenderAccumulateProperty,new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3("xcolumn",Kusto.Language.Binding.Binder.QueryParameterKind.NameDeclaration),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3("ycolumns",Kusto.Language.Binding.Binder.QueryParameterKind.NameDeclarationList),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3("anomalycolumns",Kusto.Language.Binding.Binder.QueryParameterKind.NameDeclarationList),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3("series",Kusto.Language.Binding.Binder.QueryParameterKind.NameDeclarationList),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3("xtitle",Kusto.Language.Binding.Binder.QueryParameterKind.StringLiteral),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3("ytitle",Kusto.Language.Binding.Binder.QueryParameterKind.StringLiteral),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3("xaxis",Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.ChartAxis,!1),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3("yaxis",Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.ChartAxis,!1),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3("legend",Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.ChartLegends,!1),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3("ysplit",Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.ChartYSplit,!1),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3("ymin",Kusto.Language.Binding.Binder.QueryParameterKind.Number),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3("ymax",Kusto.Language.Binding.Binder.QueryParameterKind.Number)],Kusto.Language.Binding.Binder.QueryParameterInfo);this.s_ParseParameters=System.Array.init([new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.KindKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.Identifier,!0,Kusto.Language.KustoFacts.ParseKinds,!1),new Kusto.Language.Binding.Binder.QueryParameterInfo.$ctor3(Kusto.Language.Syntax.SyntaxFacts.GetText(Kusto.Language.Syntax.SyntaxKind.FlagsKeyword),Kusto.Language.Binding.Binder.QueryParameterKind.Identifier)],Kusto.Language.Binding.Binder.QueryParameterInfo);this.s_GetSchemaSchema=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol("ColumnName",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ColumnOrdinal",Kusto.Language.Symbols.ScalarTypes.Long),new Kusto.Language.Symbols.ColumnSymbol("DataType",Kusto.Language.Symbols.ScalarTypes.String),new Kusto.Language.Symbols.ColumnSymbol("ColumnType",Kusto.Language.Symbols.ScalarTypes.String)]);this.s_GetSchemaInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Binding.Binder.NodeBinder.s_GetSchemaSchema)}},methods:{IsArgument:function(e){var se,list,el;return(se=Bridge.as(e.Parent,Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)))!=null&&(list=Bridge.as(se.Parent,Kusto.Language.Syntax.SyntaxList))!=null&&(el=Bridge.as(list.Parent,Kusto.Language.Syntax.ExpressionList))!=null&&Bridge.is(el.Parent,Kusto.Language.Syntax.FunctionCallExpression)},IsLeftOperand:function(e){var be;return(be=Bridge.as(e.Parent,Kusto.Language.Syntax.BinaryExpression))!=null&&Bridge.referenceEquals(be.Left,e)},IsSecondaryPipeOperator:function(queryOp){var pe;return(pe=Bridge.as(queryOp.Parent,Kusto.Language.Syntax.PipeExpression))!=null&&Bridge.referenceEquals(pe.Operator,queryOp)||Kusto.Language.Binding.Binder.NodeBinder.IsChildOfPipeStartingExpression(queryOp)},IsChildOfPipeStartingExpression:function(expr){var fce,pce,mvas,fwce,pe;return(fce=Bridge.as(expr.Parent,Kusto.Language.Syntax.ForkExpression))!=null&&Bridge.referenceEquals(fce.Expression,expr)||(pce=Bridge.as(expr.Parent,Kusto.Language.Syntax.PartitionExpression))!=null&&Bridge.referenceEquals(pce.Expression,expr)&&pce.IsSubquery||(mvas=Bridge.as(expr.Parent,Kusto.Language.Syntax.MvApplySubqueryExpression))!=null&&Bridge.referenceEquals(mvas.Expression,expr)||(fwce=Bridge.as(expr.Parent,Kusto.Language.Syntax.FacetWithExpressionClause))!=null&&Bridge.referenceEquals(fwce.Expression,expr)||(pe=Bridge.as(expr.Parent,Kusto.Language.Syntax.Expression))!=null&&Kusto.Language.Binding.Binder.NodeBinder.IsChildOfPipeStartingExpression(pe)}}},fields:{_binder:null},props:{RowScopeOrEmpty:{get:function(){return this._binder._rowScope||Kusto.Language.Symbols.TableSymbol.Empty}},RightRowScopeOrEmpty:{get:function(){return this._binder._rightRowScope||Kusto.Language.Symbols.TableSymbol.Empty}}},ctors:{ctor:function(binder){this.$initialize();Kusto.Language.Syntax.SyntaxVisitor$1(Kusto.Language.Syntax.SemanticInfo).ctor.call(this);this._binder=binder}},methods:{VisitNameAndTypeDeclaration:function(){return Kusto.Language.Binding.Binder.VoidInfo},VisitFunctionDeclaration:function(node){return new Kusto.Language.Syntax.SemanticInfo.$ctor3(this.CreateFunctionSymbol(node))},VisitFunctionParameter:function(node){var diagnostics,type;if(node.DefaultValue!=null){diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{if(type=this._binder.GetTypeFromTypeExpression(node.NameAndType.Type),type==null||type.IsError||this._binder.CheckIsLiteralValue(node.DefaultValue.Value,diagnostics)&&this._binder.CheckIsType(node.DefaultValue.Value,type,Kusto.Language.Binding.Conversion.Compatible,diagnostics),diagnostics.Count>0)return new Kusto.Language.Syntax.SemanticInfo.$ctor4(diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}}return null},VisitDefaultValueDeclaration:function(){return null},VisitFunctionBody:function(){return null},VisitFunctionParameters:function(){return null},CreateFunctionSymbol:function(decl){var $t,$t1,name,ls,parameters,i,fp,isOptional,p,fs,cs;do{if($t=decl.Parent,Bridge.is($t,Kusto.Language.Syntax.LetStatement)){ls=Bridge.cast($t,Kusto.Language.Syntax.LetStatement);name=ls.Name.SimpleName;break}name="";break}while(0);for(parameters=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter).ctor),i=0;i<decl.Parameters.Parameters.Count;i=i+1|0)fp=decl.Parameters.Parameters.getItem$1(i).Element$1,isOptional=fp.DefaultValue!=null,(p=Bridge.as(this._binder.GetReferencedSymbol(fp.NameAndType.Name),Kusto.Language.Symbols.ParameterSymbol))!=null&&parameters.add(Kusto.Language.Symbols.Parameter.From(p,isOptional,($t1=fp.DefaultValue)!=null?$t1.Value:null));return fs=new Kusto.Language.Symbols.FunctionSymbol.$ctor10(name,decl,parameters),cs=this._binder.GetCallSiteInfo(System.Array.getItem(fs.Signatures,0,Kusto.Language.Symbols.Signature),Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Syntax.Expression).Instance,Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.TypeSymbol).Instance),this._binder._localBindingCache.CallSiteToExpansionMap.add(cs,decl.Body),this._binder.SetSignatureBindingInfo(System.Array.getItem(fs.Signatures,0,Kusto.Language.Symbols.Signature),decl.Body),fs},VisitPatternStatement:function(){return null},VisitPatternDeclaration:function(node){var $t,$t1,$t2,$t3,$t4,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),patternsigs,parameters,i,n,pathParameter,name1,type1,i1,n1,pattern,values,v,vn,parameter1,value,pathValue,patternName,resultType;try{for(patternsigs=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.PatternSignature).ctor),parameters=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.Parameter).ctor),i=0,n=node.Parameters.Count;i<n;i=i+1|0){var parameter=node.Parameters.getItem$1(0).Element$1,name=parameter.Name.SimpleName,type=this._binder.GetTypeFromTypeExpression(parameter.Type,diagnostics);parameters.add(new Kusto.Language.Symbols.Parameter.$ctor2(name,type))}for(pathParameter=null,node.PathParameter!=null&&(name1=node.PathParameter.Parameter.Name.SimpleName,type1=this._binder.GetTypeFromTypeExpression(node.PathParameter.Parameter.Type),pathParameter=new Kusto.Language.Symbols.Parameter.$ctor2(name1,type1)),i1=0,n1=node.Patterns.Count;i1<n1;i1=i1+1|0){for(pattern=node.Patterns.getItem$1(i1),pattern.ParameterValues.Expressions.Count!==node.Parameters.Count&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetValueCountMustEqualParameterCount().WithLocation(pattern.ParameterValues)),values=new(System.Collections.Generic.List$1(System.String).ctor),v=0,vn=pattern.ParameterValues.Expressions.Count;v<vn;v=v+1|0)parameter1=node.Parameters.getItem$1(v).Element$1,value=pattern.ParameterValues.Expressions.getItem$1(v).Element$1,this._binder.CheckIsExactType(value,Kusto.Language.Symbols.ScalarTypes.String,diagnostics)&&this._binder.CheckIsLiteral(value,diagnostics),values.add(($t=($t1=value.LiteralValue)!=null?Bridge.toString($t1):null,$t!=null?$t:""));pathValue=null;pattern.PathValue==null&&node.PathParameter!=null?diagnostics.add(Kusto.Language.DiagnosticFacts.GetPathValueExpected().WithLocation(pattern.EqualToken)):pattern.PathValue!=null&&node.PathParameter==null?diagnostics.add(Kusto.Language.DiagnosticFacts.GetPathValueWithNoPathParameter().WithLocation(pattern.PathValue)):pattern.PathValue!=null&&node.PathParameter!=null&&(this._binder.CheckIsExactType(pattern.PathValue.Value,Kusto.Language.Symbols.ScalarTypes.String,diagnostics)&&this._binder.CheckIsLiteral(pattern.PathValue.Value,diagnostics),pathValue=($t2=($t3=pattern.PathValue.Value.LiteralValue)!=null?Bridge.toString($t3):null,$t2!=null?$t2:""));patternsigs.add(new Kusto.Language.Symbols.PatternSignature.ctor(values,pathValue,pattern))}return patternName=($t4=Bridge.as(node.Parent,Kusto.Language.Syntax.PatternStatement))!=null?$t4.Name.SimpleName:null,resultType=new Kusto.Language.Symbols.PatternSymbol.$ctor1(patternName,parameters,pathParameter,patternsigs),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitMaterializeExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{return this._binder.CheckIsTabular(node.Expression,diagnostics),new Kusto.Language.Syntax.SemanticInfo.$ctor3(this._binder.GetResultTypeOrError(node.Expression),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitNameDeclaration:function(){return null},VisitLiteralExpression:function(node){switch(node.Kind){case Kusto.Language.Syntax.SyntaxKind.BooleanLiteralExpression:return Kusto.Language.Binding.Binder.LiteralBoolInfo;case Kusto.Language.Syntax.SyntaxKind.IntLiteralExpression:return Kusto.Language.Binding.Binder.LiteralIntInfo;case Kusto.Language.Syntax.SyntaxKind.LongLiteralExpression:return Kusto.Language.Binding.Binder.LiteralLongInfo;case Kusto.Language.Syntax.SyntaxKind.RealLiteralExpression:return Kusto.Language.Binding.Binder.LiteralRealInfo;case Kusto.Language.Syntax.SyntaxKind.DecimalLiteralExpression:return Kusto.Language.Binding.Binder.LiteralDecimalInfo;case Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression:return Kusto.Language.Binding.Binder.LiteralStringInfo;case Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralExpression:return Kusto.Language.Binding.Binder.LiteralDateTimeInfo;case Kusto.Language.Syntax.SyntaxKind.TimespanLiteralExpression:return Kusto.Language.Binding.Binder.LiteralTimeSpanInfo;case Kusto.Language.Syntax.SyntaxKind.GuidLiteralExpression:return Kusto.Language.Binding.Binder.LiteralGuidInfo;case Kusto.Language.Syntax.SyntaxKind.TokenLiteralExpression:case Kusto.Language.Syntax.SyntaxKind.NullLiteralExpression:return Kusto.Language.Binding.Binder.VoidInfo;default:throw new System.InvalidOperationException.$ctor1(System.String.format("Unknown literal kind: {0}",[Bridge.box(node.Kind,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))]));}},VisitTypeOfLiteralExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),type,pt,columns,i,element,s;try{if(node.Types.Count===1&&(pt=Bridge.as(node.Types.getItem$1(0).Element$1,Kusto.Language.Syntax.PrimitiveTypeExpression))!=null)type=Kusto.Language.Binding.Binder.GetType(pt,diagnostics);else{columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool();try{for(i=0;i<node.Types.Count;i=i+1|0){element=node.Types.getItem$1(i).Element$1;do{if(Bridge.is(element,Kusto.Language.Syntax.StarExpression)){s=Bridge.cast(element,Kusto.Language.Syntax.StarExpression);this._binder._rowScope!=null?columns.AddRange(this._binder.GetDeclaredAndInferredColumns(this._binder._rowScope)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetNoColumnsInScope().WithLocation(s));break}if(Bridge.is(element,Kusto.Language.Syntax.NameAndTypeDeclaration)){var nat=Bridge.cast(element,Kusto.Language.Syntax.NameAndTypeDeclaration),declaredType=this._binder.GetTypeFromTypeExpression(nat.Type,diagnostics),newColumn=new Kusto.Language.Symbols.ColumnSymbol(nat.Name.SimpleName,declaredType);columns.add(newColumn);break}diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidColumnDeclaration().WithLocation(element));break}while(0)}type=new Kusto.Language.Symbols.TableSymbol.$ctor2(columns)}finally{Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}}return new Kusto.Language.Syntax.SemanticInfo.$ctor1(type,Kusto.Language.Symbols.ScalarTypes.Type,diagnostics,!0,void 0)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitDynamicExpression:function(){return Kusto.Language.Binding.Binder.LiteralDynamicInfo},VisitCompoundStringLiteralExpression:function(){return Kusto.Language.Binding.Binder.LiteralStringInfo},VisitBinaryExpression:function(node){var opKind=Kusto.Language.Binding.Binder.GetOperatorKind(node.Kind);if(opKind!==Kusto.Language.Symbols.OperatorKind.None)return this._binder.GetBinaryOperatorInfo$1(opKind,node.Left,node.Right,node.Operator);throw new System.InvalidOperationException.$ctor1(System.String.format("Unknown binary operator kind: {0}",[Bridge.box(node.Kind,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))]));},VisitPrefixUnaryExpression:function(node){var opKind=Kusto.Language.Binding.Binder.GetOperatorKind(node.Kind);if(opKind!==Kusto.Language.Symbols.OperatorKind.None)return this._binder.GetUnaryOperatorInfo(opKind,node.Expression,node.Operator);throw new System.InvalidOperationException.$ctor1(System.String.format("Unknown unary operator kind: {0}",[Bridge.box(node.Kind,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))]));},VisitInExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),args=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool(),i,op;try{for(args.add(node.Left),i=0;i<node.Right.Expressions.Count;i=i+1|0)args.add(node.Right.Expressions.getItem$1(i).Element$1);return op=Kusto.Language.Syntax.SyntaxFacts.GetOperatorKind(node.Operator.Kind),this._binder.GetOperatorInfo(op,args,node.Operator)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx);Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool(args)}},VisitHasAnyExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),args=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool(),i,op;try{for(args.add(node.Left),i=0;i<node.Right.Expressions.Count;i=i+1|0)args.add(node.Right.Expressions.getItem$1(i).Element$1);return op=Kusto.Language.Syntax.SyntaxFacts.GetOperatorKind(node.Operator.Kind),this._binder.GetOperatorInfo(op,args,node.Operator)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx);Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool(args)}},VisitBetweenExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),args=Kusto.Language.Binding.Binder.s_expressionListPool.AllocateFromPool(),op;try{return args.add(node.Left),args.add(node.Right.First),args.add(node.Right.Second),op=Kusto.Language.Syntax.SyntaxFacts.GetOperatorKind(node.Operator.Kind),this._binder.GetOperatorInfo(op,args,node.Operator)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx);Kusto.Language.Binding.Binder.s_expressionListPool.ReturnToPool(args)}},VisitToScalarExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultType,table,col;try{return node.KindParameter!=null&&this._binder.CheckQueryParameter(node.KindParameter,Kusto.Language.Binding.Binder.NodeBinder.toScalarKind,dx),resultType=this._binder.GetResultType(node.Expression),(table=Bridge.as(resultType,Kusto.Language.Symbols.TableSymbol))!=null?System.Array.getCount(table.Columns,Kusto.Language.Symbols.ColumnSymbol)>0?(col=System.Array.getItem(table.Columns,0,Kusto.Language.Symbols.ColumnSymbol),new Kusto.Language.Syntax.SemanticInfo.$ctor3(col.Type,dx)):(dx.add(Kusto.Language.DiagnosticFacts.GetTableHasNoColumns().WithLocation(node.Expression)),new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ErrorSymbol.Instance,dx)):Bridge.is(resultType,Kusto.Language.Symbols.ScalarSymbol)?new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultType,dx):(dx.add(Kusto.Language.DiagnosticFacts.GetTableOrScalarExpected().WithLocation(node.Expression)),new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ErrorSymbol.Instance,dx))}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx)}},VisitToTableExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),table;try{return(node.KindParameter!=null&&this._binder.CheckQueryParameter(node.KindParameter,Kusto.Language.Binding.Binder.NodeBinder.toTableKind,dx),this._binder.CheckIsTabular(node.Expression,dx))?(table=Bridge.cast(this._binder.GetResultType(node.Expression),Kusto.Language.Symbols.TableSymbol),new Kusto.Language.Syntax.SemanticInfo.$ctor3(table,dx)):new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ErrorSymbol.Instance,dx)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx)}},VisitTokenName:function(){return null},VisitBrackettedName:function(){return null},VisitBracedName:function(){return null},VisitWildcardedName:function(){return null},VisitNameReference:function(node){var $t,_discard1,_discard2,wc,_discard3;do{if($t=node.Name,Bridge.is($t,Kusto.Language.Syntax.TokenName))return _discard1=Bridge.cast($t,Kusto.Language.Syntax.TokenName),this._binder.BindName(node.SimpleName,node.Match,node);if(Bridge.is($t,Kusto.Language.Syntax.BrackettedName))return _discard2=Bridge.cast($t,Kusto.Language.Syntax.BrackettedName),this._binder.BindName(node.SimpleName,node.Match,node);if(Bridge.is($t,Kusto.Language.Syntax.WildcardedName))return wc=Bridge.cast($t,Kusto.Language.Syntax.WildcardedName),this.VisitWildcardedNameReference(node,wc);if(Bridge.is($t,Kusto.Language.Syntax.BracedName))return _discard3=Bridge.cast($t,Kusto.Language.Syntax.BracedName),new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.Dynamic);throw new System.NotImplementedException.ctor;}while(0)},VisitWildcardedNameReference:function(node,wc){var list=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool(),matchingList=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool();try{return this._binder.GetSymbolsInContext(node,11,Kusto.Language.IncludeFunctionKind.All,list),Kusto.Language.Binding.Binder.GetWildcardSymbols(wc.Pattern.Text,list,matchingList),matchingList.Count===1?Kusto.Language.Binding.Binder.CreateSemanticInfo(matchingList.getItem(0)):matchingList.Count>1?Kusto.Language.Binding.Binder.CreateSemanticInfo(new Kusto.Language.Symbols.GroupSymbol.$ctor1(matchingList)):new Kusto.Language.Syntax.SemanticInfo.$ctor2(Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetNameDoesNotReferToAnyKnownItem(wc.Pattern.Text).WithLocation(node))}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(list);Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(matchingList)}},VisitBrackettedExpression:function(node){var selectorType=this._binder.GetResultTypeOrError(node.Expression),nr,wc,ce,nr1,wc1,ce1;return selectorType.IsError?Kusto.Language.Binding.Binder.ErrorInfo:node.IsElementSelector?this._binder._pathScope==null||this._binder._pathScope.IsError?Kusto.Language.Binding.Binder.ErrorInfo:Bridge.referenceEquals(this._binder._pathScope,Kusto.Language.Symbols.ScalarTypes.Dynamic)?Kusto.Language.Binding.Binder.IsInteger(selectorType)||Kusto.Language.Binding.Binder.IsStringOrDynamic(selectorType)?new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.Dynamic):new Kusto.Language.Syntax.SemanticInfo.ctor(null,Kusto.Language.Symbols.ScalarTypes.Dynamic,Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType([Kusto.Language.Symbols.ScalarTypes.Int,Kusto.Language.Symbols.ScalarTypes.Long,Kusto.Language.Symbols.ScalarTypes.String]).WithLocation(node.Expression)):new Kusto.Language.Syntax.SemanticInfo.ctor(null,Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetTheElementAccessOperatorIsNotAllowedInThisContext().WithLocation(node)):node.IsPathSelector?this._binder._pathScope==null||this._binder._pathScope.IsError?Kusto.Language.Binding.Binder.ErrorInfo:(nr=Bridge.as(node.Expression,Kusto.Language.Syntax.NameReference))!=null&&(wc=Bridge.as(nr.Name,Kusto.Language.Syntax.WildcardedName))!=null?new Kusto.Language.Syntax.SemanticInfo.$ctor1(this._binder.GetReferencedSymbol(nr),this._binder.GetResultTypeOrError(nr)):(ce=Bridge.as(node.Expression,Kusto.Language.Syntax.ConditionedExpression))!=null?Kusto.Language.Binding.Binder.ErrorInfo:Bridge.referenceEquals(selectorType,Kusto.Language.Symbols.ScalarTypes.String)?node.Expression.IsLiteral?Bridge.referenceEquals(this._binder._pathScope,Kusto.Language.Symbols.ScalarTypes.Dynamic)?new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.Dynamic):this._binder.BindName(Bridge.cast(node.Expression.LiteralValue,System.String),Kusto.Language.Symbols.SymbolMatch.Default,node.Expression):new Kusto.Language.Syntax.SemanticInfo.ctor(null,Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetExpressionMustBeLiteral().WithLocation(node.Expression)):new Kusto.Language.Syntax.SemanticInfo.ctor(null,Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType([Kusto.Language.Symbols.ScalarTypes.String]).WithLocation(node.Expression)):(nr1=Bridge.as(node.Expression,Kusto.Language.Syntax.NameReference))!=null&&(wc1=Bridge.as(nr1.Name,Kusto.Language.Syntax.WildcardedName))!=null?new Kusto.Language.Syntax.SemanticInfo.$ctor1(this._binder.GetReferencedSymbol(nr1),this._binder.GetResultTypeOrError(nr1)):(ce1=Bridge.as(node.Expression,Kusto.Language.Syntax.ConditionedExpression))!=null?Kusto.Language.Binding.Binder.ErrorInfo:Bridge.referenceEquals(selectorType,Kusto.Language.Symbols.ScalarTypes.String)?node.Expression.IsLiteral?this._binder.BindName(Bridge.cast(node.Expression.LiteralValue,System.String),Kusto.Language.Symbols.SymbolMatch.Default,node.Expression):new Kusto.Language.Syntax.SemanticInfo.ctor(null,Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetExpressionMustBeLiteral().WithLocation(node.Expression)):new Kusto.Language.Syntax.SemanticInfo.ctor(null,Kusto.Language.Symbols.ErrorSymbol.Instance,Kusto.Language.DiagnosticFacts.GetExpressionMustHaveType([Kusto.Language.Symbols.ScalarTypes.String]).WithLocation(node.Expression))},VisitPathExpression:function(node){return new Kusto.Language.Syntax.SemanticInfo.$ctor1(this._binder.GetReferencedSymbol(node.Selector),this._binder.GetResultTypeOrError(node.Selector))},VisitElementExpression:function(node){return new Kusto.Language.Syntax.SemanticInfo.$ctor1(this._binder.GetReferencedSymbol(node.Selector),this._binder.GetResultTypeOrError(node.Selector))},VisitFunctionCallExpression:function(node){return this._binder.BindFunctionCallOrPattern(node)},VisitParenthesizedExpression:function(node){return new Kusto.Language.Syntax.SemanticInfo.$ctor1(null,this._binder.GetResultTypeOrError(node.Expression))},VisitOrderedExpression:function(node){return new Kusto.Language.Syntax.SemanticInfo.$ctor1(this._binder.GetReferencedSymbol(node.Expression),this._binder.GetResultTypeOrError(node.Expression))},VisitSimpleNamedExpression:function(node){return new Kusto.Language.Syntax.SemanticInfo.$ctor1(null,this._binder.GetResultTypeOrError(node.Expression))},VisitCompoundNamedExpression:function(node){return new Kusto.Language.Syntax.SemanticInfo.$ctor1(null,this._binder.GetResultTypeOrError(node.Expression))},VisitPipeExpression:function(node){return new Kusto.Language.Syntax.SemanticInfo.$ctor1(null,this._binder.GetResultTypeOrError(node.Operator))},VisitAtExpression:function(){return null},VisitConditionedExpression:function(){return null},VisitDataScopeExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{return this._binder.CheckIsTabular(node.Expression,diagnostics),new Kusto.Language.Syntax.SemanticInfo.$ctor3(this._binder.GetResultTypeOrError(node.Expression),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitExpressionCouple:function(){return null},VisitExpressionList:function(){return null},VisitForkExpression:function(node){var resultType=this._binder.GetResultTypeOrError(node.Expression),table;return node.NameEquals!=null&&(table=Bridge.as(resultType,Kusto.Language.Symbols.TableSymbol))!=null&&(resultType=table.WithColumns$1(this._binder.GetDeclaredAndInferredColumns(table)).WithName(node.NameEquals.Name.SimpleName)),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultType)},VisitPartitionExpression:function(node){var resultType=this._binder.GetResultTypeOrError(node.Expression),table;return(table=Bridge.as(resultType,Kusto.Language.Symbols.TableSymbol))!=null&&(resultType=table.WithColumns$1(this._binder.GetDeclaredAndInferredColumns(table))),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultType)},VisitJsonArrayExpression:function(){return Kusto.Language.Binding.Binder.LiteralDynamicInfo},VisitJsonObjectExpression:function(){return Kusto.Language.Binding.Binder.LiteralDynamicInfo},VisitJsonPair:function(){return null},VisitList:function(){return null},VisitSeparatedElement:function(){return null},VisitMakeSeriesExpression:function(node){return new Kusto.Language.Syntax.SemanticInfo.$ctor3(this._binder.GetResultTypeOrError(node.Expression))},VisitNamedParameter:function(){return null},VisitPackExpression:function(){return null},VisitPatternMatch:function(){return null},VisitPatternPathValue:function(){return null},VisitPatternPathParameter:function(){return null},VisitPrimitiveTypeExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),type;try{return type=this._binder.GetTypeFromTypeExpression(node,dx),new Kusto.Language.Syntax.SemanticInfo.$ctor1(type,Kusto.Language.Symbols.VoidSymbol.Instance,dx)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx)}},VisitSchemaTypeExpression:function(node){var dx=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),type;try{return type=this._binder.GetTypeFromTypeExpression(node,dx),new Kusto.Language.Syntax.SemanticInfo.$ctor1(type,Kusto.Language.Symbols.VoidSymbol.Instance,dx)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(dx)}},VisitQueryBlock:function(){return null},VisitSkippedTokens:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{return node.Tokens.Count>0&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetIncompleteFragment().WithLocation(node.Tokens.getItem$1(0))),new Kusto.Language.Syntax.SemanticInfo.$ctor3(null,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitRenameList:function(){return null},VisitRenderNameList:function(){return null},VisitStarExpression:function(node){if(Kusto.Language.Binding.Binder.NodeBinder.IsArgument(node)){var columns=this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty),refSymbol=new Kusto.Language.Symbols.GroupSymbol.$ctor1(columns),resultSymbol=new Kusto.Language.Symbols.TupleSymbol.$ctor1(columns);return new Kusto.Language.Syntax.SemanticInfo.$ctor1(refSymbol,resultSymbol)}return Kusto.Language.Binding.Binder.NodeBinder.IsLeftOperand(node)?new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.Dynamic):null},VisitTypedColumnReference:function(node){return new Kusto.Language.Syntax.SemanticInfo.$ctor3(this._binder.GetResultTypeOrError(node.Column))},VisitCustom:function(){return null},CheckFirstInPipe:function(queryOp,diagnostics){Kusto.Language.Binding.Binder.NodeBinder.IsSecondaryPipeOperator(queryOp)&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetQueryOperatorMustBeFirst().WithLocation(queryOp.GetChild(0)||queryOp))},CheckNotFirstInPipe:function(queryOp,diagnostics){Kusto.Language.Binding.Binder.NodeBinder.IsSecondaryPipeOperator(queryOp)||diagnostics.add(Kusto.Language.DiagnosticFacts.GetQueryOperatorCannotBeFirst().WithLocation(queryOp.GetChild(0)||queryOp))},VisitBadQueryOperator:function(){return Kusto.Language.Binding.Binder.ErrorInfo},VisitFilterOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckIsExactType(node.Condition,Kusto.Language.Symbols.ScalarTypes.Bool,diagnostics),resultTable=this.RowScopeOrEmpty.WithColumns$1(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitTakeOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckIsInteger(node.Expression,diagnostics),resultTable=this.RowScopeOrEmpty.WithColumns$1(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)).Unsorted(),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitSampleOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckIsInteger(node.Expression,diagnostics),resultTable=this.RowScopeOrEmpty.WithColumns$1(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)).Unsorted(),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitSampleDistinctOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),name,result;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckIsInteger(node.Expression,diagnostics),this._binder.CheckIsColumn(node.OfExpression,diagnostics),name=Kusto.Language.Binding.Binder.GetExpressionResultName(node.OfExpression,"Column1"),result=this.RowScopeOrEmpty.WithColumns([new Kusto.Language.Symbols.ColumnSymbol(name,this._binder.GetResultTypeOrError(node.OfExpression))]).Unsorted(),new Kusto.Language.Syntax.SemanticInfo.$ctor3(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitCountOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),name;try{return this.CheckNotFirstInPipe(node,diagnostics),node.AsIdentifier!=null?(name=node.AsIdentifier.Identifier.Text,new Kusto.Language.Syntax.SemanticInfo.$ctor3(this.RowScopeOrEmpty.WithColumns([new Kusto.Language.Symbols.ColumnSymbol(name,Kusto.Language.Symbols.ScalarTypes.Long)]),diagnostics)):new Kusto.Language.Syntax.SemanticInfo.$ctor3(this.RowScopeOrEmpty.WithColumns([new Kusto.Language.Symbols.ColumnSymbol("Count",Kusto.Language.Symbols.ScalarTypes.Long)]),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitProjectOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool();try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CreateProjectionColumns$1(node.Expressions,builder,diagnostics),new Kusto.Language.Syntax.SemanticInfo.$ctor3(this.RowScopeOrEmpty.WithColumns$1(builder.GetProjection()),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitProjectAwayOperator:function(node){var $t,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),namesToRemove,column,resultType,info;try{this.CheckNotFirstInPipe(node,diagnostics);this._binder.GetColumnsInColumnList(node.Expressions,columns,diagnostics);namesToRemove=new(System.Collections.Generic.HashSet$1(System.String).$ctor1)(System.Linq.Enumerable.from(columns).select(function(c){return c.Name}));columns.clear();$t=Bridge.getEnumerator(this.RowScopeOrEmpty.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())column=Bridge.cast($t.Current,Kusto.Language.Symbols.ColumnSymbol),namesToRemove.contains(column.Name)||columns.add(column)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return resultType=this.RowScopeOrEmpty.WithColumns$1(columns),info=new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultType,diagnostics),info}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitProjectRenameOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),resultType,info;try{return this.CheckNotFirstInPipe(node,diagnostics),builder.AddRange(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty),!0,!0),this._binder.CreateProjectionColumns$1(node.Expressions,builder,diagnostics,!0,!1,!1,!1,!1,!1),resultType=this.RowScopeOrEmpty.WithColumns$1(builder.GetProjection()),info=new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultType,diagnostics),info}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitProjectReorderOperator:function(node){var $t,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),col,resultTable,info;try{this.CheckNotFirstInPipe(node,diagnostics);this._binder.CreateProjectionColumns$1(node.Expressions,builder,diagnostics,!1,!1,!0,!1,!1,!0);$t=Bridge.getEnumerator(this.RowScopeOrEmpty.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())col=$t.Current,builder.Add(col)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return resultTable=this.RowScopeOrEmpty.WithColumns$1(builder.GetProjection()).Sorted(),info=new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultTable,diagnostics),info}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitExtendOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),resultType,info;try{return this.CheckNotFirstInPipe(node,diagnostics),builder.AddRange(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty),!1,!0),this._binder.CreateProjectionColumns$1(node.Expressions,builder,diagnostics,!1,!1,!1,!0,!1,!1),resultType=this.RowScopeOrEmpty.WithColumns$1(builder.GetProjection()),info=new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultType,diagnostics),info}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitSummarizeOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),resultType;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryParameters(node.Parameters,Kusto.Language.Binding.Binder.NodeBinder.s_SummarizeParameters,diagnostics),node.ByClause!=null&&this._binder.CreateProjectionColumns$1(node.ByClause.Expressions,builder,diagnostics,!1,!1,!1,!1,!1,!0),this._binder.CreateProjectionColumns$1(node.Aggregates,builder,diagnostics,!1,!1,!1,!1,!0,!1),resultType=this.RowScopeOrEmpty.WithColumns$1(builder.GetProjection()).Unsorted(),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitDistinctOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool();try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CreateProjectionColumns$1(node.Expressions,builder,diagnostics),new Kusto.Language.Syntax.SemanticInfo.$ctor3(this.RowScopeOrEmpty.WithColumns$1(builder.GetProjection()).Unsorted(),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitTopOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckIsInteger(node.Expression,diagnostics),this._binder.CheckIsScalar(node.ByExpression,diagnostics),resultTable=this.RowScopeOrEmpty.WithColumns$1(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)).Sorted(),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitTopHittersOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool();try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckIsInteger(node.Expression,diagnostics),this._binder.CheckIsColumn(node.OfExpression,diagnostics),this._binder.CreateProjectionColumns(node.OfExpression,builder,diagnostics),node.ByClause!=null?(this._binder.CheckIsNumber(node.ByClause.Expression,diagnostics),builder.Add(new Kusto.Language.Symbols.ColumnSymbol("approximate_sum_"+(Kusto.Language.Binding.Binder.GetExpressionResultName(node.ByClause.Expression)||""),this._binder.GetResultTypeOrError(node.ByClause.Expression)))):builder.Add(new Kusto.Language.Symbols.ColumnSymbol("approximate_count_"+(Kusto.Language.Binding.Binder.GetExpressionResultName(node.OfExpression)||""),Kusto.Language.Symbols.ScalarTypes.Long)),new Kusto.Language.Syntax.SemanticInfo.$ctor3(this.RowScopeOrEmpty.WithColumns$1(builder.GetProjection()).Sorted(),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitTopNestedOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),uniqueNames=Kusto.Language.Binding.Binder.s_uniqueNameTablePool.AllocateFromPool(),i,n,clause,name;try{for(this.CheckNotFirstInPipe(node,diagnostics),i=0,n=node.Clauses.Count;i<n;i=i+1|0)clause=node.Clauses.getItem$1(i).Element$1,clause.Expression!=null&&this._binder.CheckIsInteger(clause.Expression,diagnostics),this._binder.CheckIsColumn(clause.OfExpression,diagnostics),clause.WithOthersClause!=null&&this._binder.CheckIsScalar(clause.WithOthersClause.Expression,diagnostics),this._binder.CheckIsScalar(clause.ByExpression,diagnostics),name=Kusto.Language.Binding.Binder.GetExpressionResultName(clause.OfExpression),columns.add(new Kusto.Language.Symbols.ColumnSymbol(uniqueNames.GetOrAddName(name),this._binder.GetResultTypeOrError(clause.OfExpression))),columns.add(new Kusto.Language.Symbols.ColumnSymbol(uniqueNames.GetOrAddName("aggregated_"+(name||"")),this._binder.GetResultTypeOrError(clause.ByExpression)));return new Kusto.Language.Syntax.SemanticInfo.$ctor3(this.RowScopeOrEmpty.WithColumns$1(columns).Sorted(),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns);Kusto.Language.Binding.Binder.s_uniqueNameTablePool.ReturnToPool(uniqueNames)}},VisitConsumeOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryParameters(node.Parameters,Kusto.Language.Binding.Binder.NodeBinder.s_ConsumeParameters,diagnostics),new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.VoidSymbol.Instance,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitExecuteAndCacheOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultTable;try{return this.CheckNotFirstInPipe(node,diagnostics),resultTable=this.RowScopeOrEmpty.WithName(""),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitDataTableExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),declaredNames=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool();try{return Kusto.Language.Binding.Binder.CreateColumnsFromSchema$1(node.Schema,columns,declaredNames,diagnostics),this._binder.CheckDataValueTypes(node.Values,columns,diagnostics),new Kusto.Language.Syntax.SemanticInfo.$ctor3(new Kusto.Language.Symbols.TableSymbol.$ctor2(columns),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns);Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(declaredNames)}},VisitExternalDataExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),declaredNames=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool(),i,n,prop;try{if(Kusto.Language.Binding.Binder.CreateColumnsFromSchema$1(node.Schema,columns,declaredNames,diagnostics),System.Linq.Enumerable.from(node.URIs).select(Bridge.fn.bind(this,function(item){return this._binder.CheckIsExactType(item.Element$1,Kusto.Language.Symbols.ScalarTypes.String,diagnostics)})),node.WithClause!=null)for(i=0,n=node.WithClause.Properties.Count;i<n;i=i+1|0)prop=node.WithClause.Properties.getItem$1(i).Element$1,this._binder.CheckIsScalar(prop.Expression,diagnostics);return new Kusto.Language.Syntax.SemanticInfo.$ctor3(new Kusto.Language.Symbols.TableSymbol.$ctor2(columns),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns);Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(declaredNames)}},VisitSortOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),i,n,expr,resultTable;try{for(this.CheckNotFirstInPipe(node,diagnostics),i=0,n=node.Expressions.Count;i<n;i=i+1|0)expr=node.Expressions.getItem$1(i).Element$1,this._binder.CheckIsScalar(expr,diagnostics);return resultTable=this.RowScopeOrEmpty.WithColumns$1(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)).Sorted(),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitSerializeOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),resultType,info;try{return this.CheckNotFirstInPipe(node,diagnostics),builder.AddRange(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty),!1,!0),this._binder.CreateProjectionColumns$1(node.Expressions,builder,diagnostics),resultType=this.RowScopeOrEmpty.WithColumns$1(builder.GetProjection()).Serialized(),info=new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultType,diagnostics),info}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitAsOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryParameters(node.Parameters,Kusto.Language.Binding.Binder.NodeBinder.s_AsParameters,diagnostics),new Kusto.Language.Syntax.SemanticInfo.$ctor3(this.RowScopeOrEmpty.WithName(""))}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitForkOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),tables,i,n,expr,tableType,name,table;try{for(this.CheckNotFirstInPipe(node,diagnostics),tables=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.TableSymbol).ctor),i=0,n=node.Expressions.Count;i<n;i=i+1|0)expr=node.Expressions.getItem$1(i).Expression,this._binder.CheckIsTabular(expr,diagnostics),tableType=Bridge.as(this._binder.GetResultType(expr),Kusto.Language.Symbols.TableSymbol),tableType!=null&&(name=tables.Count===0?"Results":"Results_"+(tables.Count+1|0),table=tableType.WithColumns$1(this._binder.GetDeclaredAndInferredColumns(tableType)).WithName(name),tables.add(table));return new Kusto.Language.Syntax.SemanticInfo.$ctor3(new Kusto.Language.Symbols.GroupSymbol.$ctor1(tables),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitPartitionOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),operand,tableType,result;try{return(this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryParameters(node.Parameters,Kusto.Language.Binding.Binder.NodeBinder.s_PartitionParameters,diagnostics),operand=node.Operand,this._binder.CheckIsColumn(node.ByExpression,diagnostics),this._binder.CheckIsTabular(operand,diagnostics),tableType=Bridge.as(this._binder.GetResultType(operand),Kusto.Language.Symbols.TableSymbol),tableType==null)?new Kusto.Language.Syntax.SemanticInfo.$ctor3(this.RowScopeOrEmpty,diagnostics):(result=this.RowScopeOrEmpty.WithColumns$1(this._binder.GetDeclaredAndInferredColumns(tableType)).Unsorted(),new Kusto.Language.Syntax.SemanticInfo.$ctor3(result,diagnostics))}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitSearchOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),searchColumns,result,i,n,expr;try{if(this._binder.CheckQueryParameters(node.Parameters,Kusto.Language.Binding.Binder.NodeBinder.s_SearchParameters,diagnostics),this._binder.CheckIsExactType(node.Condition,Kusto.Language.Symbols.ScalarTypes.Bool,diagnostics),columns.add(new Kusto.Language.Symbols.ColumnSymbol("$table",Kusto.Language.Symbols.ScalarTypes.String)),searchColumns=this._binder.GetSearchColumnsTable(node),columns.AddRange(searchColumns.Columns),node.InClause!=null)for(this.CheckFirstInPipe(node,diagnostics),i=0,n=node.InClause.Expressions.Count;i<n;i=i+1|0)expr=node.InClause.Expressions.getItem$1(i).Element$1,this._binder.CheckIsTabular(expr,diagnostics);return result=this._binder._rowScope!=null?this._binder._rowScope.WithColumns$1(columns).Unsorted():new Kusto.Language.Symbols.TableSymbol.$ctor2(columns),new Kusto.Language.Syntax.SemanticInfo.$ctor3(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitFindOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),withSource,sourceColumnName,tables,commonColumnsTable,i,exp,_discard4,tc,c,type,nr,c2,columnNamesToRemove,i1,columnExp,col,resultTable;try{if(this._binder.CheckQueryParameters(node.Parameters,Kusto.Language.Binding.Binder.NodeBinder.s_FindParameters,diagnostics),this._binder.CheckIsExactType(node.Condition,Kusto.Language.Symbols.ScalarTypes.Bool,diagnostics),withSource=System.Linq.Enumerable.from(node.Parameters).firstOrDefault(function(p){return Bridge.referenceEquals(p.Name.SimpleName,Kusto.Language.KustoFacts.FindWithSourceProperty)},null),sourceColumnName=withSource!=null?withSource.Expression.toString():"source_",columns.add(new Kusto.Language.Symbols.ColumnSymbol(sourceColumnName,Kusto.Language.Symbols.ScalarTypes.String)),node.Project!=null)if(node.Project.ProjectKeyword.Kind===Kusto.Language.Syntax.SyntaxKind.ProjectSmartKeyword)this._binder.GetReferencedColumnsInTree(node.Condition,columns),tables=this._binder.GetFindTables(node),commonColumnsTable=this._binder.GetTableOfCommonColumns(tables),columns.AddRange(commonColumnsTable.Columns),columns.add(new Kusto.Language.Symbols.ColumnSymbol("pack_",Kusto.Language.Symbols.ScalarTypes.Dynamic));else for(i=0;i<node.Project.Columns.Count;i=i+1|0){exp=node.Project.Columns.getItem$1(i).Element$1;do{if(Bridge.is(exp,Kusto.Language.Syntax.PackExpression)){_discard4=Bridge.cast(exp,Kusto.Language.Syntax.PackExpression);i===(node.Project.Columns.Count-1|0)?columns.add(new Kusto.Language.Symbols.ColumnSymbol("pack_",Kusto.Language.Symbols.ScalarTypes.Dynamic)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetPackMustBeLastItemInList().WithLocation(exp));break}if(Bridge.is(exp,Kusto.Language.Syntax.TypedColumnReference)){tc=Bridge.cast(exp,Kusto.Language.Syntax.TypedColumnReference);this._binder.CheckIsColumn(tc.Column,diagnostics);(c=Bridge.as(this._binder.GetReferencedSymbol(tc.Column),Kusto.Language.Symbols.ColumnSymbol))!=null&&(type=this._binder.GetTypeFromTypeExpression(tc.Type,diagnostics),columns.add(new Kusto.Language.Symbols.ColumnSymbol(c.Name,type)));break}if(Bridge.is(exp,Kusto.Language.Syntax.NameReference)){nr=Bridge.cast(exp,Kusto.Language.Syntax.NameReference);this._binder.CheckIsColumn(nr,diagnostics);(c2=Bridge.as(this._binder.GetReferencedSymbol(nr),Kusto.Language.Symbols.ColumnSymbol))!=null&&columns.add(c2);break}}while(0)}else this._binder.GetFindColumns(node,columns);if(node.ProjectAway!=null&&node.ProjectAway.Columns.Count>0)if(Bridge.is(node.ProjectAway.Columns.getItem$1(0).Element$1,Kusto.Language.Syntax.StarExpression))columns.RemoveAll(function(c1){return!Bridge.referenceEquals(c1.Name,sourceColumnName)&&!Bridge.referenceEquals(c1.Name,"pack_")});else{columnNamesToRemove=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool();try{for(i1=0;i1<node.ProjectAway.Columns.Count;i1=i1+1|0)columnExp=node.ProjectAway.Columns.getItem$1(i1).Element$1,(col=Bridge.as(this._binder.GetReferencedSymbol(columnExp),Kusto.Language.Symbols.ColumnSymbol))!=null&&columnNamesToRemove.add(col.Name);columns.RemoveAll(function(c1){return columnNamesToRemove.contains(c1.Name)})}finally{Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(columnNamesToRemove)}}return resultTable=new Kusto.Language.Symbols.TableSymbol.$ctor2(columns),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultTable,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitUnionOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),tables=Kusto.Language.Binding.Binder.s_tableListPool.AllocateFromPool(),withSourceParameter,nd,name,i,n,expr,unifiedTable,result;try{for(this._binder.CheckQueryParameters(node.Parameters,Kusto.Language.Binding.Binder.NodeBinder.s_UnionParameters,diagnostics),withSourceParameter=System.Linq.Enumerable.from(node.Parameters).firstOrDefault(function(p){return System.Linq.Enumerable.from(Kusto.Language.KustoFacts.UnionWithSourceProperties).contains(p.Name.SimpleName)},null),(nd=withSourceParameter!=null?withSourceParameter.Expression:Bridge.as(null,Kusto.Language.Syntax.NameDeclaration))!=null&&(name=nd.SimpleName,columns.add(new Kusto.Language.Symbols.ColumnSymbol(name,Kusto.Language.Symbols.ScalarTypes.String))),this.RowScopeOrEmpty!=null&&tables.add(this.RowScopeOrEmpty),i=0,n=node.Expressions.Count;i<n;i=i+1|0)expr=node.Expressions.getItem$1(i).Element$1,this._binder.CheckIsTabular(expr,diagnostics),this._binder.AddTables(this._binder.GetResultType(expr),tables);return unifiedTable=this._binder.GetTableOfColumnsUnifiedByNameAndType(tables),result=unifiedTable,columns.Count>0&&(columns.AddRange(unifiedTable.Columns),result=new Kusto.Language.Symbols.TableSymbol.$ctor2(columns)),new Kusto.Language.Syntax.SemanticInfo.$ctor3(result.Unsorted(),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns);Kusto.Language.Binding.Binder.s_tableListPool.ReturnToPool(tables)}},VisitLookupOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),joinOnClause,i,n,expr,exprTable,result;try{for(this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryParameters(node.Parameters,Kusto.Language.Binding.Binder.NodeBinder.s_JoinParameters,diagnostics),this._binder.CheckIsTabular(node.Expression,diagnostics),joinOnClause=Bridge.cast(node.LookupClause,Kusto.Language.Syntax.JoinOnClause),i=0,n=joinOnClause.Expressions.Count;i<n;i=i+1|0)expr=joinOnClause.Expressions.getItem$1(i).Element$1,this.CheckJoinOnExpression(expr,diagnostics);return columns.AddRange(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)),exprTable=Bridge.as(this._binder.GetResultType(node.Expression),Kusto.Language.Symbols.TableSymbol),exprTable!=null&&this._binder.GetDeclaredAndInferredColumns$1(exprTable,columns),Kusto.Language.Binding.Binder.MakeColumnNamesUnique(columns),result=new Kusto.Language.Symbols.TableSymbol.$ctor2(columns),new Kusto.Language.Syntax.SemanticInfo.$ctor3(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},VisitJoinOperator:function(node){var $t,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),c,i,n,expr,c1,exprTable,result;try{this.CheckNotFirstInPipe(node,diagnostics);this._binder.CheckQueryParameters(node.Parameters,Kusto.Language.Binding.Binder.NodeBinder.s_JoinParameters,diagnostics);this._binder.CheckIsTabular(node.Expression,diagnostics);do{if($t=node.ConditionClause,Bridge.is($t,Kusto.Language.Syntax.JoinOnClause)){for(c=Bridge.cast($t,Kusto.Language.Syntax.JoinOnClause),i=0,n=c.Expressions.Count;i<n;i=i+1|0)expr=c.Expressions.getItem$1(i).Element$1,this.CheckJoinOnExpression(expr,diagnostics);break}if(Bridge.is($t,Kusto.Language.Syntax.JoinWhereClause)){c1=Bridge.cast($t,Kusto.Language.Syntax.JoinWhereClause);this._binder.CheckIsExactType(c1.Expression,Kusto.Language.Symbols.ScalarTypes.Bool,diagnostics);break}}while(0);return columns.AddRange(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty)),exprTable=Bridge.as(this._binder.GetResultType(node.Expression),Kusto.Language.Symbols.TableSymbol),exprTable!=null&&this._binder.GetDeclaredAndInferredColumns$1(exprTable,columns),Kusto.Language.Binding.Binder.MakeColumnNamesUnique(columns),result=new Kusto.Language.Symbols.TableSymbol.$ctor2(columns),new Kusto.Language.Syntax.SemanticInfo.$ctor3(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}},CheckJoinOnExpression:function(condition,diagnostics){Bridge.is(condition,Kusto.Language.Syntax.NameReference)?this._binder.CheckIsColumn(condition,diagnostics)&&(this.CheckCommonColumn(Bridge.cast(condition,Kusto.Language.Syntax.NameReference),diagnostics),this._binder.CheckIsScalar(condition,diagnostics)):this.CheckJoinAndOrEquality(condition,diagnostics)},CheckCommonColumn:function(name,diagnostics){var leftColumns=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool(),rightColumns=Kusto.Language.Binding.Binder.s_symbolListPool.AllocateFromPool();try{return(this.RowScopeOrEmpty.GetMembers$1(name.SimpleName,Kusto.Language.Symbols.SymbolMatch.Column,leftColumns),this.RightRowScopeOrEmpty.GetMembers$1(name.SimpleName,Kusto.Language.Symbols.SymbolMatch.Column,rightColumns),leftColumns.Count===1&&rightColumns.Count===1)?!0:(diagnostics.add(Kusto.Language.DiagnosticFacts.GetColumnMustExistOnBothSidesOfJoin(name.SimpleName).WithLocation(name)),!1)}finally{Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(leftColumns);Kusto.Language.Binding.Binder.s_symbolListPool.ReturnToPool(rightColumns)}},CheckJoinAndOrEquality:function(condition,diagnostics){var be;(be=Bridge.as(condition,Kusto.Language.Syntax.BinaryExpression))!=null?be.Kind===Kusto.Language.Syntax.SyntaxKind.EqualExpression?this.CheckJoinEquality(be,diagnostics):be.Kind===Kusto.Language.Syntax.SyntaxKind.AndExpression?(this.CheckJoinAndOrEquality(be.Left,diagnostics),this.CheckJoinAndOrEquality(be.Right,diagnostics)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidJoinCondition().WithLocation(condition)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidJoinCondition().WithLocation(condition))},CheckJoinEquality:function(condition,diagnostics){var be;(be=Bridge.as(condition,Kusto.Language.Syntax.BinaryExpression))!=null&&condition.Kind===Kusto.Language.Syntax.SyntaxKind.EqualExpression?(this.CheckJoinEqualityOperand(be.Left,"$left",diagnostics),this.CheckJoinEqualityOperand(be.Right,"$right",diagnostics)):diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidJoinCondition().WithLocation(condition))},CheckJoinEqualityOperand:function(operand,prefix,diagnostics){var path,id;if((path=Bridge.as(operand,Kusto.Language.Syntax.PathExpression))!=null&&(id=Bridge.as(path.Expression,Kusto.Language.Syntax.NameReference))!=null&&Bridge.referenceEquals(id.SimpleName,prefix)){this._binder.CheckIsColumn(operand,diagnostics)&&this._binder.CheckIsScalar(operand,diagnostics);return}diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidJoinConditionOperand(prefix).WithLocation(operand))},VisitRangeOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{this.CheckFirstInPipe(node,diagnostics);this._binder.CheckIsSummable(node.From,diagnostics);this._binder.CheckIsSummable(node.To,diagnostics);this._binder.CheckIsSummable(node.Step,diagnostics);var commonType=Kusto.Language.Binding.Binder.GetCommonScalarType([this._binder.GetResultTypeOrError(node.From),this._binder.GetResultTypeOrError(node.To),this._binder.GetResultTypeOrError(node.Step)])||Kusto.Language.Symbols.ErrorSymbol.Instance,name=node.Name.SimpleName,result=new Kusto.Language.Symbols.TableSymbol.ctor([new Kusto.Language.Symbols.ColumnSymbol(name,commonType)]);return new Kusto.Language.Syntax.SemanticInfo.$ctor3(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitFacetOperator:function(node){var $t,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),tables,tableType,c,c1,i,n,expr;try{if(this.CheckNotFirstInPipe(node,diagnostics),tables=new(System.Collections.Generic.List$1(Kusto.Language.Symbols.TableSymbol).ctor),node.WithClause!=null)do{if($t=node.WithClause,Bridge.is($t,Kusto.Language.Syntax.FacetWithOperatorClause)){c=Bridge.cast($t,Kusto.Language.Syntax.FacetWithOperatorClause);this._binder.CheckIsTabular(c.Operator,diagnostics);tableType=Bridge.as(this._binder.GetResultType(c.Operator),Kusto.Language.Symbols.TableSymbol);tableType!=null&&tables.add(tableType);break}if(Bridge.is($t,Kusto.Language.Syntax.FacetWithExpressionClause)){c1=Bridge.cast($t,Kusto.Language.Syntax.FacetWithExpressionClause);this._binder.CheckIsTabular(c1.Expression,diagnostics);tableType=Bridge.as(this._binder.GetResultType(c1.Expression),Kusto.Language.Symbols.TableSymbol);tableType!=null&&tables.add(tableType);break}}while(0);for(i=0,n=node.Expressions.Count;i<n;i=i+1|0){expr=node.Expressions.getItem$1(i).Element$1;this._binder.CheckIsColumn(expr,diagnostics);var name=Kusto.Language.Binding.Binder.GetExpressionResultName(expr),tableName=i===0?"Facet":"Facet_"+(i+1|0),table=this.RowScopeOrEmpty.WithColumns([new Kusto.Language.Symbols.ColumnSymbol(name,this._binder.GetResultTypeOrError(expr)),new Kusto.Language.Symbols.ColumnSymbol("count_"+(name||""),Kusto.Language.Symbols.ScalarTypes.Long)]).Unsorted().WithName(tableName);tables.add(table)}return new Kusto.Language.Syntax.SemanticInfo.$ctor3(new Kusto.Language.Symbols.GroupSymbol.$ctor1(tables),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitMakeSeriesOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),i,n,expr,i1,n1,agg,inRangeClause,fromToClause,resultType;try{if(this.CheckNotFirstInPipe(node,diagnostics),node.ByClause!=null)for(i=0,n=node.ByClause.Expressions.Count;i<n;i=i+1|0)expr=node.ByClause.Expressions.getItem$1(i).Element$1,this._binder.CheckIsScalar(expr,diagnostics),this._binder.CreateProjectionColumns(expr,builder,diagnostics);for(i1=0,n1=node.Aggregates.Count;i1<n1;i1=i1+1|0)agg=node.Aggregates.getItem$1(i1).Element$1,this._binder.CheckIsScalar(agg.Expression,diagnostics),agg.DefaultExpression!=null&&(this._binder.CheckIsLiteral(agg.DefaultExpression,diagnostics),this._binder.CheckIsType(agg.DefaultExpression,this._binder.GetResultTypeOrError(agg.Expression),Kusto.Language.Binding.Conversion.Promotable,diagnostics)),this._binder.CreateProjectionColumns(agg.Expression,builder,diagnostics,!1,!1,!1,!1,!0,!1,Kusto.Language.Symbols.ScalarTypes.Dynamic);return node.OnClause!=null&&(this._binder.CheckIsScalar(node.OnClause.Expression,diagnostics),this._binder.CreateProjectionColumns(node.OnClause.Expression,builder,diagnostics,!1,!1,!1,!1,!1,!1,Kusto.Language.Symbols.ScalarTypes.Dynamic),(inRangeClause=Bridge.as(node.RangeClause,Kusto.Language.Syntax.MakeSeriesInRangeClause))!=null?(Kusto.Language.Binding.Binder.CheckArgumentCount(inRangeClause.Arguments.Expressions,3,diagnostics),inRangeClause.Arguments.Expressions.Count===3&&(this._binder.CheckIsType(inRangeClause.Arguments.Expressions.getItem$1(0).Element$1,this._binder.GetResultTypeOrError(node.OnClause.Expression),Kusto.Language.Binding.Conversion.Promotable,diagnostics),this._binder.CheckIsType(inRangeClause.Arguments.Expressions.getItem$1(1).Element$1,this._binder.GetResultTypeOrError(node.OnClause.Expression),Kusto.Language.Binding.Conversion.Promotable,diagnostics),this._binder.CheckIsIntervalType(inRangeClause.Arguments.Expressions.getItem$1(2).Element$1,this._binder.GetResultTypeOrError(node.OnClause.Expression),diagnostics))):(fromToClause=Bridge.as(node.RangeClause,Kusto.Language.Syntax.MakeSeriesFromToStepClause))!=null&&(this._binder.CheckIsType(fromToClause.From,this._binder.GetResultTypeOrError(node.OnClause.Expression),Kusto.Language.Binding.Conversion.Promotable,diagnostics),this._binder.CheckIsType(fromToClause.To,this._binder.GetResultTypeOrError(node.OnClause.Expression),Kusto.Language.Binding.Conversion.Promotable,diagnostics),this._binder.CheckIsIntervalType(fromToClause.Step,this._binder.GetResultTypeOrError(node.OnClause.Expression),diagnostics))),resultType=this.RowScopeOrEmpty.WithColumns$1(builder.GetProjection()).Unsorted(),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitMvExpandOperator:function(node){var $t,$t1,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),i,n,expr,type,itemIndex,result;try{for(this.CheckNotFirstInPipe(node,diagnostics),builder.AddRange(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty),!1,!0),this._binder.CheckQueryParameters(node.Parameters,Kusto.Language.Binding.Binder.NodeBinder.s_MvExpandParameters,diagnostics),i=0,n=node.Expressions.Count;i<n;i=i+1|0)expr=node.Expressions.getItem$1(i).Element$1,this._binder.CheckIsExactType(expr.Expression,Kusto.Language.Symbols.ScalarTypes.Dynamic,diagnostics),type=Bridge.as(($t=expr.ToTypeOf)!=null&&($t1=$t.TypeOf)!=null?$t1.ReferencedSymbol:null,Kusto.Language.Symbols.TypeSymbol)||expr.Expression.ResultType,this._binder.CreateProjectionColumns(expr.Expression,builder,diagnostics,!1,!1,!1,!1,!1,!1,type);return itemIndex=System.Linq.Enumerable.from(node.Parameters).firstOrDefault(function(p){return Bridge.referenceEquals(p.Name.SimpleName,Kusto.Language.KustoFacts.MvExpandWithItemIndexProperty)},null),itemIndex!=null&&builder.Add(new Kusto.Language.Symbols.ColumnSymbol(itemIndex.Expression.toString(),Kusto.Language.Symbols.ScalarTypes.Long)),node.RowLimitClause!=null&&this._binder.CheckIsInteger(node.RowLimitClause.RowLimit,diagnostics),result=this.RowScopeOrEmpty.WithColumns$1(builder.GetProjection()),new Kusto.Language.Syntax.SemanticInfo.$ctor3(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitMvExpandExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),colType;try{return colType=this._binder.GetResultTypeOrError(node.Expression),node.ToTypeOf!=null&&(colType=Bridge.as(this._binder.GetReferencedSymbol(node.ToTypeOf.TypeOf),Kusto.Language.Symbols.TypeSymbol)||Kusto.Language.Symbols.ErrorSymbol.Instance),new Kusto.Language.Syntax.SemanticInfo.$ctor3(colType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitMvApplyOperator:function(node){var $t,$t1,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool(),i,n,expr,type,itemIndex,result;try{for(this.CheckNotFirstInPipe(node,diagnostics),builder.AddRange(this._binder.GetDeclaredAndInferredColumns(this.RowScopeOrEmpty),!1,!0),this._binder.CheckQueryParameters(node.Parameters,Kusto.Language.Binding.Binder.NodeBinder.s_MvExpandParameters,diagnostics),i=0,n=node.Expressions.Count;i<n;i=i+1|0)expr=node.Expressions.getItem$1(i).Element$1,this._binder.CheckIsExactType(expr.Expression,Kusto.Language.Symbols.ScalarTypes.Dynamic,diagnostics),type=Bridge.as(($t=expr.ToTypeOf)!=null&&($t1=$t.TypeOf)!=null?$t1.ReferencedSymbol:null,Kusto.Language.Symbols.TypeSymbol)||expr.Expression.ResultType,this._binder.CreateProjectionColumns(expr.Expression,builder,diagnostics,!1,!0,!1,!1,!1,!1,type);return itemIndex=System.Linq.Enumerable.from(node.Parameters).firstOrDefault(function(p){return Bridge.referenceEquals(p.Name.SimpleName,Kusto.Language.KustoFacts.MvApplyWithItemIndexProperty)},null),itemIndex!=null&&builder.Add(new Kusto.Language.Symbols.ColumnSymbol(itemIndex.Expression.toString(),Kusto.Language.Symbols.ScalarTypes.Long)),node.RowLimitClause!=null&&this._binder.CheckIsInteger(node.RowLimitClause.RowLimit,diagnostics),result=this.RowScopeOrEmpty.WithColumns$1(builder.GetProjection()),new Kusto.Language.Syntax.SemanticInfo.$ctor3(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitMvApplyExpression:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),colType;try{return colType=this._binder.GetResultTypeOrError(node.Expression),node.ToTypeOf!=null&&(colType=Bridge.as(this._binder.GetReferencedSymbol(node.ToTypeOf.TypeOf),Kusto.Language.Symbols.TypeSymbol)||Kusto.Language.Symbols.ErrorSymbol.Instance),new Kusto.Language.Syntax.SemanticInfo.$ctor3(colType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitMvApplySubqueryExpression:function(node){var resultType=this._binder.GetResultTypeOrError(node.Expression),table;return(table=Bridge.as(resultType,Kusto.Language.Symbols.TableSymbol))!=null&&(resultType=table.WithColumns$1(this._binder.GetDeclaredAndInferredColumns(table))),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultType)},VisitPrintOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),uniqueNames=Kusto.Language.Binding.Binder.s_uniqueNameTablePool.AllocateFromPool(),i,n,expr,name,col,sn,resultType;try{for(i=0,n=node.Expressions.Count;i<n;i=i+1|0)expr=node.Expressions.getItem$1(i).Element$1,this._binder.CheckIsScalar(expr,diagnostics),name=Kusto.Language.Binding.Binder.GetExpressionResultName(expr),System.String.isNullOrEmpty(name)&&(name="print_"+i),col=new Kusto.Language.Symbols.ColumnSymbol(uniqueNames.GetOrAddName(name),this._binder.GetResultTypeOrError(expr)),columns.add(col),(sn=Bridge.as(expr,Kusto.Language.Syntax.SimpleNamedExpression))!=null&&this._binder.SetSemanticInfo(sn.Name,Kusto.Language.Binding.Binder.CreateSemanticInfo(col));return resultType=new Kusto.Language.Symbols.TableSymbol.$ctor2(columns),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns);Kusto.Language.Binding.Binder.s_uniqueNameTablePool.ReturnToPool(uniqueNames)}},VisitReduceByOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),resultType;try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckQueryParameters(node.Parameters,Kusto.Language.Binding.Binder.NodeBinder.s_ReduceQueryParameters,diagnostics),this._binder.CheckIsExactType(node.Expression,Kusto.Language.Symbols.ScalarTypes.String,diagnostics),node.With!=null&&this._binder.CheckQueryParameters$1(node.With.Parameters,Kusto.Language.Binding.Binder.NodeBinder.s_ReduceWithParameters,diagnostics),resultType=this.RowScopeOrEmpty.WithColumns$1(Kusto.Language.Binding.Binder.NodeBinder.s_ReduceColumns).Unsorted(),new Kusto.Language.Syntax.SemanticInfo.$ctor3(resultType,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitRenderOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{return this.CheckNotFirstInPipe(node,diagnostics),this._binder.CheckIsToken(node.ChartType,Kusto.Language.KustoFacts.ChartTypes,!0,diagnostics),node.WithClause!=null&&this._binder.CheckQueryParameters$1(node.WithClause.Properties,Kusto.Language.Binding.Binder.NodeBinder.s_RenderProperties,diagnostics),new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.VoidSymbol.Instance,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitParseOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool(),declaredNames=Kusto.Language.Binding.Binder.s_stringSetPool.AllocateFromPool(),i,n,part,nextPart,prevPart,nat,pt,prevPart1,nd,nat1,result;try{for(this.CheckNotFirstInPipe(node,diagnostics),this._binder.GetDeclaredAndInferredColumns$1(this.RowScopeOrEmpty,columns),this._binder.CheckQueryParameters(node.Parameters,Kusto.Language.Binding.Binder.NodeBinder.s_ParseParameters,diagnostics),this._binder.CheckIsScalar(node.Expression,diagnostics),i=0,n=node.Patterns.Count;i<n;i=i+1|0){part=node.Patterns.getItem$1(i);switch(part.Kind){case Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression:case Kusto.Language.Syntax.SyntaxKind.CompoundStringLiteralExpression:break;case Kusto.Language.Syntax.SyntaxKind.StarExpression:i<(node.Patterns.Count-1|0)&&(nextPart=node.Patterns.getItem$1(i+1|0),nextPart.Kind!==Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression&&nextPart.Kind!==Kusto.Language.Syntax.SyntaxKind.CompoundStringLiteralExpression&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetParsePatternStringLiteralMustFollowStar().WithLocation(part)));i>0&&(prevPart=node.Patterns.getItem$1(i-1|0),(prevPart.Kind===Kusto.Language.Syntax.SyntaxKind.NameDeclaration||prevPart.Kind===Kusto.Language.Syntax.SyntaxKind.BrackettedExpression||(nat=Bridge.as(prevPart,Kusto.Language.Syntax.NameAndTypeDeclaration))!=null&&(pt=Bridge.as(nat.Type,Kusto.Language.Syntax.PrimitiveTypeExpression))!=null&&Bridge.referenceEquals(Kusto.Language.Binding.Binder.GetType(pt),Kusto.Language.Symbols.ScalarTypes.String))&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetParsePatternUsingStarAfterStringColumnIsAmbiguous().WithLocation(part)));break;case Kusto.Language.Syntax.SyntaxKind.NameDeclaration:case Kusto.Language.Syntax.SyntaxKind.NameAndTypeDeclaration:i>0&&(prevPart1=node.Patterns.getItem$1(i-1|0),prevPart1.Kind!==Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression&&prevPart1.Kind!==Kusto.Language.Syntax.SyntaxKind.CompoundStringLiteralExpression&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetParsePatternNameDoesNotFollowStringLiteral().WithLocation(part)));break;default:diagnostics.add(Kusto.Language.DiagnosticFacts.GetInvalidPatternPart().WithLocation(part))}do{if(Bridge.is(part,Kusto.Language.Syntax.NameDeclaration)){nd=Bridge.cast(part,Kusto.Language.Syntax.NameDeclaration);Kusto.Language.Binding.Binder.DeclareColumnName(declaredNames,nd.SimpleName,diagnostics,nd)&&columns.add(new Kusto.Language.Symbols.ColumnSymbol(nd.SimpleName,Kusto.Language.Symbols.ScalarTypes.String));break}if(Bridge.is(part,Kusto.Language.Syntax.NameAndTypeDeclaration)){nat1=Bridge.cast(part,Kusto.Language.Syntax.NameAndTypeDeclaration);Kusto.Language.Binding.Binder.CreateColumnsFromSchema(nat1,columns,declaredNames,diagnostics);break}}while(0)}return result=this.RowScopeOrEmpty.WithColumns$1(columns),new Kusto.Language.Syntax.SemanticInfo.$ctor3(result,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics);Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns);Kusto.Language.Binding.Binder.s_stringSetPool.ReturnToPool(declaredNames)}},VisitInvokeOperator:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{return this.CheckNotFirstInPipe(node,diagnostics),new Kusto.Language.Syntax.SemanticInfo.$ctor3(this._binder.GetResultTypeOrError(node.Function),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitEvaluateOperator:function(node){var call=node.FunctionCall,diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{return new Kusto.Language.Syntax.SemanticInfo.$ctor3(this._binder.GetResultTypeOrError(node.FunctionCall),diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitGetSchemaOperator:function(){return Kusto.Language.Binding.Binder.NodeBinder.s_GetSchemaInfo},VisitCountAsIdentifierClause:function(){return null},VisitDataScopeClause:function(){return null},VisitDefaultExpressionClause:function(){return null},VisitExternalDataWithClause:function(){return null},VisitFacetWithOperatorClause:function(){return null},VisitFacetWithExpressionClause:function(){return null},VisitFindInClause:function(){return null},VisitFindProjectClause:function(){return null},VisitJoinOnClause:function(){return null},VisitJoinWhereClause:function(){return null},VisitMakeSeriesByClause:function(){return null},VisitMakeSeriesInRangeClause:function(){return null},VisitMakeSeriesFromToStepClause:function(){return null},VisitMakeSeriesOnClause:function(){return null},VisitMvExpandRowLimitClause:function(){return null},VisitMvApplyRowLimitClause:function(){return null},VisitMvApplyContextIdClause:function(){return null},VisitNameEqualsClause:function(){return null},VisitOrderingClause:function(){return null},VisitOrderingNullsClause:function(){return null},VisitReduceByWithClause:function(){return null},VisitRenderWithClause:function(){return null},VisitSummarizeByClause:function(){return null},VisitTopHittersByClause:function(){return null},VisitTopNestedClause:function(){return null},VisitTopNestedWithOthersClause:function(){return null},VisitToTypeOfClause:function(){return null},VisitAliasStatement:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{this._binder.GetResultTypeOrError(node.Expression).IsError||this._binder.CheckIsDatabase(node.Expression,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}return null},VisitExpressionStatement:function(){return null},VisitLetStatement:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool(),ts;try{return((ts=Bridge.as(this._binder.GetResultType(node.Expression),Kusto.Language.Symbols.TupleSymbol))!=null&&diagnostics.add(Kusto.Language.DiagnosticFacts.GetMultiValuedExpressionCannotBeAssignedToVariable().WithLocation(node.Expression)),diagnostics.Count>0)?new Kusto.Language.Syntax.SemanticInfo.$ctor1(null,null,diagnostics):null}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitQueryParametersStatement:function(){return null},VisitRestrictStatement:function(){return null},VisitSetOptionStatement:function(node){var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{if(this._binder.CheckIsIdentifierNameDeclaration(node.Name,diagnostics),node.ValueClause!=null&&this._binder.CheckIsLiteralOrName(node.ValueClause.Expression,diagnostics),diagnostics.Count>0)return new Kusto.Language.Syntax.SemanticInfo.$ctor1(null,null,diagnostics)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}return null},VisitOptionValueClause:function(){return null},VisitCommandWithValueClause:function(){return null},VisitCommandWithPropertyListClause:function(){return null},VisitBadCommand:function(){return null},VisitCommandBlock:function(){return null},VisitCustomCommand:function(node){var commandSymbol=this._binder._globals.GetCommand(node.CommandKind);return new Kusto.Language.Syntax.SemanticInfo.$ctor1(commandSymbol,commandSymbol.Type)},VisitUnknownCommand:function(){return null},VisitDirectiveBlock:function(){return null}}});Bridge.define("Kusto.Language.Binding.Binder.SearchPredicateBinder",{inherits:[Kusto.Language.Syntax.DefaultSyntaxVisitor],$kind:"nested class",fields:{_binder:null,_treeBinder:null},props:{RowScopeOrEmpty:{get:function(){return this._binder._rowScope||Kusto.Language.Symbols.TableSymbol.Empty}}},ctors:{ctor:function(binder,treeBinder){this.$initialize();Kusto.Language.Syntax.DefaultSyntaxVisitor.ctor.call(this);this._binder=binder;this._treeBinder=treeBinder}},methods:{DefaultVisit:function(node){node.Accept$1(this._treeBinder)},VisitStarExpression:function(node){this._binder.SetSemanticInfo(node,new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.Dynamic))},VisitLiteralExpression:function(node){node.Kind===Kusto.Language.Syntax.SyntaxKind.StringLiteralExpression?this._binder.SetSemanticInfo(node,new Kusto.Language.Syntax.SemanticInfo.$ctor3(Kusto.Language.Symbols.ScalarTypes.Bool)):node.Accept$1(this._treeBinder)},VisitParenthesizedExpression:function(node){node.Expression.Accept$1(this);this._binder.SetSemanticInfo(node,new Kusto.Language.Syntax.SemanticInfo.$ctor3(node.Expression.ResultType))},VisitBinaryExpression:function(node){var opKind=Kusto.Language.Binding.Binder.GetOperatorKind(node.Kind),info;switch(opKind){case Kusto.Language.Symbols.OperatorKind.And:case Kusto.Language.Symbols.OperatorKind.Or:node.Left.Accept$1(this);node.Right.Accept$1(this);info=this._binder.GetBinaryOperatorInfo$1(opKind,node.Left,node.Right,node.Operator);this._binder.SetSemanticInfo(node,info);break;default:node.Accept$1(this._treeBinder)}}}});Bridge.define("Kusto.Language.Binding.Binder.TreeBinder",{inherits:[Kusto.Language.Syntax.DefaultSyntaxVisitor],$kind:"nested class",fields:{_binder:null,_nodeBinder:null,predicateBinder:null},ctors:{ctor:function(binder){this.$initialize();Kusto.Language.Syntax.DefaultSyntaxVisitor.ctor.call(this);this._binder=binder;this._nodeBinder=new Kusto.Language.Binding.Binder.NodeBinder(binder)}},methods:{DefaultVisit:function(node){this.VisitChildren(node);this.BindNode(node)},VisitChildren:function(node){var i,n,child;if(node!=null)for(i=0,n=node.ChildCount;i<n;i=i+1|0)child=Bridge.as(node.GetChild(i),Kusto.Language.Syntax.SyntaxNode),child!=null&&child.Accept$1(this)},BindNode:function(node){this._binder._cancellationToken.ThrowIfCancellationRequested();var info=node.Accept(Bridge.global.Kusto.Language.Syntax.SemanticInfo,this._nodeBinder);this._binder.SetSemanticInfo(node,info)},VisitPathExpression:function(node){node.Expression.Accept$1(this);var oldPathScope=this._binder._pathScope;this._binder._pathScope=this._binder.GetResultTypeOrError(node.Expression);try{node.Selector.Accept$1(this)}finally{this._binder._pathScope=oldPathScope}this.BindNode(node)},VisitElementExpression:function(node){node.Expression.Accept$1(this);var oldPathScope=this._binder._pathScope;this._binder._pathScope=this._binder.GetResultTypeOrError(node.Expression);try{node.Selector.Accept$1(this)}finally{this._binder._pathScope=oldPathScope}this.BindNode(node)},VisitPipeExpression:function(node){node.Expression.Accept$1(this);var oldRowScope=this._binder._rowScope;this._binder._rowScope=Bridge.as(this._binder.GetResultType(node.Expression),Kusto.Language.Symbols.TableSymbol);try{node.Operator.Accept$1(this)}finally{this._binder._rowScope=oldRowScope}this.BindNode(node)},VisitLookupOperator:function(node){node.Parameters.Accept$1(this);var oldRowScope=this._binder._rowScope;this._binder._rowScope=null;try{node.Expression.Accept$1(this)}finally{this._binder._rowScope=oldRowScope}this._binder._rightRowScope=Bridge.as(this._binder.GetResultType(node.Expression),Kusto.Language.Symbols.TableSymbol);try{node.LookupClause.Accept$1(this);this.BindNode(node)}finally{this._binder._rightRowScope=null}},VisitJoinOperator:function(node){var $t,oldRowScope;node.Parameters.Accept$1(this);oldRowScope=this._binder._rowScope;this._binder._rowScope=null;try{node.Expression.Accept$1(this)}finally{this._binder._rowScope=oldRowScope}this._binder._rightRowScope=Bridge.as(this._binder.GetResultType(node.Expression),Kusto.Language.Symbols.TableSymbol);try{($t=node.ConditionClause)!=null?$t.Accept$1(this):null;this.BindNode(node)}finally{this._binder._rightRowScope=null}},VisitUnionOperator:function(node){var oldRowScope=this._binder._rowScope;try{Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitUnionOperator.call(this,node)}finally{this._binder._rowScope=oldRowScope}},VisitSummarizeOperator:function(node){var $t;node.Parameters.Accept$1(this);($t=node.ByClause)!=null?$t.Accept$1(this):null;this.VisitInScope(node.Aggregates,Kusto.Language.Binding.Binder.ScopeKind.Aggregate);this.BindNode(node)},VisitMakeSeriesOperator:function(node){var $t,$t1,$t2;node.Parameters.Accept$1(this);this.VisitInScope(node.Aggregates,Kusto.Language.Binding.Binder.ScopeKind.Aggregate);($t=node.OnClause)!=null?$t.Accept$1(this):null;($t1=node.RangeClause)!=null?$t1.Accept$1(this):null;($t2=node.ByClause)!=null?$t2.Accept$1(this):null;this.BindNode(node)},VisitInScope:function(node,kind){if(node!=null){var oldScopeKind=this._binder._scopeKind;this._binder._scopeKind=kind;try{node.Accept$1(this)}finally{this._binder._scopeKind=oldScopeKind}}},VisitTopNestedClause:function(node){var $t,$t1;($t=node.Expression)!=null?$t.Accept$1(this):null;node.OfExpression.Accept$1(this);($t1=node.WithOthersClause)!=null?$t1.Accept$1(this):null;this.VisitInScope(node.ByExpression,Kusto.Language.Binding.Binder.ScopeKind.Aggregate);this.BindNode(node)},VisitAsOperator:function(node){if(Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitAsOperator.call(this,node),this._binder._rowScope!=null){var name=node.Name.SimpleName,symbol=new Kusto.Language.Symbols.VariableSymbol(name,this._binder._rowScope);this._binder.SetSemanticInfo(node.Name,new Kusto.Language.Syntax.SemanticInfo.$ctor1(symbol,null));this._binder._localScope.AddDeclaration(symbol)}this.BindNode(node)},VisitForkOperator:function(node){var $t,oldRowScope=this._binder._rowScope,expr;try{$t=Bridge.getEnumerator(node.Expressions,"GetEnumerator$1");try{while($t.moveNext())expr=$t.Current,this._binder._rowScope=oldRowScope,expr.Accept$1(this)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}finally{this._binder._rowScope=oldRowScope}this.BindNode(node)},VisitParenthesizedExpression:function(node){var oldPathScope=this._binder._pathScope;this._binder._pathScope=null;try{Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitParenthesizedExpression.call(this,node)}finally{this._binder._pathScope=oldPathScope}},VisitFunctionCallExpression:function(node){var oldPathScope,fn,fcInfo;node.Name.Accept$1(this);oldPathScope=this._binder._pathScope;this._binder._pathScope=null;try{(fn=Bridge.as(this._binder.GetReferencedSymbol(node.Name),Kusto.Language.Symbols.FunctionSymbol))!=null&&System.Array.getCount(fn.Signatures,Kusto.Language.Symbols.Signature)===1?this.VisitArgumentList(node.ArgumentList,System.Array.getItem(fn.Signatures,0,Kusto.Language.Symbols.Signature)):this.VisitInScope(node.ArgumentList,Kusto.Language.Binding.Binder.ScopeKind.Normal)}finally{this._binder._pathScope=oldPathScope}this.BindNode(node);this._binder.GetResultTypeOrError(node.Name).IsError||(fcInfo=this._binder.GetSemanticInfo(node),this._binder.SetSemanticInfo(node.Name,new Kusto.Language.Syntax.SemanticInfo.$ctor1(fcInfo!=null?fcInfo.ReferencedSymbol:null,fcInfo!=null?fcInfo.ResultType:null)))},VisitArgumentList:function(list,signature){for(var arg,p,fn,argumentScope=(fn=Bridge.as(signature.Symbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&this._binder._globals.IsAggregateFunction(fn)?Kusto.Language.Binding.Binder.ScopeKind.Normal:this._binder._scopeKind,i=0,n=list.Expressions.Count;i<n;i=i+1|0)if(arg=list.Expressions.getItem$1(i).Element$1,p=signature.GetParameter(arg,i,n),p!=null)switch(p.ArgumentKind){case Kusto.Language.Symbols.ArgumentKind.Aggregate:this.VisitInScope(arg,Kusto.Language.Binding.Binder.ScopeKind.Aggregate);break;default:this.VisitInScope(arg,argumentScope)}else this.VisitInScope(arg,argumentScope)},VisitInvokeOperator:function(node){var oldRowScope=this._binder._rowScope;this._binder._implicitArgumentType=this._binder._rowScope;this._binder._rowScope=null;try{node.Function.Accept$1(this)}finally{this._binder._rowScope=oldRowScope;this._binder._implicitArgumentType=null}this.BindNode(node)},VisitEvaluateOperator:function(node){var oldScopeKind=this._binder._scopeKind;this._binder._scopeKind=Kusto.Language.Binding.Binder.ScopeKind.PlugIn;try{this.VisitChildren(node)}finally{this._binder._scopeKind=oldScopeKind}this.BindNode(node)},VisitLetStatement:function(node){var literalValue,local;Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitLetStatement.call(this,node);literalValue={};Kusto.Language.Binding.Binder.TryGetLiteralValue(node.Expression,literalValue);local=new Kusto.Language.Symbols.VariableSymbol(node.Name.SimpleName,this._binder.GetResultTypeOrError(node.Expression),this._binder.GetIsConstant(node.Expression),literalValue.v);this._binder.SetSemanticInfo(node.Name,new Kusto.Language.Syntax.SemanticInfo.$ctor1(local,null));this._binder._localScope.AddDeclaration(local)},VisitFunctionDeclaration:function(node){var oldLocalScope=this._binder._localScope;try{this._binder._localScope=new Kusto.Language.Binding.LocalScope(oldLocalScope);Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitFunctionDeclaration.call(this,node)}finally{this._binder._localScope=oldLocalScope}},VisitFunctionParameters:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitFunctionParameters.call(this,node);var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{this._binder.BindParameterDeclarations(node.Parameters);this._binder.AddDeclarationsToLocalScope(this._binder._localScope,node.Parameters)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitQueryParametersStatement:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitQueryParametersStatement.call(this,node);var diagnostics=Kusto.Language.Binding.Binder.s_diagnosticListPool.AllocateFromPool();try{this._binder.BindParameterDeclarations(node.Parameters);this._binder.AddDeclarationsToLocalScope(this._binder._localScope,node.Parameters)}finally{Kusto.Language.Binding.Binder.s_diagnosticListPool.ReturnToPool(diagnostics)}},VisitPatternStatement:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitPatternStatement.call(this,node);var type=node.Pattern!=null?this._binder.GetResultTypeOrError(node.Pattern):new Kusto.Language.Symbols.PatternSymbol.ctor(node.Name.SimpleName),local=new Kusto.Language.Symbols.VariableSymbol(node.Name.SimpleName,type);this._binder.SetSemanticInfo(node.Name,new Kusto.Language.Syntax.SemanticInfo.$ctor1(local,null));this._binder._localScope.AddDeclaration(local)},VisitPatternDeclaration:function(node){this._binder.BindParameterDeclarations$1(node.Parameters);node.PathParameter!=null&&this._binder.BindParameterDeclaration$1(node.PathParameter.Parameter);var oldLocalScope=this._binder._localScope;try{this._binder._localScope=new Kusto.Language.Binding.LocalScope(oldLocalScope);this._binder.AddDeclarationsToLocalScope$1(this._binder._localScope,node.Parameters);node.PathParameter!=null&&this._binder.AddDeclarationToLocalScope(this._binder._localScope,node.PathParameter.Parameter);Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitPatternDeclaration.call(this,node)}finally{this._binder._localScope=oldLocalScope}},VisitAliasStatement:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitAliasStatement.call(this,node);var name=node.Name.SimpleName,db=Bridge.as(this._binder.GetResultTypeOrError(node.Expression),Kusto.Language.Symbols.DatabaseSymbol);name!=null&&db!=null&&this._binder._aliasedDatabases.set(name,db)},VisitFindOperator:function(node){var $t,$t1,$t2,$t3,$t4,oldRowScope;($t=node.DataScope)!=null?$t.Accept$1(this):null;($t1=node.Parameters)!=null?$t1.Accept$1(this):null;($t2=node.InClause)!=null?$t2.Accept$1(this):null;oldRowScope=this._binder._rowScope;try{this._binder._rowScope=this._binder.GetFindColumnsTable(node);this.predicateBinder==null&&(this.predicateBinder=new Kusto.Language.Binding.Binder.SearchPredicateBinder(this._binder,this));node.Condition.Accept$1(this.predicateBinder);($t3=node.Project)!=null?$t3.Accept$1(this):null;($t4=node.ProjectAway)!=null?$t4.Accept$1(this):null}finally{this._binder._rowScope=oldRowScope}this.BindNode(node)},VisitSearchOperator:function(node){var $t,$t1,$t2,oldRowScope,columns;($t=node.Parameters)!=null?$t.Accept$1(this):null;($t1=node.DataScope)!=null?$t1.Accept$1(this):null;oldRowScope=this._binder._rowScope;this._binder._rowScope=null;($t2=node.InClause)!=null?$t2.Accept$1(this):null;columns=Kusto.Language.Binding.Binder.s_columnListPool.AllocateFromPool();try{this._binder._rowScope=this._binder.GetSearchColumnsTable(node);this.predicateBinder==null&&(this.predicateBinder=new Kusto.Language.Binding.Binder.SearchPredicateBinder(this._binder,this));node.Condition.Accept$1(this.predicateBinder);this._binder._rowScope=oldRowScope}finally{Kusto.Language.Binding.Binder.s_columnListPool.ReturnToPool(columns)}this.BindNode(node)},VisitMvApplyOperator:function(node){var $t,$t1,$t2,$t3,$t4,subqueryInfo,appliedColumns,col,subqueryTable,col1,applyInfo;($t=node.Expressions)!=null?$t.Accept$1(this):null;($t1=node.RowLimitClause)!=null?$t1.Accept$1(this):null;($t2=node.ContextIdClause)!=null?$t2.Accept$1(this):null;var info=node.Accept(Bridge.global.Kusto.Language.Syntax.SemanticInfo,this._nodeBinder),oldRowScope=this._binder._rowScope,builder=Kusto.Language.Binding.Binder.s_projectionBuilderPool.AllocateFromPool();try{if(this._binder._rowScope=Bridge.as(info.ResultType,Kusto.Language.Symbols.TableSymbol),node.Subquery.Accept$1(this),subqueryInfo=this._binder.GetSemanticInfo(node.Subquery),oldRowScope!=null){appliedColumns=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.ColumnSymbol).$ctor1)(System.Linq.Enumerable.from(node.Expressions).select(function(e){var $t3;return Bridge.as(($t3=e.Element$1.Expression)!=null?$t3.ReferencedSymbol:null,Kusto.Language.Symbols.ColumnSymbol)}).where(function(e){return e!=null}));$t3=Bridge.getEnumerator(oldRowScope.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t3.moveNext())col=$t3.Current,appliedColumns.contains(col)||builder.Add(col,void 0,!1,!0)}finally{Bridge.is($t3,System.IDisposable)&&$t3.System$IDisposable$Dispose()}}if((subqueryTable=Bridge.as(subqueryInfo.ResultType,Kusto.Language.Symbols.TableSymbol))!=null){$t4=Bridge.getEnumerator(subqueryTable.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t4.moveNext())col1=$t4.Current,builder.Add(col1,void 0,!0,!1)}finally{Bridge.is($t4,System.IDisposable)&&$t4.System$IDisposable$Dispose()}}applyInfo=new Kusto.Language.Syntax.SemanticInfo.$ctor3(this._binder._rowScope.WithColumns$1(builder.GetProjection()),info.Diagnostics);this._binder.SetSemanticInfo(node,applyInfo)}finally{this._binder._rowScope=oldRowScope;Kusto.Language.Binding.Binder.s_projectionBuilderPool.ReturnToPool(builder)}},VisitNameReference:function(node){Kusto.Language.Syntax.DefaultSyntaxVisitor.prototype.VisitNameReference.call(this,node);var isCommand=node.GetFirstAncestor(Kusto.Language.Syntax.CustomCommand)!=null,ts;isCommand&&(ts=Bridge.as(node.ReferencedSymbol,Kusto.Language.Symbols.TableSymbol))!=null&&(this._binder._rowScope=ts)},VisitCommandBlock:function(node){var commandStatement,command,commandResults,i;if(node.Statements.Count>0)for(commandStatement=node.Statements.getItem$1(0).Element$1,commandStatement.Accept$1(this),command=commandStatement.GetFirstDescendant(Kusto.Language.Syntax.Command),command!=null&&(commandResults=new Kusto.Language.Symbols.VariableSymbol("$command_results",this._binder.GetResultTypeOrError(command)),this._binder._localScope.AddDeclaration(commandResults)),i=1;i<node.Statements.Count;i=i+1|0)node.Statements.getItem$1(i).Element$1.Accept$1(this)}}});Bridge.define("Kusto.Language.Editor.ClientParameter",{inherits:[Kusto.Language.Editor.SyntaxReference],props:{Name:null},ctors:{ctor:function(name,position,length){this.$initialize();Kusto.Language.Editor.SyntaxReference.ctor.call(this,position,length);this.Name=name}}});Bridge.define("Kusto.Language.Editor.ClusterReference",{inherits:[Kusto.Language.Editor.SyntaxReference],props:{Cluster:null},ctors:{ctor:function(cluster,start,length){this.$initialize();Kusto.Language.Editor.SyntaxReference.ctor.call(this,start,length);this.Cluster=cluster}}});Bridge.define("Kusto.Language.Editor.DatabaseReference",{inherits:[Kusto.Language.Editor.SyntaxReference],props:{Database:null,Cluster:null},ctors:{ctor:function(database,cluster,start,length){this.$initialize();Kusto.Language.Editor.SyntaxReference.ctor.call(this,start,length);this.Database=database;this.Cluster=cluster}}});Bridge.define("Kusto.Language.Editor.KustoCodeService",{inherits:[Kusto.Language.Editor.CommonCodeService],statics:{methods:{GetOutlineCollapsedText:function(code){for(var token,builder=new System.Text.StringBuilder,i=0;i<System.Array.getCount(code.LexerTokens,Kusto.Language.Parsing.LexicalToken);i=i+1|0){if(token=System.Array.getItem(code.LexerTokens,i,Kusto.Language.Parsing.LexicalToken),Bridge.referenceEquals(token.Text,"|")||Bridge.referenceEquals(token.Text,";"))break;token.Trivia.length>0&&(i===0?builder.append(token.Trivia):builder.append(" "));builder.append(token.Text)}return builder.toString()},GetClusterReference:function(fc,location){var name={};return Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Cluster)&&Kusto.Language.Editor.KustoCodeService.TryGetConstantStringArgumentValue(fc,0,name)?(location=location||fc.ArgumentList.Expressions.getItem$1(0).Element$1,new Kusto.Language.Editor.ClusterReference(name.v,location.TextStart,location.Width)):null},TryGetConstantStringArgumentValue:function(fc,index,constant){return fc.ArgumentList.Expressions.Count>index&&fc.ArgumentList.Expressions.getItem$1(index).Element$1.IsConstant?(constant.v=Bridge.as(fc.ArgumentList.Expressions.getItem$1(index).Element$1.ConstantValue,System.String),constant.v!=null):(constant.v=null,!1)}}},fields:{kind:null,globals:null,lazyUnboundCode:null,lazyBoundCode:null,codeException:null,lazyDiagnostics:null},props:{Kind:{get:function(){return this.kind}}},ctors:{$ctor2:function(text,globals,code){if(this.$initialize(),Kusto.Language.Editor.CommonCodeService.ctor.call(this,text),globals==null)throw new System.ArgumentNullException.$ctor1("globals");this.kind=Kusto.Language.KustoCode.GetKind(text);this.globals=globals;this.lazyBoundCode=code},$ctor1:function(text,globals){globals===void 0&&(globals=null);Kusto.Language.Editor.KustoCodeService.$ctor2.call(this,text,globals||Kusto.Language.GlobalState.Default,null)},ctor:function(code){Kusto.Language.Editor.KustoCodeService.$ctor2.call(this,code.Text,code.Globals,code)}},methods:{TryGetBoundOrUnboundCode:function(cancellationToken,waitForAnalysis,code){if(this.lazyUnboundCode==null&&this.codeException==null&&waitForAnalysis){this;try{if(this.lazyBoundCode!=null)return code.v=this.lazyBoundCode,!0;var newCode=Kusto.Language.KustoCode.Parse(this.Text,this.globals);Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.Kusto.Language.KustoCode,Bridge.ref(this,"lazyUnboundCode"),newCode,null)}catch(e){e=System.Exception.create(e);this.codeException=e}}return code.v=this.lazyUnboundCode,code.v!=null},TryGetBoundCode:function(cancellationToken,waitForAnalysis,code){var newCode,newCode1;if(this.lazyBoundCode==null&&this.codeException==null&&waitForAnalysis){this;try{this.lazyUnboundCode!=null?(newCode=this.lazyUnboundCode.Analyze(void 0,cancellationToken),Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.Kusto.Language.KustoCode,Bridge.ref(this,"lazyBoundCode"),newCode,null)):(newCode1=Kusto.Language.KustoCode.ParseAndAnalyze(this.Text,this.globals,cancellationToken),Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.Kusto.Language.KustoCode,Bridge.ref(this,"lazyBoundCode"),newCode1,null))}catch(e){e=System.Exception.create(e);this.codeException=e}}return code.v=this.lazyBoundCode,code.v!=null},IsFeatureSupported:function(feature){switch(this.Kind){case Kusto.Language.Editor.CodeKinds.Query:case Kusto.Language.Editor.CodeKinds.Command:return!0;case Kusto.Language.Editor.CodeKinds.Directive:switch(feature){case Kusto.Language.Editor.CodeServiceFeatures.Classification:return!0}return!1;default:return!1}},GetDiagnostics:function(waitForAnalysis,cancellationToken){var code,ds;if(waitForAnalysis===void 0&&(waitForAnalysis=!0),cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),this.lazyDiagnostics==null)if(code={},this.TryGetBoundCode(cancellationToken,waitForAnalysis,code))try{ds=code.v.GetDiagnostics(cancellationToken);Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Diagnostic),Bridge.ref(this,"lazyDiagnostics"),ds,null)}catch($e1){$e1=System.Exception.create($e1);Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Diagnostic),Bridge.ref(this,"lazyDiagnostics"),Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Diagnostic).Instance,null)}else Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.System.Collections.Generic.IReadOnlyList$1(Kusto.Language.Diagnostic),Bridge.ref(this,"lazyDiagnostics"),Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Diagnostic).Instance,null);return this.lazyDiagnostics},GetClassifications:function(start,length,waitForAnalysis,cancellationToken){var code,classifications,clientParameterClassifications,merged;if(waitForAnalysis===void 0&&(waitForAnalysis=!0),cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),code={},this.TryGetBoundCode(cancellationToken,waitForAnalysis,code))try{return classifications=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ClassifiedRange).ctor),Kusto.Language.Editor.KustoClassifier.GetClassifications(code.v.Syntax,start,length,classifications,cancellationToken),clientParameterClassifications=this.GetClientParametersClassifications(),System.Array.getCount(clientParameterClassifications,Kusto.Language.Editor.ClassifiedRange)>0?(merged=Kusto.Language.Editor.CommonCodeService.Add(classifications,clientParameterClassifications),new Kusto.Language.Editor.ClassificationInfo(merged)):new Kusto.Language.Editor.ClassificationInfo(classifications)}catch($e1){return $e1=System.Exception.create($e1),Kusto.Language.Editor.ClassificationInfo.Empty}else return Kusto.Language.Editor.ClassificationInfo.Empty},GetClientParameters:function(){var $t,cps=Kusto.Language.Editor.CommonCodeService.prototype.GetClientParameters.call(this),code={},newCps,cp,token;if(System.Array.getCount(cps,Kusto.Language.Editor.ClientParameter)>0&&this.TryGetBoundOrUnboundCode(Bridge.getDefaultValue(Kusto.Language.Utils.CancellationToken),!0,code)){newCps=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ClientParameter).ctor);$t=Bridge.getEnumerator(cps,Kusto.Language.Editor.ClientParameter);try{while($t.moveNext())cp=$t.Current,token=code.v.Syntax.GetTokenAt(cp.Start),cp.Start>=token.TextStart&&newCps.add(cp)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return newCps}return cps},GetOutlines:function(cancellationToken){var code,collapsedText,length;if(cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),code={},this.TryGetBoundOrUnboundCode(cancellationToken,!0,code))try{return System.Array.getCount(code.v.LexerTokens,Kusto.Language.Parsing.LexicalToken)>0?(collapsedText=Kusto.Language.Editor.KustoCodeService.GetOutlineCollapsedText(code.v),length=Kusto.Language.Parsing.TextFacts.TrimEnd$1(this.Text,0,this.Text.length),new Kusto.Language.Editor.OutlineInfo(System.Array.init([new Kusto.Language.Editor.OutlineRange(0,length,collapsedText)],Kusto.Language.Editor.OutlineRange))):Kusto.Language.Editor.OutlineInfo.Empty}catch($e1){$e1=System.Exception.create($e1)}return Kusto.Language.Editor.CommonCodeService.prototype.GetOutlines.call(this,cancellationToken)},ShouldAutoComplete:function(position,key,cancellationToken){cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var code={};if(this.TryGetBoundOrUnboundCode(cancellationToken,!0,code))try{return new Kusto.Language.Editor.KustoCompleter(code.v,Kusto.Language.Editor.CompletionOptions.Default,cancellationToken).ShouldAutoComplete(position,key)}catch($e1){$e1=System.Exception.create($e1)}return!1},GetCompletionItems:function(position,options,cancellationToken){options===void 0&&(options=null);cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var code={};if(this.TryGetBoundCode(cancellationToken,!0,code)&&code.v.HasSemantics)try{return new Kusto.Language.Editor.KustoCompleter(code.v,options||Kusto.Language.Editor.CompletionOptions.Default,cancellationToken).GetCompletionItems(position)}catch($e1){$e1=System.Exception.create($e1)}return Kusto.Language.Editor.CompletionInfo.Empty},GetQuickInfo:function(position,cancellationToken){cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var code={};if(this.TryGetBoundCode(cancellationToken,!0,code))try{return new Kusto.Language.Editor.KustoQuickInfoBuilder(code.v).GetQuickInfo(position,cancellationToken)}catch($e1){return $e1=System.Exception.create($e1),Kusto.Language.Editor.QuickInfo.Empty}else return this.codeException!=null?new Kusto.Language.Editor.QuickInfo(this.codeException.Message):Kusto.Language.Editor.QuickInfo.Empty},GetElement:function(position,cancellationToken){var code,token;if(cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),code={},this.TryGetBoundCode(cancellationToken,!0,code))try{return token=code.v.Syntax.GetTokenAt(position),new Kusto.Language.Editor.TextRange(token.TextStart,token.Text.length)}catch($e1){$e1=System.Exception.create($e1)}return new Kusto.Language.Editor.TextRange(0,0)},GetRelatedElements:function(position,options,cancellationToken){options===void 0&&(options=0);cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var code={};if(this.TryGetBoundCode(cancellationToken,!0,code))try{return new Kusto.Language.Editor.KustoRelatedElementFinder(code.v).FindRelatedElements(position,options)}catch($e1){$e1=System.Exception.create($e1)}return Kusto.Language.Editor.RelatedInfo.Empty},GetClusterReferences:function(cancellationToken){var code,clusters;if(cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),code={},this.TryGetBoundCode(cancellationToken,!0,code))try{return clusters=new(System.Collections.Generic.List$1(Kusto.Language.Editor.ClusterReference).ctor),code.v.HasSemantics&&this.GetClusterReferences$1(code.v.Syntax,null,clusters,cancellationToken),Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Editor.ClusterReference,clusters)}catch($e1){return $e1=System.Exception.create($e1),Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.ClusterReference).Instance}else return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.ClusterReference).Instance},GetClusterReferences$1:function(root,location,clusters,cancellationToken){root.WalkElements(Bridge.fn.bind(this,function(element){var fc,fs,cluster,expansion;cancellationToken.ThrowIfCancellationRequested();(fc=Bridge.as(element,Kusto.Language.Syntax.FunctionCallExpression))!=null&&(fs=Bridge.as(fc.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&(Bridge.referenceEquals(fs,Kusto.Language.Functions.Cluster)?(cluster=Kusto.Language.Editor.KustoCodeService.GetClusterReference(fc,location),cluster!=null&&clusters.add(cluster)):System.Array.getItem(fs.Signatures,0,Kusto.Language.Symbols.Signature).HasClusterCall&&(expansion=fc.GetExpansion(),expansion!=null&&this.GetClusterReferences$1(expansion,location||fc.Name,clusters,cancellationToken)))}))},GetDatabaseReferences:function(cancellationToken){var code,refs;if(cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken),code={},this.TryGetBoundCode(cancellationToken,!0,code))try{return refs=new(System.Collections.Generic.List$1(Kusto.Language.Editor.DatabaseReference).ctor),code.v.HasSemantics&&this.GetDatabaseReferences$1(code.v.Syntax,null,this.globals.Cluster,this.globals.Database,refs,cancellationToken),refs}catch($e1){return $e1=System.Exception.create($e1),Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.DatabaseReference).Instance}else return Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Editor.DatabaseReference).Instance},GetDatabaseReferences$1:function(root,location,defaultCluster,defaultDatabase,refs,cancellationToken){root.WalkElements(Bridge.fn.bind(this,function(element){var fc,fs,dbref,expansion,db,cluster;cancellationToken.ThrowIfCancellationRequested();(fc=Bridge.as(element,Kusto.Language.Syntax.FunctionCallExpression))!=null&&(fs=Bridge.as(fc.ReferencedSymbol,Kusto.Language.Symbols.FunctionSymbol))!=null&&(Bridge.referenceEquals(fs,Kusto.Language.Functions.Database)?(dbref=this.GetDatabaseReference(fc,location,defaultCluster),dbref!=null&&refs.add(dbref)):System.Array.getItem(fs.Signatures,0,Kusto.Language.Symbols.Signature).HasDatabaseCall&&(expansion=fc.GetExpansion(),expansion!=null&&(db=defaultDatabase,cluster=defaultCluster,db=this.globals.GetDatabase(fs)||defaultDatabase,cluster=this.globals.GetCluster(db)||defaultCluster,this.GetDatabaseReferences$1(expansion,location||fc.Name,cluster,db,refs,cancellationToken))))}))},GetDatabaseReference:function(fc,location,defaultCluster){var databaseName={},cluster,p,fcCluster;return Bridge.referenceEquals(fc.ReferencedSymbol,Kusto.Language.Functions.Database)&&Kusto.Language.Editor.KustoCodeService.TryGetConstantStringArgumentValue(fc,0,databaseName)?(location=location||fc.ArgumentList.Expressions.getItem$1(0).Element$1,cluster={},(p=Bridge.as(fc.Parent,Kusto.Language.Syntax.PathExpression))!=null&&Bridge.referenceEquals(p.Selector,fc)&&(fcCluster=Bridge.as(p.Expression,Kusto.Language.Syntax.FunctionCallExpression))!=null&&Bridge.referenceEquals(fcCluster.ReferencedSymbol,Kusto.Language.Functions.Cluster)&&Kusto.Language.Editor.KustoCodeService.TryGetConstantStringArgumentValue(fcCluster,0,cluster)||(cluster.v=defaultCluster.Name),new Kusto.Language.Editor.DatabaseReference(databaseName.v,cluster.v,location.TextStart,location.Width)):null},GetMinimalText:function(cancellationToken){cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var code={};return this.TryGetBoundOrUnboundCode(cancellationToken,!0,code)?code.v.Syntax.ToString(Kusto.Language.Syntax.IncludeTrivia.Minimal):this.Text},GetFormattedText:function(options,cursorPosition,cancellationToken){options===void 0&&(options=null);cursorPosition===void 0&&(cursorPosition=0);cancellationToken===void 0&&(cancellationToken=new Kusto.Language.Utils.CancellationToken);var code={};return this.TryGetBoundOrUnboundCode(cancellationToken,!0,code)?Kusto.Language.Editor.KustoFormatter.GetFormattedText(code.v.Syntax,options,cursorPosition):new Kusto.Language.Editor.FormattedText(this.Text,cursorPosition)}}});Bridge.define("Kusto.Language.Editor.UnknownCodeService",{inherits:[Kusto.Language.Editor.CommonCodeService],props:{Kind:{get:function(){return"Unknown"}}},ctors:{ctor:function(text){this.$initialize();Kusto.Language.Editor.CommonCodeService.ctor.call(this,text)}}});Bridge.define("Kusto.Language.Parsing.ListPrimaryParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],statics:{fields:{s_outputListPool:null},ctors:{init:function(){this.s_outputListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(System.Object)))(function(){return new(System.Collections.Generic.List$1(System.Object).ctor)},function(list){list.clear()},50)}}},methods:{Parse$1:function(source,start){var list=Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TOutput).s_outputListPool.AllocateFromPool(),n;try{return n=this.Parse(source,start,list,0),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(n,n>=0&&list.Count>0?Bridge.cast(Bridge.unbox(list.getItem(0)),TOutput):Bridge.getDefaultValue(TOutput))}finally{Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TOutput).s_outputListPool.ReturnToPool(list)}}}}});Bridge.define("Kusto.Language.Parsing.BestParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],fields:{_parsers:null},props:{Parsers:{get:function(){return this._parsers}}},ctors:{ctor:function(parsers){this.$initialize();Kusto.Language.Parsing.Parser$2(TInput,TOutput).ctor.call(this);this._parsers=System.Linq.Enumerable.from(parsers).ToArray()}},methods:{Accept$1:function(visitor){visitor.VisitBest$1(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitBest$1(TOutput,this)},Clone:function(){return new(Kusto.Language.Parsing.BestParser$2(TInput,TOutput))(this.Parsers)},Parse$1:function(source,start){for(var parser,length,result,minLength=-1,maxLength=-1,bestParser=-1,i=0;i<this._parsers.length;i=i+1|0)parser=this._parsers[System.Array.index(i,this._parsers)],length=parser.Scan(source,start),length>maxLength?(maxLength=length,bestParser=i):length<minLength&&(minLength=length);return maxLength>=0?(result=this._parsers[System.Array.index(bestParser,this._parsers)].Parse$1(source,start),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(maxLength,result.Value)):new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(minLength,Bridge.getDefaultValue(TOutput))},Parse:function(source,inputStart,output,outputStart){for(var parser,length,minLength=-1,maxLength=-1,bestParser=-1,i=0;i<this._parsers.length;i=i+1|0)parser=this._parsers[System.Array.index(i,this._parsers)],length=parser.Scan(source,inputStart),length>maxLength?(maxLength=length,bestParser=i):length<minLength&&(minLength=length);return maxLength>=0&&this._parsers[System.Array.index(bestParser,this._parsers)].Parse(source,inputStart,output,outputStart),maxLength},Scan:function(source,start){var $t,max=-1,min=-1,parser,n;$t=Bridge.getEnumerator(this._parsers);try{while($t.moveNext())parser=$t.Current,n=parser.Scan(source,start),n>max?max=n:n<min&&(min=n)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return max>=0?max:min}}}});Bridge.define("Kusto.Language.Parsing.ResultPrimaryParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],methods:{Parse:function(source,inputStart,output){var result=this.Parse$1(source,inputStart);return result.Length>=0&&output.add(result.Value),result.Length}}}});Bridge.define("Kusto.Language.Parsing.FirstParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],fields:{_parsers:null},props:{Parsers:{get:function(){return this._parsers}}},ctors:{ctor:function(parsers){this.$initialize();Kusto.Language.Parsing.Parser$2(TInput,TOutput).ctor.call(this);this._parsers=System.Linq.Enumerable.from(parsers).ToArray()}},methods:{Accept$1:function(visitor){visitor.VisitFirst$1(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitFirst$1(TOutput,this)},Clone:function(){return new(Kusto.Language.Parsing.FirstParser$2(TInput,TOutput))(this.Parsers)},Parse$1:function(source,start){for(var parser,result,minLength=-1,i=0;i<this._parsers.length;i=i+1|0){if(parser=this._parsers[System.Array.index(i,this._parsers)],result=parser.Parse$1(source,start),result.Length>=0)return result;result.Length<minLength&&(minLength=result.Length)}return new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(minLength,Bridge.getDefaultValue(TOutput))},Parse:function(source,inputStart,output,outputStart){var $t,minLength=-1,originalOutputCount=output.Count,parser,length;$t=Bridge.getEnumerator(this._parsers);try{while($t.moveNext()){if(parser=$t.Current,Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,originalOutputCount),length=parser.Parse(source,inputStart,output,outputStart),length>=0)return length;length<minLength&&(minLength=length)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return minLength},Scan:function(source,start){var $t,minLength=-1,parser,n;$t=Bridge.getEnumerator(this._parsers);try{while($t.moveNext()){if(parser=$t.Current,n=parser.Scan(source,start),n>=0)return n;n<minLength&&(minLength=n)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return minLength}}}});Bridge.define("Kusto.Language.Parsing.IfParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],props:{Test:null,Parser:null},ctors:{ctor:function(test,parser){this.$initialize();Kusto.Language.Parsing.Parser$2(TInput,TOutput).ctor.call(this);this.Test=test;this.Parser=parser}},methods:{Accept$1:function(visitor){visitor.VisitIf$1(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitIf$1(TOutput,this)},Clone:function(){return new(Kusto.Language.Parsing.IfParser$2(TInput,TOutput))(this.Test,this.Parser)},Parse$1:function(source,start){var length=this.Test.Scan(source,start);return length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(length,Bridge.getDefaultValue(TOutput)):this.Parser.Parse$1(source,start)},Parse:function(source,inputStart,output,outputStart){var length=this.Test.Scan(source,inputStart);return length<0?length:this.Parser.Parse(source,inputStart,output,outputStart)},Scan:function(source,start){var length=this.Test.Scan(source,start);return length<0?length:this.Parser.Scan(source,start)}}}});Bridge.define("Kusto.Language.Parsing.MapParser$2.Node",function(TInput,TOutput){return{$kind:"nested class",statics:{methods:{From:function(keyValuePairs){var $t,node=new(Kusto.Language.Parsing.MapParser$2.Node(TInput,TOutput)),pair;$t=Bridge.getEnumerator(keyValuePairs,System.Collections.Generic.KeyValuePair$2(System.Collections.Generic.IEnumerable$1(TInput),Function));try{while($t.moveNext())pair=$t.Current,node.Add(pair.key,0,pair.value)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return node}}},fields:{map:null},props:{HasValue:!1,Value:null},ctors:{ctor:function(){this.$initialize()}},methods:{Add:function(sequence,pos,value){var $t,node=this,item,subNode;$t=Bridge.getEnumerator(sequence,TInput);try{while($t.moveNext())item=$t.Current,node.map==null&&(node.map=new(System.Collections.Generic.Dictionary$2(TInput,Kusto.Language.Parsing.MapParser$2.Node(TInput,TOutput)))),subNode={},node.map.tryGetValue(item,subNode)||(subNode.v=new(Kusto.Language.Parsing.MapParser$2.Node(TInput,TOutput)),node.map.add(item,subNode.v)),node=subNode.v}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}node.HasValue=!0;node.Value=value},TryGetValueNode:function(key,node){return this.map!=null?this.map.tryGetValue(key,node):(node.v=null,!1)}}}});Bridge.define("Kusto.Language.Parsing.MatchParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],props:{Consumer:null,Producer:null},ctors:{ctor:function(consumer,producer){this.$initialize();Kusto.Language.Parsing.Parser$2(TInput,TOutput).ctor.call(this);this.Consumer=consumer;this.Producer=producer},$ctor1:function(predicate,producer){Kusto.Language.Parsing.MatchParser$2(TInput,TOutput).ctor.call(this,function(source,start){return!source.IsEnd(start)&&predicate(source.Peek(start))?1:-1},function(source,start){return producer(source.Peek(start))})}},methods:{Clone:function(){return new(Kusto.Language.Parsing.MatchParser$2(TInput,TOutput).ctor)(this.Consumer,this.Producer)},Accept$1:function(visitor){visitor.VisitMatch$1(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitMatch$1(TOutput,this)},Scan:function(source,start){return this.Consumer(source,start)},Parse:function(source,inputStart,output){var length=this.Consumer(source,inputStart),value;return length>=0&&(value=this.Producer(source,inputStart,length),output.add(value)),length},Parse$1:function(source,start){var length,value;return(start===void 0&&(start=0),length=this.Consumer(source,start),length>0)?(value=this.Producer(source,start,length),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(length,value)):new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(length,Bridge.getDefaultValue(TOutput))}}}});Bridge.define("Kusto.Language.Parsing.OptionalParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],props:{Parser:null,Producer:null,IsOptional:{get:function(){return!0}}},ctors:{ctor:function(parser,producer){this.$initialize();Kusto.Language.Parsing.Parser$2(TInput,TOutput).ctor.call(this);this.Parser=parser;this.Producer=producer}},methods:{Accept$1:function(visitor){visitor.VisitOptional(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitOptional(TOutput,this)},Clone:function(){return new(Kusto.Language.Parsing.OptionalParser$2(TInput,TOutput))(this.Parser,this.Producer)},Parse$1:function(source,start){var result=this.Parser.Parse$1(source,start);return result.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(0,this.Producer()):result},Parse:function(source,inputStart,output){var originalOutputCount=output.Count,length=this.Parser.Parse(source,inputStart,output,output.Count);return length<0||output.Count===originalOutputCount?(Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,originalOutputCount),output.add(this.Producer()),0):length},Scan:function(source,start){var n=this.Parser.Scan(source,start);return n<0?0:n}}}});Bridge.define("Kusto.Language.Parsing.RequiredParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.Parser$2(TInput,TOutput)],props:{Parser:null,Producer:null},ctors:{ctor:function(parser,producer){this.$initialize();Kusto.Language.Parsing.Parser$2(TInput,TOutput).ctor.call(this);this.Parser=parser;this.Producer=producer}},methods:{Accept$1:function(visitor){visitor.VisitRequired(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitRequired(TOutput,this)},Clone:function(){return new(Kusto.Language.Parsing.RequiredParser$2(TInput,TOutput))(this.Parser,this.Producer)},Parse$1:function(source,start){var result=this.Parser.Parse$1(source,start);return result.Length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(0,this.Producer()):result},Parse:function(source,inputStart,output){var originalOutputCount=output.Count,length=this.Parser.Parse(source,inputStart,output,output.Count);return length<0||output.Count===originalOutputCount?(Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,originalOutputCount),output.add(this.Producer()),0):length},Scan:function(source,start){var len=this.Parser.Scan(source,start);return len<0?0:len}}}});Bridge.define("Kusto.Language.Symbols.ClusterSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],props:{Databases:null,Members:{get:function(){return this.Databases}},Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Cluster}},IsOpen:!1,Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Tabular}}},ctors:{$ctor1:function(name,databases,isOpen){isOpen===void 0&&(isOpen=!1);this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this.Databases=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.DatabaseSymbol,databases);this.IsOpen=isOpen},ctor:function(name,databases){databases===void 0&&(databases=[]);Kusto.Language.Symbols.ClusterSymbol.$ctor1.call(this,name,databases,!1)}},methods:{IsCluster:function(name){var $t;return name=($t=Kusto.Language.KustoFacts.GetHostName(name),$t!=null?$t:name),Kusto.Language.KustoFacts.IsClusterHostName(name,this.Name)||Kusto.Language.KustoFacts.IsClusterShortName(name,this.Name)},GetDatabase:function(databaseName){return System.Linq.Enumerable.from(this.Databases).firstOrDefault(function(d){return Bridge.referenceEquals(d.Name,databaseName)},null)},WithDatabases:function(databases){return new Kusto.Language.Symbols.ClusterSymbol.$ctor1(this.Name,databases,this.IsOpen)},AddDatabase:function(database){var newDatabases=System.Linq.Enumerable.from(this.Databases).concat(System.Array.init([database],Kusto.Language.Symbols.DatabaseSymbol));return new Kusto.Language.Symbols.ClusterSymbol.$ctor1(this.Name,newDatabases,this.IsOpen)},UpdateDatabase:function(existingDatabase,newDatabase){var newDatabases=System.Linq.Enumerable.from(this.Databases).select(function(d){return Bridge.referenceEquals(d,existingDatabase)?newDatabase:d});return new Kusto.Language.Symbols.ClusterSymbol.$ctor1(this.Name,newDatabases,this.IsOpen)},AddOrUpdateDatabase:function(newDatabase){var existingDatabase=this.GetDatabase(newDatabase.Name);return existingDatabase!=null?this.UpdateDatabase(existingDatabase,newDatabase):this.AddDatabase(newDatabase)},GetDisplay:function(){return System.String.format("cluster({0})",[this.Name])}}});Bridge.define("Kusto.Language.Symbols.DatabaseSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],fields:{members:null,tables:null,functions:null,symbolSet:null},props:{IsOpen:!1,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Database}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Tabular}},Members:{get:function(){return this.members}},Tables:{get:function(){return this.tables==null&&(this.tables=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.TableSymbol,System.Linq.Enumerable.from(this.Members).ofType(Kusto.Language.Symbols.TableSymbol))),this.tables}},Functions:{get:function(){return this.functions==null&&(this.functions=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.FunctionSymbol,System.Linq.Enumerable.from(this.Members).ofType(Kusto.Language.Symbols.FunctionSymbol))),this.functions}}},ctors:{$ctor1:function(name,members,isOpen){isOpen===void 0&&(isOpen=!1);this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this.members=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.Symbol,members);this.IsOpen=isOpen},ctor:function(name,members){members===void 0&&(members=[]);Kusto.Language.Symbols.DatabaseSymbol.$ctor1.call(this,name,Bridge.cast(members,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Symbol)))}},methods:{GetMember:function(name){return System.Linq.Enumerable.from(this.members).firstOrDefault(function(m){return Bridge.referenceEquals(m.Name,name)},null)},GetTable:function(name){return System.Linq.Enumerable.from(this.Tables).firstOrDefault(function(t){return Bridge.referenceEquals(t.Name,name)},null)},GetFunction:function(name){return System.Linq.Enumerable.from(this.Functions).firstOrDefault(function(f){return Bridge.referenceEquals(f.Name,name)},null)},WithMembers:function(members){return new Kusto.Language.Symbols.DatabaseSymbol.$ctor1(this.Name,members,this.IsOpen)},AddMembers$1:function(symbols){return new Kusto.Language.Symbols.DatabaseSymbol.$ctor1(this.Name,System.Linq.Enumerable.from(this.Members).concat(symbols),this.IsOpen)},AddMembers:function(symbols){return symbols===void 0&&(symbols=[]),this.AddMembers$1(Bridge.cast(symbols,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Symbol)))},Contains:function(symbol){var $t,member;if(this.symbolSet==null){this.symbolSet=new(System.Collections.Generic.HashSet$1(Kusto.Language.Symbols.Symbol).ctor);$t=Bridge.getEnumerator(this.Members,Kusto.Language.Symbols.Symbol);try{while($t.moveNext())member=$t.Current,this.symbolSet.add(symbol)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}return this.symbolSet.contains(symbol)},GetDisplay:function(){return System.String.format("database({0})",[this.Name])}}});Bridge.define("Kusto.Language.Symbols.ErrorSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],statics:{fields:{Instance:null},ctors:{init:function(){this.Instance=new Kusto.Language.Symbols.ErrorSymbol}}},props:{Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Error}},IsError:{get:function(){return!0}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.None}}},ctors:{ctor:function(){this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,"error")}}});Bridge.define("Kusto.Language.Symbols.FunctionSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],fields:{hidden:!1,constantFoldable:!1,resultNameKind:0,resultNamePrefix:null},props:{Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Function}},Signatures:null,IsHidden:{get:function(){return this.hidden||Bridge.ensureBaseProperty(this,"IsHidden").$Kusto$Language$Symbols$Symbol$IsHidden}},ResultNameKind:{get:function(){return this.resultNameKind}},ResultNamePrefix:{get:function(){return this.resultNamePrefix}},IsConstantFoldable:{get:function(){return this.constantFoldable}},Tabularity:{get:function(){return System.Array.getItem(this.Signatures,0,Kusto.Language.Symbols.Signature).Tabularity}},MinArgumentCount:{get:function(){var $t,min=-1,s;$t=Bridge.getEnumerator(this.Signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())s=$t.Current,min=min===-1?s.MinArgumentCount:Math.min(min,s.MinArgumentCount)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return min}},MaxArgumentCount:{get:function(){var $t,max=-1,s;$t=Bridge.getEnumerator(this.Signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())s=$t.Current,max=max===-1?s.MaxArgumentCount:Math.max(max,s.MaxArgumentCount)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return max}}},ctors:{$ctor12:function(name,signatures,hidden,constantFoldable,resultNameKind,resultNamePrefix){var $t,signature;this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this.Signatures=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.Signature,signatures);$t=Bridge.getEnumerator(this.Signatures,Kusto.Language.Symbols.Signature);try{while($t.moveNext())signature=$t.Current,signature.Symbol=this}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}this.hidden=hidden;this.constantFoldable=constantFoldable;this.resultNameKind=resultNameKind;this.resultNamePrefix=resultNamePrefix},$ctor11:function(name,signatures){Kusto.Language.Symbols.FunctionSymbol.$ctor12.call(this,name,signatures,!1,!1,Kusto.Language.Symbols.ResultNameKind.Default,null)},$ctor6:function(name,signatures){signatures===void 0&&(signatures=[]);Kusto.Language.Symbols.FunctionSymbol.$ctor11.call(this,name,Bridge.cast(signatures,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Signature)))},$ctor8:function(name,returnType,parameters){Kusto.Language.Symbols.FunctionSymbol.$ctor6.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor8(returnType,parameters)],Kusto.Language.Symbols.Signature))},$ctor7:function(name,returnType,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.FunctionSymbol.$ctor6.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor7(returnType,parameters)],Kusto.Language.Symbols.Signature))},$ctor5:function(name,returnTypeKind,parameters){Kusto.Language.Symbols.FunctionSymbol.$ctor6.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor6(returnTypeKind,parameters)],Kusto.Language.Symbols.Signature))},$ctor4:function(name,returnTypeKind,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.FunctionSymbol.$ctor6.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor4(returnTypeKind,parameters)],Kusto.Language.Symbols.Signature))},$ctor1:function(name,customReturnType,tabularity,parameters){Kusto.Language.Symbols.FunctionSymbol.$ctor6.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor1(customReturnType,tabularity,parameters)],Kusto.Language.Symbols.Signature))},ctor:function(name,customReturnType,tabularity,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.FunctionSymbol.$ctor6.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.ctor(customReturnType,tabularity,parameters)],Kusto.Language.Symbols.Signature))},$ctor3:function(name,customReturnType,tabularity,parameters){Kusto.Language.Symbols.FunctionSymbol.$ctor1.call(this,name,function(table,args){return customReturnType(table,args)},tabularity,parameters)},$ctor2:function(name,customReturnType,tabularity,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.FunctionSymbol.ctor.call(this,name,function(table,args){return customReturnType(table,args)},tabularity,parameters)},$ctor15:function(name,body,tabularity,parameters){Kusto.Language.Symbols.FunctionSymbol.$ctor6.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor12(body,tabularity,parameters)],Kusto.Language.Symbols.Signature))},$ctor14:function(name,body,tabularity,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.FunctionSymbol.$ctor6.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor11(body,tabularity,parameters)],Kusto.Language.Symbols.Signature))},$ctor16:function(name,body,parameters){Kusto.Language.Symbols.FunctionSymbol.$ctor6.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor12(body,Kusto.Language.Symbols.Tabularity.Unknown,parameters)],Kusto.Language.Symbols.Signature))},$ctor13:function(name,body,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.FunctionSymbol.$ctor6.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor11(body,Kusto.Language.Symbols.Tabularity.Unknown,parameters)],Kusto.Language.Symbols.Signature))},$ctor10:function(name,declaration,parameters){Kusto.Language.Symbols.FunctionSymbol.$ctor6.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor10(declaration,parameters)],Kusto.Language.Symbols.Signature))},$ctor9:function(name,declaration,parameters){parameters===void 0&&(parameters=[]);Kusto.Language.Symbols.FunctionSymbol.$ctor6.call(this,name,System.Array.init([new Kusto.Language.Symbols.Signature.$ctor9(declaration,parameters)],Kusto.Language.Symbols.Signature))}},methods:{Hide:function(){return new Kusto.Language.Symbols.FunctionSymbol.$ctor12(this.Name,this.Signatures,!0,this.constantFoldable,this.resultNameKind,this.resultNamePrefix)},ConstantFoldable:function(){return new Kusto.Language.Symbols.FunctionSymbol.$ctor12(this.Name,this.Signatures,this.hidden,!0,this.resultNameKind,this.resultNamePrefix)},WithResultNamePrefix:function(resultNamePrefix){return Bridge.referenceEquals(this.ResultNamePrefix,resultNamePrefix)?this:new Kusto.Language.Symbols.FunctionSymbol.$ctor12(this.Name,this.Signatures,this.hidden,this.constantFoldable,this.resultNameKind,resultNamePrefix)},WithResultNameKind:function(kind){return this.ResultNameKind!==kind?new Kusto.Language.Symbols.FunctionSymbol.$ctor12(this.Name,this.Signatures,this.hidden,this.constantFoldable,kind,this.resultNamePrefix):this},GetDisplay:function(){return this.GetDisplay$1(!1)},GetDisplay$1:function(verbose){for(var p,prms,sig=System.Array.getItem(this.Signatures,0,Kusto.Language.Symbols.Signature),builder=new System.Text.StringBuilder,i=0;i<System.Array.getCount(sig.Parameters,Kusto.Language.Symbols.Parameter);i=i+1|0)p=System.Array.getItem(sig.Parameters,i,Kusto.Language.Symbols.Parameter),i>0&&builder.append(", "),p.IsOptional?(builder.append("["),builder.append(this.GetParameterDisplay(p,verbose)),builder.append("]")):builder.append(this.GetParameterDisplay(p,verbose));return sig.HasRepeatableParameters&&builder.append(", ..."),prms=builder.toString(),System.String.format("{0}({1})",this.Name,prms)},GetParameterDisplay:function(parameter,verbose){if(verbose){var typeDisplay=this.GetTypeDisplay(parameter);if(!System.String.isNullOrEmpty(typeDisplay))return System.String.format("{0}: {1}",parameter.Name,typeDisplay)}return parameter.Name},GetTypeDisplay:function(parameter){switch(parameter.TypeKind){case Kusto.Language.Symbols.ParameterTypeKind.Declared:return parameter.TypeDisplay;case Kusto.Language.Symbols.ParameterTypeKind.Integer:return"integer";case Kusto.Language.Symbols.ParameterTypeKind.IntegerOrDynamic:return"integer|dynamic";case Kusto.Language.Symbols.ParameterTypeKind.Number:return"number";case Kusto.Language.Symbols.ParameterTypeKind.RealOrDecimal:return"real|decimal";case Kusto.Language.Symbols.ParameterTypeKind.Summable:return"summable";case Kusto.Language.Symbols.ParameterTypeKind.StringOrDynamic:return"string|dynamic";case Kusto.Language.Symbols.ParameterTypeKind.Parameter0:return this.GetTypeDisplay(System.Array.getItem(System.Array.getItem(this.Signatures,0,Kusto.Language.Symbols.Signature).Parameters,0,Kusto.Language.Symbols.Parameter));case Kusto.Language.Symbols.ParameterTypeKind.Parameter1:return this.GetTypeDisplay(System.Array.getItem(System.Array.getItem(this.Signatures,0,Kusto.Language.Symbols.Signature).Parameters,1,Kusto.Language.Symbols.Parameter));case Kusto.Language.Symbols.ParameterTypeKind.Parameter2:return this.GetTypeDisplay(System.Array.getItem(System.Array.getItem(this.Signatures,0,Kusto.Language.Symbols.Signature).Parameters,2,Kusto.Language.Symbols.Parameter));case Kusto.Language.Symbols.ParameterTypeKind.SingleColumnTable:case Kusto.Language.Symbols.ParameterTypeKind.Tabular:return"()";case Kusto.Language.Symbols.ParameterTypeKind.Cluster:return"cluster";case Kusto.Language.Symbols.ParameterTypeKind.Database:return"database";case Kusto.Language.Symbols.ParameterTypeKind.Scalar:default:return"scalar"}}}});Bridge.define("Kusto.Language.Symbols.GroupSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],fields:{members:null},props:{Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Group}},Members:{get:function(){return this.members}},Tabularity:{get:function(){return System.Array.getItem(this.Members,0,Kusto.Language.Symbols.Symbol).Tabularity}}},ctors:{$ctor1:function(symbols){this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,"group");this.members=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.Symbol,symbols)},ctor:function(symbols){symbols===void 0&&(symbols=[]);Kusto.Language.Symbols.GroupSymbol.$ctor1.call(this,Bridge.cast(symbols,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.Symbol)))}},methods:{GetDisplay:function(){return"["+(Bridge.toArray(System.Linq.Enumerable.from(this.Members).select(function(s){return s.Display})).join(", ")||"")+"]"}}});Bridge.define("Kusto.Language.Symbols.PatternSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],props:{Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Pattern}},Parameters:null,PathParameter:null,Signatures:null,Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Tabular}}},ctors:{$ctor1:function(name,parameters,pathParameter,signatures){parameters===void 0&&(parameters=null);pathParameter===void 0&&(pathParameter=null);signatures===void 0&&(signatures=null);this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this.Parameters=parameters||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.Parameter).Instance;this.PathParameter=pathParameter;this.Signatures=signatures||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Symbols.PatternSignature).Instance},ctor:function(name){Kusto.Language.Symbols.PatternSymbol.$ctor1.call(this,name,null,null,null)}},methods:{GetDisplay:function(){var prms=Bridge.toArray(System.Linq.Enumerable.from(this.Parameters).select(function(p){return System.String.format("{0}:{1}",p.Name,p.TypeDisplay)})).join(", ");return System.String.format("{0}({1})",this.Name,prms)}}});Bridge.define("Kusto.Language.Symbols.ScalarSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],props:{Aliases:null,Flags:0,WiderThan:null,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Scalar}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Scalar}},IsInteger:{get:function(){return(this.Flags&Kusto.Language.Symbols.ScalarFlags.Integer)!=0}},IsNumeric:{get:function(){return(this.Flags&Kusto.Language.Symbols.ScalarFlags.Numeric)!=0}},IsInterval:{get:function(){return(this.Flags&Kusto.Language.Symbols.ScalarFlags.Interval)!=0}},IsSummable:{get:function(){return(this.Flags&Kusto.Language.Symbols.ScalarFlags.Summable)!=0}}},ctors:{ctor:function(name,aliases,flags,widerThan){aliases===void 0&&(aliases=null);flags===void 0&&(flags=0);widerThan===void 0&&(widerThan=null);this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this.Aliases=Kusto.Language.Utils.ListExtensions.ToReadOnly(System.String,aliases);this.Flags=flags;this.WiderThan=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.ScalarSymbol,widerThan)}},methods:{IsWiderThan:function(scalar){for(var i=0;i<System.Array.getCount(this.WiderThan,Kusto.Language.Symbols.ScalarSymbol);i=i+1|0)if(Bridge.referenceEquals(System.Array.getItem(this.WiderThan,i,Kusto.Language.Symbols.ScalarSymbol),scalar))return!0;return!1}}});Bridge.define("Kusto.Language.Symbols.TableSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],statics:{fields:{Empty:null},ctors:{init:function(){this.Empty=new Kusto.Language.Symbols.TableSymbol.ctor}},methods:{Combine$1:function(kind,tables){return new Kusto.Language.Symbols.TableSymbol.$ctor2(Kusto.Language.Symbols.ColumnSymbol.Combine(kind,System.Linq.Enumerable.from(tables).select(function(t){return t.Columns})))},Combine:function(kind,tables){return tables===void 0&&(tables=[]),Kusto.Language.Symbols.TableSymbol.Combine$1(kind,Bridge.cast(tables,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.TableSymbol)))}}},fields:{state:0,lazyColumnMap:null},props:{Columns:null,Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Table}},Members:{get:function(){return this.Columns}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Tabular}},IsSorted:{get:function(){return(this.state&Kusto.Language.Symbols.TableSymbol.TableState.Sorted&65535)!=0}},IsSerialized:{get:function(){return(this.state&Kusto.Language.Symbols.TableSymbol.TableState.Serialized&65535)!=0}},IsOpen:{get:function(){return(this.state&Kusto.Language.Symbols.TableSymbol.TableState.Open&65535)!=0}},ColumnMap:{get:function(){var $t,map,col;if(this.lazyColumnMap==null){map=new(System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ColumnSymbol));$t=Bridge.getEnumerator(this.Columns,Kusto.Language.Symbols.ColumnSymbol);try{while($t.moveNext())col=$t.Current,map.containsKey(col.Name)||map.add(col.Name,col)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}Kusto.Language.Utils.Interlocked.CompareExchange(Bridge.global.System.Collections.Generic.Dictionary$2(System.String,Kusto.Language.Symbols.ColumnSymbol),Bridge.ref(this,"lazyColumnMap"),map,null)}return this.lazyColumnMap}},DebugDisplay:{get:function(){return(this.Name||"")+(this.Display||"")}}},ctors:{$ctor4:function(name,state,columns){this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,name);this.state=state;this.Columns=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.ColumnSymbol,columns)},$ctor1:function(state,columns){Kusto.Language.Symbols.TableSymbol.$ctor4.call(this,"",state,columns)},$ctor5:function(name,columns){Kusto.Language.Symbols.TableSymbol.$ctor4.call(this,name,Kusto.Language.Symbols.TableSymbol.TableState.None,columns)},$ctor3:function(name,columns){columns===void 0&&(columns=[]);Kusto.Language.Symbols.TableSymbol.$ctor4.call(this,name,Kusto.Language.Symbols.TableSymbol.TableState.None,columns)},$ctor2:function(columns){Kusto.Language.Symbols.TableSymbol.$ctor4.call(this,"",Kusto.Language.Symbols.TableSymbol.TableState.None,columns)},ctor:function(columns){columns===void 0&&(columns=[]);Kusto.Language.Symbols.TableSymbol.$ctor2.call(this,Bridge.cast(columns,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol)))}},methods:{WithName:function(name){var $t;return new Kusto.Language.Symbols.TableSymbol.$ctor4(($t=name,$t!=null?$t:""),this.state,this.Columns)},WithColumns$1:function(columns){return new Kusto.Language.Symbols.TableSymbol.$ctor1(this.state,columns)},WithColumns:function(columns){return columns===void 0&&(columns=[]),this.WithColumns$1(Bridge.cast(columns,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol)))},AddColumns$1:function(columns){return new Kusto.Language.Symbols.TableSymbol.$ctor1(this.state,System.Linq.Enumerable.from(this.Columns).concat(columns))},AddColumns:function(columns){return columns===void 0&&(columns=[]),this.AddColumns$1(Bridge.cast(columns,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol)))},Serialized:function(){return new Kusto.Language.Symbols.TableSymbol.$ctor1((this.state|Kusto.Language.Symbols.TableSymbol.TableState.Serialized)&65535,this.Columns)},Sorted:function(){return new Kusto.Language.Symbols.TableSymbol.$ctor1((this.state|Kusto.Language.Symbols.TableSymbol.TableState.Sorted)&65535,this.Columns)},Unsorted:function(){return new Kusto.Language.Symbols.TableSymbol.$ctor1(this.state&65533,this.Columns)},Open:function(){return new Kusto.Language.Symbols.TableSymbol.$ctor1((this.state|Kusto.Language.Symbols.TableSymbol.TableState.Open)&65535,this.Columns)},GetColumn:function(name){var column={};if(this.TryGetColumn(name,column))return column.v;throw new System.InvalidOperationException.$ctor1(System.String.format("The column '{0}' does not exist.",[name]));},TryGetColumn:function(name,column){return this.ColumnMap.tryGetValue(name,column)},GetMembers$1:function(name,match,symbols,ignoreCase){if(ignoreCase===void 0&&(ignoreCase=!1),System.Array.getCount(this.Columns,Kusto.Language.Symbols.ColumnSymbol)>0)if(name!=null){var column={};this.ColumnMap.tryGetValue(name,column)&&Kusto.Language.Symbols.SymbolMatchExtensions.Matches$1(column.v,name,match,ignoreCase)&&symbols.add(column.v)}else Kusto.Language.Symbols.TypeSymbol.prototype.GetMembers$1.call(this,name,match,symbols)},GetDisplay:function(){return System.String.format("({0})",[Bridge.toArray(System.Linq.Enumerable.from(this.Members).select(function(m){return m.Display})).join(", ")])}}});Bridge.define("Kusto.Language.Symbols.TupleSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],props:{Columns:null,Members:{get:function(){return this.Columns}},Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Tuple}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.Scalar}}},ctors:{$ctor1:function(columns){this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,"tuple");this.Columns=Kusto.Language.Utils.ListExtensions.ToReadOnly(Bridge.global.Kusto.Language.Symbols.ColumnSymbol,columns)},ctor:function(columns){columns===void 0&&(columns=[]);Kusto.Language.Symbols.TupleSymbol.$ctor1.call(this,Bridge.cast(columns,System.Collections.Generic.IEnumerable$1(Kusto.Language.Symbols.ColumnSymbol)))}},methods:{WithColumns:function(columns){return new Kusto.Language.Symbols.TupleSymbol.$ctor1(columns)},GetDisplay:function(){return System.String.format("{{{0}}}",[Bridge.toArray(System.Linq.Enumerable.from(this.Members).select(function(m){return m.Display})).join(", ")])}}});Bridge.define("Kusto.Language.Symbols.VoidSymbol",{inherits:[Kusto.Language.Symbols.TypeSymbol],statics:{fields:{Instance:null},ctors:{init:function(){this.Instance=new Kusto.Language.Symbols.VoidSymbol}}},props:{Kind:{get:function(){return Kusto.Language.Symbols.SymbolKind.Void}},Tabularity:{get:function(){return Kusto.Language.Symbols.Tabularity.None}}},ctors:{ctor:function(){this.$initialize();Kusto.Language.Symbols.TypeSymbol.ctor.call(this,"void")}}});Bridge.define("Kusto.Language.Syntax.Statement",{inherits:[Kusto.Language.Syntax.SyntaxNode],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.Expression",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{ResultType:{get:function(){var $t;return($t=this.GetSemanticInfo())!=null?$t.ResultType:null}},IsConstant:{get:function(){var $t,$t1;return $t=($t1=this.GetSemanticInfo())!=null?$t1.IsConstant:null,$t!=null?$t:!1}},ConstantValue:{get:function(){var v;return this.IsLiteral?this.LiteralValue:(v=Bridge.as(this.ReferencedSymbol,Kusto.Language.Symbols.VariableSymbol))!=null&&v.IsConstant?v.ConstantValue:null}},IsLiteral:{get:function(){return!1}},LiteralValue:{get:function(){return null}},IsSelector:{get:function(){return this.IsPathSelector||this.IsElementSelector}},IsPathSelector:{get:function(){var pe;return(pe=Bridge.as(this.Parent,Kusto.Language.Syntax.PathExpression))!=null&&Bridge.referenceEquals(pe.Selector,this)}},IsElementSelector:{get:function(){var ee;return(ee=Bridge.as(this.Parent,Kusto.Language.Syntax.ElementExpression))!=null&&Bridge.referenceEquals(ee.Selector,this)}}},ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.Name",{inherits:[Kusto.Language.Syntax.SyntaxNode],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.Clause",{inherits:[Kusto.Language.Syntax.SyntaxNode],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.CommandBlock",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CommandBlock}},Statements:null,SkippedTokens:null,EndOfCommand:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(statements,skippedTokens,endOfCommand,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Statements=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),statements);this.SkippedTokens=this.Attach(Bridge.global.Kusto.Language.Syntax.SkippedTokens,skippedTokens,!0);this.EndOfCommand=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,endOfCommand,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Statements;case 1:return this.SkippedTokens;case 2:return this.EndOfCommand;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Statements";case 1:return"SkippedTokens";case 2:return"EndOfCommand";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:case 2:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Tabular;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCommandBlock(this)},Accept:function(TResult,visitor){return visitor.VisitCommandBlock(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.CommandBlock(($t=this.Statements)!=null?$t.Clone$2():null,($t1=this.SkippedTokens)!=null?$t1.Clone$1():null,($t2=this.EndOfCommand)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.CustomNode",{inherits:[Kusto.Language.Syntax.SyntaxNode],fields:{shape:null,elements:null,fullWidth$1:0},props:{FullWidth:{get:function(){return this.fullWidth$1}},Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CustomNode}},ChildCount:{get:function(){return System.Array.getCount(this.shape,Kusto.Language.Syntax.CustomElementDescriptor)}}},ctors:{$ctor1:function(shape,elements,diagnostics){this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.shape=shape||Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Syntax.CustomElementDescriptor).Instance;this.elements=elements!=null?System.Linq.Enumerable.from(elements).select(Bridge.fn.bind(this,function(e,i){return this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxElement,e,System.Array.getItem(this.shape,i,Kusto.Language.Syntax.CustomElementDescriptor).IsOptional)})).ToArray(Kusto.Language.Syntax.SyntaxElement):Kusto.Language.Utils.EmptyReadOnlyList$1(Kusto.Language.Syntax.SyntaxElement).Instance;this.Init();this.fullWidth$1=this.ComputeFullWidth()},ctor:function(shape,elements){elements===void 0&&(elements=[]);Kusto.Language.Syntax.CustomNode.$ctor1.call(this,shape,elements,null)}},methods:{GetChild:function(index){if(index<0||index>=System.Array.getCount(this.shape,Kusto.Language.Syntax.CustomElementDescriptor))throw new System.ArgumentOutOfRangeException.$ctor1("index");return index<System.Array.getCount(this.elements,Kusto.Language.Syntax.SyntaxElement)?System.Array.getItem(this.elements,index,Kusto.Language.Syntax.SyntaxElement):null},GetName:function(index){if(index<0||index>=System.Array.getCount(this.shape,Kusto.Language.Syntax.CustomElementDescriptor))throw new System.ArgumentOutOfRangeException.$ctor1("index");return System.Array.getItem(this.shape,index,Kusto.Language.Syntax.CustomElementDescriptor).Name},GetCompletionHint:function(index){if(index<0||index>=System.Array.getCount(this.shape,Kusto.Language.Syntax.CustomElementDescriptor))throw new System.ArgumentOutOfRangeException.$ctor1("index");return System.Array.getItem(this.shape,index,Kusto.Language.Syntax.CustomElementDescriptor).CompletionHint},IsOptional:function(index){if(index<0||index>=System.Array.getCount(this.shape,Kusto.Language.Syntax.CustomElementDescriptor))throw new System.ArgumentOutOfRangeException.$ctor1("index");return System.Array.getItem(this.shape,index,Kusto.Language.Syntax.CustomElementDescriptor).IsOptional},Accept$1:function(visitor){visitor.VisitCustom(this)},Accept:function(TResult,visitor){return visitor.VisitCustom(this)},CloneCore:function(){var clonedElements=System.Linq.Enumerable.from(this.elements).select(function(e){return e.Clone()}).ToArray(Kusto.Language.Syntax.SyntaxElement);return new Kusto.Language.Syntax.CustomNode.ctor(this.shape,clonedElements)}}});Bridge.define("Kusto.Language.Syntax.DefaultValueDeclaration",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DefaultValueDeclaration}},Equal:null,Value:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(equal,value,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Equal=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,equal);this.Value=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,value);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Equal;case 1:return this.Value;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Equal";case 1:return"Value";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDefaultValueDeclaration(this)},Accept:function(TResult,visitor){return visitor.VisitDefaultValueDeclaration(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.DefaultValueDeclaration(($t=this.Equal)!=null?$t.Clone$1():null,($t1=this.Value)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.DirectiveBlock",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DirectiveBlock}},DirectiveToken:null,SkippedTokens:null,EndOfText:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(directiveToken,skippedTokens,endOfText,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.DirectiveToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,directiveToken);this.SkippedTokens=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),skippedTokens);this.EndOfText=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,endOfText,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DirectiveToken;case 1:return this.SkippedTokens;case 2:return this.EndOfText;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DirectiveToken";case 1:return"SkippedTokens";case 2:return"EndOfText";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 2:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.None;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDirectiveBlock(this)},Accept:function(TResult,visitor){return visitor.VisitDirectiveBlock(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.DirectiveBlock(($t=this.DirectiveToken)!=null?$t.Clone$1():null,($t1=this.SkippedTokens)!=null?$t1.Clone$2():null,($t2=this.EndOfText)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ExpressionCouple",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ExpressionCouple}},OpenParen:null,First:null,DotDot:null,Second:null,CloseParen:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(openParen,first,dotDot,second,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.First=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,first);this.DotDot=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,dotDot);this.Second=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,second);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.First;case 2:return this.DotDot;case 3:return this.Second;case 4:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"First";case 2:return"DotDot";case 3:return"Second";case 4:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitExpressionCouple(this)},Accept:function(TResult,visitor){return visitor.VisitExpressionCouple(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.ExpressionCouple(($t=this.OpenParen)!=null?$t.Clone$1():null,($t1=this.First)!=null?$t1.Clone$1():null,($t2=this.DotDot)!=null?$t2.Clone$1():null,($t3=this.Second)!=null?$t3.Clone$1():null,($t4=this.CloseParen)!=null?$t4.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ExpressionList",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ExpressionList}},OpenParen:null,Expressions:null,CloseParen:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openParen,expressions,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Expressions;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Expressions";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitExpressionList(this)},Accept:function(TResult,visitor){return visitor.VisitExpressionList(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.ExpressionList(($t=this.OpenParen)!=null?$t.Clone$1():null,($t1=this.Expressions)!=null?$t1.Clone$2():null,($t2=this.CloseParen)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.FunctionBody",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FunctionBody}},OpenBrace:null,Statements:null,Expression:null,Semicolon:null,CloseBrace:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(openBrace,statements,expression,semicolon,closeBrace,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenBrace=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openBrace);this.Statements=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),statements);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression,!0);this.Semicolon=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,semicolon,!0);this.CloseBrace=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeBrace);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBrace;case 1:return this.Statements;case 2:return this.Expression;case 3:return this.Semicolon;case 4:return this.CloseBrace;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBrace";case 1:return"Statements";case 2:return"Expression";case 3:return"Semicolon";case 4:return"CloseBrace";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 2:case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Tabular;case 2:return Kusto.Language.Editor.CompletionHint.Expression;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFunctionBody(this)},Accept:function(TResult,visitor){return visitor.VisitFunctionBody(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.FunctionBody(($t=this.OpenBrace)!=null?$t.Clone$1():null,($t1=this.Statements)!=null?$t1.Clone$2():null,($t2=this.Expression)!=null?$t2.Clone$1():null,($t3=this.Semicolon)!=null?$t3.Clone$1():null,($t4=this.CloseBrace)!=null?$t4.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.FunctionParameter",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FunctionParameter}},NameAndType:null,DefaultValue:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(nameAndType,defaultValue,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.NameAndType=this.Attach(Bridge.global.Kusto.Language.Syntax.NameAndTypeDeclaration,nameAndType);this.DefaultValue=this.Attach(Bridge.global.Kusto.Language.Syntax.DefaultValueDeclaration,defaultValue,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.NameAndType;case 1:return this.DefaultValue;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"NameAndType";case 1:return"DefaultValue";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFunctionParameter(this)},Accept:function(TResult,visitor){return visitor.VisitFunctionParameter(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.FunctionParameter(($t=this.NameAndType)!=null?$t.Clone$1():null,($t1=this.DefaultValue)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.FunctionParameters",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FunctionParameters}},OpenParen:null,Parameters:null,CloseParen:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openParen,parameters,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),parameters);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Parameters;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Parameters";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFunctionParameters(this)},Accept:function(TResult,visitor){return visitor.VisitFunctionParameters(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.FunctionParameters(($t=this.OpenParen)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.CloseParen)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.JsonPair",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.JsonPair}},Name:null,Colon:null,Value:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(name,colon,value,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,name);this.Colon=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,colon);this.Value=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,value);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;case 1:return this.Colon;case 2:return this.Value;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";case 1:return"Colon";case 2:return"Value";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Declaration;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Literal;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitJsonPair(this)},Accept:function(TResult,visitor){return visitor.VisitJsonPair(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.JsonPair(($t=this.Name)!=null?$t.Clone$1():null,($t1=this.Colon)!=null?$t1.Clone$1():null,($t2=this.Value)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.NamedParameter",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.NamedParameter}},Name:null,EqualToken:null,Expression:null,ExpressionHint:0,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(name,equalToken,expression,expressionHint,diagnostics){expressionHint===void 0&&(expressionHint=0);diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.NameDeclaration,name);this.EqualToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,equalToken);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.ExpressionHint=expressionHint;this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;case 1:return this.EqualToken;case 2:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";case 1:return"EqualToken";case 2:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Declaration;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitNamedParameter(this)},Accept:function(TResult,visitor){return visitor.VisitNamedParameter(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.NamedParameter(($t=this.Name)!=null?$t.Clone$1():null,($t1=this.EqualToken)!=null?$t1.Clone$1():null,($t2=this.Expression)!=null?$t2.Clone$1():null,this.ExpressionHint,this.SyntaxDiagnostics)},GetCompletionHint:function(index){return index===2?this.ExpressionHint:Kusto.Language.Syntax.SyntaxNode.prototype.GetCompletionHint.call(this,index)}}});Bridge.define("Kusto.Language.Syntax.OrderingClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.OrderingClause}},AscOrDescKeyword:null,NullsClause:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(ascOrDescKeyword,nullsClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.AscOrDescKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,ascOrDescKeyword,!0);this.NullsClause=this.Attach(Bridge.global.Kusto.Language.Syntax.OrderingNullsClause,nullsClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AscOrDescKeyword;case 1:return this.NullsClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AscOrDescKeyword";case 1:return"NullsClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 0:case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitOrderingClause(this)},Accept:function(TResult,visitor){return visitor.VisitOrderingClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.OrderingClause(($t=this.AscOrDescKeyword)!=null?$t.Clone$1():null,($t1=this.NullsClause)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.OrderingNullsClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.OrderingNullsClause}},NullsKeyword:null,FirstOrLastKeyword:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(nullsKeyword,firstOrLastKeyword,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.NullsKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,nullsKeyword);this.FirstOrLastKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,firstOrLastKeyword);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.NullsKeyword;case 1:return this.FirstOrLastKeyword;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"NullsKeyword";case 1:return"FirstOrLastKeyword";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitOrderingNullsClause(this)},Accept:function(TResult,visitor){return visitor.VisitOrderingNullsClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.OrderingNullsClause(($t=this.NullsKeyword)!=null?$t.Clone$1():null,($t1=this.FirstOrLastKeyword)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.PatternMatch",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PatternMatch}},ParameterValues:null,PathValue:null,EqualToken:null,Body:null,SemicolonToken:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(parameterValues,pathValue,equalToken,body,semicolonToken,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.ParameterValues=this.Attach(Bridge.global.Kusto.Language.Syntax.ExpressionList,parameterValues);this.PathValue=this.Attach(Bridge.global.Kusto.Language.Syntax.PatternPathValue,pathValue,!0);this.EqualToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,equalToken);this.Body=this.Attach(Bridge.global.Kusto.Language.Syntax.FunctionBody,body);this.SemicolonToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,semicolonToken);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ParameterValues;case 1:return this.PathValue;case 2:return this.EqualToken;case 3:return this.Body;case 4:return this.SemicolonToken;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ParameterValues";case 1:return"PathValue";case 2:return"EqualToken";case 3:return"Body";case 4:return"SemicolonToken";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Clause;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Clause;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPatternMatch(this)},Accept:function(TResult,visitor){return visitor.VisitPatternMatch(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.PatternMatch(($t=this.ParameterValues)!=null?$t.Clone$1():null,($t1=this.PathValue)!=null?$t1.Clone$1():null,($t2=this.EqualToken)!=null?$t2.Clone$1():null,($t3=this.Body)!=null?$t3.Clone$1():null,($t4=this.SemicolonToken)!=null?$t4.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.PatternPathParameter",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PatternPathParameter}},OpenBracket:null,Parameter:null,CloseBracket:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openBracket,parameter,closeBracket,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenBracket=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openBracket);this.Parameter=this.Attach(Bridge.global.Kusto.Language.Syntax.NameAndTypeDeclaration,parameter);this.CloseBracket=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeBracket);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBracket;case 1:return this.Parameter;case 2:return this.CloseBracket;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBracket";case 1:return"Parameter";case 2:return"CloseBracket";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPatternPathParameter(this)},Accept:function(TResult,visitor){return visitor.VisitPatternPathParameter(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.PatternPathParameter(($t=this.OpenBracket)!=null?$t.Clone$1():null,($t1=this.Parameter)!=null?$t1.Clone$1():null,($t2=this.CloseBracket)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.PatternPathValue",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PatternPathValue}},DotToken:null,OpenBracket:null,Value:null,CloseBracket:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(dotToken,openBracket,value,closeBracket,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.DotToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,dotToken);this.OpenBracket=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openBracket);this.Value=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,value);this.CloseBracket=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeBracket);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DotToken;case 1:return this.OpenBracket;case 2:return this.Value;case 3:return this.CloseBracket;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DotToken";case 1:return"OpenBracket";case 2:return"Value";case 3:return"CloseBracket";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPatternPathValue(this)},Accept:function(TResult,visitor){return visitor.VisitPatternPathValue(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.PatternPathValue(($t=this.DotToken)!=null?$t.Clone$1():null,($t1=this.OpenBracket)!=null?$t1.Clone$1():null,($t2=this.Value)!=null?$t2.Clone$1():null,($t3=this.CloseBracket)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.QueryBlock",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.QueryBlock}},Statements:null,SkippedTokens:null,EndOfQuery:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(statements,skippedTokens,endOfQuery,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Statements=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Statement)),statements);this.SkippedTokens=this.Attach(Bridge.global.Kusto.Language.Syntax.SkippedTokens,skippedTokens,!0);this.EndOfQuery=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,endOfQuery,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Statements;case 1:return this.SkippedTokens;case 2:return this.EndOfQuery;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Statements";case 1:return"SkippedTokens";case 2:return"EndOfQuery";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:case 2:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Tabular;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitQueryBlock(this)},Accept:function(TResult,visitor){return visitor.VisitQueryBlock(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.QueryBlock(($t=this.Statements)!=null?$t.Clone$2():null,($t1=this.SkippedTokens)!=null?$t1.Clone$1():null,($t2=this.EndOfQuery)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.RenameList",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.RenameList}},OpenParen:null,Names:null,CloseParen:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openParen,names,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Names=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameDeclaration)),names);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Names;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Names";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Declaration;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitRenameList(this)},Accept:function(TResult,visitor){return visitor.VisitRenameList(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.RenameList(($t=this.OpenParen)!=null?$t.Clone$1():null,($t1=this.Names)!=null?$t1.Clone$2():null,($t2=this.CloseParen)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SeparatedElement",{inherits:[Kusto.Language.Syntax.SyntaxNode],fields:{fullWidth$1:0},props:{Element:null,Separator:null,FullWidth:{get:function(){return this.fullWidth$1}},Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SeparatedElement}},ChildCount:{get:function(){return 2}}},ctors:{ctor:function(element,separator){separator===void 0&&(separator=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,null);this.Element=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxElement,element);this.Separator=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,separator,!0);this.Init();this.fullWidth$1=this.ComputeFullWidth()}},methods:{GetChild:function(index){switch(index){case 0:return this.Element;case 1:return this.Separator;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHint:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Inherit;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitSeparatedElement(this)},Accept:function(TResult,visitor){return visitor.VisitSeparatedElement(this)}}});Bridge.define("Kusto.Language.Syntax.SkippedTokens",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SkippedTokens}},Tokens:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(tokens,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.Tokens=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),tokens);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Tokens;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Tokens";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSkippedTokens(this)},Accept:function(TResult,visitor){return visitor.VisitSkippedTokens(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.SkippedTokens(($t=this.Tokens)!=null?$t.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SyntaxList",{inherits:[Kusto.Language.Syntax.SyntaxNode],fields:{elements:null,fullWidth$1:0},props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.List}},Count:{get:function(){return this.elements.length}},ChildCount:{get:function(){return this.Count}},FullWidth:{get:function(){return this.fullWidth$1}}},ctors:{ctor:function(elements,diagnostics){this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.elements=elements;for(var i=0;i<elements.length;i=i+1|0)this.elements[System.Array.index(i,this.elements)]=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxElement,elements[System.Array.index(i,elements)]);this.Init();this.fullWidth$1=this.ComputeFullWidth()}},methods:{getItem:function(index){return this.elements[System.Array.index(index,this.elements)]},GetEnumerator:function(){return Bridge.getEnumerator(Bridge.cast(this.elements,System.Collections.Generic.IEnumerable$1(Kusto.Language.Syntax.SyntaxElement)),Kusto.Language.Syntax.SyntaxElement)},GetChild:function(index){return this.elements[System.Array.index(index,this.elements)]},GetElements:function(){return this.elements},Accept$1:function(visitor){visitor.VisitList(this)},Accept:function(TResult,visitor){return visitor.VisitList(this)}}});Bridge.define("Kusto.Language.Syntax.SyntaxToken.IdentifierToken",{inherits:[Kusto.Language.Syntax.SyntaxToken],$kind:"nested class",fields:{trivia:null,text:null},props:{Trivia:{get:function(){return this.trivia}},Text:{get:function(){return this.text}},Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.IdentifierToken}},Value:{get:function(){return this.Text}}},alias:["Trivia","Kusto$Language$Parsing$IToken$Trivia","Text","Kusto$Language$Parsing$IToken$Text","Kind","Kusto$Language$Parsing$IToken$Kind"],ctors:{ctor:function(trivia,text,diagnostics){var $t;this.$initialize();Kusto.Language.Syntax.SyntaxToken.ctor.call(this,diagnostics);this.trivia=($t=trivia,$t!=null?$t:"");this.text=text}},methods:{CloneCore:function(){return new Kusto.Language.Syntax.SyntaxToken.IdentifierToken(this.Trivia,this.Text,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SyntaxToken.KindToken",{inherits:[Kusto.Language.Syntax.SyntaxToken],$kind:"nested class",fields:{trivia:null,kind:0},props:{Trivia:{get:function(){return this.trivia}},Kind:{get:function(){return this.kind}},Text:{get:function(){return Kusto.Language.Syntax.SyntaxFacts.GetText(this.Kind)}}},alias:["Trivia","Kusto$Language$Parsing$IToken$Trivia","Kind","Kusto$Language$Parsing$IToken$Kind","Text","Kusto$Language$Parsing$IToken$Text"],ctors:{ctor:function(trivia,kind,diagnostics){var $t;this.$initialize();Kusto.Language.Syntax.SyntaxToken.ctor.call(this,diagnostics);this.trivia=($t=trivia,$t!=null?$t:"");this.kind=kind}},methods:{CloneCore:function(){return new Kusto.Language.Syntax.SyntaxToken.KindToken(this.Trivia,this.Kind,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SyntaxToken.TextAndKindToken",{inherits:[Kusto.Language.Syntax.SyntaxToken],$kind:"nested class",fields:{trivia:null,text:null,kind:0},props:{Trivia:{get:function(){return this.trivia}},Text:{get:function(){return this.text}},Kind:{get:function(){return this.kind}}},alias:["Trivia","Kusto$Language$Parsing$IToken$Trivia","Text","Kusto$Language$Parsing$IToken$Text","Kind","Kusto$Language$Parsing$IToken$Kind"],ctors:{ctor:function(trivia,text,kind,diagnostics){var $t;this.$initialize();Kusto.Language.Syntax.SyntaxToken.ctor.call(this,diagnostics);this.trivia=($t=trivia,$t!=null?$t:"");this.text=text;this.kind=kind}},methods:{CloneCore:function(){return new Kusto.Language.Syntax.SyntaxToken.TextAndKindToken(this.Trivia,this.Text,this.Kind,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SyntaxToken.MissingToken",{inherits:[Kusto.Language.Syntax.SyntaxToken],$kind:"nested class",fields:{trivia:null,kind:0},props:{Trivia:{get:function(){return this.trivia}},Kind:{get:function(){return this.kind}},Text:{get:function(){return""}},IsMissing:{get:function(){return!0}}},alias:["Trivia","Kusto$Language$Parsing$IToken$Trivia","Kind","Kusto$Language$Parsing$IToken$Kind","Text","Kusto$Language$Parsing$IToken$Text"],ctors:{ctor:function(trivia,kind,diagnostics){this.$initialize();Kusto.Language.Syntax.SyntaxToken.ctor.call(this,diagnostics);this.trivia=trivia;this.kind=kind}},methods:{CloneCore:function(){return new Kusto.Language.Syntax.SyntaxToken.MissingToken(this.Trivia,this.Kind,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ToTypeOfClause",{inherits:[Kusto.Language.Syntax.SyntaxNode],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ToTypeOfClause}},ToKeyword:null,TypeOf:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(toKeyword,typeOf,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxNode.ctor.call(this,diagnostics);this.ToKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,toKeyword);this.TypeOf=this.Attach(Bridge.global.Kusto.Language.Syntax.TypeOfLiteralExpression,typeOf);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ToKeyword;case 1:return this.TypeOf;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ToKeyword";case 1:return"TypeOf";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitToTypeOfClause(this)},Accept:function(TResult,visitor){return visitor.VisitToTypeOfClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.ToTypeOfClause(($t=this.ToKeyword)!=null?$t.Clone$1():null,($t1=this.TypeOf)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Parsing.ApplyParser$3",function(TInput,TLeft,TOutput){return{inherits:[Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TOutput)],props:{LeftParser:null,RightParser:null,ApplyKind:0},ctors:{ctor:function(kind,leftParser,rightParser){this.$initialize();Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TOutput).ctor.call(this);this.LeftParser=leftParser;this.RightParser=rightParser;this.ApplyKind=kind},$ctor1:function(kind,leftParser,rightParser){Kusto.Language.Parsing.ApplyParser$3(TInput,TLeft,TOutput).ctor.call(this,kind,leftParser,rightParser.Parser)}},methods:{Accept$1:function(visitor){visitor.VisitApply(TLeft,TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitApply(TLeft,TOutput,this)},Clone:function(){return new(Kusto.Language.Parsing.ApplyParser$3(TInput,TLeft,TOutput).ctor)(this.ApplyKind,this.LeftParser,this.RightParser)},Parse:function(source,inputStart,output,outputStart){var leftOriginalOutputCount=output.Count,leftLength=this.LeftParser.Parse(source,inputStart,output,outputStart),rightOriginalOutputCount,rightLength;if(leftLength<0)return leftLength;for(rightOriginalOutputCount=output.Count;;){if(rightLength=this.RightParser.Parse(source,inputStart+leftLength|0,output,outputStart),rightLength<0)return this.ApplyKind===Kusto.Language.Parsing.ApplyKind.One?(Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,leftOriginalOutputCount),(-leftLength|0)+rightLength|0):(Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,rightOriginalOutputCount),leftLength);if(leftLength=leftLength+rightLength|0,this.ApplyKind!==Kusto.Language.Parsing.ApplyKind.ZeroOrMore)return leftLength}},Scan:function(source,start){var leftLen=this.LeftParser.Scan(source,start),rightLen;if(leftLen<0)return leftLen;for(;;){if(rightLen=this.RightParser.Scan(source,start+leftLen|0),rightLen<0)return this.ApplyKind===Kusto.Language.Parsing.ApplyKind.One?(-leftLen|0)+rightLen|0:leftLen;if(leftLen=leftLen+rightLen|0,this.ApplyKind!==Kusto.Language.Parsing.ApplyKind.ZeroOrMore)return leftLen}}}}});Bridge.define("Kusto.Language.Parsing.ConvertParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.ResultPrimaryParser$2(TInput,TOutput)],statics:{fields:{s_inputListPool:null},ctors:{init:function(){this.s_inputListPool=new(Kusto.Language.Utils.ObjectPool$1(System.Collections.Generic.List$1(TInput)))(function(){return new(System.Collections.Generic.List$1(TInput).ctor)},function(list){list.clear()})}}},props:{Pattern:null,ListProducer:null,SingleProducer:null},ctors:{$ctor1:function(pattern,listProducer,singleProducer){this.$initialize();Kusto.Language.Parsing.ResultPrimaryParser$2(TInput,TOutput).ctor.call(this);this.Pattern=pattern;this.ListProducer=listProducer;this.SingleProducer=singleProducer},ctor:function(pattern,producer){Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).$ctor1.call(this,pattern,producer,null)},$ctor3:function(pattern,producer){Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).$ctor1.call(this,pattern,function(source,start,length){var values=Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).s_inputListPool.AllocateFromPool(),i;try{for(i=0;i<length;i=i+1|0)values.add(source.Peek(start+i|0));return producer(values)}finally{Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).s_inputListPool.ReturnToPool(values)}},null)},$ctor2:function(pattern,producer){Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).$ctor1.call(this,pattern,null,producer)}},methods:{Accept$1:function(visitor){visitor.VisitConvert(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitConvert(TOutput,this)},Clone:function(){return new(Kusto.Language.Parsing.ConvertParser$2(TInput,TOutput).$ctor1)(this.Pattern,this.ListProducer,this.SingleProducer)},Parse$1:function(source,start){var length=this.Pattern.Scan(source,start),value;return length<0?new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(length,Bridge.getDefaultValue(TOutput)):(value=this.Produce(source,start,length),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(length,value))},Produce:function(source,start,length){return Bridge.staticEquals(this.SingleProducer,null)?this.ListProducer(source,start,length):this.SingleProducer(source.Peek(start))},Scan:function(source,start){return this.Pattern.Scan(source,start)}}}});Bridge.define("Kusto.Language.Parsing.ForwardParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TOutput)],statics:{fields:{s_callDepth:0,MaxCallDepth:0},ctors:{init:function(){this.MaxCallDepth=30}}},fields:{DeferredParser:null},ctors:{ctor:function(deferredParser){this.$initialize();Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TOutput).ctor.call(this);this.DeferredParser=deferredParser}},methods:{Accept$1:function(visitor){visitor.VisitForward(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitForward(TOutput,this)},Clone:function(){return new(Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput))(this.DeferredParser)},Parse$1:function(source,start){try{return(Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth=Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth+1|0,Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth>Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).MaxCallDepth)?Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TOutput).prototype.Parse$1.call(this,source,start):this.DeferredParser().Parse$1(source,start)}finally{Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth=Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth-1|0}},Parse:function(source,inputStart,output,outputStart){try{return(Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth=Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth+1|0,Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth>Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).MaxCallDepth)?Kusto.Language.Parsing.SafeParser.ParseSafe(TInput,Bridge.cast(this.DeferredParser(),Kusto.Language.Parsing.Parser$1(TInput)),source,inputStart,output,outputStart):this.DeferredParser().Parse(source,inputStart,output,outputStart)}finally{Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth=Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth-1|0}},Scan:function(source,start){try{return(Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth=Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth+1|0,Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth>Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).MaxCallDepth)?Kusto.Language.Parsing.SafeScanner.ScanSafe(TInput,this.DeferredParser(),source,start):this.DeferredParser().Scan(source,start)}finally{Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth=Kusto.Language.Parsing.ForwardParser$2(TInput,TOutput).s_callDepth-1|0}}}}});Bridge.define("Kusto.Language.Parsing.MapParser$2",function(TInput,TOutput){return{inherits:[Kusto.Language.Parsing.ResultPrimaryParser$2(TInput,TOutput)],fields:{root:null},ctors:{ctor:function(root){this.$initialize();Kusto.Language.Parsing.ResultPrimaryParser$2(TInput,TOutput).ctor.call(this);this.root=root},$ctor1:function(keyValuePairs){Kusto.Language.Parsing.MapParser$2(TInput,TOutput).ctor.call(this,Kusto.Language.Parsing.MapParser$2.Node(TInput,TOutput).From(keyValuePairs))}},methods:{Accept$1:function(visitor){visitor.VisitMap(TOutput,this)},Accept:function(TResult,visitor){return visitor.VisitMap(TOutput,this)},Clone:function(){return new(Kusto.Language.Parsing.MapParser$2(TInput,TOutput).ctor)(this.root)},Parse$1:function(source,start){for(var node=this.root,length=0,bestLength=-1,bestOutput=null,input,subNode,bestValue;;){if(source.IsEnd(start+length|0))break;if(input=source.Peek(start+length|0),subNode={},node.TryGetValueNode(input,subNode))length=length+1|0,subNode.v.HasValue&&(bestLength=length,bestOutput=subNode.v.Value),node=subNode.v;else break}return bestLength>0?(bestValue=bestOutput(),new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(bestLength,bestValue)):new(Kusto.Language.Parsing.ParseResult$1(TOutput).$ctor1)(bestLength,Bridge.getDefaultValue(TOutput))},Scan:function(source,start){for(var node=this.root,length=0,bestLength=-1,input,subNode;;){if(source.IsEnd(start+length|0))break;if(input=source.Peek(start+length|0),subNode={},node.TryGetValueNode(input,subNode))length=length+1|0,subNode.v.HasValue&&(bestLength=length),node=subNode.v;else break}return bestLength}}}});Bridge.define("Kusto.Language.Parsing.ProduceParser$2",function(TInput,TProducer){return{inherits:[Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TProducer)],props:{Parser:null,Producer:null},ctors:{ctor:function(parser,producer){this.$initialize();Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TProducer).ctor.call(this);this.Parser=parser;this.Producer=producer}},methods:{Accept$1:function(visitor){visitor.VisitProduce(TProducer,this)},Accept:function(TResult,visitor){return visitor.VisitProduce(TProducer,this)},Clone:function(){return new(Kusto.Language.Parsing.ProduceParser$2(TInput,TProducer))(this.Parser,this.Producer)},Parse:function(source,inputStart,output,outputStart){var originalOutputCount=output.Count,length=this.Parser.Parse(source,inputStart,output,outputStart);return this.Produce(output,outputStart,originalOutputCount,length)},Produce:function(output,outputStart,originalOutputCount,inputLength){if(inputLength>=0){var value=this.Producer(output,outputStart);Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,outputStart);output.add(value)}else Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,originalOutputCount);return inputLength},Scan:function(source,start){return this.Parser.Scan(source,start)}}}});Bridge.define("Kusto.Language.Parsing.RuleParser$2",function(TInput,TProducer){return{inherits:[Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TProducer)],fields:{_parsers:null},props:{Parsers:{get:function(){return this._parsers}},ListProducer:null,ResultProducer:null},ctors:{ctor:function(parsers,listProducer,resultProducer){resultProducer===void 0&&(resultProducer=null);this.$initialize();Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TProducer).ctor.call(this);this._parsers=System.Linq.Enumerable.from(parsers).ToArray();this.ListProducer=listProducer;this.ResultProducer=resultProducer}},methods:{Accept$1:function(visitor){visitor.VisitRule(TProducer,this)},Accept:function(TResult,visitor){return visitor.VisitRule(TProducer,this)},Clone:function(){return new(Kusto.Language.Parsing.RuleParser$2(TInput,TProducer))(this.Parsers,this.ListProducer,this.ResultProducer)},Scan:function(source,start){var $t,len=0,parser,n;$t=Bridge.getEnumerator(this._parsers);try{while($t.moveNext()){if(parser=$t.Current,n=parser.Scan(source,start+len|0),n<0)return n-len|0;len=len+n|0}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return len},Parse$1:function(source,start){return Bridge.staticEquals(this.ResultProducer,null)?Kusto.Language.Parsing.ListPrimaryParser$2(TInput,TProducer).prototype.Parse$1.call(this,source,start):this.ResultProducer(source,start)},Parse:function(input,inputStart,output,outputStart){var $t,length=0,originalOutputCount=output.Count,parser,n,value;$t=Bridge.getEnumerator(this._parsers);try{while($t.moveNext()){if(parser=$t.Current,n=parser.Parse(input,inputStart+length|0,output,output.Count),n<0)return Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,originalOutputCount),n-length|0;length=length+n|0}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return value=this.ListProducer(output,outputStart),Kusto.Language.Utils.ListExtensions.SetCount(System.Object,output,outputStart),output.add(value),length}}}});Bridge.define("Kusto.Language.Syntax.AliasStatement",{inherits:[Kusto.Language.Syntax.Statement],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.AliasStatement}},AliasKeyword:null,DatabaseKeyword:null,Name:null,Equal:null,Expression:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(aliasKeyword,databaseKeyword,name,equal,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Statement.ctor.call(this,diagnostics);this.AliasKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,aliasKeyword);this.DatabaseKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,databaseKeyword);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.NameDeclaration,name);this.Equal=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,equal);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AliasKeyword;case 1:return this.DatabaseKeyword;case 2:return this.Name;case 3:return this.Equal;case 4:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AliasKeyword";case 1:return"DatabaseKeyword";case 2:return"Name";case 3:return"Equal";case 4:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Declaration;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Database;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitAliasStatement(this)},Accept:function(TResult,visitor){return visitor.VisitAliasStatement(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.AliasStatement(($t=this.AliasKeyword)!=null?$t.Clone$1():null,($t1=this.DatabaseKeyword)!=null?$t1.Clone$1():null,($t2=this.Name)!=null?$t2.Clone$1():null,($t3=this.Equal)!=null?$t3.Clone$1():null,($t4=this.Expression)!=null?$t4.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.QueryOperator",{inherits:[Kusto.Language.Syntax.Expression],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.AtExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.AtExpression}},AtToken:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(atToken,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.AtToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,atToken);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AtToken;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AtToken";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitAtExpression(this)},Accept:function(TResult,visitor){return visitor.VisitAtExpression(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.AtExpression(($t=this.AtToken)!=null?$t.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.Command",{inherits:[Kusto.Language.Syntax.Expression],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.BetweenExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{kind:0},props:{Kind:{get:function(){return this.kind}},Left:null,Operator:null,Right:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(kind,left,operator,right,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.kind=kind;this.Left=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,left);this.Operator=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,operator);this.Right=this.Attach(Bridge.global.Kusto.Language.Syntax.ExpressionCouple,right);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Left;case 1:return this.Operator;case 2:return this.Right;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Left";case 1:return"Operator";case 2:return"Right";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitBetweenExpression(this)},Accept:function(TResult,visitor){return visitor.VisitBetweenExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.BetweenExpression(this.Kind,($t=this.Left)!=null?$t.Clone$1():null,($t1=this.Operator)!=null?$t1.Clone$1():null,($t2=this.Right)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.BinaryExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{kind:0},props:{Kind:{get:function(){return this.kind}},Left:null,Operator:null,Right:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(kind,left,operator,right,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.kind=kind;this.Left=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,left);this.Operator=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,operator);this.Right=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,right);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Left;case 1:return this.Operator;case 2:return this.Right;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Left";case 1:return"Operator";case 2:return"Right";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitBinaryExpression(this)},Accept:function(TResult,visitor){return visitor.VisitBinaryExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.BinaryExpression(this.Kind,($t=this.Left)!=null?$t.Clone$1():null,($t1=this.Operator)!=null?$t1.Clone$1():null,($t2=this.Right)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.BracedName",{inherits:[Kusto.Language.Syntax.Name],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.BracedName}},OpenBrace:null,Name:null,CloseBrace:null,ChildCount:{get:function(){return 3}},SimpleName:{get:function(){return this.Name.ValueText}}},ctors:{ctor:function(openBrace,name,closeBrace,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Name.ctor.call(this,diagnostics);this.OpenBrace=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openBrace);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,name);this.CloseBrace=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeBrace);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBrace;case 1:return this.Name;case 2:return this.CloseBrace;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBrace";case 1:return"Name";case 2:return"CloseBrace";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitBracedName(this)},Accept:function(TResult,visitor){return visitor.VisitBracedName(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.BracedName(($t=this.OpenBrace)!=null?$t.Clone$1():null,($t1=this.Name)!=null?$t1.Clone$1():null,($t2=this.CloseBrace)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.BrackettedExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.BrackettedExpression}},OpenBracket:null,Expression:null,CloseBracket:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openBracket,expression,closeBracket,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.OpenBracket=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openBracket);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.CloseBracket=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeBracket);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBracket;case 1:return this.Expression;case 2:return this.CloseBracket;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBracket";case 1:return"Expression";case 2:return"CloseBracket";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Literal;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitBrackettedExpression(this)},Accept:function(TResult,visitor){return visitor.VisitBrackettedExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.BrackettedExpression(($t=this.OpenBracket)!=null?$t.Clone$1():null,($t1=this.Expression)!=null?$t1.Clone$1():null,($t2=this.CloseBracket)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.BrackettedName",{inherits:[Kusto.Language.Syntax.Name],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.BrackettedName}},OpenBracket:null,Name:null,CloseBracket:null,ChildCount:{get:function(){return 3}},SimpleName:{get:function(){var $t;return $t=Bridge.as(this.Name.LiteralValue,System.String),$t!=null?$t:""}}},ctors:{ctor:function(openBracket,name,closeBracket,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Name.ctor.call(this,diagnostics);this.OpenBracket=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openBracket);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,name);this.CloseBracket=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeBracket);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBracket;case 1:return this.Name;case 2:return this.CloseBracket;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBracket";case 1:return"Name";case 2:return"CloseBracket";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Literal;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitBrackettedName(this)},Accept:function(TResult,visitor){return visitor.VisitBrackettedName(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.BrackettedName(($t=this.OpenBracket)!=null?$t.Clone$1():null,($t1=this.Name)!=null?$t1.Clone$1():null,($t2=this.CloseBracket)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.CommandWithClause",{inherits:[Kusto.Language.Syntax.Clause],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.NamedExpression",{inherits:[Kusto.Language.Syntax.Expression],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.CompoundStringLiteralExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{literalValue:null},props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CompoundStringLiteralExpression}},Tokens:null,ChildCount:{get:function(){return 1}},IsLiteral:{get:function(){return!0}},LiteralValue:{get:function(){return this.literalValue==null&&(this.literalValue=System.String.concat(Bridge.toArray(System.Linq.Enumerable.from(this.Tokens).select(function(t){return t.Value})))),this.literalValue}}},ctors:{ctor:function(tokens,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Tokens=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),tokens);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Tokens;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Tokens";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitCompoundStringLiteralExpression(this)},Accept:function(TResult,visitor){return visitor.VisitCompoundStringLiteralExpression(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.CompoundStringLiteralExpression(($t=this.Tokens)!=null?$t.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ConditionedExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ConditionedExpression}},QuestionMark:null,OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(questionMark,openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.QuestionMark=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,questionMark);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.QuestionMark;case 1:return this.OpenParen;case 2:return this.Expression;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"QuestionMark";case 1:return"OpenParen";case 2:return"Expression";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitConditionedExpression(this)},Accept:function(TResult,visitor){return visitor.VisitConditionedExpression(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.ConditionedExpression(($t=this.QuestionMark)!=null?$t.Clone$1():null,($t1=this.OpenParen)!=null?$t1.Clone$1():null,($t2=this.Expression)!=null?$t2.Clone$1():null,($t3=this.CloseParen)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.CountAsIdentifierClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CountAsIdentifierClause}},AsKeyword:null,Identifier:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(asKeyword,identifier,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.AsKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,asKeyword);this.Identifier=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,identifier);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AsKeyword;case 1:return this.Identifier;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AsKeyword";case 1:return"Identifier";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Declaration;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCountAsIdentifierClause(this)},Accept:function(TResult,visitor){return visitor.VisitCountAsIdentifierClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.CountAsIdentifierClause(($t=this.AsKeyword)!=null?$t.Clone$1():null,($t1=this.Identifier)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.DataScopeClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DataScopeClause}},DataScopeKeyword:null,EqualToken:null,Value:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(dataScopeKeyword,equalToken,value,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.DataScopeKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,dataScopeKeyword);this.EqualToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,equalToken);this.Value=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,value);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DataScopeKeyword;case 1:return this.EqualToken;case 2:return this.Value;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DataScopeKeyword";case 1:return"EqualToken";case 2:return"Value";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDataScopeClause(this)},Accept:function(TResult,visitor){return visitor.VisitDataScopeClause(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.DataScopeClause(($t=this.DataScopeKeyword)!=null?$t.Clone$1():null,($t1=this.EqualToken)!=null?$t1.Clone$1():null,($t2=this.Value)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.DataScopeExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DataScopeExpression}},Expression:null,DataScopeClause:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(expression,dataScopeClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.DataScopeClause=this.Attach(Bridge.global.Kusto.Language.Syntax.DataScopeClause,dataScopeClause);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.DataScopeClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"DataScopeClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDataScopeExpression(this)},Accept:function(TResult,visitor){return visitor.VisitDataScopeExpression(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.DataScopeExpression(($t=this.Expression)!=null?$t.Clone$1():null,($t1=this.DataScopeClause)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.DataTableExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DataTableExpression}},DataTableKeyword:null,Schema:null,OpenBracket:null,Values:null,CloseBracket:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(dataTableKeyword,schema,openBracket,values,closeBracket,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.DataTableKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,dataTableKeyword);this.Schema=this.Attach(Bridge.global.Kusto.Language.Syntax.SchemaTypeExpression,schema);this.OpenBracket=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openBracket);this.Values=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),values);this.CloseBracket=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeBracket);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DataTableKeyword;case 1:return this.Schema;case 2:return this.OpenBracket;case 3:return this.Values;case 4:return this.CloseBracket;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DataTableKeyword";case 1:return"Schema";case 2:return"OpenBracket";case 3:return"Values";case 4:return"CloseBracket";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Literal;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDataTableExpression(this)},Accept:function(TResult,visitor){return visitor.VisitDataTableExpression(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.DataTableExpression(($t=this.DataTableKeyword)!=null?$t.Clone$1():null,($t1=this.Schema)!=null?$t1.Clone$1():null,($t2=this.OpenBracket)!=null?$t2.Clone$1():null,($t3=this.Values)!=null?$t3.Clone$2():null,($t4=this.CloseBracket)!=null?$t4.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.DefaultExpressionClause",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DefaultExpressionClause}},DefaultKeyword:null,EqualToken:null,Expression:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(defaultKeyword,equalToken,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.DefaultKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,defaultKeyword);this.EqualToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,equalToken);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DefaultKeyword;case 1:return this.EqualToken;case 2:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DefaultKeyword";case 1:return"EqualToken";case 2:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Literal;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDefaultExpressionClause(this)},Accept:function(TResult,visitor){return visitor.VisitDefaultExpressionClause(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.DefaultExpressionClause(($t=this.DefaultKeyword)!=null?$t.Clone$1():null,($t1=this.EqualToken)!=null?$t1.Clone$1():null,($t2=this.Expression)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.DynamicExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DynamicExpression}},Dynamic:null,OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 4}},IsLiteral:{get:function(){return!0}},LiteralValue:{get:function(){return this.Kind===Kusto.Language.Syntax.SyntaxKind.NullLiteralExpression?null:this.Expression.ToString(Kusto.Language.Syntax.IncludeTrivia.Minimal)}}},ctors:{ctor:function(dynamic,openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Dynamic=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,dynamic);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Dynamic;case 1:return this.OpenParen;case 2:return this.Expression;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Dynamic";case 1:return"OpenParen";case 2:return"Expression";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDynamicExpression(this)},Accept:function(TResult,visitor){return visitor.VisitDynamicExpression(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.DynamicExpression(($t=this.Dynamic)!=null?$t.Clone$1():null,($t1=this.OpenParen)!=null?$t1.Clone$1():null,($t2=this.Expression)!=null?$t2.Clone$1():null,($t3=this.CloseParen)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ElementExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ElementExpression}},Expression:null,Selector:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(expression,selector,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Selector=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,selector);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.Selector;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"Selector";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitElementExpression(this)},Accept:function(TResult,visitor){return visitor.VisitElementExpression(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.ElementExpression(($t=this.Expression)!=null?$t.Clone$1():null,($t1=this.Selector)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ExpressionStatement",{inherits:[Kusto.Language.Syntax.Statement],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ExpressionStatement}},Expression:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Statement.ctor.call(this,diagnostics);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Inherit;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitExpressionStatement(this)},Accept:function(TResult,visitor){return visitor.VisitExpressionStatement(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.ExpressionStatement(($t=this.Expression)!=null?$t.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ExternalDataExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ExternalDataExpression}},ExternalDataKeyword:null,Parameters:null,Schema:null,OpenBracket:null,URIs:null,CloseBracket:null,WithClause:null,ChildCount:{get:function(){return 7}}},ctors:{ctor:function(externalDataKeyword,parameters,schema,openBracket,uRIs,closeBracket,withClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.ExternalDataKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,externalDataKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Schema=this.Attach(Bridge.global.Kusto.Language.Syntax.SchemaTypeExpression,schema);this.OpenBracket=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openBracket);this.URIs=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),uRIs);this.CloseBracket=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeBracket);this.WithClause=this.Attach(Bridge.global.Kusto.Language.Syntax.ExternalDataWithClause,withClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ExternalDataKeyword;case 1:return this.Parameters;case 2:return this.Schema;case 3:return this.OpenBracket;case 4:return this.URIs;case 5:return this.CloseBracket;case 6:return this.WithClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ExternalDataKeyword";case 1:return"Parameters";case 2:return"Schema";case 3:return"OpenBracket";case 4:return"URIs";case 5:return"CloseBracket";case 6:return"WithClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 6:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.None;case 5:return Kusto.Language.Editor.CompletionHint.Syntax;case 6:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitExternalDataExpression(this)},Accept:function(TResult,visitor){return visitor.VisitExternalDataExpression(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4,$t5,$t6;return new Kusto.Language.Syntax.ExternalDataExpression(($t=this.ExternalDataKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Schema)!=null?$t2.Clone$1():null,($t3=this.OpenBracket)!=null?$t3.Clone$1():null,($t4=this.URIs)!=null?$t4.Clone$2():null,($t5=this.CloseBracket)!=null?$t5.Clone$1():null,($t6=this.WithClause)!=null?$t6.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ExternalDataWithClause",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ExternalDataWithClause}},WithKeyword:null,OpenParen:null,Properties:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(withKeyword,openParen,properties,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,withKeyword);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Properties=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),properties);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.OpenParen;case 2:return this.Properties;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"OpenParen";case 2:return"Properties";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitExternalDataWithClause(this)},Accept:function(TResult,visitor){return visitor.VisitExternalDataWithClause(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.ExternalDataWithClause(($t=this.WithKeyword)!=null?$t.Clone$1():null,($t1=this.OpenParen)!=null?$t1.Clone$1():null,($t2=this.Properties)!=null?$t2.Clone$2():null,($t3=this.CloseParen)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.FacetWithClause",{inherits:[Kusto.Language.Syntax.Clause],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.FindInClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FindInClause}},InKeyword:null,OpenParen:null,Expressions:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(inKeyword,openParen,expressions,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.InKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,inKeyword);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.InKeyword;case 1:return this.OpenParen;case 2:return this.Expressions;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"InKeyword";case 1:return"OpenParen";case 2:return"Expressions";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Tabular;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFindInClause(this)},Accept:function(TResult,visitor){return visitor.VisitFindInClause(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.FindInClause(($t=this.InKeyword)!=null?$t.Clone$1():null,($t1=this.OpenParen)!=null?$t1.Clone$1():null,($t2=this.Expressions)!=null?$t2.Clone$2():null,($t3=this.CloseParen)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.FindProjectClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FindProjectClause}},ProjectKeyword:null,Columns:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(projectKeyword,columns,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.ProjectKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,projectKeyword);this.Columns=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),columns);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ProjectKeyword;case 1:return this.Columns;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ProjectKeyword";case 1:return"Columns";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFindProjectClause(this)},Accept:function(TResult,visitor){return visitor.VisitFindProjectClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.FindProjectClause(($t=this.ProjectKeyword)!=null?$t.Clone$1():null,($t1=this.Columns)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ForkExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ForkExpression}},NameEquals:null,OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(nameEquals,openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.NameEquals=this.Attach(Bridge.global.Kusto.Language.Syntax.NameEqualsClause,nameEquals,!0);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.NameEquals;case 1:return this.OpenParen;case 2:return this.Expression;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"NameEquals";case 1:return"OpenParen";case 2:return"Expression";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 0:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Clause;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Clause;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitForkExpression(this)},Accept:function(TResult,visitor){return visitor.VisitForkExpression(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.ForkExpression(($t=this.NameEquals)!=null?$t.Clone$1():null,($t1=this.OpenParen)!=null?$t1.Clone$1():null,($t2=this.Expression)!=null?$t2.Clone$1():null,($t3=this.CloseParen)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.FunctionCallExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FunctionCallExpression}},Name:null,ArgumentList:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(name,argumentList,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.NameReference,name);this.ArgumentList=this.Attach(Bridge.global.Kusto.Language.Syntax.ExpressionList,argumentList);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;case 1:return this.ArgumentList;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";case 1:return"ArgumentList";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Declaration;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFunctionCallExpression(this)},Accept:function(TResult,visitor){return visitor.VisitFunctionCallExpression(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.FunctionCallExpression(($t=this.Name)!=null?$t.Clone$1():null,($t1=this.ArgumentList)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.FunctionDeclaration",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FunctionDeclaration}},ViewKeyword:null,Parameters:null,Body:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(viewKeyword,parameters,body,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.ViewKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,viewKeyword,!0);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.FunctionParameters,parameters);this.Body=this.Attach(Bridge.global.Kusto.Language.Syntax.FunctionBody,body);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ViewKeyword;case 1:return this.Parameters;case 2:return this.Body;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ViewKeyword";case 1:return"Parameters";case 2:return"Body";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 0:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFunctionDeclaration(this)},Accept:function(TResult,visitor){return visitor.VisitFunctionDeclaration(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.FunctionDeclaration(($t=this.ViewKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$1():null,($t2=this.Body)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.HasAnyExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{kind:0},props:{Kind:{get:function(){return this.kind}},Left:null,Operator:null,Right:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(kind,left,operator,right,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.kind=kind;this.Left=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,left);this.Operator=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,operator);this.Right=this.Attach(Bridge.global.Kusto.Language.Syntax.ExpressionList,right);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Left;case 1:return this.Operator;case 2:return this.Right;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Left";case 1:return"Operator";case 2:return"Right";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitHasAnyExpression(this)},Accept:function(TResult,visitor){return visitor.VisitHasAnyExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.HasAnyExpression(this.Kind,($t=this.Left)!=null?$t.Clone$1():null,($t1=this.Operator)!=null?$t1.Clone$1():null,($t2=this.Right)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.InExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{kind:0},props:{Kind:{get:function(){return this.kind}},Left:null,Operator:null,Right:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(kind,left,operator,right,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.kind=kind;this.Left=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,left);this.Operator=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,operator);this.Right=this.Attach(Bridge.global.Kusto.Language.Syntax.ExpressionList,right);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Left;case 1:return this.Operator;case 2:return this.Right;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Left";case 1:return"Operator";case 2:return"Right";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitInExpression(this)},Accept:function(TResult,visitor){return visitor.VisitInExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.InExpression(this.Kind,($t=this.Left)!=null?$t.Clone$1():null,($t1=this.Operator)!=null?$t1.Clone$1():null,($t2=this.Right)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.JoinConditionClause",{inherits:[Kusto.Language.Syntax.Clause],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.JsonExpression",{inherits:[Kusto.Language.Syntax.Expression],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.LetStatement",{inherits:[Kusto.Language.Syntax.Statement],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.LetStatement}},LetKeyword:null,Name:null,Equal:null,Expression:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(letKeyword,name,equal,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Statement.ctor.call(this,diagnostics);this.LetKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,letKeyword);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.NameDeclaration,name);this.Equal=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,equal);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.LetKeyword;case 1:return this.Name;case 2:return this.Equal;case 3:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"LetKeyword";case 1:return"Name";case 2:return"Equal";case 3:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Declaration;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Expression;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitLetStatement(this)},Accept:function(TResult,visitor){return visitor.VisitLetStatement(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.LetStatement(($t=this.LetKeyword)!=null?$t.Clone$1():null,($t1=this.Name)!=null?$t1.Clone$1():null,($t2=this.Equal)!=null?$t2.Clone$1():null,($t3=this.Expression)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.LiteralExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{kind:0},props:{Kind:{get:function(){return this.kind}},Token:null,ChildCount:{get:function(){return 1}},IsLiteral:{get:function(){return!0}},LiteralValue:{get:function(){return this.Token.Value}}},ctors:{ctor:function(kind,token,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.kind=kind;this.Token=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,token);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Token;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Token";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Literal;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitLiteralExpression(this)},Accept:function(TResult,visitor){return visitor.VisitLiteralExpression(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.LiteralExpression(this.Kind,($t=this.Token)!=null?$t.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesByClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesByClause}},ByKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(byKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.ByKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,byKeyword);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ByKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ByKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesByClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesByClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.MakeSeriesByClause(($t=this.ByKeyword)!=null?$t.Clone$1():null,($t1=this.Expressions)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesExpression}},Expression:null,DefaultExpression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(expression,defaultExpression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.DefaultExpression=this.Attach(Bridge.global.Kusto.Language.Syntax.DefaultExpressionClause,defaultExpression,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.DefaultExpression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"DefaultExpression";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Scalar;case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesExpression(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesExpression(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.MakeSeriesExpression(($t=this.Expression)!=null?$t.Clone$1():null,($t1=this.DefaultExpression)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesRangeClause",{inherits:[Kusto.Language.Syntax.Clause],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesOnClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesOnClause}},OnKeyword:null,Expression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(onKeyword,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.OnKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,onKeyword);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OnKeyword;case 1:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OnKeyword";case 1:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesOnClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesOnClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.MakeSeriesOnClause(($t=this.OnKeyword)!=null?$t.Clone$1():null,($t1=this.Expression)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MaterializeExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MaterializeExpression}},MaterializeKeyword:null,OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(materializeKeyword,openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.MaterializeKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,materializeKeyword);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.MaterializeKeyword;case 1:return this.OpenParen;case 2:return this.Expression;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"MaterializeKeyword";case 1:return"OpenParen";case 2:return"Expression";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Tabular;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMaterializeExpression(this)},Accept:function(TResult,visitor){return visitor.VisitMaterializeExpression(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.MaterializeExpression(($t=this.MaterializeKeyword)!=null?$t.Clone$1():null,($t1=this.OpenParen)!=null?$t1.Clone$1():null,($t2=this.Expression)!=null?$t2.Clone$1():null,($t3=this.CloseParen)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MvApplyContextIdClause",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvApplyContextIdClause}},IdKeyword:null,Id:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(idKeyword,id,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.IdKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,idKeyword);this.Id=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,id);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.IdKeyword;case 1:return this.Id;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"IdKeyword";case 1:return"Id";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvApplyContextIdClause(this)},Accept:function(TResult,visitor){return visitor.VisitMvApplyContextIdClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.MvApplyContextIdClause(($t=this.IdKeyword)!=null?$t.Clone$1():null,($t1=this.Id)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MvApplyExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvApplyExpression}},Expression:null,ToTypeOf:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(expression,toTypeOf,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression,!0);this.ToTypeOf=this.Attach(Bridge.global.Kusto.Language.Syntax.ToTypeOfClause,toTypeOf,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.ToTypeOf;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"ToTypeOf";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 0:case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Scalar;case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvApplyExpression(this)},Accept:function(TResult,visitor){return visitor.VisitMvApplyExpression(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.MvApplyExpression(($t=this.Expression)!=null?$t.Clone$1():null,($t1=this.ToTypeOf)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MvApplyRowLimitClause",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvApplyRowLimitClause}},LimitKeyword:null,RowLimit:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(limitKeyword,rowLimit,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.LimitKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,limitKeyword);this.RowLimit=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,rowLimit);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.LimitKeyword;case 1:return this.RowLimit;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"LimitKeyword";case 1:return"RowLimit";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvApplyRowLimitClause(this)},Accept:function(TResult,visitor){return visitor.VisitMvApplyRowLimitClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.MvApplyRowLimitClause(($t=this.LimitKeyword)!=null?$t.Clone$1():null,($t1=this.RowLimit)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MvApplySubqueryExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvApplySubqueryExpression}},OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Expression;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Expression";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Clause;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvApplySubqueryExpression(this)},Accept:function(TResult,visitor){return visitor.VisitMvApplySubqueryExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.MvApplySubqueryExpression(($t=this.OpenParen)!=null?$t.Clone$1():null,($t1=this.Expression)!=null?$t1.Clone$1():null,($t2=this.CloseParen)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MvExpandExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvExpandExpression}},Expression:null,ToTypeOf:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(expression,toTypeOf,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression,!0);this.ToTypeOf=this.Attach(Bridge.global.Kusto.Language.Syntax.ToTypeOfClause,toTypeOf,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.ToTypeOf;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"ToTypeOf";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 0:case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Scalar;case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvExpandExpression(this)},Accept:function(TResult,visitor){return visitor.VisitMvExpandExpression(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.MvExpandExpression(($t=this.Expression)!=null?$t.Clone$1():null,($t1=this.ToTypeOf)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MvExpandRowLimitClause",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvExpandRowLimitClause}},LimitKeyword:null,RowLimit:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(limitKeyword,rowLimit,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.LimitKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,limitKeyword);this.RowLimit=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,rowLimit);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.LimitKeyword;case 1:return this.RowLimit;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"LimitKeyword";case 1:return"RowLimit";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvExpandRowLimitClause(this)},Accept:function(TResult,visitor){return visitor.VisitMvExpandRowLimitClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.MvExpandRowLimitClause(($t=this.LimitKeyword)!=null?$t.Clone$1():null,($t1=this.RowLimit)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.NameAndTypeDeclaration",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.NameAndTypeDeclaration}},Name:null,Colon:null,Type:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(name,colon,type,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.NameDeclaration,name);this.Colon=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,colon);this.Type=this.Attach(Bridge.global.Kusto.Language.Syntax.TypeExpression,type);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;case 1:return this.Colon;case 2:return this.Type;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";case 1:return"Colon";case 2:return"Type";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Declaration;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitNameAndTypeDeclaration(this)},Accept:function(TResult,visitor){return visitor.VisitNameAndTypeDeclaration(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.NameAndTypeDeclaration(($t=this.Name)!=null?$t.Clone$1():null,($t1=this.Colon)!=null?$t1.Clone$1():null,($t2=this.Type)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.NameDeclaration",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.NameDeclaration}},Name:null,ChildCount:{get:function(){return 1}},SimpleName:{get:function(){return this.Name.SimpleName}}},ctors:{ctor:function(name,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.Name,name);this.Init()},$ctor1:function(nameToken,diagnostics){diagnostics===void 0&&(diagnostics=null);Kusto.Language.Syntax.NameDeclaration.ctor.call(this,new Kusto.Language.Syntax.TokenName(nameToken),diagnostics)}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitNameDeclaration(this)},Accept:function(TResult,visitor){return visitor.VisitNameDeclaration(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.NameDeclaration.ctor(($t=this.Name)!=null?$t.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.NameEqualsClause",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.NameEqualsClause}},Name:null,EqualToken:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(name,equalToken,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.NameDeclaration,name);this.EqualToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,equalToken);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;case 1:return this.EqualToken;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";case 1:return"EqualToken";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Declaration;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitNameEqualsClause(this)},Accept:function(TResult,visitor){return visitor.VisitNameEqualsClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.NameEqualsClause(($t=this.Name)!=null?$t.Clone$1():null,($t1=this.EqualToken)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.NameReference",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.NameReference}},Name:null,Match:0,ChildCount:{get:function(){return 1}},SimpleName:{get:function(){return this.Name.SimpleName}}},ctors:{ctor:function(name,match,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.Name,name);this.Match=match;this.Init()},$ctor1:function(name,diagnostics){diagnostics===void 0&&(diagnostics=null);Kusto.Language.Syntax.NameReference.ctor.call(this,name,Kusto.Language.Symbols.SymbolMatch.Default,diagnostics)},$ctor2:function(nameToken,diagnostics){diagnostics===void 0&&(diagnostics=null);Kusto.Language.Syntax.NameReference.$ctor1.call(this,new Kusto.Language.Syntax.TokenName(nameToken),diagnostics)}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitNameReference(this)},Accept:function(TResult,visitor){return visitor.VisitNameReference(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.NameReference.ctor(($t=this.Name)!=null?$t.Clone$1():null,this.Match,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.OptionValueClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.OptionValueClause}},Equal:null,Expression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(equal,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.Equal=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,equal);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Equal;case 1:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Equal";case 1:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitOptionValueClause(this)},Accept:function(TResult,visitor){return visitor.VisitOptionValueClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.OptionValueClause(($t=this.Equal)!=null?$t.Clone$1():null,($t1=this.Expression)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.OrderedExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.OrderedExpression}},Expression:null,Ordering:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(expression,ordering,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Ordering=this.Attach(Bridge.global.Kusto.Language.Syntax.OrderingClause,ordering);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.Ordering;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"Ordering";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Scalar;case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitOrderedExpression(this)},Accept:function(TResult,visitor){return visitor.VisitOrderedExpression(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.OrderedExpression(($t=this.Expression)!=null?$t.Clone$1():null,($t1=this.Ordering)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.PackExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PackExpression}},PackKeyword:null,OpenParen:null,AsteriskToken:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(packKeyword,openParen,asteriskToken,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.PackKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,packKeyword);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.AsteriskToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,asteriskToken);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.PackKeyword;case 1:return this.OpenParen;case 2:return this.AsteriskToken;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"PackKeyword";case 1:return"OpenParen";case 2:return"AsteriskToken";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPackExpression(this)},Accept:function(TResult,visitor){return visitor.VisitPackExpression(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.PackExpression(($t=this.PackKeyword)!=null?$t.Clone$1():null,($t1=this.OpenParen)!=null?$t1.Clone$1():null,($t2=this.AsteriskToken)!=null?$t2.Clone$1():null,($t3=this.CloseParen)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ParenthesizedExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ParenthesizedExpression}},OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Expression;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Expression";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitParenthesizedExpression(this)},Accept:function(TResult,visitor){return visitor.VisitParenthesizedExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.ParenthesizedExpression(($t=this.OpenParen)!=null?$t.Clone$1():null,($t1=this.Expression)!=null?$t1.Clone$1():null,($t2=this.CloseParen)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.PartitionExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PartitionExpression}},OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 3}},IsSubquery:{get:function(){return this.OpenParen.Kind===Kusto.Language.Syntax.SyntaxKind.OpenParenToken}}},ctors:{ctor:function(openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Expression;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Expression";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Clause;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPartitionExpression(this)},Accept:function(TResult,visitor){return visitor.VisitPartitionExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.PartitionExpression(($t=this.OpenParen)!=null?$t.Clone$1():null,($t1=this.Expression)!=null?$t1.Clone$1():null,($t2=this.CloseParen)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.PathExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PathExpression}},Expression:null,Dot:null,Selector:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(expression,dot,selector,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Dot=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,dot,!0);this.Selector=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,selector);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.Dot;case 2:return this.Selector;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"Dot";case 2:return"Selector";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Expression;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPathExpression(this)},Accept:function(TResult,visitor){return visitor.VisitPathExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.PathExpression(($t=this.Expression)!=null?$t.Clone$1():null,($t1=this.Dot)!=null?$t1.Clone$1():null,($t2=this.Selector)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.PatternDeclaration",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PatternDeclaration}},EqualToken:null,OpenParen:null,Parameters:null,CloseParen:null,PathParameter:null,OpenBrace:null,Patterns:null,CloseBrace:null,ChildCount:{get:function(){return 8}}},ctors:{ctor:function(equalToken,openParen,parameters,closeParen,pathParameter,openBrace,patterns,closeBrace,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.EqualToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,equalToken);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameAndTypeDeclaration)),parameters);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.PathParameter=this.Attach(Bridge.global.Kusto.Language.Syntax.PatternPathParameter,pathParameter,!0);this.OpenBrace=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openBrace);this.Patterns=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.PatternMatch),patterns);this.CloseBrace=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeBrace);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.EqualToken;case 1:return this.OpenParen;case 2:return this.Parameters;case 3:return this.CloseParen;case 4:return this.PathParameter;case 5:return this.OpenBrace;case 6:return this.Patterns;case 7:return this.CloseBrace;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"EqualToken";case 1:return"OpenParen";case 2:return"Parameters";case 3:return"CloseParen";case 4:return"PathParameter";case 5:return"OpenBrace";case 6:return"Patterns";case 7:return"CloseBrace";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 4:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Clause;case 5:return Kusto.Language.Editor.CompletionHint.Syntax;case 6:return Kusto.Language.Editor.CompletionHint.Clause;case 7:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPatternDeclaration(this)},Accept:function(TResult,visitor){return visitor.VisitPatternDeclaration(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7;return new Kusto.Language.Syntax.PatternDeclaration(($t=this.EqualToken)!=null?$t.Clone$1():null,($t1=this.OpenParen)!=null?$t1.Clone$1():null,($t2=this.Parameters)!=null?$t2.Clone$2():null,($t3=this.CloseParen)!=null?$t3.Clone$1():null,($t4=this.PathParameter)!=null?$t4.Clone$1():null,($t5=this.OpenBrace)!=null?$t5.Clone$1():null,($t6=this.Patterns)!=null?$t6.Clone$2():null,($t7=this.CloseBrace)!=null?$t7.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.PatternStatement",{inherits:[Kusto.Language.Syntax.Statement],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PatternStatement}},DeclareKeyword:null,PatternKeyword:null,Name:null,Pattern:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(declareKeyword,patternKeyword,name,pattern,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Statement.ctor.call(this,diagnostics);this.DeclareKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,declareKeyword);this.PatternKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,patternKeyword);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.NameDeclaration,name);this.Pattern=this.Attach(Bridge.global.Kusto.Language.Syntax.PatternDeclaration,pattern,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DeclareKeyword;case 1:return this.PatternKeyword;case 2:return this.Name;case 3:return this.Pattern;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DeclareKeyword";case 1:return"PatternKeyword";case 2:return"Name";case 3:return"Pattern";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Declaration;case 3:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPatternStatement(this)},Accept:function(TResult,visitor){return visitor.VisitPatternStatement(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.PatternStatement(($t=this.DeclareKeyword)!=null?$t.Clone$1():null,($t1=this.PatternKeyword)!=null?$t1.Clone$1():null,($t2=this.Name)!=null?$t2.Clone$1():null,($t3=this.Pattern)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.PipeExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PipeExpression}},Expression:null,Bar:null,Operator:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(expression,bar,operator,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Bar=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,bar);this.Operator=this.Attach(Bridge.global.Kusto.Language.Syntax.QueryOperator,operator);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Expression;case 1:return this.Bar;case 2:return this.Operator;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Expression";case 1:return"Bar";case 2:return"Operator";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Tabular;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Query;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPipeExpression(this)},Accept:function(TResult,visitor){return visitor.VisitPipeExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.PipeExpression(($t=this.Expression)!=null?$t.Clone$1():null,($t1=this.Bar)!=null?$t1.Clone$1():null,($t2=this.Operator)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.PrefixUnaryExpression",{inherits:[Kusto.Language.Syntax.Expression],fields:{kind:0},props:{Kind:{get:function(){return this.kind}},Operator:null,Expression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(kind,operator,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.kind=kind;this.Operator=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,operator);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Operator;case 1:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Operator";case 1:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPrefixUnaryExpression(this)},Accept:function(TResult,visitor){return visitor.VisitPrefixUnaryExpression(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.PrefixUnaryExpression(this.Kind,($t=this.Operator)!=null?$t.Clone$1():null,($t1=this.Expression)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.TypeExpression",{inherits:[Kusto.Language.Syntax.Expression],ctors:{ctor:function(diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics)}}});Bridge.define("Kusto.Language.Syntax.QueryParametersStatement",{inherits:[Kusto.Language.Syntax.Statement],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.QueryParametersStatement}},DeclareKeyword:null,QueryParametersKeyword:null,OpenParen:null,Parameters:null,CloseParen:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(declareKeyword,queryParametersKeyword,openParen,parameters,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Statement.ctor.call(this,diagnostics);this.DeclareKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,declareKeyword);this.QueryParametersKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,queryParametersKeyword);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.FunctionParameter)),parameters);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DeclareKeyword;case 1:return this.QueryParametersKeyword;case 2:return this.OpenParen;case 3:return this.Parameters;case 4:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DeclareKeyword";case 1:return"QueryParametersKeyword";case 2:return"OpenParen";case 3:return"Parameters";case 4:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitQueryParametersStatement(this)},Accept:function(TResult,visitor){return visitor.VisitQueryParametersStatement(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.QueryParametersStatement(($t=this.DeclareKeyword)!=null?$t.Clone$1():null,($t1=this.QueryParametersKeyword)!=null?$t1.Clone$1():null,($t2=this.OpenParen)!=null?$t2.Clone$1():null,($t3=this.Parameters)!=null?$t3.Clone$2():null,($t4=this.CloseParen)!=null?$t4.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ReduceByWithClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ReduceByWithClause}},WithKeyword:null,Parameters:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(withKeyword,parameters,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,withKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),parameters);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.Parameters;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"Parameters";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitReduceByWithClause(this)},Accept:function(TResult,visitor){return visitor.VisitReduceByWithClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.ReduceByWithClause(($t=this.WithKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.RenderNameList",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.RenderNameList}},Names:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(names,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Names=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NameDeclaration)),names);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Names;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Names";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitRenderNameList(this)},Accept:function(TResult,visitor){return visitor.VisitRenderNameList(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.RenderNameList(($t=this.Names)!=null?$t.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.RenderWithClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.RenderWithClause}},WithKeyword:null,OpenParen:null,Properties:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(withKeyword,openParen,properties,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,withKeyword);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Properties=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),properties);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.OpenParen;case 2:return this.Properties;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"OpenParen";case 2:return"Properties";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.None;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitRenderWithClause(this)},Accept:function(TResult,visitor){return visitor.VisitRenderWithClause(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.RenderWithClause(($t=this.WithKeyword)!=null?$t.Clone$1():null,($t1=this.OpenParen)!=null?$t1.Clone$1():null,($t2=this.Properties)!=null?$t2.Clone$2():null,($t3=this.CloseParen)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.RestrictStatement",{inherits:[Kusto.Language.Syntax.Statement],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.RestrictStatement}},RestrictKeyword:null,AccessKeyword:null,ToKeyword:null,OpenParen:null,Expressions:null,CloseParen:null,ChildCount:{get:function(){return 6}}},ctors:{ctor:function(restrictKeyword,accessKeyword,toKeyword,openParen,expressions,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Statement.ctor.call(this,diagnostics);this.RestrictKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,restrictKeyword);this.AccessKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,accessKeyword);this.ToKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,toKeyword);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.RestrictKeyword;case 1:return this.AccessKeyword;case 2:return this.ToKeyword;case 3:return this.OpenParen;case 4:return this.Expressions;case 5:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"RestrictKeyword";case 1:return"AccessKeyword";case 2:return"ToKeyword";case 3:return"OpenParen";case 4:return"Expressions";case 5:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;case 4:return Kusto.Language.Editor.CompletionHint.Scalar;case 5:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitRestrictStatement(this)},Accept:function(TResult,visitor){return visitor.VisitRestrictStatement(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4,$t5;return new Kusto.Language.Syntax.RestrictStatement(($t=this.RestrictKeyword)!=null?$t.Clone$1():null,($t1=this.AccessKeyword)!=null?$t1.Clone$1():null,($t2=this.ToKeyword)!=null?$t2.Clone$1():null,($t3=this.OpenParen)!=null?$t3.Clone$1():null,($t4=this.Expressions)!=null?$t4.Clone$2():null,($t5=this.CloseParen)!=null?$t5.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SeparatedElement$1",function(TElement){return{inherits:[Kusto.Language.Syntax.SeparatedElement],statics:{methods:{Empty:function(){return new(Kusto.Language.Syntax.SeparatedElement$1(TElement))(null,null)}}},props:{Element$1:{get:function(){return Bridge.cast(this.Element,TElement)}}},ctors:{ctor:function(element,separator){separator===void 0&&(separator=null);this.$initialize();Kusto.Language.Syntax.SeparatedElement.ctor.call(this,element,separator)}},methods:{CloneCore:function(){return new(Kusto.Language.Syntax.SeparatedElement$1(TElement))(Bridge.cast(this.Element$1.Clone(),TElement),this.Separator.Clone$1())}}}});Bridge.define("Kusto.Language.Syntax.SetOptionStatement",{inherits:[Kusto.Language.Syntax.Statement],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SetOptionStatement}},SetKeyword:null,Name:null,ValueClause:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(setKeyword,name,valueClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Statement.ctor.call(this,diagnostics);this.SetKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,setKeyword);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.NameDeclaration,name);this.ValueClause=this.Attach(Bridge.global.Kusto.Language.Syntax.OptionValueClause,valueClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.SetKeyword;case 1:return this.Name;case 2:return this.ValueClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"SetKeyword";case 1:return"Name";case 2:return"ValueClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 2:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Declaration;case 2:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSetOptionStatement(this)},Accept:function(TResult,visitor){return visitor.VisitSetOptionStatement(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.SetOptionStatement(($t=this.SetKeyword)!=null?$t.Clone$1():null,($t1=this.Name)!=null?$t1.Clone$1():null,($t2=this.ValueClause)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.StarExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.StarExpression}},AsteriskToken:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(asteriskToken,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.AsteriskToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,asteriskToken);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AsteriskToken;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AsteriskToken";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitStarExpression(this)},Accept:function(TResult,visitor){return visitor.VisitStarExpression(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.StarExpression(($t=this.AsteriskToken)!=null?$t.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SummarizeByClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SummarizeByClause}},ByKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(byKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.ByKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,byKeyword);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ByKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ByKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSummarizeByClause(this)},Accept:function(TResult,visitor){return visitor.VisitSummarizeByClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.SummarizeByClause(($t=this.ByKeyword)!=null?$t.Clone$1():null,($t1=this.Expressions)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SyntaxList$1",function(TElement){return{inherits:[Kusto.Language.Syntax.SyntaxList,System.Collections.Generic.IReadOnlyList$1(TElement)],statics:{methods:{Copy:function(list){for(var newArray=System.Array.init(System.Array.getCount(list,TElement),function(){return Bridge.getDefaultValue(TElement)},TElement),i=0;i<newArray.length;i=i+1|0)newArray[System.Array.index(i,newArray)]=System.Array.getItem(list,i,TElement);return newArray},Empty:function(){return new(Kusto.Language.Syntax.SyntaxList$1(TElement).ctor)(System.Array.init(0,function(){return Bridge.getDefaultValue(TElement)},TElement))}}},props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.List}},ElementType:{get:function(){return TElement}}},alias:["getItem$1",["System$Collections$Generic$IReadOnlyList$1$"+Bridge.getTypeAlias(TElement)+"$getItem","System$Collections$Generic$IReadOnlyList$1$getItem"],"GetEnumerator$1",["System$Collections$Generic$IEnumerable$1$"+Bridge.getTypeAlias(TElement)+"$GetEnumerator","System$Collections$Generic$IEnumerable$1$GetEnumerator"],"Count",["System$Collections$Generic$IReadOnlyCollection$1$"+Bridge.getTypeAlias(TElement)+"$Count","System$Collections$Generic$IReadOnlyCollection$1$Count"]],ctors:{$ctor1:function(elements,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.SyntaxList.ctor.call(this,System.Linq.Enumerable.from(elements).ToArray(),diagnostics)},ctor:function(elements){elements===void 0&&(elements=[]);this.$initialize();Kusto.Language.Syntax.SyntaxList.ctor.call(this,elements,null)}},methods:{getItem$1:function(index){return Bridge.cast(this.getItem.call(this,index),TElement)},GetEnumerator$1:function(){return Bridge.getEnumerator(Bridge.cast(this.GetElements(),System.Collections.Generic.IEnumerable$1(TElement)),TElement)},System$Collections$IEnumerable$GetEnumerator:function(){return this.GetEnumerator$1()},Clone$2:function(){return Bridge.cast(this.CloneCore(),Kusto.Language.Syntax.SyntaxList$1(TElement))},CloneCore:function(){for(var oldElements=this.GetElements(),newElements=System.Array.init(System.Array.getCount(oldElements,Kusto.Language.Syntax.SyntaxElement),function(){return Bridge.getDefaultValue(TElement)},TElement),i=0;i<newElements.length;i=i+1|0)newElements[System.Array.index(i,newElements)]=Bridge.cast(System.Array.getItem(oldElements,i,Kusto.Language.Syntax.SyntaxElement).Clone(),TElement);return new(Kusto.Language.Syntax.SyntaxList$1(TElement).ctor)(newElements)}}}});Bridge.define("Kusto.Language.Syntax.SyntaxToken.LiteralToken",{inherits:[Kusto.Language.Syntax.SyntaxToken.TextAndKindToken],$kind:"nested class",statics:{methods:{GetPrefixLength:function(text){for(var i=0,ch;i<text.length;){if(ch=text.charCodeAt(i),ch===40&&i>0)return i;if(System.Char.isLetter(ch))i=i+1|0;else return 0}return 0},GetValueSpan:function(text,start,length){start.v=0;var end=text.length,prefixLen=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetPrefixLength(text);prefixLen>0&&(start.v=prefixLen+1|0,System.String.endsWith(text,")")&&(end=text.length-1|0));length.v=end-start.v|0},GetValueText:function(text){var start={},length={};return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueSpan(text,start,length),start.v===0&&length.v===text.length?text:text.substr(start.v,length.v)},IsNull:function(text){var start={},length={};return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueSpan(text,start,length),System.String.compare(text.substr(start.v,length.v),"null".substr(0,length.v))===0},GetBooleanValue:function(text){var start={},length={};return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueSpan(text,start,length),System.String.compare(text.substr(start.v,length.v),"true".substr(0,length.v),!0)===0?Bridge.box(!0,System.Boolean,System.Boolean.toString):System.String.compare(text.substr(start.v,length.v),"false".substr(0,length.v),!0)===0?Bridge.box(!1,System.Boolean,System.Boolean.toString):null},GetIntValue:function(text){var valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text),result={};return System.Int32.tryParse(valueText,result),result.v},GetLongValue:function(text){var valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text),result={};return System.Int64.tryParse(valueText,result),result.v},GetRealValue:function(text){var valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text),result={};return System.Double.tryParse(valueText,null,result),result.v},GetDecimalValue:function(text){var valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text),result={};return System.Decimal.tryParse(valueText,null,result),result.v},GetTimeSpanValue:function(text){for(var valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text),split=0,ch;split<valueText.length&&System.Char.isDigit(ch=valueText.charCodeAt(split));)split=split+1|0;var numberText=valueText.substr(0,split),wordText=valueText.substr(split),number={};if(System.Double.tryParse(numberText,null,number))switch(wordText){case"s":case"sec":case"second":case"seconds":return System.TimeSpan.fromSeconds(number.v);case"m":case"min":case"minute":case"minutes":return System.TimeSpan.fromMinutes(number.v);case"h":case"hr":case"hrs":case"hour":case"hours":return System.TimeSpan.fromHours(number.v);case"d":case"day":case"days":return System.TimeSpan.fromDays(number.v);case"ms":case"milli":case"millis":case"millisec":case"millisecond":case"milliseconds":return System.TimeSpan.fromMilliseconds(number.v);case"micro":case"micros":case"microsec":case"microsecond":case"microseconds":return System.TimeSpan.fromSeconds(number.v/1e6);case"nano":case"nanos":case"nanosec":case"nanosecond":case"nanoseconds":return System.TimeSpan.fromSeconds(number.v/1e9);case"tick":case"ticks":return System.TimeSpan.fromTicks(Bridge.Int.clip64(number.v))}return System.TimeSpan.fromSeconds(0)},GetDateTimeValue:function(text){var valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text),result={};return System.DateTime.tryParse(valueText,null,result),result.v},GetGuidValue:function(text){var valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text),result={v:new System.Guid};return System.Guid.TryParse(valueText,result),result.v},GetTypeOfValue:function(text){return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(text)}}},fields:{value:null,valueText:null},props:{IsLiteral:{get:function(){return!0}},Value:{get:function(){return this.value==null&&(this.value=this.GetValue()),this.value}},ValueText:{get:function(){return this.valueText==null&&(this.valueText=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetPrefixLength(this.Text)>0?Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetValueText(this.Text):this.Kind===Kusto.Language.Syntax.SyntaxKind.StringLiteralToken?Bridge.cast(this.Value,System.String):this.Text),this.valueText}},Prefix:{get:function(){var prefixLen=Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetPrefixLength(this.Text);return prefixLen>0?this.Text.substr(0,prefixLen):""}}},ctors:{ctor:function(trivia,text,kind,diagnostics){this.$initialize();Kusto.Language.Syntax.SyntaxToken.TextAndKindToken.ctor.call(this,trivia,text,kind,diagnostics)}},methods:{GetValue:function(){if(this.Kind!==Kusto.Language.Syntax.SyntaxKind.StringLiteralToken&&Kusto.Language.Syntax.SyntaxToken.LiteralToken.IsNull(this.Text))return null;switch(this.Kind){case Kusto.Language.Syntax.SyntaxKind.BooleanLiteralToken:return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetBooleanValue(this.Text);case Kusto.Language.Syntax.SyntaxKind.IntLiteralToken:return Bridge.box(Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetIntValue(this.Text),System.Int32);case Kusto.Language.Syntax.SyntaxKind.LongLiteralToken:return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetLongValue(this.Text);case Kusto.Language.Syntax.SyntaxKind.RealLiteralToken:return Bridge.box(Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetRealValue(this.Text),System.Double,System.Double.format,System.Double.getHashCode);case Kusto.Language.Syntax.SyntaxKind.DecimalLiteralToken:return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetDecimalValue(this.Text);case Kusto.Language.Syntax.SyntaxKind.TimespanLiteralToken:return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetTimeSpanValue(this.Text);case Kusto.Language.Syntax.SyntaxKind.DateTimeLiteralToken:return Bridge.box(Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetDateTimeValue(this.Text),System.DateTime,System.DateTime.format);case Kusto.Language.Syntax.SyntaxKind.GuidLiteralToken:return Kusto.Language.Syntax.SyntaxToken.LiteralToken.GetGuidValue(this.Text);case Kusto.Language.Syntax.SyntaxKind.StringLiteralToken:return Kusto.Language.KustoFacts.GetStringLiteralValue(this.Text);default:throw new System.InvalidOperationException.$ctor1(System.String.format("Unhandled literal syntax kind: {0}",[Bridge.box(this.Kind,Kusto.Language.Syntax.SyntaxKind,System.Enum.toStringFn(Kusto.Language.Syntax.SyntaxKind))]));}}}});Bridge.define("Kusto.Language.Syntax.TokenName",{inherits:[Kusto.Language.Syntax.Name],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TokenName}},Name:null,ChildCount:{get:function(){return 1}},SimpleName:{get:function(){return this.Name.ValueText}}},ctors:{ctor:function(name,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Name.ctor.call(this,diagnostics);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,name);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitTokenName(this)},Accept:function(TResult,visitor){return visitor.VisitTokenName(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.TokenName(($t=this.Name)!=null?$t.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.TopHittersByClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TopHittersByClause}},ByKeyword:null,Expression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(byKeyword,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.ByKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,byKeyword);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ByKeyword;case 1:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ByKeyword";case 1:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTopHittersByClause(this)},Accept:function(TResult,visitor){return visitor.VisitTopHittersByClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.TopHittersByClause(($t=this.ByKeyword)!=null?$t.Clone$1():null,($t1=this.Expression)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.TopNestedClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TopNestedClause}},TopNestedKeyword:null,Expression:null,OfKeyword:null,OfExpression:null,WithOthersClause:null,ByKeyword:null,ByExpression:null,ChildCount:{get:function(){return 7}}},ctors:{ctor:function(topNestedKeyword,expression,ofKeyword,ofExpression,withOthersClause,byKeyword,byExpression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.TopNestedKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,topNestedKeyword);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression,!0);this.OfKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,ofKeyword);this.OfExpression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,ofExpression);this.WithOthersClause=this.Attach(Bridge.global.Kusto.Language.Syntax.TopNestedWithOthersClause,withOthersClause,!0);this.ByKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,byKeyword);this.ByExpression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,byExpression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.TopNestedKeyword;case 1:return this.Expression;case 2:return this.OfKeyword;case 3:return this.OfExpression;case 4:return this.WithOthersClause;case 5:return this.ByKeyword;case 6:return this.ByExpression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"TopNestedKeyword";case 1:return"Expression";case 2:return"OfKeyword";case 3:return"OfExpression";case 4:return"WithOthersClause";case 5:return"ByKeyword";case 6:return"ByExpression";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:case 4:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Number;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;case 4:return Kusto.Language.Editor.CompletionHint.Clause;case 5:return Kusto.Language.Editor.CompletionHint.Keyword;case 6:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTopNestedClause(this)},Accept:function(TResult,visitor){return visitor.VisitTopNestedClause(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4,$t5,$t6;return new Kusto.Language.Syntax.TopNestedClause(($t=this.TopNestedKeyword)!=null?$t.Clone$1():null,($t1=this.Expression)!=null?$t1.Clone$1():null,($t2=this.OfKeyword)!=null?$t2.Clone$1():null,($t3=this.OfExpression)!=null?$t3.Clone$1():null,($t4=this.WithOthersClause)!=null?$t4.Clone$1():null,($t5=this.ByKeyword)!=null?$t5.Clone$1():null,($t6=this.ByExpression)!=null?$t6.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.TopNestedWithOthersClause",{inherits:[Kusto.Language.Syntax.Clause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TopNestedWithOthersClause}},WithKeyword:null,OthersKeyword:null,Equal:null,Expression:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(withKeyword,othersKeyword,equal,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Clause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,withKeyword);this.OthersKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,othersKeyword);this.Equal=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,equal);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.OthersKeyword;case 2:return this.Equal;case 3:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"OthersKeyword";case 2:return"Equal";case 3:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTopNestedWithOthersClause(this)},Accept:function(TResult,visitor){return visitor.VisitTopNestedWithOthersClause(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.TopNestedWithOthersClause(($t=this.WithKeyword)!=null?$t.Clone$1():null,($t1=this.OthersKeyword)!=null?$t1.Clone$1():null,($t2=this.Equal)!=null?$t2.Clone$1():null,($t3=this.Expression)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ToScalarExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ToScalarExpression}},ToScalar:null,KindParameter:null,OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(toScalar,kindParameter,openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.ToScalar=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,toScalar);this.KindParameter=this.Attach(Bridge.global.Kusto.Language.Syntax.NamedParameter,kindParameter,!0);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ToScalar;case 1:return this.KindParameter;case 2:return this.OpenParen;case 3:return this.Expression;case 4:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ToScalar";case 1:return"KindParameter";case 2:return"OpenParen";case 3:return"Expression";case 4:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Clause;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Tabular;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitToScalarExpression(this)},Accept:function(TResult,visitor){return visitor.VisitToScalarExpression(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.ToScalarExpression(($t=this.ToScalar)!=null?$t.Clone$1():null,($t1=this.KindParameter)!=null?$t1.Clone$1():null,($t2=this.OpenParen)!=null?$t2.Clone$1():null,($t3=this.Expression)!=null?$t3.Clone$1():null,($t4=this.CloseParen)!=null?$t4.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ToTableExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ToTableExpression}},ToTable:null,KindParameter:null,OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(toTable,kindParameter,openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.ToTable=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,toTable);this.KindParameter=this.Attach(Bridge.global.Kusto.Language.Syntax.NamedParameter,kindParameter,!0);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ToTable;case 1:return this.KindParameter;case 2:return this.OpenParen;case 3:return this.Expression;case 4:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ToTable";case 1:return"KindParameter";case 2:return"OpenParen";case 3:return"Expression";case 4:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 1:return Kusto.Language.Editor.CompletionHint.Clause;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;case 3:return Kusto.Language.Editor.CompletionHint.Tabular;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitToTableExpression(this)},Accept:function(TResult,visitor){return visitor.VisitToTableExpression(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.ToTableExpression(($t=this.ToTable)!=null?$t.Clone$1():null,($t1=this.KindParameter)!=null?$t1.Clone$1():null,($t2=this.OpenParen)!=null?$t2.Clone$1():null,($t3=this.Expression)!=null?$t3.Clone$1():null,($t4=this.CloseParen)!=null?$t4.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.TypedColumnReference",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TypedColumnReference}},Column:null,ColonToken:null,Type:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(column,colonToken,type,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.Column=this.Attach(Bridge.global.Kusto.Language.Syntax.NameReference,column);this.ColonToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,colonToken);this.Type=this.Attach(Bridge.global.Kusto.Language.Syntax.TypeExpression,type);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Column;case 1:return this.ColonToken;case 2:return this.Type;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Column";case 1:return"ColonToken";case 2:return"Type";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Column;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTypedColumnReference(this)},Accept:function(TResult,visitor){return visitor.VisitTypedColumnReference(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.TypedColumnReference(($t=this.Column)!=null?$t.Clone$1():null,($t1=this.ColonToken)!=null?$t1.Clone$1():null,($t2=this.Type)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.TypeOfLiteralExpression",{inherits:[Kusto.Language.Syntax.Expression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TypeOfLiteralExpression}},TypeOfKeyword:null,OpenParen:null,Types:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(typeOfKeyword,openParen,types,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Expression.ctor.call(this,diagnostics);this.TypeOfKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,typeOfKeyword);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Types=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),types);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.TypeOfKeyword;case 1:return this.OpenParen;case 2:return this.Types;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"TypeOfKeyword";case 1:return"OpenParen";case 2:return"Types";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.None;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Declaration;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTypeOfLiteralExpression(this)},Accept:function(TResult,visitor){return visitor.VisitTypeOfLiteralExpression(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.TypeOfLiteralExpression(($t=this.TypeOfKeyword)!=null?$t.Clone$1():null,($t1=this.OpenParen)!=null?$t1.Clone$1():null,($t2=this.Types)!=null?$t2.Clone$2():null,($t3=this.CloseParen)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.WildcardedName",{inherits:[Kusto.Language.Syntax.Name],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.WildcardedName}},Pattern:null,ChildCount:{get:function(){return 1}},SimpleName:{get:function(){return this.Pattern.ValueText}}},ctors:{ctor:function(pattern,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Name.ctor.call(this,diagnostics);this.Pattern=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,pattern);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Pattern;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Pattern";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitWildcardedName(this)},Accept:function(TResult,visitor){return visitor.VisitWildcardedName(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.WildcardedName(($t=this.Pattern)!=null?$t.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.AsOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.AsOperator}},AsKeyword:null,Parameters:null,Name:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(asKeyword,parameters,name,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.AsKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,asKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.NameDeclaration,name);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.AsKeyword;case 1:return this.Parameters;case 2:return this.Name;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"AsKeyword";case 1:return"Parameters";case 2:return"Name";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Declaration;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitAsOperator(this)},Accept:function(TResult,visitor){return visitor.VisitAsOperator(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.AsOperator(($t=this.AsKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Name)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.BadCommand",{inherits:[Kusto.Language.Syntax.Command],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.BadCommand}},DotToken:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(dotToken,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Command.ctor.call(this,diagnostics);this.DotToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,dotToken);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DotToken;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DotToken";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitBadCommand(this)},Accept:function(TResult,visitor){return visitor.VisitBadCommand(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.BadCommand(($t=this.DotToken)!=null?$t.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.BadQueryOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.BadQueryOperator}},Keyword:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(keyword,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.Keyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,keyword);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Keyword;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Keyword";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitBadQueryOperator(this)},Accept:function(TResult,visitor){return visitor.VisitBadQueryOperator(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.BadQueryOperator(($t=this.Keyword)!=null?$t.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.CommandWithPropertyListClause",{inherits:[Kusto.Language.Syntax.CommandWithClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CommandWithPropertyListClause}},WithKeyword:null,OpenParen:null,Properties:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(withKeyword,openParen,properties,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.CommandWithClause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,withKeyword);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Properties=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.NamedParameter)),properties);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.OpenParen;case 2:return this.Properties;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"OpenParen";case 2:return"Properties";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;case 3:return Kusto.Language.Editor.CompletionHint.Keyword;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCommandWithPropertyListClause(this)},Accept:function(TResult,visitor){return visitor.VisitCommandWithPropertyListClause(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.CommandWithPropertyListClause(($t=this.WithKeyword)!=null?$t.Clone$1():null,($t1=this.OpenParen)!=null?$t1.Clone$1():null,($t2=this.Properties)!=null?$t2.Clone$2():null,($t3=this.CloseParen)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.CommandWithValueClause",{inherits:[Kusto.Language.Syntax.CommandWithClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CommandWithValueClause}},WithKeyword:null,Value:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(withKeyword,value,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.CommandWithClause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,withKeyword);this.Value=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,value,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.Value;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"Value";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Literal;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCommandWithValueClause(this)},Accept:function(TResult,visitor){return visitor.VisitCommandWithValueClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.CommandWithValueClause(($t=this.WithKeyword)!=null?$t.Clone$1():null,($t1=this.Value)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.CompoundNamedExpression",{inherits:[Kusto.Language.Syntax.NamedExpression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CompoundNamedExpression}},Names:null,EqualToken:null,Expression:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(names,equalToken,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.NamedExpression.ctor.call(this,diagnostics);this.Names=this.Attach(Bridge.global.Kusto.Language.Syntax.RenameList,names);this.EqualToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,equalToken);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Names;case 1:return this.EqualToken;case 2:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Names";case 1:return"EqualToken";case 2:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCompoundNamedExpression(this)},Accept:function(TResult,visitor){return visitor.VisitCompoundNamedExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.CompoundNamedExpression(($t=this.Names)!=null?$t.Clone$1():null,($t1=this.EqualToken)!=null?$t1.Clone$1():null,($t2=this.Expression)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ConsumeOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ConsumeOperator}},ConsumeKeyword:null,Parameters:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(consumeKeyword,parameters,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ConsumeKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,consumeKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ConsumeKeyword;case 1:return this.Parameters;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ConsumeKeyword";case 1:return"Parameters";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitConsumeOperator(this)},Accept:function(TResult,visitor){return visitor.VisitConsumeOperator(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.ConsumeOperator(($t=this.ConsumeKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.CountOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CountOperator}},CountKeyword:null,AsIdentifier:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(countKeyword,asIdentifier,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.CountKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,countKeyword);this.AsIdentifier=this.Attach(Bridge.global.Kusto.Language.Syntax.CountAsIdentifierClause,asIdentifier,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.CountKeyword;case 1:return this.AsIdentifier;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"CountKeyword";case 1:return"AsIdentifier";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCountOperator(this)},Accept:function(TResult,visitor){return visitor.VisitCountOperator(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.CountOperator(($t=this.CountKeyword)!=null?$t.Clone$1():null,($t1=this.AsIdentifier)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.CustomCommand",{inherits:[Kusto.Language.Syntax.Command],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.CustomCommand}},CommandKind:null,DotToken:null,Custom:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(commandKind,dotToken,custom,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Command.ctor.call(this,diagnostics);this.CommandKind=commandKind;this.DotToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,dotToken);this.Custom=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxElement,custom);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DotToken;case 1:return this.Custom;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DotToken";case 1:return"Custom";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitCustomCommand(this)},Accept:function(TResult,visitor){return visitor.VisitCustomCommand(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.CustomCommand(this.CommandKind,($t=this.DotToken)!=null?$t.Clone$1():null,($t1=this.Custom)!=null?$t1.Clone():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.DistinctOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.DistinctOperator}},DistinctKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(distinctKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.DistinctKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,distinctKeyword);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DistinctKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DistinctKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitDistinctOperator(this)},Accept:function(TResult,visitor){return visitor.VisitDistinctOperator(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.DistinctOperator(($t=this.DistinctKeyword)!=null?$t.Clone$1():null,($t1=this.Expressions)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.EvaluateOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.EvaluateOperator}},EvaluateKeyword:null,Parameters:null,FunctionCall:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(evaluateKeyword,parameters,functionCall,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.EvaluateKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,evaluateKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.FunctionCall=this.Attach(Bridge.global.Kusto.Language.Syntax.FunctionCallExpression,functionCall);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.EvaluateKeyword;case 1:return this.Parameters;case 2:return this.FunctionCall;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"EvaluateKeyword";case 1:return"Parameters";case 2:return"FunctionCall";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Tabular;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitEvaluateOperator(this)},Accept:function(TResult,visitor){return visitor.VisitEvaluateOperator(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.EvaluateOperator(($t=this.EvaluateKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.FunctionCall)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ExecuteAndCacheOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ExecuteAndCacheOperator}},ExecuteAndCacheKeyword:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(executeAndCacheKeyword,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ExecuteAndCacheKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,executeAndCacheKeyword);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ExecuteAndCacheKeyword;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ExecuteAndCacheKeyword";default:throw new System.ArgumentOutOfRangeException.ctor;}},Accept$1:function(visitor){visitor.VisitExecuteAndCacheOperator(this)},Accept:function(TResult,visitor){return visitor.VisitExecuteAndCacheOperator(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.ExecuteAndCacheOperator(($t=this.ExecuteAndCacheKeyword)!=null?$t.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ExtendOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ExtendOperator}},ExtendKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(extendKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ExtendKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,extendKeyword);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ExtendKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ExtendKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitExtendOperator(this)},Accept:function(TResult,visitor){return visitor.VisitExtendOperator(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.ExtendOperator(($t=this.ExtendKeyword)!=null?$t.Clone$1():null,($t1=this.Expressions)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.FacetOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FacetOperator}},FacetKeyword:null,ByKeyword:null,Expressions:null,WithClause:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(facetKeyword,byKeyword,expressions,withClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.FacetKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,facetKeyword);this.ByKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,byKeyword);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.WithClause=this.Attach(Bridge.global.Kusto.Language.Syntax.FacetWithClause,withClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.FacetKeyword;case 1:return this.ByKeyword;case 2:return this.Expressions;case 3:return this.WithClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"FacetKeyword";case 1:return"ByKeyword";case 2:return"Expressions";case 3:return"WithClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;case 3:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFacetOperator(this)},Accept:function(TResult,visitor){return visitor.VisitFacetOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.FacetOperator(($t=this.FacetKeyword)!=null?$t.Clone$1():null,($t1=this.ByKeyword)!=null?$t1.Clone$1():null,($t2=this.Expressions)!=null?$t2.Clone$2():null,($t3=this.WithClause)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.FacetWithExpressionClause",{inherits:[Kusto.Language.Syntax.FacetWithClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FacetWithExpressionClause}},WithKeyword:null,OpenParen:null,Expression:null,CloseParen:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(withKeyword,openParen,expression,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.FacetWithClause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,withKeyword);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.OpenParen;case 2:return this.Expression;case 3:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"OpenParen";case 2:return"Expression";case 3:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Query;case 3:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFacetWithExpressionClause(this)},Accept:function(TResult,visitor){return visitor.VisitFacetWithExpressionClause(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.FacetWithExpressionClause(($t=this.WithKeyword)!=null?$t.Clone$1():null,($t1=this.OpenParen)!=null?$t1.Clone$1():null,($t2=this.Expression)!=null?$t2.Clone$1():null,($t3=this.CloseParen)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.FacetWithOperatorClause",{inherits:[Kusto.Language.Syntax.FacetWithClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FacetWithOperatorClause}},WithKeyword:null,Operator:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(withKeyword,operator,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.FacetWithClause.ctor.call(this,diagnostics);this.WithKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,withKeyword);this.Operator=this.Attach(Bridge.global.Kusto.Language.Syntax.QueryOperator,operator);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WithKeyword;case 1:return this.Operator;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WithKeyword";case 1:return"Operator";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Query;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFacetWithOperatorClause(this)},Accept:function(TResult,visitor){return visitor.VisitFacetWithOperatorClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.FacetWithOperatorClause(($t=this.WithKeyword)!=null?$t.Clone$1():null,($t1=this.Operator)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.FilterOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FilterOperator}},Keyword:null,Parameters:null,Condition:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(keyword,parameters,condition,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.Keyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,keyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Condition=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,condition);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Keyword;case 1:return this.Parameters;case 2:return this.Condition;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Keyword";case 1:return"Parameters";case 2:return"Condition";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Boolean;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFilterOperator(this)},Accept:function(TResult,visitor){return visitor.VisitFilterOperator(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.FilterOperator(($t=this.Keyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Condition)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.FindOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.FindOperator}},FindKeyword:null,DataScope:null,Parameters:null,InClause:null,WhereKeyword:null,Condition:null,Project:null,ProjectAway:null,ChildCount:{get:function(){return 8}}},ctors:{ctor:function(findKeyword,dataScope,parameters,inClause,whereKeyword,condition,project,projectAway,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.FindKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,findKeyword);this.DataScope=this.Attach(Bridge.global.Kusto.Language.Syntax.DataScopeClause,dataScope,!0);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.InClause=this.Attach(Bridge.global.Kusto.Language.Syntax.FindInClause,inClause,!0);this.WhereKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,whereKeyword,!0);this.Condition=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,condition);this.Project=this.Attach(Bridge.global.Kusto.Language.Syntax.FindProjectClause,project,!0);this.ProjectAway=this.Attach(Bridge.global.Kusto.Language.Syntax.FindProjectClause,projectAway,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.FindKeyword;case 1:return this.DataScope;case 2:return this.Parameters;case 3:return this.InClause;case 4:return this.WhereKeyword;case 5:return this.Condition;case 6:return this.Project;case 7:return this.ProjectAway;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"FindKeyword";case 1:return"DataScope";case 2:return"Parameters";case 3:return"InClause";case 4:return"WhereKeyword";case 5:return"Condition";case 6:return"Project";case 7:return"ProjectAway";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:case 3:case 4:case 6:case 7:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Clause;case 2:return Kusto.Language.Editor.CompletionHint.None;case 3:return Kusto.Language.Editor.CompletionHint.Clause;case 4:return Kusto.Language.Editor.CompletionHint.Keyword;case 5:return Kusto.Language.Editor.CompletionHint.Boolean;case 6:return Kusto.Language.Editor.CompletionHint.Clause;case 7:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitFindOperator(this)},Accept:function(TResult,visitor){return visitor.VisitFindOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7;return new Kusto.Language.Syntax.FindOperator(($t=this.FindKeyword)!=null?$t.Clone$1():null,($t1=this.DataScope)!=null?$t1.Clone$1():null,($t2=this.Parameters)!=null?$t2.Clone$2():null,($t3=this.InClause)!=null?$t3.Clone$1():null,($t4=this.WhereKeyword)!=null?$t4.Clone$1():null,($t5=this.Condition)!=null?$t5.Clone$1():null,($t6=this.Project)!=null?$t6.Clone$1():null,($t7=this.ProjectAway)!=null?$t7.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ForkOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ForkOperator}},ForkKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(forkKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ForkKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,forkKeyword);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.ForkExpression),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ForkKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ForkKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Tabular;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitForkOperator(this)},Accept:function(TResult,visitor){return visitor.VisitForkOperator(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.ForkOperator(($t=this.ForkKeyword)!=null?$t.Clone$1():null,($t1=this.Expressions)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.GetSchemaOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.GetSchemaOperator}},GetSchemaKeyword:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(getSchemaKeyword,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.GetSchemaKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,getSchemaKeyword);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.GetSchemaKeyword;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"GetSchemaKeyword";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitGetSchemaOperator(this)},Accept:function(TResult,visitor){return visitor.VisitGetSchemaOperator(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.GetSchemaOperator(($t=this.GetSchemaKeyword)!=null?$t.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.InvokeOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.InvokeOperator}},InvokeKeyword:null,Function:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(invokeKeyword,$function,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.InvokeKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,invokeKeyword);this.Function=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,$function);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.InvokeKeyword;case 1:return this.Function;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"InvokeKeyword";case 1:return"Function";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.TabularFunction;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitInvokeOperator(this)},Accept:function(TResult,visitor){return visitor.VisitInvokeOperator(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.InvokeOperator(($t=this.InvokeKeyword)!=null?$t.Clone$1():null,($t1=this.Function)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.JoinOnClause",{inherits:[Kusto.Language.Syntax.JoinConditionClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.JoinOnClause}},OnKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(onKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.JoinConditionClause.ctor.call(this,diagnostics);this.OnKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,onKeyword);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OnKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OnKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitJoinOnClause(this)},Accept:function(TResult,visitor){return visitor.VisitJoinOnClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.JoinOnClause(($t=this.OnKeyword)!=null?$t.Clone$1():null,($t1=this.Expressions)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.JoinOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.JoinOperator}},JoinKeyword:null,Parameters:null,Expression:null,ConditionClause:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(joinKeyword,parameters,expression,conditionClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.JoinKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,joinKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.ConditionClause=this.Attach(Bridge.global.Kusto.Language.Syntax.JoinConditionClause,conditionClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.JoinKeyword;case 1:return this.Parameters;case 2:return this.Expression;case 3:return this.ConditionClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"JoinKeyword";case 1:return"Parameters";case 2:return"Expression";case 3:return"ConditionClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Tabular;case 3:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitJoinOperator(this)},Accept:function(TResult,visitor){return visitor.VisitJoinOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.JoinOperator(($t=this.JoinKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Expression)!=null?$t2.Clone$1():null,($t3=this.ConditionClause)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.JoinWhereClause",{inherits:[Kusto.Language.Syntax.JoinConditionClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.JoinWhereClause}},WhereKeyword:null,Expression:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(whereKeyword,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.JoinConditionClause.ctor.call(this,diagnostics);this.WhereKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,whereKeyword);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.WhereKeyword;case 1:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"WhereKeyword";case 1:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Boolean;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitJoinWhereClause(this)},Accept:function(TResult,visitor){return visitor.VisitJoinWhereClause(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.JoinWhereClause(($t=this.WhereKeyword)!=null?$t.Clone$1():null,($t1=this.Expression)!=null?$t1.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.JsonArrayExpression",{inherits:[Kusto.Language.Syntax.JsonExpression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.JsonArrayExpression}},OpenBracket:null,Values:null,CloseBracket:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openBracket,values,closeBracket,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.JsonExpression.ctor.call(this,diagnostics);this.OpenBracket=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openBracket);this.Values=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),values);this.CloseBracket=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeBracket);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBracket;case 1:return this.Values;case 2:return this.CloseBracket;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBracket";case 1:return"Values";case 2:return"CloseBracket";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Literal;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitJsonArrayExpression(this)},Accept:function(TResult,visitor){return visitor.VisitJsonArrayExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.JsonArrayExpression(($t=this.OpenBracket)!=null?$t.Clone$1():null,($t1=this.Values)!=null?$t1.Clone$2():null,($t2=this.CloseBracket)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.JsonObjectExpression",{inherits:[Kusto.Language.Syntax.JsonExpression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.JsonObjectExpression}},OpenBrace:null,Pairs:null,CloseBrace:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openBrace,pairs,closeBrace,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.JsonExpression.ctor.call(this,diagnostics);this.OpenBrace=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openBrace);this.Pairs=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.JsonPair)),pairs);this.CloseBrace=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeBrace);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenBrace;case 1:return this.Pairs;case 2:return this.CloseBrace;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenBrace";case 1:return"Pairs";case 2:return"CloseBrace";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitJsonObjectExpression(this)},Accept:function(TResult,visitor){return visitor.VisitJsonObjectExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.JsonObjectExpression(($t=this.OpenBrace)!=null?$t.Clone$1():null,($t1=this.Pairs)!=null?$t1.Clone$2():null,($t2=this.CloseBrace)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.LookupOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.LookupOperator}},LookupKeyword:null,Parameters:null,Expression:null,LookupClause:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(lookupKeyword,parameters,expression,lookupClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.LookupKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,lookupKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.LookupClause=this.Attach(Bridge.global.Kusto.Language.Syntax.JoinConditionClause,lookupClause);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.LookupKeyword;case 1:return this.Parameters;case 2:return this.Expression;case 3:return this.LookupClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"LookupKeyword";case 1:return"Parameters";case 2:return"Expression";case 3:return"LookupClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;case 2:return Kusto.Language.Editor.CompletionHint.Tabular;case 3:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitLookupOperator(this)},Accept:function(TResult,visitor){return visitor.VisitLookupOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.LookupOperator(($t=this.LookupKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Expression)!=null?$t2.Clone$1():null,($t3=this.LookupClause)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesFromToStepClause",{inherits:[Kusto.Language.Syntax.MakeSeriesRangeClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesFromToStepClause}},FromToken:null,From:null,ToToken:null,To:null,StepToken:null,Step:null,ChildCount:{get:function(){return 6}}},ctors:{ctor:function(fromToken,from,toToken,to,stepToken,step,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.MakeSeriesRangeClause.ctor.call(this,diagnostics);this.FromToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,fromToken);this.From=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,from);this.ToToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,toToken);this.To=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,to);this.StepToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,stepToken);this.Step=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,step);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.FromToken;case 1:return this.From;case 2:return this.ToToken;case 3:return this.To;case 4:return this.StepToken;case 5:return this.Step;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"FromToken";case 1:return"From";case 2:return"ToToken";case 3:return"To";case 4:return"StepToken";case 5:return"Step";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;case 4:return Kusto.Language.Editor.CompletionHint.Keyword;case 5:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesFromToStepClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesFromToStepClause(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4,$t5;return new Kusto.Language.Syntax.MakeSeriesFromToStepClause(($t=this.FromToken)!=null?$t.Clone$1():null,($t1=this.From)!=null?$t1.Clone$1():null,($t2=this.ToToken)!=null?$t2.Clone$1():null,($t3=this.To)!=null?$t3.Clone$1():null,($t4=this.StepToken)!=null?$t4.Clone$1():null,($t5=this.Step)!=null?$t5.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesInRangeClause",{inherits:[Kusto.Language.Syntax.MakeSeriesRangeClause],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesInRangeClause}},InKeyword:null,RangeKeyword:null,Arguments:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(inKeyword,rangeKeyword,$arguments,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.MakeSeriesRangeClause.ctor.call(this,diagnostics);this.InKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,inKeyword);this.RangeKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,rangeKeyword);this.Arguments=this.Attach(Bridge.global.Kusto.Language.Syntax.ExpressionList,$arguments);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.InKeyword;case 1:return this.RangeKeyword;case 2:return this.Arguments;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"InKeyword";case 1:return"RangeKeyword";case 2:return"Arguments";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesInRangeClause(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesInRangeClause(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.MakeSeriesInRangeClause(($t=this.InKeyword)!=null?$t.Clone$1():null,($t1=this.RangeKeyword)!=null?$t1.Clone$1():null,($t2=this.Arguments)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MakeSeriesOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MakeSeriesOperator}},MakeSeriesKeyword:null,Parameters:null,Aggregates:null,OnClause:null,RangeClause:null,ByClause:null,ChildCount:{get:function(){return 6}}},ctors:{ctor:function(makeSeriesKeyword,parameters,aggregates,onClause,rangeClause,byClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.MakeSeriesKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,makeSeriesKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Aggregates=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MakeSeriesExpression)),aggregates);this.OnClause=this.Attach(Bridge.global.Kusto.Language.Syntax.MakeSeriesOnClause,onClause);this.RangeClause=this.Attach(Bridge.global.Kusto.Language.Syntax.MakeSeriesRangeClause,rangeClause);this.ByClause=this.Attach(Bridge.global.Kusto.Language.Syntax.MakeSeriesByClause,byClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.MakeSeriesKeyword;case 1:return this.Parameters;case 2:return this.Aggregates;case 3:return this.OnClause;case 4:return this.RangeClause;case 5:return this.ByClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"MakeSeriesKeyword";case 1:return"Parameters";case 2:return"Aggregates";case 3:return"OnClause";case 4:return"RangeClause";case 5:return"ByClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 5:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Aggregate;case 3:return Kusto.Language.Editor.CompletionHint.Clause;case 4:return Kusto.Language.Editor.CompletionHint.Clause;case 5:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMakeSeriesOperator(this)},Accept:function(TResult,visitor){return visitor.VisitMakeSeriesOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4,$t5;return new Kusto.Language.Syntax.MakeSeriesOperator(($t=this.MakeSeriesKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Aggregates)!=null?$t2.Clone$2():null,($t3=this.OnClause)!=null?$t3.Clone$1():null,($t4=this.RangeClause)!=null?$t4.Clone$1():null,($t5=this.ByClause)!=null?$t5.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MvApplyOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvApplyOperator}},MvApplyKeyword:null,Parameters:null,Expressions:null,RowLimitClause:null,ContextIdClause:null,OnKeyword:null,Subquery:null,ChildCount:{get:function(){return 7}}},ctors:{ctor:function(mvApplyKeyword,parameters,expressions,rowLimitClause,contextIdClause,onKeyword,subquery,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.MvApplyKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,mvApplyKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvApplyExpression)),expressions);this.RowLimitClause=this.Attach(Bridge.global.Kusto.Language.Syntax.MvApplyRowLimitClause,rowLimitClause,!0);this.ContextIdClause=this.Attach(Bridge.global.Kusto.Language.Syntax.MvApplyContextIdClause,contextIdClause,!0);this.OnKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,onKeyword);this.Subquery=this.Attach(Bridge.global.Kusto.Language.Syntax.MvApplySubqueryExpression,subquery);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.MvApplyKeyword;case 1:return this.Parameters;case 2:return this.Expressions;case 3:return this.RowLimitClause;case 4:return this.ContextIdClause;case 5:return this.OnKeyword;case 6:return this.Subquery;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"MvApplyKeyword";case 1:return"Parameters";case 2:return"Expressions";case 3:return"RowLimitClause";case 4:return"ContextIdClause";case 5:return"OnKeyword";case 6:return"Subquery";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:case 4:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;case 3:return Kusto.Language.Editor.CompletionHint.Clause;case 4:return Kusto.Language.Editor.CompletionHint.Clause;case 5:return Kusto.Language.Editor.CompletionHint.Keyword;case 6:return Kusto.Language.Editor.CompletionHint.Tabular;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvApplyOperator(this)},Accept:function(TResult,visitor){return visitor.VisitMvApplyOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4,$t5,$t6;return new Kusto.Language.Syntax.MvApplyOperator(($t=this.MvApplyKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Expressions)!=null?$t2.Clone$2():null,($t3=this.RowLimitClause)!=null?$t3.Clone$1():null,($t4=this.ContextIdClause)!=null?$t4.Clone$1():null,($t5=this.OnKeyword)!=null?$t5.Clone$1():null,($t6=this.Subquery)!=null?$t6.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.MvExpandOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.MvExpandOperator}},MvExpandKeyword:null,Parameters:null,Expressions:null,RowLimitClause:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(mvExpandKeyword,parameters,expressions,rowLimitClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.MvExpandKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,mvExpandKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.MvExpandExpression)),expressions);this.RowLimitClause=this.Attach(Bridge.global.Kusto.Language.Syntax.MvExpandRowLimitClause,rowLimitClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.MvExpandKeyword;case 1:return this.Parameters;case 2:return this.Expressions;case 3:return this.RowLimitClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"MvExpandKeyword";case 1:return"Parameters";case 2:return"Expressions";case 3:return"RowLimitClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;case 3:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitMvExpandOperator(this)},Accept:function(TResult,visitor){return visitor.VisitMvExpandOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.MvExpandOperator(($t=this.MvExpandKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Expressions)!=null?$t2.Clone$2():null,($t3=this.RowLimitClause)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ParseOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ParseOperator}},ParseKeyword:null,Parameters:null,Expression:null,WithKeyword:null,Patterns:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(parseKeyword,parameters,expression,withKeyword,patterns,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ParseKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,parseKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.WithKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,withKeyword);this.Patterns=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxNode),patterns);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ParseKeyword;case 1:return this.Parameters;case 2:return this.Expression;case 3:return this.WithKeyword;case 4:return this.Patterns;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ParseKeyword";case 1:return"Parameters";case 2:return"Expression";case 3:return"WithKeyword";case 4:return"Patterns";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;case 3:return Kusto.Language.Editor.CompletionHint.Keyword;case 4:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitParseOperator(this)},Accept:function(TResult,visitor){return visitor.VisitParseOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.ParseOperator(($t=this.ParseKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Expression)!=null?$t2.Clone$1():null,($t3=this.WithKeyword)!=null?$t3.Clone$1():null,($t4=this.Patterns)!=null?$t4.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.PartitionOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PartitionOperator}},PartitionKeyword:null,Parameters:null,ByKeyword:null,ByExpression:null,Operand:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(partitionKeyword,parameters,byKeyword,byExpression,operand,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.PartitionKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,partitionKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.ByKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,byKeyword);this.ByExpression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,byExpression);this.Operand=this.Attach(Bridge.global.Kusto.Language.Syntax.PartitionExpression,operand);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.PartitionKeyword;case 1:return this.Parameters;case 2:return this.ByKeyword;case 3:return this.ByExpression;case 4:return this.Operand;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"PartitionKeyword";case 1:return"Parameters";case 2:return"ByKeyword";case 3:return"ByExpression";case 4:return"Operand";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;case 4:return Kusto.Language.Editor.CompletionHint.Tabular;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPartitionOperator(this)},Accept:function(TResult,visitor){return visitor.VisitPartitionOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.PartitionOperator(($t=this.PartitionKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.ByKeyword)!=null?$t2.Clone$1():null,($t3=this.ByExpression)!=null?$t3.Clone$1():null,($t4=this.Operand)!=null?$t4.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.PrimitiveTypeExpression",{inherits:[Kusto.Language.Syntax.TypeExpression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PrimitiveTypeExpression}},Type:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(type,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.TypeExpression.ctor.call(this,diagnostics);this.Type=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,type);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Type;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Type";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPrimitiveTypeExpression(this)},Accept:function(TResult,visitor){return visitor.VisitPrimitiveTypeExpression(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.PrimitiveTypeExpression(($t=this.Type)!=null?$t.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.PrintOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.PrintOperator}},PrintKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(printKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.PrintKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,printKeyword);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.PrintKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"PrintKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitPrintOperator(this)},Accept:function(TResult,visitor){return visitor.VisitPrintOperator(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.PrintOperator(($t=this.PrintKeyword)!=null?$t.Clone$1():null,($t1=this.Expressions)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ProjectAwayOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ProjectAwayOperator}},ProjectAwayKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(projectAwayKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ProjectAwayKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,projectAwayKeyword);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ProjectAwayKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ProjectAwayKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitProjectAwayOperator(this)},Accept:function(TResult,visitor){return visitor.VisitProjectAwayOperator(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.ProjectAwayOperator(($t=this.ProjectAwayKeyword)!=null?$t.Clone$1():null,($t1=this.Expressions)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ProjectOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ProjectOperator}},ProjectKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(projectKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ProjectKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,projectKeyword);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ProjectKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ProjectKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitProjectOperator(this)},Accept:function(TResult,visitor){return visitor.VisitProjectOperator(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.ProjectOperator(($t=this.ProjectKeyword)!=null?$t.Clone$1():null,($t1=this.Expressions)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ProjectRenameOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ProjectRenameOperator}},ProjectRenameKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(projectRenameKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ProjectRenameKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,projectRenameKeyword);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ProjectRenameKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ProjectRenameKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitProjectRenameOperator(this)},Accept:function(TResult,visitor){return visitor.VisitProjectRenameOperator(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.ProjectRenameOperator(($t=this.ProjectRenameKeyword)!=null?$t.Clone$1():null,($t1=this.Expressions)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ProjectReorderOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ProjectReorderOperator}},ProjectReorderKeyword:null,Expressions:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(projectReorderKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ProjectReorderKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,projectReorderKeyword);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ProjectReorderKeyword;case 1:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ProjectReorderKeyword";case 1:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitProjectReorderOperator(this)},Accept:function(TResult,visitor){return visitor.VisitProjectReorderOperator(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.ProjectReorderOperator(($t=this.ProjectReorderKeyword)!=null?$t.Clone$1():null,($t1=this.Expressions)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.RangeOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.RangeOperator}},RangeToken:null,Name:null,FromToken:null,From:null,ToToken:null,To:null,StepToken:null,Step:null,ChildCount:{get:function(){return 8}}},ctors:{ctor:function(rangeToken,name,fromToken,from,toToken,to,stepToken,step,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.RangeToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,rangeToken);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.NameDeclaration,name);this.FromToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,fromToken);this.From=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,from);this.ToToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,toToken);this.To=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,to);this.StepToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,stepToken);this.Step=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,step);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.RangeToken;case 1:return this.Name;case 2:return this.FromToken;case 3:return this.From;case 4:return this.ToToken;case 5:return this.To;case 6:return this.StepToken;case 7:return this.Step;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"RangeToken";case 1:return"Name";case 2:return"FromToken";case 3:return"From";case 4:return"ToToken";case 5:return"To";case 6:return"StepToken";case 7:return"Step";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Declaration;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;case 4:return Kusto.Language.Editor.CompletionHint.Keyword;case 5:return Kusto.Language.Editor.CompletionHint.Scalar;case 6:return Kusto.Language.Editor.CompletionHint.Keyword;case 7:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitRangeOperator(this)},Accept:function(TResult,visitor){return visitor.VisitRangeOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7;return new Kusto.Language.Syntax.RangeOperator(($t=this.RangeToken)!=null?$t.Clone$1():null,($t1=this.Name)!=null?$t1.Clone$1():null,($t2=this.FromToken)!=null?$t2.Clone$1():null,($t3=this.From)!=null?$t3.Clone$1():null,($t4=this.ToToken)!=null?$t4.Clone$1():null,($t5=this.To)!=null?$t5.Clone$1():null,($t6=this.StepToken)!=null?$t6.Clone$1():null,($t7=this.Step)!=null?$t7.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.ReduceByOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.ReduceByOperator}},ReduceKeyword:null,Parameters:null,ByKeyword:null,Expression:null,With:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(reduceKeyword,parameters,byKeyword,expression,$with,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.ReduceKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,reduceKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.ByKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,byKeyword);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.With=this.Attach(Bridge.global.Kusto.Language.Syntax.ReduceByWithClause,$with,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.ReduceKeyword;case 1:return this.Parameters;case 2:return this.ByKeyword;case 3:return this.Expression;case 4:return this.With;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"ReduceKeyword";case 1:return"Parameters";case 2:return"ByKeyword";case 3:return"Expression";case 4:return"With";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 4:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;case 4:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitReduceByOperator(this)},Accept:function(TResult,visitor){return visitor.VisitReduceByOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.ReduceByOperator(($t=this.ReduceKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.ByKeyword)!=null?$t2.Clone$1():null,($t3=this.Expression)!=null?$t3.Clone$1():null,($t4=this.With)!=null?$t4.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.RenderOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.RenderOperator}},RenderKeyword:null,ChartType:null,WithClause:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(renderKeyword,chartType,withClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.RenderKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,renderKeyword);this.ChartType=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,chartType,!0);this.WithClause=this.Attach(Bridge.global.Kusto.Language.Syntax.RenderWithClause,withClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.RenderKeyword;case 1:return this.ChartType;case 2:return this.WithClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"RenderKeyword";case 1:return"ChartType";case 2:return"WithClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 1:case 2:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitRenderOperator(this)},Accept:function(TResult,visitor){return visitor.VisitRenderOperator(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.RenderOperator(($t=this.RenderKeyword)!=null?$t.Clone$1():null,($t1=this.ChartType)!=null?$t1.Clone$1():null,($t2=this.WithClause)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SampleDistinctOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SampleDistinctOperator}},SampleDistinctKeyword:null,Parameters:null,Expression:null,OfKeyword:null,OfExpression:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(sampleDistinctKeyword,parameters,expression,ofKeyword,ofExpression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.SampleDistinctKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,sampleDistinctKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.OfKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,ofKeyword);this.OfExpression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,ofExpression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.SampleDistinctKeyword;case 1:return this.Parameters;case 2:return this.Expression;case 3:return this.OfKeyword;case 4:return this.OfExpression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"SampleDistinctKeyword";case 1:return"Parameters";case 2:return"Expression";case 3:return"OfKeyword";case 4:return"OfExpression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Number;case 3:return Kusto.Language.Editor.CompletionHint.Keyword;case 4:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSampleDistinctOperator(this)},Accept:function(TResult,visitor){return visitor.VisitSampleDistinctOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.SampleDistinctOperator(($t=this.SampleDistinctKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Expression)!=null?$t2.Clone$1():null,($t3=this.OfKeyword)!=null?$t3.Clone$1():null,($t4=this.OfExpression)!=null?$t4.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SampleOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SampleOperator}},SampleKeyword:null,Parameters:null,Expression:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(sampleKeyword,parameters,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.SampleKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,sampleKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.SampleKeyword;case 1:return this.Parameters;case 2:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"SampleKeyword";case 1:return"Parameters";case 2:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Number;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSampleOperator(this)},Accept:function(TResult,visitor){return visitor.VisitSampleOperator(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.SampleOperator(($t=this.SampleKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Expression)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SchemaTypeExpression",{inherits:[Kusto.Language.Syntax.TypeExpression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SchemaTypeExpression}},OpenParen:null,Columns:null,CloseParen:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(openParen,columns,closeParen,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.TypeExpression.ctor.call(this,diagnostics);this.OpenParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,openParen);this.Columns=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),columns);this.CloseParen=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,closeParen);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.OpenParen;case 1:return this.Columns;case 2:return this.CloseParen;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"OpenParen";case 1:return"Columns";case 2:return"CloseParen";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Declaration;case 2:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSchemaTypeExpression(this)},Accept:function(TResult,visitor){return visitor.VisitSchemaTypeExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.SchemaTypeExpression(($t=this.OpenParen)!=null?$t.Clone$1():null,($t1=this.Columns)!=null?$t1.Clone$2():null,($t2=this.CloseParen)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SearchOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SearchOperator}},SearchKeyword:null,Parameters:null,DataScope:null,InClause:null,Condition:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(searchKeyword,parameters,dataScope,inClause,condition,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.SearchKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,searchKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.DataScope=this.Attach(Bridge.global.Kusto.Language.Syntax.DataScopeClause,dataScope,!0);this.InClause=this.Attach(Bridge.global.Kusto.Language.Syntax.FindInClause,inClause,!0);this.Condition=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,condition);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.SearchKeyword;case 1:return this.Parameters;case 2:return this.DataScope;case 3:return this.InClause;case 4:return this.Condition;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"SearchKeyword";case 1:return"Parameters";case 2:return"DataScope";case 3:return"InClause";case 4:return"Condition";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 2:case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Clause;case 3:return Kusto.Language.Editor.CompletionHint.Clause;case 4:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSearchOperator(this)},Accept:function(TResult,visitor){return visitor.VisitSearchOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.SearchOperator(($t=this.SearchKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.DataScope)!=null?$t2.Clone$1():null,($t3=this.InClause)!=null?$t3.Clone$1():null,($t4=this.Condition)!=null?$t4.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SerializeOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SerializeOperator}},SerializeKeyword:null,Parameters:null,Expressions:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(serializeKeyword,parameters,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.SerializeKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,serializeKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.SerializeKeyword;case 1:return this.Parameters;case 2:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"SerializeKeyword";case 1:return"Parameters";case 2:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSerializeOperator(this)},Accept:function(TResult,visitor){return visitor.VisitSerializeOperator(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.SerializeOperator(($t=this.SerializeKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Expressions)!=null?$t2.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SimpleNamedExpression",{inherits:[Kusto.Language.Syntax.NamedExpression],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SimpleNamedExpression}},Name:null,EqualToken:null,Expression:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(name,equalToken,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.NamedExpression.ctor.call(this,diagnostics);this.Name=this.Attach(Bridge.global.Kusto.Language.Syntax.NameDeclaration,name);this.EqualToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,equalToken);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Name;case 1:return this.EqualToken;case 2:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Name";case 1:return"EqualToken";case 2:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Declaration;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSimpleNamedExpression(this)},Accept:function(TResult,visitor){return visitor.VisitSimpleNamedExpression(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.SimpleNamedExpression(($t=this.Name)!=null?$t.Clone$1():null,($t1=this.EqualToken)!=null?$t1.Clone$1():null,($t2=this.Expression)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SortOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SortOperator}},Keyword:null,ByKeyword:null,Expressions:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(keyword,byKeyword,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.Keyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,keyword);this.ByKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,byKeyword);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Keyword;case 1:return this.ByKeyword;case 2:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Keyword";case 1:return"ByKeyword";case 2:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Keyword;case 2:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSortOperator(this)},Accept:function(TResult,visitor){return visitor.VisitSortOperator(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.SortOperator(($t=this.Keyword)!=null?$t.Clone$1():null,($t1=this.ByKeyword)!=null?$t1.Clone$1():null,($t2=this.Expressions)!=null?$t2.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.SummarizeOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.SummarizeOperator}},SummarizeKeyword:null,Parameters:null,Aggregates:null,ByClause:null,ChildCount:{get:function(){return 4}}},ctors:{ctor:function(summarizeKeyword,parameters,aggregates,byClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.SummarizeKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,summarizeKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Aggregates=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),aggregates);this.ByClause=this.Attach(Bridge.global.Kusto.Language.Syntax.SummarizeByClause,byClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.SummarizeKeyword;case 1:return this.Parameters;case 2:return this.Aggregates;case 3:return this.ByClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"SummarizeKeyword";case 1:return"Parameters";case 2:return"Aggregates";case 3:return"ByClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 3:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Aggregate;case 3:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitSummarizeOperator(this)},Accept:function(TResult,visitor){return visitor.VisitSummarizeOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3;return new Kusto.Language.Syntax.SummarizeOperator(($t=this.SummarizeKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Aggregates)!=null?$t2.Clone$2():null,($t3=this.ByClause)!=null?$t3.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.TakeOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TakeOperator}},Keyword:null,Parameters:null,Expression:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(keyword,parameters,expression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.Keyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,keyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Keyword;case 1:return this.Parameters;case 2:return this.Expression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Keyword";case 1:return"Parameters";case 2:return"Expression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Number;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTakeOperator(this)},Accept:function(TResult,visitor){return visitor.VisitTakeOperator(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.TakeOperator(($t=this.Keyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Expression)!=null?$t2.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.TopHittersOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TopHittersOperator}},TopHittersKeyword:null,Expression:null,OfKeyword:null,OfExpression:null,ByClause:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(topHittersKeyword,expression,ofKeyword,ofExpression,byClause,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.TopHittersKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,topHittersKeyword);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.OfKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,ofKeyword);this.OfExpression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,ofExpression);this.ByClause=this.Attach(Bridge.global.Kusto.Language.Syntax.TopHittersByClause,byClause,!0);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.TopHittersKeyword;case 1:return this.Expression;case 2:return this.OfKeyword;case 3:return this.OfExpression;case 4:return this.ByClause;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"TopHittersKeyword";case 1:return"Expression";case 2:return"OfKeyword";case 3:return"OfExpression";case 4:return"ByClause";default:throw new System.ArgumentOutOfRangeException.ctor;}},IsOptional:function(index){switch(index){case 4:return!0;default:return!1}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.Number;case 2:return Kusto.Language.Editor.CompletionHint.Keyword;case 3:return Kusto.Language.Editor.CompletionHint.Scalar;case 4:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTopHittersOperator(this)},Accept:function(TResult,visitor){return visitor.VisitTopHittersOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.TopHittersOperator(($t=this.TopHittersKeyword)!=null?$t.Clone$1():null,($t1=this.Expression)!=null?$t1.Clone$1():null,($t2=this.OfKeyword)!=null?$t2.Clone$1():null,($t3=this.OfExpression)!=null?$t3.Clone$1():null,($t4=this.ByClause)!=null?$t4.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.TopNestedOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TopNestedOperator}},Clauses:null,ChildCount:{get:function(){return 1}}},ctors:{ctor:function(clauses,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.Clauses=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.TopNestedClause)),clauses);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.Clauses;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"Clauses";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Clause;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTopNestedOperator(this)},Accept:function(TResult,visitor){return visitor.VisitTopNestedOperator(this)},CloneCore:function(){var $t;return new Kusto.Language.Syntax.TopNestedOperator(($t=this.Clauses)!=null?$t.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.TopOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.TopOperator}},TopKeyword:null,Parameters:null,Expression:null,ByKeyword:null,ByExpression:null,ChildCount:{get:function(){return 5}}},ctors:{ctor:function(topKeyword,parameters,expression,byKeyword,byExpression,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.TopKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,topKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,expression);this.ByKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,byKeyword);this.ByExpression=this.Attach(Bridge.global.Kusto.Language.Syntax.Expression,byExpression);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.TopKeyword;case 1:return this.Parameters;case 2:return this.Expression;case 3:return this.ByKeyword;case 4:return this.ByExpression;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"TopKeyword";case 1:return"Parameters";case 2:return"Expression";case 3:return"ByKeyword";case 4:return"ByExpression";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Number;case 3:return Kusto.Language.Editor.CompletionHint.Keyword;case 4:return Kusto.Language.Editor.CompletionHint.Scalar;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitTopOperator(this)},Accept:function(TResult,visitor){return visitor.VisitTopOperator(this)},CloneCore:function(){var $t,$t1,$t2,$t3,$t4;return new Kusto.Language.Syntax.TopOperator(($t=this.TopKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Expression)!=null?$t2.Clone$1():null,($t3=this.ByKeyword)!=null?$t3.Clone$1():null,($t4=this.ByExpression)!=null?$t4.Clone$1():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.UnionOperator",{inherits:[Kusto.Language.Syntax.QueryOperator],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.UnionOperator}},UnionKeyword:null,Parameters:null,Expressions:null,ChildCount:{get:function(){return 3}}},ctors:{ctor:function(unionKeyword,parameters,expressions,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.QueryOperator.ctor.call(this,diagnostics);this.UnionKeyword=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,unionKeyword);this.Parameters=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.NamedParameter),parameters);this.Expressions=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SeparatedElement$1(Kusto.Language.Syntax.Expression)),expressions);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.UnionKeyword;case 1:return this.Parameters;case 2:return this.Expressions;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"UnionKeyword";case 1:return"Parameters";case 2:return"Expressions";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Keyword;case 1:return Kusto.Language.Editor.CompletionHint.None;case 2:return Kusto.Language.Editor.CompletionHint.Tabular;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitUnionOperator(this)},Accept:function(TResult,visitor){return visitor.VisitUnionOperator(this)},CloneCore:function(){var $t,$t1,$t2;return new Kusto.Language.Syntax.UnionOperator(($t=this.UnionKeyword)!=null?$t.Clone$1():null,($t1=this.Parameters)!=null?$t1.Clone$2():null,($t2=this.Expressions)!=null?$t2.Clone$2():null,this.SyntaxDiagnostics)}}});Bridge.define("Kusto.Language.Syntax.UnknownCommand",{inherits:[Kusto.Language.Syntax.Command],props:{Kind:{get:function(){return Kusto.Language.Syntax.SyntaxKind.UnknownCommand}},DotToken:null,Parts:null,ChildCount:{get:function(){return 2}}},ctors:{ctor:function(dotToken,parts,diagnostics){diagnostics===void 0&&(diagnostics=null);this.$initialize();Kusto.Language.Syntax.Command.ctor.call(this,diagnostics);this.DotToken=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxToken,dotToken);this.Parts=this.Attach(Bridge.global.Kusto.Language.Syntax.SyntaxList$1(Kusto.Language.Syntax.SyntaxToken),parts);this.Init()}},methods:{GetChild:function(index){switch(index){case 0:return this.DotToken;case 1:return this.Parts;default:throw new System.ArgumentOutOfRangeException.ctor;}},GetName:function(index){switch(index){case 0:return"DotToken";case 1:return"Parts";default:throw new System.ArgumentOutOfRangeException.ctor;}},GetCompletionHintCore:function(index){switch(index){case 0:return Kusto.Language.Editor.CompletionHint.Syntax;case 1:return Kusto.Language.Editor.CompletionHint.Syntax;default:return Kusto.Language.Editor.CompletionHint.Inherit}},Accept$1:function(visitor){visitor.VisitUnknownCommand(this)},Accept:function(TResult,visitor){return visitor.VisitUnknownCommand(this)},CloneCore:function(){var $t,$t1;return new Kusto.Language.Syntax.UnknownCommand(($t=this.DotToken)!=null?$t.Clone$1():null,($t1=this.Parts)!=null?$t1.Clone$2():null,this.SyntaxDiagnostics)}}})});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICJLdXN0by5MYW5ndWFnZS5CcmlkZ2UubWluLmpzIiwKICAic291cmNlUm9vdCI6ICIiLAogICJzb3VyY2VzIjogW10sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIiIsCiAgInNvdXJjZXNDb250ZW50IjogW10KfQo=
